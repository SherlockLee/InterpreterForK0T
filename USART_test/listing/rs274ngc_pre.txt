; generated by ARM C/C++ Compiler, 4.1 [Build 644]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\rs274ngc_pre.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\obj\rs274ngc_pre.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\..\library\inc -I..\..\library\src -I..\uvsion -If:\Keil\ARM\CMSIS\Include -If:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=.\obj\rs274ngc_pre.crf rs274ngc_pre.c]
                          THUMB

                          AREA ||i.arc_data_comp_ijk||, CODE, READONLY, ALIGN=2

                  arc_data_comp_ijk PROC
;;;1131   
;;;1132       static int arc_data_comp_ijk(                 /* ARGUMENTS                               */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;1133       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)             */
;;;1134       int side,                                     /* either RIGHT or LEFT                             */
;;;1135       double tool_radius,                           /* radius of the tool                               */
;;;1136       double current_x,                             /* first coordinate of current point                */
;;;1137       double current_y,                             /* second coordinate of current point               */
;;;1138       double end_x,                                 /* first coordinate of arc end point                */
;;;1139       double end_y,                                 /* second coordinate of arc end point               */
;;;1140       double i_number,                              /* first coordinate offset of center from current   */
;;;1141       double j_number,                              /* second coordinate offset of center from current  */
;;;1142       double * center_x,                            /* pointer to first coordinate of center of arc     */
;;;1143       double * center_y,                            /* pointer to second coordinate of center of arc    */
;;;1144       int * turn,                                   /* pointer to number of full or partial circles CCW */
;;;1145       double tolerance)                             /* tolerance of differing radii                     */
;;;1146       {
000004  b089              SUB      sp,sp,#0x24
000006  4680              MOV      r8,r0
000008  4689              MOV      r9,r1
00000a  4616              MOV      r6,r2
00000c  461f              MOV      r7,r3
00000e  e9ddab1f          LDRD     r10,r11,[sp,#0x7c]
;;;1147           static char name[] SET_TO "arc_data_comp_ijk";
;;;1148           double arc_radius;
;;;1149           double radius2;
;;;1150   
;;;1151           *center_x SET_TO (current_x + i_number);
000012  e9dd231a          LDRD     r2,r3,[sp,#0x68]
000016  e9dd0112          LDRD     r0,r1,[sp,#0x48]
00001a  f7fffffe          BL       __aeabi_dadd
00001e  9a1e              LDR      r2,[sp,#0x78]
000020  c203              STM      r2!,{r0,r1}
;;;1152           *center_y SET_TO (current_y + j_number);
000022  e9dd231c          LDRD     r2,r3,[sp,#0x70]
000026  e9dd0114          LDRD     r0,r1,[sp,#0x50]
00002a  f7fffffe          BL       __aeabi_dadd
00002e  e9ca0100          STRD     r0,r1,[r10,#0]
;;;1153           arc_radius SET_TO hypot(i_number, j_number);
000032  a81a              ADD      r0,sp,#0x68
000034  c80f              LDM      r0,{r0-r3}
000036  f7fffffe          BL       hypot
00003a  e9cd0106          STRD     r0,r1,[sp,#0x18]
;;;1154           radius2 SET_TO hypot((*center_x - end_x), (*center_y - end_y));
00003e  e9da0100          LDRD     r0,r1,[r10,#0]
000042  e9cd0100          STRD     r0,r1,[sp,#0]
000046  e9dd2318          LDRD     r2,r3,[sp,#0x60]
00004a  f7fffffe          BL       __aeabi_dsub
00004e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000052  991e              LDR      r1,[sp,#0x78]
000054  c903              LDM      r1,{r0,r1}
000056  e9cd0100          STRD     r0,r1,[sp,#0]
00005a  e9dd2316          LDRD     r2,r3,[sp,#0x58]
00005e  f7fffffe          BL       __aeabi_dsub
000062  e9cd0102          STRD     r0,r1,[sp,#8]
000066  e9dd2304          LDRD     r2,r3,[sp,#0x10]
00006a  f7fffffe          BL       hypot
00006e  4604              MOV      r4,r0
000070  460d              MOV      r5,r1
;;;1155           radius2 SET_TO
000072  f1b90f02          CMP      r9,#2
000076  d102              BNE      |L1.126|
;;;1156               (((side IS LEFT ) AND (move IS 30)) OR
000078  f1b80f1e          CMP      r8,#0x1e
00007c  d005              BEQ      |L1.138|
                  |L1.126|
;;;1157               ((side IS RIGHT) AND (move IS 20))) ?
00007e  f1b90f01          CMP      r9,#1
000082  d109              BNE      |L1.152|
000084  f1b80f14          CMP      r8,#0x14
000088  d106              BNE      |L1.152|
                  |L1.138|
;;;1158               (radius2 - tool_radius): (radius2 + tool_radius);
00008a  4632              MOV      r2,r6
00008c  463b              MOV      r3,r7
00008e  4620              MOV      r0,r4
000090  4629              MOV      r1,r5
000092  f7fffffe          BL       __aeabi_dsub
000096  e005              B        |L1.164|
                  |L1.152|
000098  4632              MOV      r2,r6
00009a  463b              MOV      r3,r7
00009c  4620              MOV      r0,r4
00009e  4629              MOV      r1,r5
0000a0  f7fffffe          BL       __aeabi_dadd
                  |L1.164|
0000a4  4604              MOV      r4,r0
0000a6  460d              MOV      r5,r1
;;;1159           CHK((fabs(arc_radius - radius2) > tolerance),
0000a8  4622              MOV      r2,r4
0000aa  462b              MOV      r3,r5
0000ac  e9dd0106          LDRD     r0,r1,[sp,#0x18]
0000b0  f7fffffe          BL       __aeabi_dsub
0000b4  f0214100          BIC      r1,r1,#0x80000000
0000b8  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000bc  e9dd2322          LDRD     r2,r3,[sp,#0x88]
0000c0  f7fffffe          BL       __aeabi_cdrcmple
0000c4  d228              BCS      |L1.280|
0000c6  f04f0100          MOV      r1,#0
0000ca  482f              LDR      r0,|L1.392|
0000cc  f8c0114c          STR      r1,[r0,#0x14c]
0000d0  4601              MOV      r1,r0
0000d2  f8d1314c          LDR      r3,[r1,#0x14c]
0000d6  f8d1114c          LDR      r1,[r1,#0x14c]
0000da  f1010101          ADD      r1,r1,#1
0000de  4602              MOV      r2,r0
0000e0  f8c2114c          STR      r1,[r2,#0x14c]
0000e4  eb030183          ADD      r1,r3,r3,LSL #2
0000e8  f6a06254          SUB      r2,r0,#0xe54
0000ec  eb021101          ADD      r1,r2,r1,LSL #4
0000f0  4608              MOV      r0,r1
0000f2  4926              LDR      r1,|L1.396|
0000f4  f7fffffe          BL       strcpy
0000f8  f04f0100          MOV      r1,#0
0000fc  4822              LDR      r0,|L1.392|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]
000102  eb000080          ADD      r0,r0,r0,LSL #2
000106  4a22              LDR      r2,|L1.400|
000108  eb021000          ADD      r0,r2,r0,LSL #4
00010c  7001              STRB     r1,[r0,#0]
00010e  f04f0098          MOV      r0,#0x98
                  |L1.274|
;;;1160               NCE_RADIUS_TO_END_OF_ARC_DIFFERS_FROM_RADIUS_TO_START);
;;;1161      /* This catches an arc too small for the tool, also */
;;;1162           if (move IS G_2)
;;;1163               *turn SET_TO -1;
;;;1164           else if (move IS G_3)
;;;1165               *turn SET_TO 1;
;;;1166           else
;;;1167               ERM(NCE_BUG_CODE_NOT_G2_OR_G3);
;;;1168           return RS274NGC_OK;
;;;1169       }
000112  b009              ADD      sp,sp,#0x24
000114  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.280|
000118  f1b80f14          CMP      r8,#0x14              ;1162
00011c  d104              BNE      |L1.296|
00011e  f04f30ff          MOV      r0,#0xffffffff        ;1163
000122  f8cb0000          STR      r0,[r11,#0]           ;1163
000126  e02d              B        |L1.388|
                  |L1.296|
000128  f1b80f1e          CMP      r8,#0x1e              ;1164
00012c  d104              BNE      |L1.312|
00012e  f04f0001          MOV      r0,#1                 ;1165
000132  f8cb0000          STR      r0,[r11,#0]           ;1165
000136  e025              B        |L1.388|
                  |L1.312|
000138  f04f0100          MOV      r1,#0                 ;1167
00013c  4812              LDR      r0,|L1.392|
00013e  f8c0114c          STR      r1,[r0,#0x14c]        ;1167
000142  4601              MOV      r1,r0                 ;1167
000144  f8d1314c          LDR      r3,[r1,#0x14c]        ;1167
000148  f8d1114c          LDR      r1,[r1,#0x14c]        ;1167
00014c  f1010101          ADD      r1,r1,#1              ;1167
000150  4602              MOV      r2,r0                 ;1167
000152  f8c2114c          STR      r1,[r2,#0x14c]        ;1167
000156  eb030183          ADD      r1,r3,r3,LSL #2       ;1167
00015a  4a0d              LDR      r2,|L1.400|
00015c  eb021101          ADD      r1,r2,r1,LSL #4       ;1167
000160  4608              MOV      r0,r1                 ;1167
000162  490a              LDR      r1,|L1.396|
000164  f7fffffe          BL       strcpy
000168  f04f0100          MOV      r1,#0                 ;1167
00016c  4806              LDR      r0,|L1.392|
00016e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1167
000172  eb000080          ADD      r0,r0,r0,LSL #2       ;1167
000176  4a06              LDR      r2,|L1.400|
000178  eb021000          ADD      r0,r2,r0,LSL #4       ;1167
00017c  7001              STRB     r1,[r0,#0]            ;1167
00017e  f04f0014          MOV      r0,#0x14              ;1167
000182  e7c6              B        |L1.274|
                  |L1.388|
000184  2000              MOVS     r0,#0                 ;1168
000186  e7c4              B        |L1.274|
;;;1170   
                          ENDP

                  |L1.392|
                          DCD      _setup+0xc000
                  |L1.396|
                          DCD      name
                  |L1.400|
                          DCD      _setup+0xb1ac

                          AREA ||i.arc_data_comp_r||, CODE, READONLY, ALIGN=2

                  arc_data_comp_r PROC
;;;1227   
;;;1228       static int arc_data_comp_r(                   /* ARGUMENTS                                 */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;1229       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)             */
;;;1230       int side,                                     /* either RIGHT or LEFT                             */
;;;1231       double tool_radius,                           /* radius of the tool                               */
;;;1232       double current_x,                             /* first coordinate of current point                */
;;;1233       double current_y,                             /* second coordinate of current point               */
;;;1234       double end_x,                                 /* first coordinate of arc end point                */
;;;1235       double end_y,                                 /* second coordinate of arc end point               */
;;;1236       double big_radius,                            /* radius of arc                                    */
;;;1237       double * center_x,                            /* pointer to first coordinate of center of arc     */
;;;1238       double * center_y,                            /* pointer to second coordinate of center of arc    */
;;;1239       int * turn)                                   /* pointer to number of full or partial circles CCW */
;;;1240       {
000004  b09a              SUB      sp,sp,#0x68
000006  4682              MOV      r10,r0
000008  468b              MOV      r11,r1
00000a  e9dd6730          LDRD     r6,r7,[sp,#0xc0]
;;;1241           static char name[] SET_TO "arc_data_comp_r";
;;;1242           double abs_radius;                        /* absolute value of big_radius          */
;;;1243           double alpha;                             /* direction of line from current to end */
;;;1244           double distance;                          /* length of line L from current to end  */
;;;1245           double mid_length;                        /* length from current point to point P  */
;;;1246           double offset;                            /* length of line from P to center       */
;;;1247           double radius2;                           /* distance from center to current point */
;;;1248           double mid_x;                             /* x-value of point P                    */
;;;1249           double mid_y;                             /* y-value of point P                    */
;;;1250           double theta;                             /* direction of line from P to center    */
;;;1251   
;;;1252           abs_radius SET_TO fabs(big_radius);
00000e  f0274000          BIC      r0,r7,#0x80000000
000012  e9cd6018          STRD     r6,r0,[sp,#0x60]
;;;1253           CHK(((abs_radius <= tool_radius) AND (((side IS LEFT ) AND (move IS G_3)) OR
000016  e9dd231c          LDRD     r2,r3,[sp,#0x70]
00001a  e9dd0118          LDRD     r0,r1,[sp,#0x60]
00001e  f7fffffe          BL       __aeabi_cdcmple
000022  d834              BHI      |L2.142|
000024  f1bb0f02          CMP      r11,#2
000028  d102              BNE      |L2.48|
00002a  f1ba0f1e          CMP      r10,#0x1e
00002e  d005              BEQ      |L2.60|
                  |L2.48|
000030  f1bb0f01          CMP      r11,#1
000034  d12b              BNE      |L2.142|
000036  f1ba0f14          CMP      r10,#0x14
00003a  d128              BNE      |L2.142|
                  |L2.60|
00003c  f04f0100          MOV      r1,#0
000040  48cf              LDR      r0,|L2.896|
000042  f8c0114c          STR      r1,[r0,#0x14c]
000046  4601              MOV      r1,r0
000048  f8d1314c          LDR      r3,[r1,#0x14c]
00004c  f8d1114c          LDR      r1,[r1,#0x14c]
000050  f1010101          ADD      r1,r1,#1
000054  4602              MOV      r2,r0
000056  f8c2114c          STR      r1,[r2,#0x14c]
00005a  eb030183          ADD      r1,r3,r3,LSL #2
00005e  f6a06254          SUB      r2,r0,#0xe54
000062  eb021101          ADD      r1,r2,r1,LSL #4
000066  4608              MOV      r0,r1
000068  49c6              LDR      r1,|L2.900|
00006a  f7fffffe          BL       strcpy
00006e  f04f0100          MOV      r1,#0
000072  48c3              LDR      r0,|L2.896|
000074  f8d0014c          LDR      r0,[r0,#0x14c]
000078  eb000080          ADD      r0,r0,r0,LSL #2
00007c  4ac2              LDR      r2,|L2.904|
00007e  eb021000          ADD      r0,r2,r0,LSL #4
000082  7001              STRB     r1,[r0,#0]
000084  f04f00a7          MOV      r0,#0xa7
                  |L2.136|
;;;1254               ((side IS RIGHT) AND (move IS G_2)))),
;;;1255               NCE_TOOL_RADIUS_NOT_LESS_THAN_ARC_RADIUS_WITH_COMP);
;;;1256   
;;;1257           distance SET_TO hypot((end_x - current_x), (end_y - current_y));
;;;1258           alpha SET_TO atan2 ((end_y - current_y), (end_x - current_x));
;;;1259           theta SET_TO (((move IS G_3) AND (big_radius > 0)) OR
;;;1260               ((move IS G_2) AND (big_radius < 0))) ?
;;;1261               (alpha + PI2) : (alpha - PI2);
;;;1262           radius2 SET_TO (((side IS LEFT ) AND (move IS G_3)) OR
;;;1263               ((side IS RIGHT) AND (move IS G_2))) ?
;;;1264               (abs_radius - tool_radius) : (abs_radius + tool_radius);
;;;1265           CHK((distance > (radius2 + abs_radius)),
;;;1266               NCE_RADIUS_TOO_SMALL_TO_REACH_END_POINT);
;;;1267           mid_length SET_TO (((radius2 * radius2) + (distance * distance) -
;;;1268               (abs_radius * abs_radius)) / (2.0 * distance));
;;;1269           mid_x SET_TO (current_x + (mid_length * cos(alpha)));
;;;1270           mid_y SET_TO (current_y + (mid_length * sin(alpha)));
;;;1271           CHK(((radius2 * radius2) <= (mid_length * mid_length)),
;;;1272               NCE_BUG_IN_TOOL_RADIUS_COMP);
;;;1273           offset SET_TO sqrt((radius2 * radius2) - (mid_length * mid_length));
;;;1274           *center_x SET_TO mid_x + (offset * cos(theta));
;;;1275           *center_y SET_TO mid_y + (offset * sin(theta));
;;;1276           *turn SET_TO (move IS G_2) ? -1 : 1;
;;;1277   
;;;1278           return RS274NGC_OK;
;;;1279       }
000088  b01e              ADD      sp,sp,#0x78
00008a  e8bd9ff0          POP      {r4-r12,pc}
                  |L2.142|
00008e  e9dd232a          LDRD     r2,r3,[sp,#0xa8]      ;1257
000092  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;1257
000096  f7fffffe          BL       __aeabi_dsub
00009a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1257
00009e  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;1257
0000a2  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;1257
0000a6  f7fffffe          BL       __aeabi_dsub
0000aa  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1257
0000ae  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1257
0000b2  f7fffffe          BL       hypot
0000b6  e9cd0114          STRD     r0,r1,[sp,#0x50]      ;1257
0000ba  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;1258
0000be  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;1258
0000c2  f7fffffe          BL       __aeabi_dsub
0000c6  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1258
0000ca  e9dd232a          LDRD     r2,r3,[sp,#0xa8]      ;1258
0000ce  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;1258
0000d2  f7fffffe          BL       __aeabi_dsub
0000d6  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1258
0000da  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1258
0000de  f7fffffe          BL       atan2
0000e2  e9cd0116          STRD     r0,r1,[sp,#0x58]      ;1258
0000e6  f1ba0f1e          CMP      r10,#0x1e             ;1259
0000ea  d106              BNE      |L2.250|
0000ec  2200              MOVS     r2,#0                 ;1259
0000ee  4613              MOV      r3,r2                 ;1259
0000f0  4630              MOV      r0,r6                 ;1259
0000f2  4639              MOV      r1,r7                 ;1259
0000f4  f7fffffe          BL       __aeabi_cdrcmple
0000f8  d309              BCC      |L2.270|
                  |L2.250|
0000fa  f1ba0f14          CMP      r10,#0x14             ;1260
0000fe  d10d              BNE      |L2.284|
000100  2200              MOVS     r2,#0                 ;1260
000102  4613              MOV      r3,r2                 ;1260
000104  4630              MOV      r0,r6                 ;1260
000106  4639              MOV      r1,r7                 ;1260
000108  f7fffffe          BL       __aeabi_cdcmple
00010c  d206              BCS      |L2.284|
                  |L2.270|
00010e  4a9f              LDR      r2,|L2.908|
000110  4b9f              LDR      r3,|L2.912|
000112  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;1261
000116  f7fffffe          BL       __aeabi_dadd
00011a  e005              B        |L2.296|
                  |L2.284|
00011c  4a9b              LDR      r2,|L2.908|
00011e  4b9c              LDR      r3,|L2.912|
000120  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;1261
000124  f7fffffe          BL       __aeabi_dsub
                  |L2.296|
000128  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;1261
00012c  f1bb0f02          CMP      r11,#2                ;1262
000130  d102              BNE      |L2.312|
000132  f1ba0f1e          CMP      r10,#0x1e             ;1262
000136  d005              BEQ      |L2.324|
                  |L2.312|
000138  f1bb0f01          CMP      r11,#1                ;1263
00013c  d109              BNE      |L2.338|
00013e  f1ba0f14          CMP      r10,#0x14             ;1263
000142  d106              BNE      |L2.338|
                  |L2.324|
000144  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;1264
000148  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;1264
00014c  f7fffffe          BL       __aeabi_dsub
000150  e005              B        |L2.350|
                  |L2.338|
000152  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;1264
000156  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;1264
00015a  f7fffffe          BL       __aeabi_dadd
                  |L2.350|
00015e  4604              MOV      r4,r0                 ;1264
000160  460d              MOV      r5,r1                 ;1264
000162  4620              MOV      r0,r4                 ;1265
000164  4629              MOV      r1,r5                 ;1265
000166  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;1265
00016a  f7fffffe          BL       __aeabi_dadd
00016e  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1265
000172  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;1265
000176  f7fffffe          BL       __aeabi_cdcmple
00017a  d225              BCS      |L2.456|
00017c  f04f0100          MOV      r1,#0                 ;1265
000180  487f              LDR      r0,|L2.896|
000182  f8c0114c          STR      r1,[r0,#0x14c]        ;1265
000186  4601              MOV      r1,r0                 ;1265
000188  f8d1314c          LDR      r3,[r1,#0x14c]        ;1265
00018c  f8d1114c          LDR      r1,[r1,#0x14c]        ;1265
000190  f1010101          ADD      r1,r1,#1              ;1265
000194  4602              MOV      r2,r0                 ;1265
000196  f8c2114c          STR      r1,[r2,#0x14c]        ;1265
00019a  eb030183          ADD      r1,r3,r3,LSL #2       ;1265
00019e  4a7a              LDR      r2,|L2.904|
0001a0  eb021101          ADD      r1,r2,r1,LSL #4       ;1265
0001a4  4608              MOV      r0,r1                 ;1265
0001a6  4977              LDR      r1,|L2.900|
0001a8  f7fffffe          BL       strcpy
0001ac  f04f0100          MOV      r1,#0                 ;1265
0001b0  4873              LDR      r0,|L2.896|
0001b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;1265
0001b6  eb000080          ADD      r0,r0,r0,LSL #2       ;1265
0001ba  4a73              LDR      r2,|L2.904|
0001bc  eb021000          ADD      r0,r2,r0,LSL #4       ;1265
0001c0  7001              STRB     r1,[r0,#0]            ;1265
0001c2  f04f0099          MOV      r0,#0x99              ;1265
0001c6  e75f              B        |L2.136|
                  |L2.456|
0001c8  2000              MOVS     r0,#0                 ;1267
0001ca  f04f4180          MOV      r1,#0x40000000        ;1267
0001ce  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;1267
0001d2  f7fffffe          BL       __aeabi_dmul
0001d6  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1267
0001da  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;1267
0001de  4610              MOV      r0,r2                 ;1267
0001e0  4619              MOV      r1,r3                 ;1267
0001e2  f7fffffe          BL       __aeabi_dmul
0001e6  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1267
0001ea  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;1267
0001ee  4610              MOV      r0,r2                 ;1267
0001f0  4619              MOV      r1,r3                 ;1267
0001f2  f7fffffe          BL       __aeabi_dmul
0001f6  4622              MOV      r2,r4                 ;1267
0001f8  462b              MOV      r3,r5                 ;1267
0001fa  e9cd0102          STRD     r0,r1,[sp,#8]         ;1267
0001fe  4620              MOV      r0,r4                 ;1267
000200  4629              MOV      r1,r5                 ;1267
000202  f7fffffe          BL       __aeabi_dmul
000206  e9cd0100          STRD     r0,r1,[sp,#0]         ;1267
00020a  e9dd2302          LDRD     r2,r3,[sp,#8]         ;1267
00020e  f7fffffe          BL       __aeabi_dadd
000212  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1267
000216  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;1267
00021a  f7fffffe          BL       __aeabi_dsub
00021e  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1267
000222  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1267
000226  f7fffffe          BL       __aeabi_ddiv
00022a  4680              MOV      r8,r0                 ;1267
00022c  4689              MOV      r9,r1                 ;1267
00022e  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;1269
000232  f7fffffe          BL       ||cos||
000236  4642              MOV      r2,r8                 ;1269
000238  464b              MOV      r3,r9                 ;1269
00023a  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1269
00023e  f7fffffe          BL       __aeabi_dmul
000242  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1269
000246  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;1269
00024a  f7fffffe          BL       __aeabi_dadd
00024e  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;1269
000252  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;1270
000256  f7fffffe          BL       ||sin||
00025a  4642              MOV      r2,r8                 ;1270
00025c  464b              MOV      r3,r9                 ;1270
00025e  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1270
000262  f7fffffe          BL       __aeabi_dmul
000266  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1270
00026a  e9dd232a          LDRD     r2,r3,[sp,#0xa8]      ;1270
00026e  f7fffffe          BL       __aeabi_dadd
000272  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;1270
000276  4642              MOV      r2,r8                 ;1271
000278  464b              MOV      r3,r9                 ;1271
00027a  4640              MOV      r0,r8                 ;1271
00027c  4649              MOV      r1,r9                 ;1271
00027e  f7fffffe          BL       __aeabi_dmul
000282  4622              MOV      r2,r4                 ;1271
000284  462b              MOV      r3,r5                 ;1271
000286  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1271
00028a  4620              MOV      r0,r4                 ;1271
00028c  4629              MOV      r1,r5                 ;1271
00028e  f7fffffe          BL       __aeabi_dmul
000292  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1271
000296  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1271
00029a  f7fffffe          BL       __aeabi_cdcmple
00029e  d825              BHI      |L2.748|
0002a0  f04f0100          MOV      r1,#0                 ;1271
0002a4  4836              LDR      r0,|L2.896|
0002a6  f8c0114c          STR      r1,[r0,#0x14c]        ;1271
0002aa  4601              MOV      r1,r0                 ;1271
0002ac  f8d1314c          LDR      r3,[r1,#0x14c]        ;1271
0002b0  f8d1114c          LDR      r1,[r1,#0x14c]        ;1271
0002b4  f1010101          ADD      r1,r1,#1              ;1271
0002b8  4602              MOV      r2,r0                 ;1271
0002ba  f8c2114c          STR      r1,[r2,#0x14c]        ;1271
0002be  eb030183          ADD      r1,r3,r3,LSL #2       ;1271
0002c2  4a31              LDR      r2,|L2.904|
0002c4  eb021101          ADD      r1,r2,r1,LSL #4       ;1271
0002c8  4608              MOV      r0,r1                 ;1271
0002ca  492e              LDR      r1,|L2.900|
0002cc  f7fffffe          BL       strcpy
0002d0  f04f0100          MOV      r1,#0                 ;1271
0002d4  482a              LDR      r0,|L2.896|
0002d6  f8d0014c          LDR      r0,[r0,#0x14c]        ;1271
0002da  eb000080          ADD      r0,r0,r0,LSL #2       ;1271
0002de  4a2a              LDR      r2,|L2.904|
0002e0  eb021000          ADD      r0,r2,r0,LSL #4       ;1271
0002e4  7001              STRB     r1,[r0,#0]            ;1271
0002e6  f04f0021          MOV      r0,#0x21              ;1271
0002ea  e6cd              B        |L2.136|
                  |L2.748|
0002ec  4642              MOV      r2,r8                 ;1273
0002ee  464b              MOV      r3,r9                 ;1273
0002f0  4640              MOV      r0,r8                 ;1273
0002f2  4649              MOV      r1,r9                 ;1273
0002f4  f7fffffe          BL       __aeabi_dmul
0002f8  4622              MOV      r2,r4                 ;1273
0002fa  462b              MOV      r3,r5                 ;1273
0002fc  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1273
000300  4620              MOV      r0,r4                 ;1273
000302  4629              MOV      r1,r5                 ;1273
000304  f7fffffe          BL       __aeabi_dmul
000308  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1273
00030c  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;1273
000310  f7fffffe          BL       __aeabi_dsub
000314  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1273
000318  f7fffffe          BL       sqrt
00031c  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;1273
000320  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1274
000324  f7fffffe          BL       ||cos||
000328  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1274
00032c  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;1274
000330  f7fffffe          BL       __aeabi_dmul
000334  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1274
000338  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;1274
00033c  f7fffffe          BL       __aeabi_dadd
000340  9a32              LDR      r2,[sp,#0xc8]         ;1274
000342  c203              STM      r2!,{r0,r1}           ;1274
000344  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1275
000348  f7fffffe          BL       ||sin||
00034c  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1275
000350  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;1275
000354  f7fffffe          BL       __aeabi_dmul
000358  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1275
00035c  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;1275
000360  f7fffffe          BL       __aeabi_dadd
000364  9a33              LDR      r2,[sp,#0xcc]         ;1275
000366  c203              STM      r2!,{r0,r1}           ;1275
000368  f1ba0f14          CMP      r10,#0x14             ;1276
00036c  d102              BNE      |L2.884|
00036e  f04f31ff          MOV      r1,#0xffffffff        ;1276
000372  e001              B        |L2.888|
                  |L2.884|
000374  f04f0101          MOV      r1,#1                 ;1276
                  |L2.888|
000378  9834              LDR      r0,[sp,#0xd0]         ;1276
00037a  6001              STR      r1,[r0,#0]            ;1276
00037c  2000              MOVS     r0,#0                 ;1278
00037e  e683              B        |L2.136|
;;;1280   
                          ENDP

                  |L2.896|
                          DCD      _setup+0xc000
                  |L2.900|
                          DCD      |symbol_number.436|
                  |L2.904|
                          DCD      _setup+0xb1ac
                  |L2.908|
                          DCD      0x54442d18
                  |L2.912|
                          DCD      0x3ff921fb

                          AREA ||i.arc_data_ijk||, CODE, READONLY, ALIGN=2

                  arc_data_ijk PROC
;;;1309   
;;;1310       static int arc_data_ijk(                      /* ARGUMENTS                                       */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;1311       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)            */
;;;1312       double current_x,                             /* first coordinate of current point               */
;;;1313       double current_y,                             /* second coordinate of current point              */
;;;1314       double end_x,                                 /* first coordinate of arc end point               */
;;;1315       double end_y,                                 /* second coordinate of arc end point              */
;;;1316       double i_number,                              /* first coordinate offset of center from current  */
;;;1317       double j_number,                              /* second coordinate offset of center from current */
;;;1318       double * center_x,                            /* pointer to first coordinate of center of arc    */
;;;1319       double * center_y,                            /* pointer to second coordinate of center of arc   */
;;;1320       int * turn,                                   /* pointer to no. of full or partial circles CCW   */
;;;1321       double tolerance)                             /* tolerance of differing radii                    */
;;;1322       {
000004  b089              SUB      sp,sp,#0x24
000006  4680              MOV      r8,r0
000008  4614              MOV      r4,r2
00000a  461d              MOV      r5,r3
00000c  e9ddab1d          LDRD     r10,r11,[sp,#0x74]
000010  f8dd9070          LDR      r9,[sp,#0x70]
;;;1323           static char name[] SET_TO "arc_data_ijk";
;;;1324           double radius;                            /* radius to current point */
;;;1325           double radius2;                           /* radius to end point     */
;;;1326           *center_x SET_TO (current_x + i_number);
000014  4620              MOV      r0,r4
000016  4629              MOV      r1,r5
000018  e9dd2318          LDRD     r2,r3,[sp,#0x60]
00001c  f7fffffe          BL       __aeabi_dadd
000020  e9c90100          STRD     r0,r1,[r9,#0]
;;;1327           *center_y SET_TO (current_y + j_number);
000024  e9dd231a          LDRD     r2,r3,[sp,#0x68]
000028  e9dd0112          LDRD     r0,r1,[sp,#0x48]
00002c  f7fffffe          BL       __aeabi_dadd
000030  e9ca0100          STRD     r0,r1,[r10,#0]
;;;1328           radius SET_TO hypot((*center_x - current_x), (*center_y - current_y));
000034  e9da0100          LDRD     r0,r1,[r10,#0]
000038  e9cd0100          STRD     r0,r1,[sp,#0]
00003c  e9dd2312          LDRD     r2,r3,[sp,#0x48]
000040  f7fffffe          BL       __aeabi_dsub
000044  e9cd0104          STRD     r0,r1,[sp,#0x10]
000048  e9d90100          LDRD     r0,r1,[r9,#0]
00004c  4622              MOV      r2,r4
00004e  462b              MOV      r3,r5
000050  e9cd0100          STRD     r0,r1,[sp,#0]
000054  f7fffffe          BL       __aeabi_dsub
000058  e9cd0102          STRD     r0,r1,[sp,#8]
00005c  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000060  f7fffffe          BL       hypot
000064  4606              MOV      r6,r0
000066  460f              MOV      r7,r1
;;;1329           radius2 SET_TO hypot((*center_x - end_x), (*center_y - end_y));
000068  e9da0100          LDRD     r0,r1,[r10,#0]
00006c  e9cd0100          STRD     r0,r1,[sp,#0]
000070  e9dd2316          LDRD     r2,r3,[sp,#0x58]
000074  f7fffffe          BL       __aeabi_dsub
000078  e9cd0104          STRD     r0,r1,[sp,#0x10]
00007c  e9d90100          LDRD     r0,r1,[r9,#0]
000080  e9cd0100          STRD     r0,r1,[sp,#0]
000084  e9dd2314          LDRD     r2,r3,[sp,#0x50]
000088  f7fffffe          BL       __aeabi_dsub
00008c  e9cd0102          STRD     r0,r1,[sp,#8]
000090  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000094  f7fffffe          BL       hypot
000098  e9cd0106          STRD     r0,r1,[sp,#0x18]
;;;1330           CHK(((radius IS 0.0) OR (radius2 IS 0.0)), NCE_ZERO_RADIUS_ARC);
00009c  2200              MOVS     r2,#0
00009e  4613              MOV      r3,r2
0000a0  4630              MOV      r0,r6
0000a2  4639              MOV      r1,r7
0000a4  f7fffffe          BL       __aeabi_cdcmpeq
0000a8  d006              BEQ      |L3.184|
0000aa  2200              MOVS     r2,#0
0000ac  4613              MOV      r3,r2
0000ae  e9dd0106          LDRD     r0,r1,[sp,#0x18]
0000b2  f7fffffe          BL       __aeabi_cdcmpeq
0000b6  d128              BNE      |L3.266|
                  |L3.184|
0000b8  f04f0100          MOV      r1,#0
0000bc  4849              LDR      r0,|L3.484|
0000be  f8c0114c          STR      r1,[r0,#0x14c]
0000c2  4601              MOV      r1,r0
0000c4  f8d1314c          LDR      r3,[r1,#0x14c]
0000c8  f8d1114c          LDR      r1,[r1,#0x14c]
0000cc  f1010101          ADD      r1,r1,#1
0000d0  4602              MOV      r2,r0
0000d2  f8c2114c          STR      r1,[r2,#0x14c]
0000d6  eb030183          ADD      r1,r3,r3,LSL #2
0000da  f6a06254          SUB      r2,r0,#0xe54
0000de  eb021101          ADD      r1,r2,r1,LSL #4
0000e2  4608              MOV      r0,r1
0000e4  4940              LDR      r1,|L3.488|
0000e6  f7fffffe          BL       strcpy
0000ea  f04f0100          MOV      r1,#0
0000ee  483d              LDR      r0,|L3.484|
0000f0  f8d0014c          LDR      r0,[r0,#0x14c]
0000f4  eb000080          ADD      r0,r0,r0,LSL #2
0000f8  4a3c              LDR      r2,|L3.492|
0000fa  eb021000          ADD      r0,r2,r0,LSL #4
0000fe  7001              STRB     r1,[r0,#0]
000100  f04f00c5          MOV      r0,#0xc5
                  |L3.260|
;;;1331           CHK((fabs(radius - radius2) > tolerance),
;;;1332               NCE_RADIUS_TO_END_OF_ARC_DIFFERS_FROM_RADIUS_TO_START);
;;;1333           if (move IS G_2)
;;;1334               *turn SET_TO -1;
;;;1335           else if (move IS G_3)
;;;1336               *turn SET_TO 1;
;;;1337           else
;;;1338               ERM(NCE_BUG_CODE_NOT_G2_OR_G3);
;;;1339           return RS274NGC_OK;
;;;1340       }
000104  b009              ADD      sp,sp,#0x24
000106  e8bd8ff0          POP      {r4-r11,pc}
                  |L3.266|
00010a  4630              MOV      r0,r6                 ;1331
00010c  4639              MOV      r1,r7                 ;1331
00010e  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;1331
000112  f7fffffe          BL       __aeabi_dsub
000116  f0214100          BIC      r1,r1,#0x80000000     ;1331
00011a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1331
00011e  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;1331
000122  f7fffffe          BL       __aeabi_cdrcmple
000126  d224              BCS      |L3.370|
000128  f04f0100          MOV      r1,#0                 ;1331
00012c  482d              LDR      r0,|L3.484|
00012e  f8c0114c          STR      r1,[r0,#0x14c]        ;1331
000132  4601              MOV      r1,r0                 ;1331
000134  f8d1314c          LDR      r3,[r1,#0x14c]        ;1331
000138  f8d1214c          LDR      r2,[r1,#0x14c]        ;1331
00013c  f1020201          ADD      r2,r2,#1              ;1331
000140  f8c1214c          STR      r2,[r1,#0x14c]        ;1331
000144  eb030183          ADD      r1,r3,r3,LSL #2       ;1331
000148  4a28              LDR      r2,|L3.492|
00014a  eb021101          ADD      r1,r2,r1,LSL #4       ;1331
00014e  4608              MOV      r0,r1                 ;1331
000150  4925              LDR      r1,|L3.488|
000152  f7fffffe          BL       strcpy
000156  f04f0100          MOV      r1,#0                 ;1331
00015a  4822              LDR      r0,|L3.484|
00015c  f8d0014c          LDR      r0,[r0,#0x14c]        ;1331
000160  eb000080          ADD      r0,r0,r0,LSL #2       ;1331
000164  4a21              LDR      r2,|L3.492|
000166  eb021000          ADD      r0,r2,r0,LSL #4       ;1331
00016a  7001              STRB     r1,[r0,#0]            ;1331
00016c  f04f0098          MOV      r0,#0x98              ;1331
000170  e7c8              B        |L3.260|
                  |L3.370|
000172  f1b80f14          CMP      r8,#0x14              ;1333
000176  d104              BNE      |L3.386|
000178  f04f30ff          MOV      r0,#0xffffffff        ;1334
00017c  f8cb0000          STR      r0,[r11,#0]           ;1334
000180  e02d              B        |L3.478|
                  |L3.386|
000182  f1b80f1e          CMP      r8,#0x1e              ;1335
000186  d104              BNE      |L3.402|
000188  f04f0001          MOV      r0,#1                 ;1336
00018c  f8cb0000          STR      r0,[r11,#0]           ;1336
000190  e025              B        |L3.478|
                  |L3.402|
000192  f04f0100          MOV      r1,#0                 ;1338
000196  4813              LDR      r0,|L3.484|
000198  f8c0114c          STR      r1,[r0,#0x14c]        ;1338
00019c  4601              MOV      r1,r0                 ;1338
00019e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1338
0001a2  f8d1114c          LDR      r1,[r1,#0x14c]        ;1338
0001a6  f1010101          ADD      r1,r1,#1              ;1338
0001aa  4602              MOV      r2,r0                 ;1338
0001ac  f8c2114c          STR      r1,[r2,#0x14c]        ;1338
0001b0  eb030183          ADD      r1,r3,r3,LSL #2       ;1338
0001b4  4a0d              LDR      r2,|L3.492|
0001b6  eb021101          ADD      r1,r2,r1,LSL #4       ;1338
0001ba  4608              MOV      r0,r1                 ;1338
0001bc  490a              LDR      r1,|L3.488|
0001be  f7fffffe          BL       strcpy
0001c2  f04f0100          MOV      r1,#0                 ;1338
0001c6  4807              LDR      r0,|L3.484|
0001c8  f8d0014c          LDR      r0,[r0,#0x14c]        ;1338
0001cc  eb000080          ADD      r0,r0,r0,LSL #2       ;1338
0001d0  4a06              LDR      r2,|L3.492|
0001d2  eb021000          ADD      r0,r2,r0,LSL #4       ;1338
0001d6  7001              STRB     r1,[r0,#0]            ;1338
0001d8  f04f0014          MOV      r0,#0x14              ;1338
0001dc  e792              B        |L3.260|
                  |L3.478|
0001de  2000              MOVS     r0,#0                 ;1339
0001e0  e790              B        |L3.260|
;;;1341   
                          ENDP

0001e2  0000              DCW      0x0000
                  |L3.484|
                          DCD      _setup+0xc000
                  |L3.488|
                          DCD      |symbol_number.437|
                  |L3.492|
                          DCD      _setup+0xb1ac

                          AREA ||i.arc_data_r||, CODE, READONLY, ALIGN=2

                  arc_data_r PROC
;;;1377   
;;;1378       static int arc_data_r(                        /* ARGUMENTS                                     */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;1379       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)          */
;;;1380       double current_x,                             /* first coordinate of current point             */
;;;1381       double current_y,                             /* second coordinate of current point            */
;;;1382       double end_x,                                 /* first coordinate of arc end point             */
;;;1383       double end_y,                                 /* second coordinate of arc end point            */
;;;1384       double radius,                                /* radius of arc                                 */
;;;1385       double * center_x,                            /* pointer to first coordinate of center of arc  */
;;;1386       double * center_y,                            /* pointer to second coordinate of center of arc */
;;;1387       int * turn)                                   /* pointer to no. of full or partial circles CCW */
;;;1388       {
000004  b090              SUB      sp,sp,#0x40
000006  4692              MOV      r10,r2
000008  469b              MOV      r11,r3
00000a  e9dd6724          LDRD     r6,r7,[sp,#0x90]
;;;1389           static char name[] SET_TO "arc_data_r";
;;;1390           double abs_radius;                        /* absolute value of given radius */
;;;1391           double half_length;                       /* distance from M to end point   */
;;;1392           double mid_x;                             /* first coordinate of M          */
;;;1393           double mid_y;                             /* second coordinate of M         */
;;;1394           double offset;                            /* distance from M to center      */
;;;1395           double theta;                             /* angle of line from M to center */
;;;1396           double turn2;                             /* absolute value of half of turn */
;;;1397   
;;;1398           CHK(((end_x IS current_x) AND (end_y IS current_y)),
00000e  4652              MOV      r2,r10
000010  465b              MOV      r3,r11
000012  e9dd0120          LDRD     r0,r1,[sp,#0x80]
000016  f7fffffe          BL       __aeabi_cdcmpeq
00001a  d12f              BNE      |L4.124|
00001c  e9dd231e          LDRD     r2,r3,[sp,#0x78]
000020  e9dd0122          LDRD     r0,r1,[sp,#0x88]
000024  f7fffffe          BL       __aeabi_cdcmpeq
000028  d128              BNE      |L4.124|
00002a  f04f0100          MOV      r1,#0
00002e  489c              LDR      r0,|L4.672|
000030  f8c0114c          STR      r1,[r0,#0x14c]
000034  4601              MOV      r1,r0
000036  f8d1314c          LDR      r3,[r1,#0x14c]
00003a  f8d1114c          LDR      r1,[r1,#0x14c]
00003e  f1010101          ADD      r1,r1,#1
000042  4602              MOV      r2,r0
000044  f8c2114c          STR      r1,[r2,#0x14c]
000048  eb030183          ADD      r1,r3,r3,LSL #2
00004c  f6a06254          SUB      r2,r0,#0xe54
000050  eb021101          ADD      r1,r2,r1,LSL #4
000054  4608              MOV      r0,r1
000056  4993              LDR      r1,|L4.676|
000058  f7fffffe          BL       strcpy
00005c  f04f0100          MOV      r1,#0
000060  488f              LDR      r0,|L4.672|
000062  f8d0014c          LDR      r0,[r0,#0x14c]
000066  eb000080          ADD      r0,r0,r0,LSL #2
00006a  4a8f              LDR      r2,|L4.680|
00006c  eb021000          ADD      r0,r2,r0,LSL #4
000070  7001              STRB     r1,[r0,#0]
000072  f04f0045          MOV      r0,#0x45
                  |L4.118|
;;;1399               NCE_CURRENT_POINT_SAME_AS_END_POINT_OF_ARC);
;;;1400           abs_radius SET_TO fabs(radius);
;;;1401           mid_x SET_TO (end_x + current_x)/2.0;
;;;1402           mid_y SET_TO (end_y + current_y)/2.0;
;;;1403           half_length SET_TO hypot((mid_x - end_x), (mid_y - end_y));
;;;1404           CHK(((half_length/abs_radius) > (1+TINY)),
;;;1405               NCE_ARC_RADIUS_TOO_SMALL_TO_REACH_END_POINT);
;;;1406           if ((half_length/abs_radius) > (1-TINY))
;;;1407               half_length SET_TO abs_radius;        /* allow a small error for semicircle */
;;;1408      /* check needed before calling asin   */
;;;1409           if (((move IS G_2) AND (radius > 0)) OR
;;;1410               ((move IS G_3) AND (radius < 0)))
;;;1411               theta SET_TO atan2((end_y - current_y), (end_x - current_x)) - PI2;
;;;1412           else
;;;1413               theta SET_TO atan2((end_y - current_y), (end_x - current_x)) + PI2;
;;;1414   
;;;1415           turn2 SET_TO asin (half_length/abs_radius);
;;;1416           offset SET_TO abs_radius * cos(turn2);
;;;1417           *center_x SET_TO mid_x + (offset * cos(theta));
;;;1418           *center_y SET_TO mid_y + (offset * sin(theta));
;;;1419           *turn SET_TO (move IS G_2) ? -1 : 1;
;;;1420   
;;;1421           return RS274NGC_OK;
;;;1422       }
000076  b014              ADD      sp,sp,#0x50
000078  e8bd9ff0          POP      {r4-r12,pc}
                  |L4.124|
00007c  f0274300          BIC      r3,r7,#0x80000000     ;1400
000080  4634              MOV      r4,r6                 ;1400
000082  461d              MOV      r5,r3                 ;1400
000084  4652              MOV      r2,r10                ;1401
000086  465b              MOV      r3,r11                ;1401
000088  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;1401
00008c  f7fffffe          BL       __aeabi_dadd
000090  2200              MOVS     r2,#0                 ;1401
000092  f04f4380          MOV      r3,#0x40000000        ;1401
000096  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1401
00009a  f7fffffe          BL       __aeabi_ddiv
00009e  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;1401
0000a2  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;1402
0000a6  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;1402
0000aa  f7fffffe          BL       __aeabi_dadd
0000ae  2200              MOVS     r2,#0                 ;1402
0000b0  f04f4380          MOV      r3,#0x40000000        ;1402
0000b4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1402
0000b8  f7fffffe          BL       __aeabi_ddiv
0000bc  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;1402
0000c0  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;1403
0000c4  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1403
0000c8  f7fffffe          BL       __aeabi_dsub
0000cc  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1403
0000d0  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;1403
0000d4  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;1403
0000d8  f7fffffe          BL       __aeabi_dsub
0000dc  e9cd0102          STRD     r0,r1,[sp,#8]         ;1403
0000e0  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;1403
0000e4  f7fffffe          BL       hypot
0000e8  4680              MOV      r8,r0                 ;1403
0000ea  4689              MOV      r9,r1                 ;1403
0000ec  4622              MOV      r2,r4                 ;1404
0000ee  462b              MOV      r3,r5                 ;1404
0000f0  4640              MOV      r0,r8                 ;1404
0000f2  4649              MOV      r1,r9                 ;1404
0000f4  f7fffffe          BL       __aeabi_ddiv
0000f8  f2411298          MOV      r2,#0x1198            ;1404
0000fc  4b6b              LDR      r3,|L4.684|
0000fe  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1404
000102  f7fffffe          BL       __aeabi_cdrcmple
000106  d225              BCS      |L4.340|
000108  f04f0100          MOV      r1,#0                 ;1404
00010c  4864              LDR      r0,|L4.672|
00010e  f8c0114c          STR      r1,[r0,#0x14c]        ;1404
000112  4601              MOV      r1,r0                 ;1404
000114  f8d1314c          LDR      r3,[r1,#0x14c]        ;1404
000118  f8d1114c          LDR      r1,[r1,#0x14c]        ;1404
00011c  f1010101          ADD      r1,r1,#1              ;1404
000120  4602              MOV      r2,r0                 ;1404
000122  f8c2114c          STR      r1,[r2,#0x14c]        ;1404
000126  eb030183          ADD      r1,r3,r3,LSL #2       ;1404
00012a  4a5f              LDR      r2,|L4.680|
00012c  eb021101          ADD      r1,r2,r1,LSL #4       ;1404
000130  4608              MOV      r0,r1                 ;1404
000132  495c              LDR      r1,|L4.676|
000134  f7fffffe          BL       strcpy
000138  f04f0100          MOV      r1,#0                 ;1404
00013c  4858              LDR      r0,|L4.672|
00013e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1404
000142  eb000080          ADD      r0,r0,r0,LSL #2       ;1404
000146  4a58              LDR      r2,|L4.680|
000148  eb021000          ADD      r0,r2,r0,LSL #4       ;1404
00014c  7001              STRB     r1,[r0,#0]            ;1404
00014e  f04f0007          MOV      r0,#7                 ;1404
000152  e790              B        |L4.118|
                  |L4.340|
000154  4622              MOV      r2,r4                 ;1406
000156  462b              MOV      r3,r5                 ;1406
000158  4640              MOV      r0,r8                 ;1406
00015a  4649              MOV      r1,r9                 ;1406
00015c  f7fffffe          BL       __aeabi_ddiv
000160  4a53              LDR      r2,|L4.688|
000162  4b52              LDR      r3,|L4.684|
000164  1e5b              SUBS     r3,r3,#1              ;1406
000166  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1406
00016a  f7fffffe          BL       __aeabi_cdrcmple
00016e  d201              BCS      |L4.372|
000170  46a0              MOV      r8,r4                 ;1407
000172  46a9              MOV      r9,r5                 ;1407
                  |L4.372|
000174  9810              LDR      r0,[sp,#0x40]         ;1409
000176  2814              CMP      r0,#0x14              ;1409
000178  d106              BNE      |L4.392|
00017a  2200              MOVS     r2,#0                 ;1409
00017c  4613              MOV      r3,r2                 ;1409
00017e  4630              MOV      r0,r6                 ;1409
000180  4639              MOV      r1,r7                 ;1409
000182  f7fffffe          BL       __aeabi_cdrcmple
000186  d309              BCC      |L4.412|
                  |L4.392|
000188  9810              LDR      r0,[sp,#0x40]         ;1410
00018a  281e              CMP      r0,#0x1e              ;1410
00018c  d123              BNE      |L4.470|
00018e  2200              MOVS     r2,#0                 ;1410
000190  4613              MOV      r3,r2                 ;1410
000192  4630              MOV      r0,r6                 ;1410
000194  4639              MOV      r1,r7                 ;1410
000196  f7fffffe          BL       __aeabi_cdcmple
00019a  d21c              BCS      |L4.470|
                  |L4.412|
00019c  4652              MOV      r2,r10                ;1411
00019e  465b              MOV      r3,r11                ;1411
0001a0  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;1411
0001a4  f7fffffe          BL       __aeabi_dsub
0001a8  e9cd0102          STRD     r0,r1,[sp,#8]         ;1411
0001ac  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;1411
0001b0  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;1411
0001b4  f7fffffe          BL       __aeabi_dsub
0001b8  e9cd0100          STRD     r0,r1,[sp,#0]         ;1411
0001bc  e9dd2302          LDRD     r2,r3,[sp,#8]         ;1411
0001c0  f7fffffe          BL       atan2
0001c4  4a3b              LDR      r2,|L4.692|
0001c6  4b3c              LDR      r3,|L4.696|
0001c8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1411
0001cc  f7fffffe          BL       __aeabi_dsub
0001d0  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1411
0001d4  e01b              B        |L4.526|
                  |L4.470|
0001d6  4652              MOV      r2,r10                ;1413
0001d8  465b              MOV      r3,r11                ;1413
0001da  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;1413
0001de  f7fffffe          BL       __aeabi_dsub
0001e2  e9cd0102          STRD     r0,r1,[sp,#8]         ;1413
0001e6  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;1413
0001ea  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;1413
0001ee  f7fffffe          BL       __aeabi_dsub
0001f2  e9cd0100          STRD     r0,r1,[sp,#0]         ;1413
0001f6  e9dd2302          LDRD     r2,r3,[sp,#8]         ;1413
0001fa  f7fffffe          BL       atan2
0001fe  4a2d              LDR      r2,|L4.692|
000200  4b2d              LDR      r3,|L4.696|
000202  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1413
000206  f7fffffe          BL       __aeabi_dadd
00020a  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1413
                  |L4.526|
00020e  4622              MOV      r2,r4                 ;1415
000210  462b              MOV      r3,r5                 ;1415
000212  4640              MOV      r0,r8                 ;1415
000214  4649              MOV      r1,r9                 ;1415
000216  f7fffffe          BL       __aeabi_ddiv
00021a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1415
00021e  f7fffffe          BL       asin
000222  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1415
000226  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;1416
00022a  f7fffffe          BL       ||cos||
00022e  4622              MOV      r2,r4                 ;1416
000230  462b              MOV      r3,r5                 ;1416
000232  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1416
000236  f7fffffe          BL       __aeabi_dmul
00023a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1416
00023e  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;1417
000242  f7fffffe          BL       ||cos||
000246  e9cd0102          STRD     r0,r1,[sp,#8]         ;1417
00024a  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1417
00024e  f7fffffe          BL       __aeabi_dmul
000252  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1417
000256  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;1417
00025a  f7fffffe          BL       __aeabi_dadd
00025e  9a26              LDR      r2,[sp,#0x98]         ;1417
000260  c203              STM      r2!,{r0,r1}           ;1417
000262  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;1418
000266  f7fffffe          BL       ||sin||
00026a  e9cd0102          STRD     r0,r1,[sp,#8]         ;1418
00026e  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;1418
000272  f7fffffe          BL       __aeabi_dmul
000276  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1418
00027a  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;1418
00027e  f7fffffe          BL       __aeabi_dadd
000282  9a27              LDR      r2,[sp,#0x9c]         ;1418
000284  c203              STM      r2!,{r0,r1}           ;1418
000286  9810              LDR      r0,[sp,#0x40]         ;1419
000288  2814              CMP      r0,#0x14              ;1419
00028a  d102              BNE      |L4.658|
00028c  f04f31ff          MOV      r1,#0xffffffff        ;1419
000290  e001              B        |L4.662|
                  |L4.658|
000292  f04f0101          MOV      r1,#1                 ;1419
                  |L4.662|
000296  9828              LDR      r0,[sp,#0xa0]         ;1419
000298  6001              STR      r1,[r0,#0]            ;1419
00029a  2000              MOVS     r0,#0                 ;1421
00029c  e6eb              B        |L4.118|
;;;1423   
                          ENDP

00029e  0000              DCW      0x0000
                  |L4.672|
                          DCD      _setup+0xc000
                  |L4.676|
                          DCD      |symbol_number.438|
                  |L4.680|
                          DCD      _setup+0xb1ac
                  |L4.684|
                          DCD      0x3ff00000
                  |L4.688|
                          DCD      0xffffdcd1
                  |L4.692|
                          DCD      0x54442d18
                  |L4.696|
                          DCD      0x3ff921fb

                          AREA ||i.check_g_codes||, CODE, READONLY, ALIGN=2

                  check_g_codes PROC
;;;1474   
;;;1475       static int check_g_codes(                     /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;1476       block_pointer block,                          /* pointer to a block to be checked */
;;;1477       setup_pointer settings)                       /* pointer to machine settings      */
;;;1478       {
000004  4604              MOV      r4,r0
000006  4689              MOV      r9,r1
;;;1479           static char name[] SET_TO "check_g_codes";
;;;1480           int mode0;
;;;1481           int p_int;
;;;1482   
;;;1483           mode0 SET_TO block->g_modes[0];
000008  f8d40110          LDR      r0,[r4,#0x110]
00000c  4605              MOV      r5,r0
;;;1484   
;;;1485           if (mode0 IS -1)
00000e  1c68              ADDS     r0,r5,#1
000010  d074              BEQ      |L5.252|
;;;1486           {}
;;;1487           else if (mode0 IS G_4)
000012  2d28              CMP      r5,#0x28
000014  d135              BNE      |L5.130|
;;;1488           {
;;;1489               CHK((block->p_number IS -1.0), NCE_DWELL_TIME_MISSING_WITH_G4);
000016  f8d411b0          LDR      r1,[r4,#0x1b0]
00001a  460e              MOV      r6,r1
00001c  f8d401b4          LDR      r0,[r4,#0x1b4]
000020  4607              MOV      r7,r0
000022  2200              MOVS     r2,#0
000024  4bc0              LDR      r3,|L5.808|
000026  4630              MOV      r0,r6
000028  4639              MOV      r1,r7
00002a  f7fffffe          BL       __aeabi_cdcmpeq
00002e  d165              BNE      |L5.252|
000030  f04f0100          MOV      r1,#0
000034  48bd              LDR      r0,|L5.812|
000036  f8c0114c          STR      r1,[r0,#0x14c]
00003a  4601              MOV      r1,r0
00003c  f8d1314c          LDR      r3,[r1,#0x14c]
000040  f8d1114c          LDR      r1,[r1,#0x14c]
000044  f1010101          ADD      r1,r1,#1
000048  4602              MOV      r2,r0
00004a  f8c2114c          STR      r1,[r2,#0x14c]
00004e  eb030183          ADD      r1,r3,r3,LSL #2
000052  f6a06254          SUB      r2,r0,#0xe54
000056  eb021101          ADD      r1,r2,r1,LSL #4
00005a  4608              MOV      r0,r1
00005c  49b4              LDR      r1,|L5.816|
00005e  f7fffffe          BL       strcpy
000062  f04f0100          MOV      r1,#0
000066  48b1              LDR      r0,|L5.812|
000068  f8d0014c          LDR      r0,[r0,#0x14c]
00006c  eb000080          ADD      r0,r0,r0,LSL #2
000070  4ab0              LDR      r2,|L5.820|
000072  eb021000          ADD      r0,r2,r0,LSL #4
000076  7001              STRB     r1,[r0,#0]
000078  f04f0048          MOV      r0,#0x48
                  |L5.124|
;;;1490           }
;;;1491           else if (mode0 IS G_50)
;;;1492           {
;;;1493               p_int SET_TO (int)(block->p_number + 0.0001);
;;;1494               CHK((block->l_number ISNT 2), NCE_LINE_WITH_G50_DOES_NOT_HAVE_L2);
;;;1495               CHK((((block->p_number + 0.0001) - p_int) > 0.0002),
;;;1496                   NCE_P_VALUE_NOT_AN_INTEGER_WITH_G50_L2);
;;;1497               CHK(((p_int < 1) OR (p_int > 9)), NCE_P_VALUE_OUT_OF_RANGE_WITH_G50_L2);
;;;1498           }
;;;1499           else if (mode0 IS G_28)
;;;1500               {}
;;;1501               else if (mode0 IS G_30)
;;;1502                   {}
;;;1503                   else if (mode0 IS G_53)
;;;1504                   {
;;;1505                       CHK(((block->motion_to_be ISNT G_0) AND (block->motion_to_be ISNT G_1)),
;;;1506                   NCE_MUST_USE_G0_OR_G1_WITH_G53);
;;;1507               CHK(((block->g_modes[3] IS G_91) OR
;;;1508                   ((block->g_modes[3] ISNT G_90) AND
;;;1509                   (settings->distance_mode IS MODE_INCREMENTAL))),
;;;1510                   NCE_CANNOT_USE_G53_INCREMENTAL);
;;;1511           }
;;;1512           else if (mode0 IS G_92)
;;;1513               {}
;;;1514               else if ((mode0 IS G_92_1) OR (mode0 IS G_92_2) OR (mode0 IS G_92_3))
;;;1515                   {}
;;;1516                   else
;;;1517                       ERM(NCE_BUG_BAD_G_CODE_MODAL_GROUP_0);
;;;1518           return RS274NGC_OK;
;;;1519       }
00007c  b004              ADD      sp,sp,#0x10
00007e  e8bd9ff0          POP      {r4-r12,pc}
                  |L5.130|
000082  f5b57ffa          CMP      r5,#0x1f4             ;1491
000086  d17e              BNE      |L5.390|
000088  f8d411b0          LDR      r1,[r4,#0x1b0]        ;1493
00008c  460e              MOV      r6,r1                 ;1493
00008e  f8d401b4          LDR      r0,[r4,#0x1b4]        ;1493
000092  4607              MOV      r7,r0                 ;1493
000094  4aa8              LDR      r2,|L5.824|
000096  4ba9              LDR      r3,|L5.828|
000098  4630              MOV      r0,r6                 ;1493
00009a  4639              MOV      r1,r7                 ;1493
00009c  f7fffffe          BL       __aeabi_dadd
0000a0  4682              MOV      r10,r0                ;1493
0000a2  f7fffffe          BL       __aeabi_d2iz
0000a6  4680              MOV      r8,r0                 ;1493
0000a8  f8d40178          LDR      r0,[r4,#0x178]        ;1494
0000ac  2802              CMP      r0,#2                 ;1494
0000ae  d026              BEQ      |L5.254|
0000b0  f04f0100          MOV      r1,#0                 ;1494
0000b4  489d              LDR      r0,|L5.812|
0000b6  f8c0114c          STR      r1,[r0,#0x14c]        ;1494
0000ba  4601              MOV      r1,r0                 ;1494
0000bc  f8d1314c          LDR      r3,[r1,#0x14c]        ;1494
0000c0  f8d1114c          LDR      r1,[r1,#0x14c]        ;1494
0000c4  f1010101          ADD      r1,r1,#1              ;1494
0000c8  4602              MOV      r2,r0                 ;1494
0000ca  f8c2114c          STR      r1,[r2,#0x14c]        ;1494
0000ce  eb030183          ADD      r1,r3,r3,LSL #2       ;1494
0000d2  4a98              LDR      r2,|L5.820|
0000d4  eb021101          ADD      r1,r2,r1,LSL #4       ;1494
0000d8  4608              MOV      r0,r1                 ;1494
0000da  4995              LDR      r1,|L5.816|
0000dc  f7fffffe          BL       strcpy
0000e0  f04f0100          MOV      r1,#0                 ;1494
0000e4  4891              LDR      r0,|L5.812|
0000e6  f8d0014c          LDR      r0,[r0,#0x14c]        ;1494
0000ea  eb000080          ADD      r0,r0,r0,LSL #2       ;1494
0000ee  4a91              LDR      r2,|L5.820|
0000f0  eb021000          ADD      r0,r2,r0,LSL #4       ;1494
0000f4  7001              STRB     r1,[r0,#0]            ;1494
0000f6  f04f0063          MOV      r0,#0x63              ;1494
0000fa  e7bf              B        |L5.124|
                  |L5.252|
0000fc  e0c8              B        |L5.656|
                  |L5.254|
0000fe  4640              MOV      r0,r8                 ;1495
000100  f7fffffe          BL       __aeabi_i2d
000104  4682              MOV      r10,r0                ;1495
000106  468b              MOV      r11,r1                ;1495
000108  f8d411b0          LDR      r1,[r4,#0x1b0]        ;1495
00010c  460e              MOV      r6,r1                 ;1495
00010e  f8d401b4          LDR      r0,[r4,#0x1b4]        ;1495
000112  4607              MOV      r7,r0                 ;1495
000114  4a88              LDR      r2,|L5.824|
000116  4b89              LDR      r3,|L5.828|
000118  4630              MOV      r0,r6                 ;1495
00011a  4639              MOV      r1,r7                 ;1495
00011c  f7fffffe          BL       __aeabi_dadd
000120  4652              MOV      r2,r10                ;1495
000122  465b              MOV      r3,r11                ;1495
000124  e9cd0100          STRD     r0,r1,[sp,#0]         ;1495
000128  f7fffffe          BL       __aeabi_dsub
00012c  4a82              LDR      r2,|L5.824|
00012e  4b84              LDR      r3,|L5.832|
000130  e9cd0102          STRD     r0,r1,[sp,#8]         ;1495
000134  f7fffffe          BL       __aeabi_cdrcmple
000138  d226              BCS      |L5.392|
00013a  f04f0100          MOV      r1,#0                 ;1495
00013e  487b              LDR      r0,|L5.812|
000140  f8c0114c          STR      r1,[r0,#0x14c]        ;1495
000144  4601              MOV      r1,r0                 ;1495
000146  f8d1314c          LDR      r3,[r1,#0x14c]        ;1495
00014a  f8d1114c          LDR      r1,[r1,#0x14c]        ;1495
00014e  f1010101          ADD      r1,r1,#1              ;1495
000152  4602              MOV      r2,r0                 ;1495
000154  f8c2114c          STR      r1,[r2,#0x14c]        ;1495
000158  eb030183          ADD      r1,r3,r3,LSL #2       ;1495
00015c  4a75              LDR      r2,|L5.820|
00015e  eb021101          ADD      r1,r2,r1,LSL #4       ;1495
000162  4608              MOV      r0,r1                 ;1495
000164  4972              LDR      r1,|L5.816|
000166  f7fffffe          BL       strcpy
00016a  f04f0100          MOV      r1,#0                 ;1495
00016e  486f              LDR      r0,|L5.812|
000170  f8d0014c          LDR      r0,[r0,#0x14c]        ;1495
000174  eb000080          ADD      r0,r0,r0,LSL #2       ;1495
000178  4a6e              LDR      r2,|L5.820|
00017a  eb021000          ADD      r0,r2,r0,LSL #4       ;1495
00017e  7001              STRB     r1,[r0,#0]            ;1495
000180  f04f008a          MOV      r0,#0x8a              ;1495
000184  e77a              B        |L5.124|
                  |L5.390|
000186  e02b              B        |L5.480|
                  |L5.392|
000188  f1b80f01          CMP      r8,#1                 ;1497
00018c  db02              BLT      |L5.404|
00018e  f1b80f09          CMP      r8,#9                 ;1497
000192  dd7d              BLE      |L5.656|
                  |L5.404|
000194  f04f0100          MOV      r1,#0                 ;1497
000198  4864              LDR      r0,|L5.812|
00019a  f8c0114c          STR      r1,[r0,#0x14c]        ;1497
00019e  4601              MOV      r1,r0                 ;1497
0001a0  f8d1314c          LDR      r3,[r1,#0x14c]        ;1497
0001a4  f8d1114c          LDR      r1,[r1,#0x14c]        ;1497
0001a8  f1010101          ADD      r1,r1,#1              ;1497
0001ac  4602              MOV      r2,r0                 ;1497
0001ae  f8c2114c          STR      r1,[r2,#0x14c]        ;1497
0001b2  eb030183          ADD      r1,r3,r3,LSL #2       ;1497
0001b6  4a5f              LDR      r2,|L5.820|
0001b8  eb021101          ADD      r1,r2,r1,LSL #4       ;1497
0001bc  4608              MOV      r0,r1                 ;1497
0001be  495c              LDR      r1,|L5.816|
0001c0  f7fffffe          BL       strcpy
0001c4  f04f0100          MOV      r1,#0                 ;1497
0001c8  4858              LDR      r0,|L5.812|
0001ca  f8d0014c          LDR      r0,[r0,#0x14c]        ;1497
0001ce  eb000080          ADD      r0,r0,r0,LSL #2       ;1497
0001d2  4a58              LDR      r2,|L5.820|
0001d4  eb021000          ADD      r0,r2,r0,LSL #4       ;1497
0001d8  7001              STRB     r1,[r0,#0]            ;1497
0001da  f04f008b          MOV      r0,#0x8b              ;1497
0001de  e74d              B        |L5.124|
                  |L5.480|
0001e0  f5b57f8c          CMP      r5,#0x118             ;1499
                  |L5.484|
0001e4  d054              BEQ      |L5.656|
0001e6  f5b57f96          CMP      r5,#0x12c             ;1501
0001ea  d0fb              BEQ      |L5.484|
0001ec  f5a57000          SUB      r0,r5,#0x200          ;1503
0001f0  3812              SUBS     r0,r0,#0x12           ;1503
0001f2  d165              BNE      |L5.704|
0001f4  f8d40180          LDR      r0,[r4,#0x180]        ;1505
0001f8  b348              CBZ      r0,|L5.590|
0001fa  f8d40180          LDR      r0,[r4,#0x180]        ;1505
0001fe  280a              CMP      r0,#0xa               ;1505
000200  d025              BEQ      |L5.590|
000202  f04f0100          MOV      r1,#0                 ;1505
000206  4849              LDR      r0,|L5.812|
000208  f8c0114c          STR      r1,[r0,#0x14c]        ;1505
00020c  4601              MOV      r1,r0                 ;1505
00020e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1505
000212  f8d1114c          LDR      r1,[r1,#0x14c]        ;1505
000216  f1010101          ADD      r1,r1,#1              ;1505
00021a  4602              MOV      r2,r0                 ;1505
00021c  f8c2114c          STR      r1,[r2,#0x14c]        ;1505
000220  eb030183          ADD      r1,r3,r3,LSL #2       ;1505
000224  4a43              LDR      r2,|L5.820|
000226  eb021101          ADD      r1,r2,r1,LSL #4       ;1505
00022a  4608              MOV      r0,r1                 ;1505
00022c  4940              LDR      r1,|L5.816|
00022e  f7fffffe          BL       strcpy
000232  f04f0100          MOV      r1,#0                 ;1505
000236  483d              LDR      r0,|L5.812|
000238  f8d0014c          LDR      r0,[r0,#0x14c]        ;1505
00023c  eb000080          ADD      r0,r0,r0,LSL #2       ;1505
000240  4a3c              LDR      r2,|L5.820|
000242  eb021000          ADD      r0,r2,r0,LSL #4       ;1505
000246  7001              STRB     r1,[r0,#0]            ;1505
000248  f04f0078          MOV      r0,#0x78              ;1505
00024c  e716              B        |L5.124|
                  |L5.590|
00024e  f44f708e          MOV      r0,#0x11c             ;1507
000252  5900              LDR      r0,[r0,r4]            ;1507
000254  f5a07140          SUB      r1,r0,#0x300          ;1507
000258  398e              SUBS     r1,r1,#0x8e           ;1507
00025a  d009              BEQ      |L5.624|
00025c  f44f708e          MOV      r0,#0x11c             ;1507
000260  5900              LDR      r0,[r0,r4]            ;1507
000262  f5b07f61          CMP      r0,#0x384             ;1507
000266  d05c              BEQ      |L5.802|
000268  f89903f8          LDRB     r0,[r9,#0x3f8]        ;1507
00026c  2801              CMP      r0,#1                 ;1507
00026e  d158              BNE      |L5.802|
                  |L5.624|
000270  f04f0100          MOV      r1,#0                 ;1507
000274  482d              LDR      r0,|L5.812|
000276  f8c0114c          STR      r1,[r0,#0x14c]        ;1507
00027a  4601              MOV      r1,r0                 ;1507
00027c  f8d1314c          LDR      r3,[r1,#0x14c]        ;1507
000280  f8d1114c          LDR      r1,[r1,#0x14c]        ;1507
000284  f1010101          ADD      r1,r1,#1              ;1507
000288  4602              MOV      r2,r0                 ;1507
00028a  f8c2114c          STR      r1,[r2,#0x14c]        ;1507
00028e  e000              B        |L5.658|
                  |L5.656|
000290  e047              B        |L5.802|
                  |L5.658|
000292  eb030183          ADD      r1,r3,r3,LSL #2       ;1507
000296  4a27              LDR      r2,|L5.820|
000298  eb021101          ADD      r1,r2,r1,LSL #4       ;1507
00029c  4608              MOV      r0,r1                 ;1507
00029e  4924              LDR      r1,|L5.816|
0002a0  f7fffffe          BL       strcpy
0002a4  f04f0100          MOV      r1,#0                 ;1507
0002a8  4820              LDR      r0,|L5.812|
0002aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;1507
0002ae  eb000080          ADD      r0,r0,r0,LSL #2       ;1507
0002b2  4a20              LDR      r2,|L5.820|
0002b4  eb021000          ADD      r0,r2,r0,LSL #4       ;1507
0002b8  7001              STRB     r1,[r0,#0]            ;1507
0002ba  f04f003d          MOV      r0,#0x3d              ;1507
0002be  e6dd              B        |L5.124|
                  |L5.704|
0002c0  f5b57f66          CMP      r5,#0x398             ;1512
0002c4  d02d              BEQ      |L5.802|
0002c6  f5a57040          SUB      r0,r5,#0x300          ;1514
0002ca  3899              SUBS     r0,r0,#0x99           ;1514
0002cc  d029              BEQ      |L5.802|
0002ce  1e40              SUBS     r0,r0,#1              ;1514
0002d0  d027              BEQ      |L5.802|
0002d2  1e40              SUBS     r0,r0,#1              ;1514
0002d4  d025              BEQ      |L5.802|
0002d6  f04f0100          MOV      r1,#0                 ;1517
0002da  4814              LDR      r0,|L5.812|
0002dc  f8c0114c          STR      r1,[r0,#0x14c]        ;1517
0002e0  4601              MOV      r1,r0                 ;1517
0002e2  f8d1314c          LDR      r3,[r1,#0x14c]        ;1517
0002e6  f8d1114c          LDR      r1,[r1,#0x14c]        ;1517
0002ea  f1010101          ADD      r1,r1,#1              ;1517
0002ee  4602              MOV      r2,r0                 ;1517
0002f0  f8c2114c          STR      r1,[r2,#0x14c]        ;1517
0002f4  eb030183          ADD      r1,r3,r3,LSL #2       ;1517
0002f8  4a0e              LDR      r2,|L5.820|
0002fa  eb021101          ADD      r1,r2,r1,LSL #4       ;1517
0002fe  4608              MOV      r0,r1                 ;1517
000300  490b              LDR      r1,|L5.816|
000302  f7fffffe          BL       strcpy
000306  f04f0100          MOV      r1,#0                 ;1517
00030a  4808              LDR      r0,|L5.812|
00030c  f8d0014c          LDR      r0,[r0,#0x14c]        ;1517
000310  eb000080          ADD      r0,r0,r0,LSL #2       ;1517
000314  4a07              LDR      r2,|L5.820|
000316  eb021000          ADD      r0,r2,r0,LSL #4       ;1517
00031a  7001              STRB     r1,[r0,#0]            ;1517
00031c  f04f000f          MOV      r0,#0xf               ;1517
000320  e6ac              B        |L5.124|
                  |L5.802|
000322  2000              MOVS     r0,#0                 ;1518
000324  e6aa              B        |L5.124|
;;;1520   
                          ENDP

000326  0000              DCW      0x0000
                  |L5.808|
                          DCD      0xbff00000
                  |L5.812|
                          DCD      _setup+0xc000
                  |L5.816|
                          DCD      |symbol_number.439|
                  |L5.820|
                          DCD      _setup+0xb1ac
                  |L5.824|
                          DCD      0xeb1c432d
                  |L5.828|
                          DCD      0x3f1a36e2
                  |L5.832|
                          DCD      0x3f2a36e2

                          AREA ||i.check_items||, CODE, READONLY, ALIGN=2

                  check_items PROC
;;;1549   
;;;1550       static int check_items(                       /* ARGUMENTS                        */
000000  b570              PUSH     {r4-r6,lr}
;;;1551       block_pointer block,                          /* pointer to a block to be checked */
;;;1552       setup_pointer settings)                       /* pointer to machine settings      */
;;;1553       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;1554           static char name[] SET_TO "check_items";
;;;1555           int status;
;;;1556   
;;;1557           CHP(check_g_codes(block, settings));
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       check_g_codes
00000e  0006              MOVS     r6,r0
000010  d026              BEQ      |L6.96|
000012  483f              LDR      r0,|L6.272|
000014  f8d0014c          LDR      r0,[r0,#0x14c]
000018  2831              CMP      r0,#0x31
00001a  da1f              BGE      |L6.92|
00001c  493c              LDR      r1,|L6.272|
00001e  f8d1314c          LDR      r3,[r1,#0x14c]
000022  f8d1114c          LDR      r1,[r1,#0x14c]
000026  1c49              ADDS     r1,r1,#1
000028  4a39              LDR      r2,|L6.272|
00002a  f8c2114c          STR      r1,[r2,#0x14c]
00002e  eb030183          ADD      r1,r3,r3,LSL #2
000032  f6a26254          SUB      r2,r2,#0xe54
000036  eb021101          ADD      r1,r2,r1,LSL #4
00003a  4608              MOV      r0,r1
00003c  4935              LDR      r1,|L6.276|
00003e  f7fffffe          BL       strcpy
000042  f04f0100          MOV      r1,#0
000046  4832              LDR      r0,|L6.272|
000048  f8d0014c          LDR      r0,[r0,#0x14c]
00004c  eb000080          ADD      r0,r0,r0,LSL #2
000050  4a31              LDR      r2,|L6.280|
000052  eb021000          ADD      r0,r2,r0,LSL #4
000056  7001              STRB     r1,[r0,#0]
000058  4630              MOV      r0,r6
                  |L6.90|
;;;1558           CHP(check_m_codes(block));
;;;1559           CHP(check_other_codes(block));
;;;1560           return RS274NGC_OK;
;;;1561       }
00005a  bd70              POP      {r4-r6,pc}
                  |L6.92|
00005c  4630              MOV      r0,r6                 ;1557
00005e  e7fc              B        |L6.90|
                  |L6.96|
000060  4620              MOV      r0,r4                 ;1558
000062  f7fffffe          BL       check_m_codes
000066  0006              MOVS     r6,r0                 ;1558
000068  d025              BEQ      |L6.182|
00006a  4829              LDR      r0,|L6.272|
00006c  f8d0014c          LDR      r0,[r0,#0x14c]        ;1558
000070  2831              CMP      r0,#0x31              ;1558
000072  da1e              BGE      |L6.178|
000074  4926              LDR      r1,|L6.272|
000076  f8d1314c          LDR      r3,[r1,#0x14c]        ;1558
00007a  f8d1114c          LDR      r1,[r1,#0x14c]        ;1558
00007e  1c49              ADDS     r1,r1,#1              ;1558
000080  4a23              LDR      r2,|L6.272|
000082  f8c2114c          STR      r1,[r2,#0x14c]        ;1558
000086  eb030183          ADD      r1,r3,r3,LSL #2       ;1558
00008a  4a23              LDR      r2,|L6.280|
00008c  eb021101          ADD      r1,r2,r1,LSL #4       ;1558
000090  4608              MOV      r0,r1                 ;1558
000092  4920              LDR      r1,|L6.276|
000094  f7fffffe          BL       strcpy
000098  f04f0100          MOV      r1,#0                 ;1558
00009c  481c              LDR      r0,|L6.272|
00009e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1558
0000a2  eb000080          ADD      r0,r0,r0,LSL #2       ;1558
0000a6  4a1c              LDR      r2,|L6.280|
0000a8  eb021000          ADD      r0,r2,r0,LSL #4       ;1558
0000ac  7001              STRB     r1,[r0,#0]            ;1558
0000ae  4630              MOV      r0,r6                 ;1558
0000b0  e7d3              B        |L6.90|
                  |L6.178|
0000b2  4630              MOV      r0,r6                 ;1558
0000b4  e7d1              B        |L6.90|
                  |L6.182|
0000b6  4620              MOV      r0,r4                 ;1559
0000b8  f7fffffe          BL       check_other_codes
0000bc  0006              MOVS     r6,r0                 ;1559
0000be  d025              BEQ      |L6.268|
0000c0  4813              LDR      r0,|L6.272|
0000c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;1559
0000c6  2831              CMP      r0,#0x31              ;1559
0000c8  da1e              BGE      |L6.264|
0000ca  4911              LDR      r1,|L6.272|
0000cc  f8d1314c          LDR      r3,[r1,#0x14c]        ;1559
0000d0  f8d1114c          LDR      r1,[r1,#0x14c]        ;1559
0000d4  1c49              ADDS     r1,r1,#1              ;1559
0000d6  4a0e              LDR      r2,|L6.272|
0000d8  f8c2114c          STR      r1,[r2,#0x14c]        ;1559
0000dc  eb030183          ADD      r1,r3,r3,LSL #2       ;1559
0000e0  4a0d              LDR      r2,|L6.280|
0000e2  eb021101          ADD      r1,r2,r1,LSL #4       ;1559
0000e6  4608              MOV      r0,r1                 ;1559
0000e8  490a              LDR      r1,|L6.276|
0000ea  f7fffffe          BL       strcpy
0000ee  f04f0100          MOV      r1,#0                 ;1559
0000f2  4807              LDR      r0,|L6.272|
0000f4  f8d0014c          LDR      r0,[r0,#0x14c]        ;1559
0000f8  eb000080          ADD      r0,r0,r0,LSL #2       ;1559
0000fc  4a06              LDR      r2,|L6.280|
0000fe  eb021000          ADD      r0,r2,r0,LSL #4       ;1559
000102  7001              STRB     r1,[r0,#0]            ;1559
000104  4630              MOV      r0,r6                 ;1559
000106  e7a8              B        |L6.90|
                  |L6.264|
000108  4630              MOV      r0,r6                 ;1559
00010a  e7a6              B        |L6.90|
                  |L6.268|
00010c  2000              MOVS     r0,#0                 ;1560
00010e  e7a4              B        |L6.90|
;;;1562   
                          ENDP

                  |L6.272|
                          DCD      _setup+0xc000
                  |L6.276|
                          DCD      |symbol_number.440|
                  |L6.280|
                          DCD      _setup+0xb1ac

                          AREA ||i.check_m_codes||, CODE, READONLY, ALIGN=2

                  check_m_codes PROC
;;;1582   
;;;1583       static int check_m_codes(                     /* ARGUMENTS                        */
000000  b510              PUSH     {r4,lr}
;;;1584       block_pointer block)                          /* pointer to a block to be checked */
;;;1585       {
000002  4604              MOV      r4,r0
;;;1586           static char name[] SET_TO "check_m_codes";
;;;1587   
;;;1588           CHK((block->m_count > MAX_EMS), NCE_TOO_MANY_M_CODES_ON_LINE);
000004  f8d40184          LDR      r0,[r4,#0x184]
000008  2804              CMP      r0,#4
00000a  dd26              BLE      |L7.90|
00000c  f04f0100          MOV      r1,#0
000010  4813              LDR      r0,|L7.96|
000012  f8c0114c          STR      r1,[r0,#0x14c]
000016  4601              MOV      r1,r0
000018  f8d1314c          LDR      r3,[r1,#0x14c]
00001c  f8d1114c          LDR      r1,[r1,#0x14c]
000020  f1010101          ADD      r1,r1,#1
000024  4602              MOV      r2,r0
000026  f8c2114c          STR      r1,[r2,#0x14c]
00002a  eb030183          ADD      r1,r3,r3,LSL #2
00002e  f6a06254          SUB      r2,r0,#0xe54
000032  eb021101          ADD      r1,r2,r1,LSL #4
000036  4608              MOV      r0,r1
000038  490a              LDR      r1,|L7.100|
00003a  f7fffffe          BL       strcpy
00003e  f04f0100          MOV      r1,#0
000042  4807              LDR      r0,|L7.96|
000044  f8d0014c          LDR      r0,[r0,#0x14c]
000048  eb000080          ADD      r0,r0,r0,LSL #2
00004c  4a06              LDR      r2,|L7.104|
00004e  eb021000          ADD      r0,r2,r0,LSL #4
000052  7001              STRB     r1,[r0,#0]
000054  f04f00a3          MOV      r0,#0xa3
                  |L7.88|
;;;1589           return RS274NGC_OK;
;;;1590       }
000058  bd10              POP      {r4,pc}
                  |L7.90|
00005a  2000              MOVS     r0,#0                 ;1589
00005c  e7fc              B        |L7.88|
;;;1591   
                          ENDP

00005e  0000              DCW      0x0000
                  |L7.96|
                          DCD      _setup+0xc000
                  |L7.100|
                          DCD      |symbol_number.441|
                  |L7.104|
                          DCD      _setup+0xb1ac

                          AREA ||i.check_other_codes||, CODE, READONLY, ALIGN=2

                  check_other_codes PROC
;;;1635   
;;;1636       static int check_other_codes(                 /* ARGUMENTS                               */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1637       block_pointer block)                          /* pointer to a block of RS274/NGC instructions */
;;;1638       {
000004  4607              MOV      r7,r0
;;;1639           static char name[] SET_TO "check_other_codes";
;;;1640           int motion;
;;;1641   
;;;1642           motion SET_TO block->motion_to_be;
000006  f8d70180          LDR      r0,[r7,#0x180]
00000a  4604              MOV      r4,r0
;;;1643   #ifdef AA
;;;1644           if (block->a_flag ISNT OFF)
;;;1645           {
;;;1646               CHK(((block->g_modes[1] > G_80) AND (block->g_modes[1] < G_90)),
;;;1647                   NCE_CANNOT_PUT_AN_A_IN_CANNED_CYCLE);
;;;1648           }
;;;1649   #endif
;;;1650   #ifdef BB
;;;1651           if (block->b_flag ISNT OFF)
;;;1652           {
;;;1653               CHK(((block->g_modes[1] > G_80) AND (block->g_modes[1] < G_90)),
;;;1654                   NCE_CANNOT_PUT_A_B_IN_CANNED_CYCLE);
;;;1655           }
;;;1656   #endif
;;;1657   #ifdef CC
;;;1658           if (block->c_flag ISNT OFF)
;;;1659           {
;;;1660               CHK(((block->g_modes[1] > G_80) AND (block->g_modes[1] < G_90)),
;;;1661                   NCE_CANNOT_PUT_A_C_IN_CANNED_CYCLE);
;;;1662           }
;;;1663   #endif
;;;1664           if (block->d_number ISNT -1)
00000c  f8d70100          LDR      r0,[r7,#0x100]
000010  1c40              ADDS     r0,r0,#1
000012  d033              BEQ      |L8.124|
;;;1665           {
;;;1666               CHK(((block->g_modes[7] ISNT G_41) AND (block->g_modes[7] ISNT G_42)),
000014  f44f7096          MOV      r0,#0x12c
000018  59c0              LDR      r0,[r0,r7]
00001a  f5b07fcd          CMP      r0,#0x19a
00001e  d02d              BEQ      |L8.124|
000020  f44f7096          MOV      r0,#0x12c
000024  59c0              LDR      r0,[r0,r7]
000026  f5b07fd2          CMP      r0,#0x1a4
00002a  d027              BEQ      |L8.124|
00002c  f04f0100          MOV      r1,#0
000030  48eb              LDR      r0,|L8.992|
000032  f8c0114c          STR      r1,[r0,#0x14c]
000036  4601              MOV      r1,r0
000038  f8d1314c          LDR      r3,[r1,#0x14c]
00003c  f8d1114c          LDR      r1,[r1,#0x14c]
000040  f1010101          ADD      r1,r1,#1
000044  4602              MOV      r2,r0
000046  f8c2114c          STR      r1,[r2,#0x14c]
00004a  eb030183          ADD      r1,r3,r3,LSL #2
00004e  f6a06254          SUB      r2,r0,#0xe54
000052  eb021101          ADD      r1,r2,r1,LSL #4
000056  4608              MOV      r0,r1
000058  49e2              LDR      r1,|L8.996|
00005a  f7fffffe          BL       strcpy
00005e  f04f0100          MOV      r1,#0
000062  48df              LDR      r0,|L8.992|
000064  f8d0014c          LDR      r0,[r0,#0x14c]
000068  eb000080          ADD      r0,r0,r0,LSL #2
00006c  4ade              LDR      r2,|L8.1000|
00006e  eb021000          ADD      r0,r2,r0,LSL #4
000072  7001              STRB     r1,[r0,#0]
000074  f04f0047          MOV      r0,#0x47
                  |L8.120|
;;;1667                   NCE_D_WORD_WITH_NO_G41_OR_G42);
;;;1668           }
;;;1669           if (block->h_number ISNT -1)
;;;1670           {
;;;1671               CHK((block->g_modes[8] ISNT G_43), NCE_H_WORD_WITH_NO_G43);
;;;1672           }
;;;1673   
;;;1674           if (block->i_flag IS ON)                  /* could still be useless if yz_plane arc */
;;;1675           {
;;;1676               CHK(((motion ISNT G_2) AND (motion ISNT G_3) AND (motion ISNT G_87)),
;;;1677                   NCE_I_WORD_WITH_NO_G2_OR_G3_OR_G87_TO_USE_IT);
;;;1678           }
;;;1679   
;;;1680           if (block->j_flag IS ON)                  /* could still be useless if xz_plane arc */
;;;1681           {
;;;1682               CHK(((motion ISNT G_2) AND (motion ISNT G_3) AND (motion ISNT G_87)),
;;;1683                   NCE_J_WORD_WITH_NO_G2_OR_G3_OR_G87_TO_USE_IT);
;;;1684           }
;;;1685   
;;;1686           if (block->k_flag IS ON)                  /* could still be useless if xy_plane arc */
;;;1687           {
;;;1688               CHK(((motion ISNT G_2) AND (motion ISNT G_3) AND (motion ISNT G_87)),
;;;1689                   NCE_K_WORD_WITH_NO_G2_OR_G3_OR_G87_TO_USE_IT);
;;;1690           }
;;;1691   
;;;1692           if (block->l_number ISNT -1)
;;;1693           {
;;;1694               CHK((((motion < G_81) OR (motion > G_89)) AND
;;;1695                   (block->g_modes[0] ISNT G_50)),
;;;1696                   NCE_L_WORD_WITH_NO_CANNED_CYCLE_OR_G50);
;;;1697           }
;;;1698   
;;;1699           if (block->p_number ISNT -1.0)
;;;1700           {
;;;1701               CHK(((block->g_modes[0] ISNT G_50) AND
;;;1702                   (block->g_modes[0] ISNT G_4) AND
;;;1703                   (motion ISNT G_82) AND (motion ISNT G_86) AND
;;;1704                   (motion ISNT G_88) AND (motion ISNT G_89)),
;;;1705                   NCE_P_WORD_WITH_NO_G4_G50_G82_G86_G88_G89);
;;;1706           }
;;;1707   
;;;1708           if (block->q_number ISNT -1.0)
;;;1709           {
;;;1710               CHK((motion ISNT G_83), NCE_Q_WORD_WITH_NO_G83);
;;;1711           }
;;;1712   
;;;1713           if (block->r_flag IS ON)
;;;1714           {
;;;1715               CHK((((motion ISNT G_2) AND (motion ISNT G_3)) AND
;;;1716                   ((motion < G_81) OR (motion > G_89))),
;;;1717                   NCE_R_WORD_WITH_NO_G_CODE_THAT_USES_IT);
;;;1718           }
;;;1719   
;;;1720           return RS274NGC_OK;
;;;1721       }
000078  e8bd81f0          POP      {r4-r8,pc}
                  |L8.124|
00007c  f8d70148          LDR      r0,[r7,#0x148]        ;1669
000080  1c40              ADDS     r0,r0,#1              ;1669
000082  d02b              BEQ      |L8.220|
000084  f44f7098          MOV      r0,#0x130             ;1671
000088  59c0              LDR      r0,[r0,r7]            ;1671
00008a  f5b07fd7          CMP      r0,#0x1ae             ;1671
00008e  d025              BEQ      |L8.220|
000090  f04f0100          MOV      r1,#0                 ;1671
000094  48d2              LDR      r0,|L8.992|
000096  f8c0114c          STR      r1,[r0,#0x14c]        ;1671
00009a  4601              MOV      r1,r0                 ;1671
00009c  f8d1314c          LDR      r3,[r1,#0x14c]        ;1671
0000a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;1671
0000a4  f1010101          ADD      r1,r1,#1              ;1671
0000a8  4602              MOV      r2,r0                 ;1671
0000aa  f8c2114c          STR      r1,[r2,#0x14c]        ;1671
0000ae  eb030183          ADD      r1,r3,r3,LSL #2       ;1671
0000b2  4acd              LDR      r2,|L8.1000|
0000b4  eb021101          ADD      r1,r2,r1,LSL #4       ;1671
0000b8  4608              MOV      r0,r1                 ;1671
0000ba  49ca              LDR      r1,|L8.996|
0000bc  f7fffffe          BL       strcpy
0000c0  f04f0100          MOV      r1,#0                 ;1671
0000c4  48c6              LDR      r0,|L8.992|
0000c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;1671
0000ca  eb000080          ADD      r0,r0,r0,LSL #2       ;1671
0000ce  4ac6              LDR      r2,|L8.1000|
0000d0  eb021000          ADD      r0,r2,r0,LSL #4       ;1671
0000d4  7001              STRB     r1,[r0,#0]            ;1671
0000d6  f04f0055          MOV      r0,#0x55              ;1671
0000da  e7cd              B        |L8.120|
                  |L8.220|
0000dc  f8d7014c          LDR      r0,[r7,#0x14c]        ;1674
0000e0  2801              CMP      r0,#1                 ;1674
0000e2  d12d              BNE      |L8.320|
0000e4  2c14              CMP      r4,#0x14              ;1676
0000e6  d02b              BEQ      |L8.320|
0000e8  2c1e              CMP      r4,#0x1e              ;1676
0000ea  d029              BEQ      |L8.320|
0000ec  f5a47040          SUB      r0,r4,#0x300          ;1676
0000f0  3866              SUBS     r0,r0,#0x66           ;1676
0000f2  d025              BEQ      |L8.320|
0000f4  f04f0100          MOV      r1,#0                 ;1676
0000f8  48b9              LDR      r0,|L8.992|
0000fa  f8c0114c          STR      r1,[r0,#0x14c]        ;1676
0000fe  4601              MOV      r1,r0                 ;1676
000100  f8d1314c          LDR      r3,[r1,#0x14c]        ;1676
000104  f8d1114c          LDR      r1,[r1,#0x14c]        ;1676
000108  f1010101          ADD      r1,r1,#1              ;1676
00010c  4602              MOV      r2,r0                 ;1676
00010e  f8c2114c          STR      r1,[r2,#0x14c]        ;1676
000112  eb030183          ADD      r1,r3,r3,LSL #2       ;1676
000116  4ab4              LDR      r2,|L8.1000|
000118  eb021101          ADD      r1,r2,r1,LSL #4       ;1676
00011c  4608              MOV      r0,r1                 ;1676
00011e  49b1              LDR      r1,|L8.996|
000120  f7fffffe          BL       strcpy
000124  f04f0100          MOV      r1,#0                 ;1676
000128  48ad              LDR      r0,|L8.992|
00012a  f8d0014c          LDR      r0,[r0,#0x14c]        ;1676
00012e  eb000080          ADD      r0,r0,r0,LSL #2       ;1676
000132  4aad              LDR      r2,|L8.1000|
000134  eb021000          ADD      r0,r2,r0,LSL #4       ;1676
000138  7001              STRB     r1,[r0,#0]            ;1676
00013a  f04f0058          MOV      r0,#0x58              ;1676
00013e  e79b              B        |L8.120|
                  |L8.320|
000140  f8d70158          LDR      r0,[r7,#0x158]        ;1680
000144  2801              CMP      r0,#1                 ;1680
000146  d12d              BNE      |L8.420|
000148  2c14              CMP      r4,#0x14              ;1682
00014a  d02b              BEQ      |L8.420|
00014c  2c1e              CMP      r4,#0x1e              ;1682
00014e  d029              BEQ      |L8.420|
000150  f5a47040          SUB      r0,r4,#0x300          ;1682
000154  3866              SUBS     r0,r0,#0x66           ;1682
000156  d025              BEQ      |L8.420|
000158  f04f0100          MOV      r1,#0                 ;1682
00015c  48a0              LDR      r0,|L8.992|
00015e  f8c0114c          STR      r1,[r0,#0x14c]        ;1682
000162  4601              MOV      r1,r0                 ;1682
000164  f8d1314c          LDR      r3,[r1,#0x14c]        ;1682
000168  f8d1114c          LDR      r1,[r1,#0x14c]        ;1682
00016c  f1010101          ADD      r1,r1,#1              ;1682
000170  4602              MOV      r2,r0                 ;1682
000172  f8c2114c          STR      r1,[r2,#0x14c]        ;1682
000176  eb030183          ADD      r1,r3,r3,LSL #2       ;1682
00017a  4a9b              LDR      r2,|L8.1000|
00017c  eb021101          ADD      r1,r2,r1,LSL #4       ;1682
000180  4608              MOV      r0,r1                 ;1682
000182  4998              LDR      r1,|L8.996|
000184  f7fffffe          BL       strcpy
000188  f04f0100          MOV      r1,#0                 ;1682
00018c  4894              LDR      r0,|L8.992|
00018e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1682
000192  eb000080          ADD      r0,r0,r0,LSL #2       ;1682
000196  4a94              LDR      r2,|L8.1000|
000198  eb021000          ADD      r0,r2,r0,LSL #4       ;1682
00019c  7001              STRB     r1,[r0,#0]            ;1682
00019e  f04f005b          MOV      r0,#0x5b              ;1682
0001a2  e769              B        |L8.120|
                  |L8.420|
0001a4  f8d70168          LDR      r0,[r7,#0x168]        ;1686
0001a8  2801              CMP      r0,#1                 ;1686
0001aa  d12d              BNE      |L8.520|
0001ac  2c14              CMP      r4,#0x14              ;1688
0001ae  d02b              BEQ      |L8.520|
0001b0  2c1e              CMP      r4,#0x1e              ;1688
0001b2  d029              BEQ      |L8.520|
0001b4  f5a47040          SUB      r0,r4,#0x300          ;1688
0001b8  3866              SUBS     r0,r0,#0x66           ;1688
0001ba  d025              BEQ      |L8.520|
0001bc  f04f0100          MOV      r1,#0                 ;1688
0001c0  4887              LDR      r0,|L8.992|
0001c2  f8c0114c          STR      r1,[r0,#0x14c]        ;1688
0001c6  4601              MOV      r1,r0                 ;1688
0001c8  f8d1314c          LDR      r3,[r1,#0x14c]        ;1688
0001cc  f8d1114c          LDR      r1,[r1,#0x14c]        ;1688
0001d0  f1010101          ADD      r1,r1,#1              ;1688
0001d4  4602              MOV      r2,r0                 ;1688
0001d6  f8c2114c          STR      r1,[r2,#0x14c]        ;1688
0001da  eb030183          ADD      r1,r3,r3,LSL #2       ;1688
0001de  4a82              LDR      r2,|L8.1000|
0001e0  eb021101          ADD      r1,r2,r1,LSL #4       ;1688
0001e4  4608              MOV      r0,r1                 ;1688
0001e6  497f              LDR      r1,|L8.996|
0001e8  f7fffffe          BL       strcpy
0001ec  f04f0100          MOV      r1,#0                 ;1688
0001f0  487b              LDR      r0,|L8.992|
0001f2  f8d0014c          LDR      r0,[r0,#0x14c]        ;1688
0001f6  eb000080          ADD      r0,r0,r0,LSL #2       ;1688
0001fa  4a7b              LDR      r2,|L8.1000|
0001fc  eb021000          ADD      r0,r2,r0,LSL #4       ;1688
000200  7001              STRB     r1,[r0,#0]            ;1688
000202  f04f005e          MOV      r0,#0x5e              ;1688
000206  e737              B        |L8.120|
                  |L8.520|
000208  f8d70178          LDR      r0,[r7,#0x178]        ;1692
00020c  1c40              ADDS     r0,r0,#1              ;1692
00020e  d032              BEQ      |L8.630|
000210  f240302a          MOV      r0,#0x32a             ;1694
000214  4284              CMP      r4,r0                 ;1694
000216  db03              BLT      |L8.544|
000218  f240307a          MOV      r0,#0x37a             ;1694
00021c  4284              CMP      r4,r0                 ;1694
00021e  dd2a              BLE      |L8.630|
                  |L8.544|
000220  f8d70110          LDR      r0,[r7,#0x110]        ;1694
000224  f5b07ffa          CMP      r0,#0x1f4             ;1694
000228  d025              BEQ      |L8.630|
00022a  f04f0100          MOV      r1,#0                 ;1694
00022e  486c              LDR      r0,|L8.992|
000230  f8c0114c          STR      r1,[r0,#0x14c]        ;1694
000234  4601              MOV      r1,r0                 ;1694
000236  f8d1314c          LDR      r3,[r1,#0x14c]        ;1694
00023a  f8d1114c          LDR      r1,[r1,#0x14c]        ;1694
00023e  f1010101          ADD      r1,r1,#1              ;1694
000242  4602              MOV      r2,r0                 ;1694
000244  f8c2114c          STR      r1,[r2,#0x14c]        ;1694
000248  eb030183          ADD      r1,r3,r3,LSL #2       ;1694
00024c  4a66              LDR      r2,|L8.1000|
00024e  eb021101          ADD      r1,r2,r1,LSL #4       ;1694
000252  4608              MOV      r0,r1                 ;1694
000254  4963              LDR      r1,|L8.996|
000256  f7fffffe          BL       strcpy
00025a  f04f0100          MOV      r1,#0                 ;1694
00025e  4860              LDR      r0,|L8.992|
000260  f8d0014c          LDR      r0,[r0,#0x14c]        ;1694
000264  eb000080          ADD      r0,r0,r0,LSL #2       ;1694
000268  4a5f              LDR      r2,|L8.1000|
00026a  eb021000          ADD      r0,r2,r0,LSL #4       ;1694
00026e  7001              STRB     r1,[r0,#0]            ;1694
000270  f04f005f          MOV      r0,#0x5f              ;1694
000274  e700              B        |L8.120|
                  |L8.630|
000276  f8d711b0          LDR      r1,[r7,#0x1b0]        ;1699
00027a  460d              MOV      r5,r1                 ;1699
00027c  f8d701b4          LDR      r0,[r7,#0x1b4]        ;1699
000280  4606              MOV      r6,r0                 ;1699
000282  2200              MOVS     r2,#0                 ;1699
000284  4b59              LDR      r3,|L8.1004|
000286  4628              MOV      r0,r5                 ;1699
000288  4631              MOV      r1,r6                 ;1699
00028a  f7fffffe          BL       __aeabi_cdcmpeq
00028e  d03b              BEQ      |L8.776|
000290  f8d70110          LDR      r0,[r7,#0x110]        ;1701
000294  f5b07ffa          CMP      r0,#0x1f4             ;1701
000298  d036              BEQ      |L8.776|
00029a  f8d70110          LDR      r0,[r7,#0x110]        ;1701
00029e  2828              CMP      r0,#0x28              ;1701
0002a0  d032              BEQ      |L8.776|
0002a2  f5b47f4d          CMP      r4,#0x334             ;1701
0002a6  d02f              BEQ      |L8.776|
0002a8  f5b47f57          CMP      r4,#0x35c             ;1701
0002ac  d02c              BEQ      |L8.776|
0002ae  f5b47f5c          CMP      r4,#0x370             ;1701
0002b2  d029              BEQ      |L8.776|
0002b4  f5a47040          SUB      r0,r4,#0x300          ;1701
0002b8  387a              SUBS     r0,r0,#0x7a           ;1701
0002ba  d025              BEQ      |L8.776|
0002bc  f04f0100          MOV      r1,#0                 ;1701
0002c0  4847              LDR      r0,|L8.992|
0002c2  f8c0114c          STR      r1,[r0,#0x14c]        ;1701
0002c6  4601              MOV      r1,r0                 ;1701
0002c8  f8d1314c          LDR      r3,[r1,#0x14c]        ;1701
0002cc  f8d1114c          LDR      r1,[r1,#0x14c]        ;1701
0002d0  f1010101          ADD      r1,r1,#1              ;1701
0002d4  4602              MOV      r2,r0                 ;1701
0002d6  f8c2114c          STR      r1,[r2,#0x14c]        ;1701
0002da  eb030183          ADD      r1,r3,r3,LSL #2       ;1701
0002de  4a42              LDR      r2,|L8.1000|
0002e0  eb021101          ADD      r1,r2,r1,LSL #4       ;1701
0002e4  4608              MOV      r0,r1                 ;1701
0002e6  493f              LDR      r1,|L8.996|
0002e8  f7fffffe          BL       strcpy
0002ec  f04f0100          MOV      r1,#0                 ;1701
0002f0  483b              LDR      r0,|L8.992|
0002f2  f8d0014c          LDR      r0,[r0,#0x14c]        ;1701
0002f6  eb000080          ADD      r0,r0,r0,LSL #2       ;1701
0002fa  4a3b              LDR      r2,|L8.1000|
0002fc  eb021000          ADD      r0,r2,r0,LSL #4       ;1701
000300  7001              STRB     r1,[r0,#0]            ;1701
000302  f04f008c          MOV      r0,#0x8c              ;1701
000306  e6b7              B        |L8.120|
                  |L8.776|
000308  f50770dc          ADD      r0,r7,#0x1b8          ;1708
00030c  c803              LDM      r0,{r0,r1}            ;1708
00030e  4605              MOV      r5,r0                 ;1708
000310  2200              MOVS     r2,#0                 ;1708
000312  4b36              LDR      r3,|L8.1004|
000314  f7fffffe          BL       __aeabi_cdcmpeq
000318  d029              BEQ      |L8.878|
00031a  f5a47040          SUB      r0,r4,#0x300          ;1710
00031e  383e              SUBS     r0,r0,#0x3e           ;1710
000320  d025              BEQ      |L8.878|
000322  f04f0100          MOV      r1,#0                 ;1710
000326  482e              LDR      r0,|L8.992|
000328  f8c0114c          STR      r1,[r0,#0x14c]        ;1710
00032c  4601              MOV      r1,r0                 ;1710
00032e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1710
000332  f8d1114c          LDR      r1,[r1,#0x14c]        ;1710
000336  f1010101          ADD      r1,r1,#1              ;1710
00033a  4602              MOV      r2,r0                 ;1710
00033c  f8c2114c          STR      r1,[r2,#0x14c]        ;1710
000340  eb030183          ADD      r1,r3,r3,LSL #2       ;1710
000344  4a28              LDR      r2,|L8.1000|
000346  eb021101          ADD      r1,r2,r1,LSL #4       ;1710
00034a  4608              MOV      r0,r1                 ;1710
00034c  4925              LDR      r1,|L8.996|
00034e  f7fffffe          BL       strcpy
000352  f04f0100          MOV      r1,#0                 ;1710
000356  4822              LDR      r0,|L8.992|
000358  f8d0014c          LDR      r0,[r0,#0x14c]        ;1710
00035c  eb000080          ADD      r0,r0,r0,LSL #2       ;1710
000360  4a21              LDR      r2,|L8.1000|
000362  eb021000          ADD      r0,r2,r0,LSL #4       ;1710
000366  7001              STRB     r1,[r0,#0]            ;1710
000368  f04f0090          MOV      r0,#0x90              ;1710
00036c  e684              B        |L8.120|
                  |L8.878|
00036e  f8d701c0          LDR      r0,[r7,#0x1c0]        ;1713
000372  2801              CMP      r0,#1                 ;1713
000374  d131              BNE      |L8.986|
000376  2c14              CMP      r4,#0x14              ;1715
000378  d02f              BEQ      |L8.986|
00037a  2c1e              CMP      r4,#0x1e              ;1715
00037c  d02d              BEQ      |L8.986|
00037e  f240302a          MOV      r0,#0x32a             ;1715
000382  4284              CMP      r4,r0                 ;1715
000384  db03              BLT      |L8.910|
000386  f240307a          MOV      r0,#0x37a             ;1715
00038a  4284              CMP      r4,r0                 ;1715
00038c  dd25              BLE      |L8.986|
                  |L8.910|
00038e  f04f0100          MOV      r1,#0                 ;1715
000392  4813              LDR      r0,|L8.992|
000394  f8c0114c          STR      r1,[r0,#0x14c]        ;1715
000398  4601              MOV      r1,r0                 ;1715
00039a  f8d1314c          LDR      r3,[r1,#0x14c]        ;1715
00039e  f8d1114c          LDR      r1,[r1,#0x14c]        ;1715
0003a2  f1010101          ADD      r1,r1,#1              ;1715
0003a6  4602              MOV      r2,r0                 ;1715
0003a8  f8c2114c          STR      r1,[r2,#0x14c]        ;1715
0003ac  eb030183          ADD      r1,r3,r3,LSL #2       ;1715
0003b0  4a0d              LDR      r2,|L8.1000|
0003b2  eb021101          ADD      r1,r2,r1,LSL #4       ;1715
0003b6  4608              MOV      r0,r1                 ;1715
0003b8  490a              LDR      r1,|L8.996|
0003ba  f7fffffe          BL       strcpy
0003be  f04f0100          MOV      r1,#0                 ;1715
0003c2  4807              LDR      r0,|L8.992|
0003c4  f8d0014c          LDR      r0,[r0,#0x14c]        ;1715
0003c8  eb000080          ADD      r0,r0,r0,LSL #2       ;1715
0003cc  4a06              LDR      r2,|L8.1000|
0003ce  eb021000          ADD      r0,r2,r0,LSL #4       ;1715
0003d2  7001              STRB     r1,[r0,#0]            ;1715
0003d4  f04f0097          MOV      r0,#0x97              ;1715
0003d8  e64e              B        |L8.120|
                  |L8.986|
0003da  2000              MOVS     r0,#0                 ;1720
0003dc  e64c              B        |L8.120|
;;;1722   
                          ENDP

0003de  0000              DCW      0x0000
                  |L8.992|
                          DCD      _setup+0xc000
                  |L8.996|
                          DCD      |symbol_number.442|
                  |L8.1000|
                          DCD      _setup+0xb1ac
                  |L8.1004|
                          DCD      0xbff00000

                          AREA ||i.close_and_downcase||, CODE, READONLY, ALIGN=2

                  close_and_downcase PROC
;;;1764   
;;;1765       static int close_and_downcase(                /* ARGUMENTS                   */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;1766       char * line)                                  /* string: one line of NC code */
;;;1767       {
000004  4605              MOV      r5,r0
;;;1768           static char name[] SET_TO "close_and_downcase";
;;;1769           int m;
;;;1770           int n;
;;;1771           int comment;
;;;1772           char item;
;;;1773           comment SET_TO 0;
000006  f04f0000          MOV      r0,#0
00000a  4680              MOV      r8,r0
;;;1774           for (n SET_TO 0, m SET_TO 0; (item SET_TO line[m]) ISNT (char) NULL; m++)
00000c  4606              MOV      r6,r0
00000e  4607              MOV      r7,r0
000010  e088              B        |L9.292|
                  |L9.18|
;;;1775           {
;;;1776               if (comment)
000012  f1b80f00          CMP      r8,#0
000016  d034              BEQ      |L9.130|
;;;1777               {
;;;1778                   line[n++] SET_TO item;
000018  4630              MOV      r0,r6
00001a  f1060101          ADD      r1,r6,#1
00001e  460e              MOV      r6,r1
000020  542c              STRB     r4,[r5,r0]
;;;1779                   if (item IS ')')
000022  2c29              CMP      r4,#0x29
000024  d103              BNE      |L9.46|
;;;1780                   {
;;;1781                       comment SET_TO 0;
000026  f04f0000          MOV      r0,#0
00002a  4680              MOV      r8,r0
00002c  e077              B        |L9.286|
                  |L9.46|
;;;1782                   }
;;;1783                   else if (item IS '(')
00002e  2c28              CMP      r4,#0x28
000030  d175              BNE      |L9.286|
;;;1784                       ERM(NCE_NESTED_COMMENT_FOUND);
000032  f04f0100          MOV      r1,#0
000036  4853              LDR      r0,|L9.388|
000038  f8c0114c          STR      r1,[r0,#0x14c]
00003c  4601              MOV      r1,r0
00003e  f8d1314c          LDR      r3,[r1,#0x14c]
000042  f8d1114c          LDR      r1,[r1,#0x14c]
000046  f1010101          ADD      r1,r1,#1
00004a  4602              MOV      r2,r0
00004c  f8c2114c          STR      r1,[r2,#0x14c]
000050  eb030183          ADD      r1,r3,r3,LSL #2
000054  f6a06254          SUB      r2,r0,#0xe54
000058  eb021101          ADD      r1,r2,r1,LSL #4
00005c  4608              MOV      r0,r1
00005e  494a              LDR      r1,|L9.392|
000060  f7fffffe          BL       strcpy
000064  f04f0100          MOV      r1,#0
000068  4846              LDR      r0,|L9.388|
00006a  f8d0014c          LDR      r0,[r0,#0x14c]
00006e  eb000080          ADD      r0,r0,r0,LSL #2
000072  4a46              LDR      r2,|L9.396|
000074  eb021000          ADD      r0,r2,r0,LSL #4
000078  7001              STRB     r1,[r0,#0]
00007a  f04f0084          MOV      r0,#0x84
                  |L9.126|
;;;1785               }
;;;1786               else if ((item IS ' ') OR (item IS '\t') OR (item IS '\r'));
;;;1787      /* don't copy blank or tab or CR */
;;;1788               else if (item IS '\n')                /* don't copy newline            */
;;;1789               {                                     /* but check null follows        */
;;;1790                   CHK((line[m+1] ISNT 0), NCE_NULL_MISSING_AFTER_NEWLINE);
;;;1791               }
;;;1792               else if ((64 < item) AND (item < 91)) /* downcase upper case letters */
;;;1793               {
;;;1794                   line[n++] SET_TO (32 + item);
;;;1795               }
;;;1796               else if (item IS '(')                 /* comment is starting */
;;;1797               {
;;;1798                   comment SET_TO 1;
;;;1799                   line[n++] SET_TO item;
;;;1800               }
;;;1801               else
;;;1802               {
;;;1803                   line[n++] SET_TO item;            /* copy anything else */
;;;1804               }
;;;1805           }
;;;1806           CHK((comment), NCE_UNCLOSED_COMMENT_FOUND);
;;;1807           line[n] SET_TO 0;
;;;1808           return RS274NGC_OK;
;;;1809       }
00007e  e8bd81f0          POP      {r4-r8,pc}
                  |L9.130|
000082  2c20              CMP      r4,#0x20              ;1786
000084  d04b              BEQ      |L9.286|
000086  2c09              CMP      r4,#9                 ;1786
000088  d049              BEQ      |L9.286|
00008a  2c0d              CMP      r4,#0xd               ;1786
00008c  d047              BEQ      |L9.286|
00008e  2c0a              CMP      r4,#0xa               ;1788
000090  d128              BNE      |L9.228|
000092  1c78              ADDS     r0,r7,#1              ;1790
000094  5c28              LDRB     r0,[r5,r0]            ;1790
000096  b388              CBZ      r0,|L9.252|
000098  f04f0100          MOV      r1,#0                 ;1790
00009c  4839              LDR      r0,|L9.388|
00009e  f8c0114c          STR      r1,[r0,#0x14c]        ;1790
0000a2  4601              MOV      r1,r0                 ;1790
0000a4  f8d1314c          LDR      r3,[r1,#0x14c]        ;1790
0000a8  f8d1114c          LDR      r1,[r1,#0x14c]        ;1790
0000ac  f1010101          ADD      r1,r1,#1              ;1790
0000b0  4602              MOV      r2,r0                 ;1790
0000b2  f8c2114c          STR      r1,[r2,#0x14c]        ;1790
0000b6  eb030183          ADD      r1,r3,r3,LSL #2       ;1790
0000ba  4a34              LDR      r2,|L9.396|
0000bc  eb021101          ADD      r1,r2,r1,LSL #4       ;1790
0000c0  4608              MOV      r0,r1                 ;1790
0000c2  4931              LDR      r1,|L9.392|
0000c4  f7fffffe          BL       strcpy
0000c8  f04f0100          MOV      r1,#0                 ;1790
0000cc  482d              LDR      r0,|L9.388|
0000ce  f8d0014c          LDR      r0,[r0,#0x14c]        ;1790
0000d2  eb000080          ADD      r0,r0,r0,LSL #2       ;1790
0000d6  4a2d              LDR      r2,|L9.396|
0000d8  eb021000          ADD      r0,r2,r0,LSL #4       ;1790
0000dc  7001              STRB     r1,[r0,#0]            ;1790
0000de  f04f0088          MOV      r0,#0x88              ;1790
0000e2  e7cc              B        |L9.126|
                  |L9.228|
0000e4  2c40              CMP      r4,#0x40              ;1792
0000e6  dd0a              BLE      |L9.254|
0000e8  2c5b              CMP      r4,#0x5b              ;1792
0000ea  da08              BGE      |L9.254|
0000ec  f1040020          ADD      r0,r4,#0x20           ;1794
0000f0  b2c2              UXTB     r2,r0                 ;1794
0000f2  4630              MOV      r0,r6                 ;1794
0000f4  f1060101          ADD      r1,r6,#1              ;1794
0000f8  460e              MOV      r6,r1                 ;1794
0000fa  542a              STRB     r2,[r5,r0]            ;1794
                  |L9.252|
0000fc  e00f              B        |L9.286|
                  |L9.254|
0000fe  2c28              CMP      r4,#0x28              ;1796
000100  d108              BNE      |L9.276|
000102  f04f0001          MOV      r0,#1                 ;1798
000106  4680              MOV      r8,r0                 ;1798
000108  4630              MOV      r0,r6                 ;1799
00010a  f1060101          ADD      r1,r6,#1              ;1799
00010e  460e              MOV      r6,r1                 ;1799
000110  542c              STRB     r4,[r5,r0]            ;1799
000112  e004              B        |L9.286|
                  |L9.276|
000114  4630              MOV      r0,r6                 ;1803
000116  f1060101          ADD      r1,r6,#1              ;1803
00011a  460e              MOV      r6,r1                 ;1803
00011c  542c              STRB     r4,[r5,r0]            ;1803
                  |L9.286|
00011e  f1070001          ADD      r0,r7,#1              ;1774
000122  4607              MOV      r7,r0                 ;1774
                  |L9.292|
000124  5dec              LDRB     r4,[r5,r7]            ;1774
000126  2c00              CMP      r4,#0                 ;1774
000128  f47faf73          BNE      |L9.18|
00012c  f1b80f00          CMP      r8,#0                 ;1806
000130  d023              BEQ      |L9.378|
000132  4621              MOV      r1,r4                 ;1806
000134  4813              LDR      r0,|L9.388|
000136  f8c0114c          STR      r1,[r0,#0x14c]        ;1806
00013a  4601              MOV      r1,r0                 ;1806
00013c  f8d1314c          LDR      r3,[r1,#0x14c]        ;1806
000140  f8d1114c          LDR      r1,[r1,#0x14c]        ;1806
000144  f1010101          ADD      r1,r1,#1              ;1806
000148  4602              MOV      r2,r0                 ;1806
00014a  f8c2114c          STR      r1,[r2,#0x14c]        ;1806
00014e  eb030183          ADD      r1,r3,r3,LSL #2       ;1806
000152  4a0e              LDR      r2,|L9.396|
000154  eb021101          ADD      r1,r2,r1,LSL #4       ;1806
000158  4608              MOV      r0,r1                 ;1806
00015a  490b              LDR      r1,|L9.392|
00015c  f7fffffe          BL       strcpy
000160  4621              MOV      r1,r4                 ;1806
000162  4808              LDR      r0,|L9.388|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;1806
000168  eb000080          ADD      r0,r0,r0,LSL #2       ;1806
00016c  4a07              LDR      r2,|L9.396|
00016e  eb021000          ADD      r0,r2,r0,LSL #4       ;1806
000172  7001              STRB     r1,[r0,#0]            ;1806
000174  f04f00ab          MOV      r0,#0xab              ;1806
000178  e781              B        |L9.126|
                  |L9.378|
00017a  f04f0000          MOV      r0,#0                 ;1807
00017e  55a8              STRB     r0,[r5,r6]            ;1807
000180  bf00              NOP                            ;1808
000182  e77c              B        |L9.126|
;;;1810   
                          ENDP

                  |L9.388|
                          DCD      _setup+0xc000
                  |L9.392|
                          DCD      |symbol_number.443|
                  |L9.396|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_arc||, CODE, READONLY, ALIGN=2

                  convert_arc PROC
;;;1864   
;;;1865       static int convert_arc(                       /* ARGUMENTS                                */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;1866       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)     */
;;;1867       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;1868       setup_pointer settings)                       /* pointer to machine settings              */
;;;1869       {
000004  b093              SUB      sp,sp,#0x4c
000006  4682              MOV      r10,r0
000008  460c              MOV      r4,r1
00000a  4615              MOV      r5,r2
;;;1870           static char name[] SET_TO "convert_arc";
;;;1871           int status;
;;;1872           int first;                                /* flag set ON if this is first move after comp ON */
;;;1873           int ijk_flag;                             /* flag set ON if any of i,j,k present in NC code  */
;;;1874           double end_x;
;;;1875           double end_y;
;;;1876           double end_z;
;;;1877   #ifdef AA
;;;1878           double AA_end;                            /*AA*/
;;;1879   #endif
;;;1880   #ifdef BB
;;;1881           double BB_end;                            /*BB*/
;;;1882   #endif
;;;1883   #ifdef CC
;;;1884           double CC_end;                            /*CC*/
;;;1885   #endif
;;;1886   
;;;1887           ijk_flag SET_TO
00000c  f8d4014c          LDR      r0,[r4,#0x14c]
000010  b928              CBNZ     r0,|L10.30|
;;;1888               ((block->i_flag OR block->j_flag) OR block->k_flag) ? ON : OFF;
000012  f8d40158          LDR      r0,[r4,#0x158]
000016  b910              CBNZ     r0,|L10.30|
000018  f8d40168          LDR      r0,[r4,#0x168]
00001c  b110              CBZ      r0,|L10.36|
                  |L10.30|
00001e  f04f0001          MOV      r0,#1
000022  e001              B        |L10.40|
                  |L10.36|
000024  f04f0000          MOV      r0,#0
                  |L10.40|
000028  4681              MOV      r9,r0
;;;1889           first SET_TO (settings->program_x IS UNKNOWN);
00002a  f5054130          ADD      r1,r5,#0xb000
00002e  f50171bc          ADD      r1,r1,#0x178
000032  c903              LDM      r1,{r0,r1}
000034  4606              MOV      r6,r0
000036  4afb              LDR      r2,|L10.1060|
000038  4bfb              LDR      r3,|L10.1064|
00003a  f7fffffe          BL       __aeabi_cdcmpeq
00003e  d102              BNE      |L10.70|
000040  f04f0001          MOV      r0,#1
000044  e001              B        |L10.74|
                  |L10.70|
000046  f04f0000          MOV      r0,#0
                  |L10.74|
00004a  4683              MOV      r11,r0
;;;1890   
;;;1891           CHK(((block->r_flag ISNT ON) AND (ijk_flag ISNT ON)),
00004c  f8d401c0          LDR      r0,[r4,#0x1c0]
000050  2801              CMP      r0,#1
000052  d02b              BEQ      |L10.172|
000054  f1b90f01          CMP      r9,#1
000058  d028              BEQ      |L10.172|
00005a  f04f0100          MOV      r1,#0
00005e  48f3              LDR      r0,|L10.1068|
000060  f8c0114c          STR      r1,[r0,#0x14c]
000064  4601              MOV      r1,r0
000066  f8d1314c          LDR      r3,[r1,#0x14c]
00006a  f8d1114c          LDR      r1,[r1,#0x14c]
00006e  f1010101          ADD      r1,r1,#1
000072  4602              MOV      r2,r0
000074  f8c2114c          STR      r1,[r2,#0x14c]
000078  eb030183          ADD      r1,r3,r3,LSL #2
00007c  f6a06254          SUB      r2,r0,#0xe54
000080  eb021101          ADD      r1,r2,r1,LSL #4
000084  4608              MOV      r0,r1
000086  49ea              LDR      r1,|L10.1072|
000088  f7fffffe          BL       strcpy
00008c  f04f0100          MOV      r1,#0
000090  48e6              LDR      r0,|L10.1068|
000092  f8d0014c          LDR      r0,[r0,#0x14c]
000096  eb000080          ADD      r0,r0,r0,LSL #2
00009a  4ae6              LDR      r2,|L10.1076|
00009c  eb021000          ADD      r0,r2,r0,LSL #4
0000a0  7001              STRB     r1,[r0,#0]
0000a2  f04f0093          MOV      r0,#0x93
                  |L10.166|
;;;1892               NCE_R_I_J_K_WORDS_ALL_MISSING_FOR_ARC);
;;;1893           CHK(((block->r_flag IS ON) AND (ijk_flag IS ON)),
;;;1894               NCE_MIXED_RADIUS_IJK_FORMAT_FOR_ARC);
;;;1895           if (settings->feed_mode IS UNITS_PER_MINUTE)
;;;1896           {
;;;1897               CHK((settings->feed_rate IS 0.0),
;;;1898                   NCE_CANNOT_MAKE_ARC_WITH_ZERO_FEED_RATE);
;;;1899           }
;;;1900           else if (settings->feed_mode IS INVERSE_TIME)
;;;1901           {
;;;1902               CHK((block->f_number IS -1.0),
;;;1903                   NCE_F_WORD_MISSING_WITH_INVERSE_TIME_ARC_MOVE);
;;;1904           }
;;;1905           if (ijk_flag)
;;;1906           {
;;;1907               if (settings->plane IS CANON_PLANE_XY)
;;;1908               {
;;;1909                   CHK((block->k_flag), NCE_K_WORD_GIVEN_FOR_ARC_IN_XY_PLANE);
;;;1910                   if (block->i_flag IS OFF)         /* i or j flag on to get here */
;;;1911                       block->i_number SET_TO 0.0;
;;;1912                   else if (block->j_flag IS OFF)
;;;1913                       block->j_number SET_TO 0.0;
;;;1914               }
;;;1915               else if (settings->plane IS CANON_PLANE_YZ)
;;;1916               {
;;;1917                   CHK((block->i_flag), NCE_I_WORD_GIVEN_FOR_ARC_IN_YZ_PLANE);
;;;1918                   if (block->j_flag IS OFF)         /* j or k flag on to get here */
;;;1919                       block->j_number SET_TO 0.0;
;;;1920                   else if (block->k_flag IS OFF)
;;;1921                       block->k_number SET_TO 0.0;
;;;1922               }
;;;1923               else if (settings->plane IS CANON_PLANE_XZ)
;;;1924               {
;;;1925                   CHK((block->j_flag), NCE_J_WORD_GIVEN_FOR_ARC_IN_XZ_PLANE);
;;;1926                   if (block->i_flag IS OFF)         /* i or k flag on to get here */
;;;1927                       block->i_number SET_TO 0.0;
;;;1928                   else if (block->k_flag IS OFF)
;;;1929                       block->k_number SET_TO 0.0;
;;;1930               }
;;;1931               else
;;;1932                   ERM(NCE_BUG_PLANE_NOT_XY_YZ_OR_XZ);
;;;1933           }
;;;1934           else;                                     /* r format arc; no other checks needed specific to this format */
;;;1935   
;;;1936           if (settings->plane IS CANON_PLANE_XY)    /* checks for both formats */
;;;1937            {
;;;1938               CHK(((block->x_flag IS OFF) AND (block->y_flag IS OFF)),
;;;1939                   NCE_X_AND_Y_WORDS_MISSING_FOR_ARC_IN_XY_PLANE);
;;;1940           }
;;;1941           else if (settings->plane IS CANON_PLANE_YZ)
;;;1942           {
;;;1943               CHK(((block->y_flag IS OFF) AND (block->z_flag IS OFF)),
;;;1944                   NCE_Y_AND_Z_WORDS_MISSING_FOR_ARC_IN_YZ_PLANE);
;;;1945           }
;;;1946           else if (settings->plane IS CANON_PLANE_XZ)
;;;1947           {
;;;1948               CHK(((block->x_flag IS OFF) AND (block->z_flag IS OFF)),
;;;1949                   NCE_X_AND_Z_WORDS_MISSING_FOR_ARC_IN_XZ_PLANE);
;;;1950           }
;;;1951   
;;;1952           find_ends(block, settings, &end_x, &end_y,
;;;1953               &end_z
;;;1954       #ifdef AA
;;;1955               , &AA_end
;;;1956       #endif
;;;1957   
;;;1958       #ifdef BB
;;;1959               , &BB_end
;;;1960       #endif
;;;1961   
;;;1962       #ifdef CC
;;;1963               , &CC_end
;;;1964       #endif
;;;1965               );
;;;1966           settings->motion_mode SET_TO move;
;;;1967   
;;;1968           if (settings->plane IS CANON_PLANE_XY)
;;;1969           {
;;;1970               if ((settings->cutter_comp_side IS OFF) OR
;;;1971                   (settings->cutter_comp_radius IS 0.0))
;;;1972               {
;;;1973                   status SET_TO
;;;1974                       convert_arc2(move, block, settings,
;;;1975                       &(settings->current_x), &(settings->current_y),
;;;1976                       &(settings->current_z), end_x, end_y,
;;;1977                       end_z
;;;1978       #ifdef AA
;;;1979                       , AA_end
;;;1980       #endif
;;;1981   
;;;1982       #ifdef BB
;;;1983                       , BB_end
;;;1984       #endif
;;;1985   
;;;1986       #ifdef CC
;;;1987                       , CC_end
;;;1988       #endif
;;;1989                       , block->i_number,
;;;1990                       block->j_number);
;;;1991                   CHP(status);
;;;1992               }
;;;1993               else if (first)
;;;1994               {
;;;1995                   status SET_TO
;;;1996                       convert_arc_comp1(move, block, settings, end_x, end_y,
;;;1997                       end_z
;;;1998       #ifdef AA
;;;1999                       , AA_end
;;;2000       #endif
;;;2001   
;;;2002       #ifdef BB
;;;2003                       , BB_end
;;;2004       #endif
;;;2005   
;;;2006       #ifdef CC
;;;2007                       , CC_end
;;;2008       #endif
;;;2009                       );
;;;2010                   CHP(status);
;;;2011               }
;;;2012               else
;;;2013               {
;;;2014                   status SET_TO
;;;2015                       convert_arc_comp2(move, block, settings, end_x, end_y,
;;;2016                       end_z
;;;2017       #ifdef AA
;;;2018                       , AA_end
;;;2019       #endif
;;;2020   
;;;2021       #ifdef BB
;;;2022                       , BB_end
;;;2023       #endif
;;;2024   
;;;2025       #ifdef CC
;;;2026                       , CC_end
;;;2027       #endif
;;;2028                       );
;;;2029   
;;;2030                   CHP(status);
;;;2031               }
;;;2032           }
;;;2033           else if (settings->plane IS CANON_PLANE_XZ)
;;;2034           {
;;;2035               status SET_TO
;;;2036                   convert_arc2 (move, block, settings,
;;;2037                   &(settings->current_z), &(settings->current_x),
;;;2038                   &(settings->current_y), end_z, end_x,
;;;2039                   end_y
;;;2040       #ifdef AA
;;;2041                   , AA_end
;;;2042       #endif
;;;2043   
;;;2044       #ifdef BB
;;;2045                   , BB_end
;;;2046       #endif
;;;2047   
;;;2048       #ifdef CC
;;;2049                   , CC_end
;;;2050       #endif
;;;2051                   , block->k_number,
;;;2052                   block->i_number);
;;;2053               CHP(status);
;;;2054           }
;;;2055           else if (settings->plane IS CANON_PLANE_YZ)
;;;2056           {
;;;2057               status SET_TO
;;;2058                   convert_arc2 (move, block, settings,
;;;2059                   &(settings->current_y), &(settings->current_z),
;;;2060                   &(settings->current_x), end_y, end_z,
;;;2061                   end_x
;;;2062       #ifdef AA
;;;2063                   , AA_end
;;;2064       #endif
;;;2065   
;;;2066       #ifdef BB
;;;2067                   , BB_end
;;;2068       #endif
;;;2069   
;;;2070       #ifdef CC
;;;2071                   , CC_end
;;;2072       #endif
;;;2073                   , block->j_number,
;;;2074                   block->k_number);
;;;2075               CHP(status);
;;;2076           }
;;;2077           else
;;;2078               ERM(NCE_BUG_PLANE_NOT_XY_YZ_OR_XZ);
;;;2079           return RS274NGC_OK;
;;;2080       }
0000a6  b013              ADD      sp,sp,#0x4c
0000a8  e8bd8ff0          POP      {r4-r11,pc}
                  |L10.172|
0000ac  f8d401c0          LDR      r0,[r4,#0x1c0]        ;1893
0000b0  2801              CMP      r0,#1                 ;1893
0000b2  d128              BNE      |L10.262|
0000b4  f1b90f01          CMP      r9,#1                 ;1893
0000b8  d125              BNE      |L10.262|
0000ba  f04f0100          MOV      r1,#0                 ;1893
0000be  48db              LDR      r0,|L10.1068|
0000c0  f8c0114c          STR      r1,[r0,#0x14c]        ;1893
0000c4  4601              MOV      r1,r0                 ;1893
0000c6  f8d1314c          LDR      r3,[r1,#0x14c]        ;1893
0000ca  f8d1114c          LDR      r1,[r1,#0x14c]        ;1893
0000ce  f1010101          ADD      r1,r1,#1              ;1893
0000d2  4602              MOV      r2,r0                 ;1893
0000d4  f8c2114c          STR      r1,[r2,#0x14c]        ;1893
0000d8  eb030183          ADD      r1,r3,r3,LSL #2       ;1893
0000dc  4ad5              LDR      r2,|L10.1076|
0000de  eb021101          ADD      r1,r2,r1,LSL #4       ;1893
0000e2  4608              MOV      r0,r1                 ;1893
0000e4  49d2              LDR      r1,|L10.1072|
0000e6  f7fffffe          BL       strcpy
0000ea  f04f0100          MOV      r1,#0                 ;1893
0000ee  48cf              LDR      r0,|L10.1068|
0000f0  f8d0014c          LDR      r0,[r0,#0x14c]        ;1893
0000f4  eb000080          ADD      r0,r0,r0,LSL #2       ;1893
0000f8  4ace              LDR      r2,|L10.1076|
0000fa  eb021000          ADD      r0,r2,r0,LSL #4       ;1893
0000fe  7001              STRB     r1,[r0,#0]            ;1893
000100  f04f0065          MOV      r0,#0x65              ;1893
000104  e7cf              B        |L10.166|
                  |L10.262|
000106  f8d503fc          LDR      r0,[r5,#0x3fc]        ;1895
00010a  bb90              CBNZ     r0,|L10.370|
00010c  f8d51408          LDR      r1,[r5,#0x408]        ;1897
000110  460e              MOV      r6,r1                 ;1897
000112  f8d5040c          LDR      r0,[r5,#0x40c]        ;1897
000116  4607              MOV      r7,r0                 ;1897
000118  2200              MOVS     r2,#0                 ;1897
00011a  4613              MOV      r3,r2                 ;1897
00011c  4630              MOV      r0,r6                 ;1897
00011e  4639              MOV      r1,r7                 ;1897
000120  f7fffffe          BL       __aeabi_cdcmpeq
000124  d15d              BNE      |L10.482|
000126  f04f0100          MOV      r1,#0                 ;1897
00012a  48c0              LDR      r0,|L10.1068|
00012c  f8c0114c          STR      r1,[r0,#0x14c]        ;1897
000130  4601              MOV      r1,r0                 ;1897
000132  f8d1314c          LDR      r3,[r1,#0x14c]        ;1897
000136  f8d1114c          LDR      r1,[r1,#0x14c]        ;1897
00013a  f1010101          ADD      r1,r1,#1              ;1897
00013e  4602              MOV      r2,r0                 ;1897
000140  f8c2114c          STR      r1,[r2,#0x14c]        ;1897
000144  eb030183          ADD      r1,r3,r3,LSL #2       ;1897
000148  4aba              LDR      r2,|L10.1076|
00014a  eb021101          ADD      r1,r2,r1,LSL #4       ;1897
00014e  4608              MOV      r0,r1                 ;1897
000150  49b7              LDR      r1,|L10.1072|
000152  f7fffffe          BL       strcpy
000156  f04f0100          MOV      r1,#0                 ;1897
00015a  48b4              LDR      r0,|L10.1068|
00015c  f8d0014c          LDR      r0,[r0,#0x14c]        ;1897
000160  eb000080          ADD      r0,r0,r0,LSL #2       ;1897
000164  4ab3              LDR      r2,|L10.1076|
000166  eb021000          ADD      r0,r2,r0,LSL #4       ;1897
00016a  7001              STRB     r1,[r0,#0]            ;1897
00016c  f04f002b          MOV      r0,#0x2b              ;1897
000170  e799              B        |L10.166|
                  |L10.370|
000172  e7ff              B        |L10.372|
                  |L10.372|
000174  f8d503fc          LDR      r0,[r5,#0x3fc]        ;1900
000178  2801              CMP      r0,#1                 ;1900
00017a  d132              BNE      |L10.482|
00017c  f8d41108          LDR      r1,[r4,#0x108]        ;1902
000180  460e              MOV      r6,r1                 ;1902
000182  f8d4010c          LDR      r0,[r4,#0x10c]        ;1902
000186  4607              MOV      r7,r0                 ;1902
000188  2200              MOVS     r2,#0                 ;1902
00018a  4bab              LDR      r3,|L10.1080|
00018c  4630              MOV      r0,r6                 ;1902
00018e  4639              MOV      r1,r7                 ;1902
000190  f7fffffe          BL       __aeabi_cdcmpeq
000194  d125              BNE      |L10.482|
000196  f04f0100          MOV      r1,#0                 ;1902
00019a  48a4              LDR      r0,|L10.1068|
00019c  f8c0114c          STR      r1,[r0,#0x14c]        ;1902
0001a0  4601              MOV      r1,r0                 ;1902
0001a2  f8d1314c          LDR      r3,[r1,#0x14c]        ;1902
0001a6  f8d1114c          LDR      r1,[r1,#0x14c]        ;1902
0001aa  f1010101          ADD      r1,r1,#1              ;1902
0001ae  4602              MOV      r2,r0                 ;1902
0001b0  f8c2114c          STR      r1,[r2,#0x14c]        ;1902
0001b4  eb030183          ADD      r1,r3,r3,LSL #2       ;1902
0001b8  4a9e              LDR      r2,|L10.1076|
0001ba  eb021101          ADD      r1,r2,r1,LSL #4       ;1902
0001be  4608              MOV      r0,r1                 ;1902
0001c0  499b              LDR      r1,|L10.1072|
0001c2  f7fffffe          BL       strcpy
0001c6  f04f0100          MOV      r1,#0                 ;1902
0001ca  4898              LDR      r0,|L10.1068|
0001cc  f8d0014c          LDR      r0,[r0,#0x14c]        ;1902
0001d0  eb000080          ADD      r0,r0,r0,LSL #2       ;1902
0001d4  4a97              LDR      r2,|L10.1076|
0001d6  eb021000          ADD      r0,r2,r0,LSL #4       ;1902
0001da  7001              STRB     r1,[r0,#0]            ;1902
0001dc  f04f004e          MOV      r0,#0x4e              ;1902
0001e0  e761              B        |L10.166|
                  |L10.482|
0001e2  f1b90f00          CMP      r9,#0                 ;1905
0001e6  d036              BEQ      |L10.598|
0001e8  f24b106c          MOV      r0,#0xb16c            ;1907
0001ec  5940              LDR      r0,[r0,r5]            ;1907
0001ee  2801              CMP      r0,#1                 ;1907
0001f0  d13b              BNE      |L10.618|
0001f2  f8d40168          LDR      r0,[r4,#0x168]        ;1909
0001f6  b328              CBZ      r0,|L10.580|
0001f8  f04f0100          MOV      r1,#0                 ;1909
0001fc  488b              LDR      r0,|L10.1068|
0001fe  f8c0114c          STR      r1,[r0,#0x14c]        ;1909
000202  4601              MOV      r1,r0                 ;1909
000204  f8d1314c          LDR      r3,[r1,#0x14c]        ;1909
000208  f8d1114c          LDR      r1,[r1,#0x14c]        ;1909
00020c  f1010101          ADD      r1,r1,#1              ;1909
000210  4602              MOV      r2,r0                 ;1909
000212  f8c2114c          STR      r1,[r2,#0x14c]        ;1909
000216  eb030183          ADD      r1,r3,r3,LSL #2       ;1909
00021a  4a86              LDR      r2,|L10.1076|
00021c  eb021101          ADD      r1,r2,r1,LSL #4       ;1909
000220  4608              MOV      r0,r1                 ;1909
000222  4983              LDR      r1,|L10.1072|
000224  f7fffffe          BL       strcpy
000228  f04f0100          MOV      r1,#0                 ;1909
00022c  487f              LDR      r0,|L10.1068|
00022e  f8d0014c          LDR      r0,[r0,#0x14c]        ;1909
000232  eb000080          ADD      r0,r0,r0,LSL #2       ;1909
000236  4a7f              LDR      r2,|L10.1076|
000238  eb021000          ADD      r0,r2,r0,LSL #4       ;1909
00023c  7001              STRB     r1,[r0,#0]            ;1909
00023e  f04f005c          MOV      r0,#0x5c              ;1909
000242  e730              B        |L10.166|
                  |L10.580|
000244  f8d4014c          LDR      r0,[r4,#0x14c]        ;1910
000248  b930              CBNZ     r0,|L10.600|
00024a  f04f0100          MOV      r1,#0                 ;1911
00024e  f8c41150          STR      r1,[r4,#0x150]        ;1911
000252  f8c41154          STR      r1,[r4,#0x154]        ;1911
                  |L10.598|
000256  e0b2              B        |L10.958|
                  |L10.600|
000258  f8d40158          LDR      r0,[r4,#0x158]        ;1912
00025c  2800              CMP      r0,#0                 ;1912
00025e  d1fa              BNE      |L10.598|
000260  f8c40160          STR      r0,[r4,#0x160]        ;1913
000264  f8c40164          STR      r0,[r4,#0x164]        ;1913
000268  e0a9              B        |L10.958|
                  |L10.618|
00026a  f24b106c          MOV      r0,#0xb16c            ;1915
00026e  5940              LDR      r0,[r0,r5]            ;1915
000270  2802              CMP      r0,#2                 ;1915
000272  d13c              BNE      |L10.750|
000274  f8d4014c          LDR      r0,[r4,#0x14c]        ;1917
000278  b328              CBZ      r0,|L10.710|
00027a  f04f0100          MOV      r1,#0                 ;1917
00027e  486b              LDR      r0,|L10.1068|
000280  f8c0114c          STR      r1,[r0,#0x14c]        ;1917
000284  4601              MOV      r1,r0                 ;1917
000286  f8d1314c          LDR      r3,[r1,#0x14c]        ;1917
00028a  f8d1114c          LDR      r1,[r1,#0x14c]        ;1917
00028e  f1010101          ADD      r1,r1,#1              ;1917
000292  4602              MOV      r2,r0                 ;1917
000294  f8c2114c          STR      r1,[r2,#0x14c]        ;1917
000298  eb030183          ADD      r1,r3,r3,LSL #2       ;1917
00029c  4a65              LDR      r2,|L10.1076|
00029e  eb021101          ADD      r1,r2,r1,LSL #4       ;1917
0002a2  4608              MOV      r0,r1                 ;1917
0002a4  4962              LDR      r1,|L10.1072|
0002a6  f7fffffe          BL       strcpy
0002aa  f04f0100          MOV      r1,#0                 ;1917
0002ae  485f              LDR      r0,|L10.1068|
0002b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;1917
0002b4  eb000080          ADD      r0,r0,r0,LSL #2       ;1917
0002b8  4a5e              LDR      r2,|L10.1076|
0002ba  eb021000          ADD      r0,r2,r0,LSL #4       ;1917
0002be  7001              STRB     r1,[r0,#0]            ;1917
0002c0  f04f0056          MOV      r0,#0x56              ;1917
0002c4  e6ef              B        |L10.166|
                  |L10.710|
0002c6  f8d40158          LDR      r0,[r4,#0x158]        ;1918
0002ca  b930              CBNZ     r0,|L10.730|
0002cc  f04f0000          MOV      r0,#0                 ;1919
0002d0  f8c40160          STR      r0,[r4,#0x160]        ;1919
0002d4  f8c40164          STR      r0,[r4,#0x164]        ;1919
0002d8  e071              B        |L10.958|
                  |L10.730|
0002da  f8d40168          LDR      r0,[r4,#0x168]        ;1920
0002de  2800              CMP      r0,#0                 ;1920
0002e0  d16d              BNE      |L10.958|
0002e2  4601              MOV      r1,r0                 ;1921
0002e4  f8c41170          STR      r1,[r4,#0x170]        ;1921
0002e8  f8c41174          STR      r1,[r4,#0x174]        ;1921
0002ec  e067              B        |L10.958|
                  |L10.750|
0002ee  f24b106c          MOV      r0,#0xb16c            ;1923
0002f2  5940              LDR      r0,[r0,r5]            ;1923
0002f4  2803              CMP      r0,#3                 ;1923
0002f6  d13c              BNE      |L10.882|
0002f8  f8d40158          LDR      r0,[r4,#0x158]        ;1925
0002fc  b328              CBZ      r0,|L10.842|
0002fe  f04f0100          MOV      r1,#0                 ;1925
000302  484a              LDR      r0,|L10.1068|
000304  f8c0114c          STR      r1,[r0,#0x14c]        ;1925
000308  4601              MOV      r1,r0                 ;1925
00030a  f8d1314c          LDR      r3,[r1,#0x14c]        ;1925
00030e  f8d1114c          LDR      r1,[r1,#0x14c]        ;1925
000312  f1010101          ADD      r1,r1,#1              ;1925
000316  4602              MOV      r2,r0                 ;1925
000318  f8c2114c          STR      r1,[r2,#0x14c]        ;1925
00031c  eb030183          ADD      r1,r3,r3,LSL #2       ;1925
000320  4a44              LDR      r2,|L10.1076|
000322  eb021101          ADD      r1,r2,r1,LSL #4       ;1925
000326  4608              MOV      r0,r1                 ;1925
000328  4941              LDR      r1,|L10.1072|
00032a  f7fffffe          BL       strcpy
00032e  f04f0100          MOV      r1,#0                 ;1925
000332  483e              LDR      r0,|L10.1068|
000334  f8d0014c          LDR      r0,[r0,#0x14c]        ;1925
000338  eb000080          ADD      r0,r0,r0,LSL #2       ;1925
00033c  4a3d              LDR      r2,|L10.1076|
00033e  eb021000          ADD      r0,r2,r0,LSL #4       ;1925
000342  7001              STRB     r1,[r0,#0]            ;1925
000344  f04f0059          MOV      r0,#0x59              ;1925
000348  e6ad              B        |L10.166|
                  |L10.842|
00034a  f8d4014c          LDR      r0,[r4,#0x14c]        ;1926
00034e  b930              CBNZ     r0,|L10.862|
000350  f04f0100          MOV      r1,#0                 ;1927
000354  f8c41150          STR      r1,[r4,#0x150]        ;1927
000358  f8c41154          STR      r1,[r4,#0x154]        ;1927
00035c  e02f              B        |L10.958|
                  |L10.862|
00035e  f8d40168          LDR      r0,[r4,#0x168]        ;1928
000362  bb60              CBNZ     r0,|L10.958|
000364  f04f0100          MOV      r1,#0                 ;1929
000368  f8c41170          STR      r1,[r4,#0x170]        ;1929
00036c  f8c41174          STR      r1,[r4,#0x174]        ;1929
000370  e025              B        |L10.958|
                  |L10.882|
000372  f04f0100          MOV      r1,#0                 ;1932
000376  482d              LDR      r0,|L10.1068|
000378  f8c0114c          STR      r1,[r0,#0x14c]        ;1932
00037c  4601              MOV      r1,r0                 ;1932
00037e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1932
000382  f8d1114c          LDR      r1,[r1,#0x14c]        ;1932
000386  f1010101          ADD      r1,r1,#1              ;1932
00038a  4602              MOV      r2,r0                 ;1932
00038c  f8c2114c          STR      r1,[r2,#0x14c]        ;1932
000390  eb030183          ADD      r1,r3,r3,LSL #2       ;1932
000394  4a27              LDR      r2,|L10.1076|
000396  eb021101          ADD      r1,r2,r1,LSL #4       ;1932
00039a  4608              MOV      r0,r1                 ;1932
00039c  4924              LDR      r1,|L10.1072|
00039e  f7fffffe          BL       strcpy
0003a2  f04f0100          MOV      r1,#0                 ;1932
0003a6  4821              LDR      r0,|L10.1068|
0003a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;1932
0003ac  eb000080          ADD      r0,r0,r0,LSL #2       ;1932
0003b0  4a20              LDR      r2,|L10.1076|
0003b2  eb021000          ADD      r0,r2,r0,LSL #4       ;1932
0003b6  7001              STRB     r1,[r0,#0]            ;1932
0003b8  f04f0022          MOV      r0,#0x22              ;1932
0003bc  e673              B        |L10.166|
                  |L10.958|
0003be  f24b106c          MOV      r0,#0xb16c            ;1936
0003c2  5940              LDR      r0,[r0,r5]            ;1936
0003c4  2801              CMP      r0,#1                 ;1936
0003c6  d139              BNE      |L10.1084|
0003c8  f8d401dc          LDR      r0,[r4,#0x1dc]        ;1938
0003cc  2800              CMP      r0,#0                 ;1938
0003ce  d17b              BNE      |L10.1224|
0003d0  f8d401e8          LDR      r0,[r4,#0x1e8]        ;1938
0003d4  2800              CMP      r0,#0                 ;1938
0003d6  d177              BNE      |L10.1224|
0003d8  4601              MOV      r1,r0                 ;1938
0003da  4814              LDR      r0,|L10.1068|
0003dc  f8c0114c          STR      r1,[r0,#0x14c]        ;1938
0003e0  4601              MOV      r1,r0                 ;1938
0003e2  f8d1314c          LDR      r3,[r1,#0x14c]        ;1938
0003e6  f8d1114c          LDR      r1,[r1,#0x14c]        ;1938
0003ea  f1010101          ADD      r1,r1,#1              ;1938
0003ee  4602              MOV      r2,r0                 ;1938
0003f0  f8c2114c          STR      r1,[r2,#0x14c]        ;1938
0003f4  eb030183          ADD      r1,r3,r3,LSL #2       ;1938
0003f8  4a0e              LDR      r2,|L10.1076|
0003fa  eb021101          ADD      r1,r2,r1,LSL #4       ;1938
0003fe  4608              MOV      r0,r1                 ;1938
000400  490b              LDR      r1,|L10.1072|
000402  f7fffffe          BL       strcpy
000406  f04f0100          MOV      r1,#0                 ;1938
00040a  4808              LDR      r0,|L10.1068|
00040c  f8d0014c          LDR      r0,[r0,#0x14c]        ;1938
000410  eb000080          ADD      r0,r0,r0,LSL #2       ;1938
000414  4a07              LDR      r2,|L10.1076|
000416  eb021000          ADD      r0,r2,r0,LSL #4       ;1938
00041a  7001              STRB     r1,[r0,#0]            ;1938
00041c  f04f00bd          MOV      r0,#0xbd              ;1938
000420  e641              B        |L10.166|
000422  0000              DCW      0x0000
                  |L10.1060|
                          DCD      0x0c924223
                  |L10.1064|
                          DCD      0x3bc79ca1
                  |L10.1068|
                          DCD      _setup+0xc000
                  |L10.1072|
                          DCD      |symbol_number.444|
                  |L10.1076|
                          DCD      _setup+0xb1ac
                  |L10.1080|
                          DCD      0xbff00000
                  |L10.1084|
00043c  f24b106c          MOV      r0,#0xb16c            ;1941
000440  5940              LDR      r0,[r0,r5]            ;1941
000442  2802              CMP      r0,#2                 ;1941
000444  d12c              BNE      |L10.1184|
000446  f8d401e8          LDR      r0,[r4,#0x1e8]        ;1943
00044a  bbe8              CBNZ     r0,|L10.1224|
00044c  f8d401f8          LDR      r0,[r4,#0x1f8]        ;1943
000450  bbd0              CBNZ     r0,|L10.1224|
000452  f04f0100          MOV      r1,#0                 ;1943
000456  48ff              LDR      r0,|L10.2132|
000458  f8c0114c          STR      r1,[r0,#0x14c]        ;1943
00045c  4601              MOV      r1,r0                 ;1943
00045e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1943
000462  f8d1114c          LDR      r1,[r1,#0x14c]        ;1943
000466  f1010101          ADD      r1,r1,#1              ;1943
00046a  4602              MOV      r2,r0                 ;1943
00046c  f8c2114c          STR      r1,[r2,#0x14c]        ;1943
000470  eb030183          ADD      r1,r3,r3,LSL #2       ;1943
000474  f6a06254          SUB      r2,r0,#0xe54          ;1943
000478  eb021101          ADD      r1,r2,r1,LSL #4       ;1943
00047c  4608              MOV      r0,r1                 ;1943
00047e  49f6              LDR      r1,|L10.2136|
000480  f7fffffe          BL       strcpy
000484  f04f0100          MOV      r1,#0                 ;1943
000488  48f2              LDR      r0,|L10.2132|
00048a  f8d0014c          LDR      r0,[r0,#0x14c]        ;1943
00048e  eb000080          ADD      r0,r0,r0,LSL #2       ;1943
000492  4af2              LDR      r2,|L10.2140|
000494  eb021000          ADD      r0,r2,r0,LSL #4       ;1943
000498  7001              STRB     r1,[r0,#0]            ;1943
00049a  f04f00c1          MOV      r0,#0xc1              ;1943
00049e  e602              B        |L10.166|
                  |L10.1184|
0004a0  f24b106c          MOV      r0,#0xb16c            ;1946
0004a4  5940              LDR      r0,[r0,r5]            ;1946
0004a6  2803              CMP      r0,#3                 ;1946
0004a8  d12d              BNE      |L10.1286|
0004aa  f8d401dc          LDR      r0,[r4,#0x1dc]        ;1948
0004ae  b958              CBNZ     r0,|L10.1224|
0004b0  f8d401f8          LDR      r0,[r4,#0x1f8]        ;1948
0004b4  b940              CBNZ     r0,|L10.1224|
0004b6  f04f0100          MOV      r1,#0                 ;1948
0004ba  48e6              LDR      r0,|L10.2132|
0004bc  f8c0114c          STR      r1,[r0,#0x14c]        ;1948
0004c0  4601              MOV      r1,r0                 ;1948
0004c2  f8d1314c          LDR      r3,[r1,#0x14c]        ;1948
0004c6  e000              B        |L10.1226|
                  |L10.1224|
0004c8  e01d              B        |L10.1286|
                  |L10.1226|
0004ca  f8d1114c          LDR      r1,[r1,#0x14c]        ;1948
0004ce  f1010101          ADD      r1,r1,#1              ;1948
0004d2  4602              MOV      r2,r0                 ;1948
0004d4  f8c2114c          STR      r1,[r2,#0x14c]        ;1948
0004d8  eb030183          ADD      r1,r3,r3,LSL #2       ;1948
0004dc  4adf              LDR      r2,|L10.2140|
0004de  eb021101          ADD      r1,r2,r1,LSL #4       ;1948
0004e2  4608              MOV      r0,r1                 ;1948
0004e4  49dc              LDR      r1,|L10.2136|
0004e6  f7fffffe          BL       strcpy
0004ea  f04f0100          MOV      r1,#0                 ;1948
0004ee  48d9              LDR      r0,|L10.2132|
0004f0  f8d0014c          LDR      r0,[r0,#0x14c]        ;1948
0004f4  eb000080          ADD      r0,r0,r0,LSL #2       ;1948
0004f8  4ad8              LDR      r2,|L10.2140|
0004fa  eb021000          ADD      r0,r2,r0,LSL #4       ;1948
0004fe  7001              STRB     r1,[r0,#0]            ;1948
000500  f04f00be          MOV      r0,#0xbe              ;1948
000504  e5cf              B        |L10.166|
                  |L10.1286|
000506  a80c              ADD      r0,sp,#0x30           ;1952
000508  ab0e              ADD      r3,sp,#0x38           ;1952
00050a  aa10              ADD      r2,sp,#0x40           ;1952
00050c  4629              MOV      r1,r5                 ;1952
00050e  9000              STR      r0,[sp,#0]            ;1952
000510  4620              MOV      r0,r4                 ;1952
000512  f7fffffe          BL       find_ends
000516  f8c5a628          STR      r10,[r5,#0x628]       ;1966
00051a  f24b106c          MOV      r0,#0xb16c            ;1968
00051e  5940              LDR      r0,[r0,r5]            ;1968
000520  2801              CMP      r0,#1                 ;1968
000522  d17d              BNE      |L10.1568|
000524  f8d503b0          LDR      r0,[r5,#0x3b0]        ;1970
000528  b160              CBZ      r0,|L10.1348|
00052a  f8d513a8          LDR      r1,[r5,#0x3a8]        ;1971
00052e  460e              MOV      r6,r1                 ;1971
000530  f8d503ac          LDR      r0,[r5,#0x3ac]        ;1971
000534  4607              MOV      r7,r0                 ;1971
000536  2200              MOVS     r2,#0                 ;1971
000538  4613              MOV      r3,r2                 ;1971
00053a  4630              MOV      r0,r6                 ;1971
00053c  4639              MOV      r1,r7                 ;1971
00053e  f7fffffe          BL       __aeabi_cdcmpeq
000542  d14c              BNE      |L10.1502|
                  |L10.1348|
000544  f50470b0          ADD      r0,r4,#0x160          ;1973
000548  c803              LDM      r0,{r0,r1}            ;1973
00054a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;1973
00054e  f50470a8          ADD      r0,r4,#0x150          ;1973
000552  c803              LDM      r0,{r0,r1}            ;1973
000554  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;1973
000558  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1973
00055c  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;1973
000560  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;1973
000564  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1973
000568  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;1973
00056c  e9cd0102          STRD     r0,r1,[sp,#8]         ;1973
000570  f5057068          ADD      r0,r5,#0x3a0          ;1973
000574  f5057166          ADD      r1,r5,#0x398          ;1973
000578  f5057364          ADD      r3,r5,#0x390          ;1973
00057c  462a              MOV      r2,r5                 ;1973
00057e  e9cd1000          STRD     r1,r0,[sp,#0]         ;1973
000582  4621              MOV      r1,r4                 ;1973
000584  4650              MOV      r0,r10                ;1973
000586  f7fffffe          BL       convert_arc2
00058a  4680              MOV      r8,r0                 ;1973
00058c  f1b80f00          CMP      r8,#0                 ;1991
                  |L10.1424|
000590  d07e              BEQ      |L10.1680|
000592  48b0              LDR      r0,|L10.2132|
000594  f8d0014c          LDR      r0,[r0,#0x14c]        ;1991
000598  2831              CMP      r0,#0x31              ;1991
00059a  da1e              BGE      |L10.1498|
00059c  49ad              LDR      r1,|L10.2132|
00059e  f8d1314c          LDR      r3,[r1,#0x14c]        ;1991
0005a2  f8d1114c          LDR      r1,[r1,#0x14c]        ;1991
0005a6  1c49              ADDS     r1,r1,#1              ;1991
0005a8  4aaa              LDR      r2,|L10.2132|
0005aa  f8c2114c          STR      r1,[r2,#0x14c]        ;1991
0005ae  eb030183          ADD      r1,r3,r3,LSL #2       ;1991
0005b2  4aaa              LDR      r2,|L10.2140|
0005b4  eb021101          ADD      r1,r2,r1,LSL #4       ;1991
0005b8  4608              MOV      r0,r1                 ;1991
0005ba  49a7              LDR      r1,|L10.2136|
0005bc  f7fffffe          BL       strcpy
0005c0  f04f0100          MOV      r1,#0                 ;1991
0005c4  48a3              LDR      r0,|L10.2132|
0005c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;1991
0005ca  eb000080          ADD      r0,r0,r0,LSL #2       ;1991
0005ce  4aa3              LDR      r2,|L10.2140|
0005d0  eb021000          ADD      r0,r2,r0,LSL #4       ;1991
0005d4  7001              STRB     r1,[r0,#0]            ;1991
0005d6  4640              MOV      r0,r8                 ;1991
0005d8  e565              B        |L10.166|
                  |L10.1498|
0005da  4640              MOV      r0,r8                 ;1991
0005dc  e563              B        |L10.166|
                  |L10.1502|
0005de  f1bb0f00          CMP      r11,#0                ;1993
0005e2  d03c              BEQ      |L10.1630|
0005e4  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;1995
0005e8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;1995
0005ec  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;1995
0005f0  e9cd0102          STRD     r0,r1,[sp,#8]         ;1995
0005f4  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;1995
0005f8  462a              MOV      r2,r5                 ;1995
0005fa  e9cd0100          STRD     r0,r1,[sp,#0]         ;1995
0005fe  4621              MOV      r1,r4                 ;1995
000600  4650              MOV      r0,r10                ;1995
000602  f7fffffe          BL       convert_arc_comp1
000606  4680              MOV      r8,r0                 ;1995
000608  f1b80f00          CMP      r8,#0                 ;2010
                  |L10.1548|
00060c  d0c0              BEQ      |L10.1424|
00060e  4891              LDR      r0,|L10.2132|
000610  f8d0014c          LDR      r0,[r0,#0x14c]        ;2010
000614  2831              CMP      r0,#0x31              ;2010
000616  da20              BGE      |L10.1626|
000618  498e              LDR      r1,|L10.2132|
00061a  f8d1314c          LDR      r3,[r1,#0x14c]        ;2010
00061e  e000              B        |L10.1570|
                  |L10.1568|
000620  e05a              B        |L10.1752|
                  |L10.1570|
000622  f8d1114c          LDR      r1,[r1,#0x14c]        ;2010
000626  1c49              ADDS     r1,r1,#1              ;2010
000628  4a8a              LDR      r2,|L10.2132|
00062a  f8c2114c          STR      r1,[r2,#0x14c]        ;2010
00062e  eb030183          ADD      r1,r3,r3,LSL #2       ;2010
000632  4a8a              LDR      r2,|L10.2140|
000634  eb021101          ADD      r1,r2,r1,LSL #4       ;2010
000638  4608              MOV      r0,r1                 ;2010
00063a  4987              LDR      r1,|L10.2136|
00063c  f7fffffe          BL       strcpy
000640  f04f0100          MOV      r1,#0                 ;2010
000644  4883              LDR      r0,|L10.2132|
000646  f8d0014c          LDR      r0,[r0,#0x14c]        ;2010
00064a  eb000080          ADD      r0,r0,r0,LSL #2       ;2010
00064e  4a83              LDR      r2,|L10.2140|
000650  eb021000          ADD      r0,r2,r0,LSL #4       ;2010
000654  7001              STRB     r1,[r0,#0]            ;2010
000656  4640              MOV      r0,r8                 ;2010
000658  e525              B        |L10.166|
                  |L10.1626|
00065a  4640              MOV      r0,r8                 ;2010
00065c  e523              B        |L10.166|
                  |L10.1630|
00065e  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;2014
000662  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2014
000666  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;2014
00066a  e9cd0102          STRD     r0,r1,[sp,#8]         ;2014
00066e  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;2014
000672  462a              MOV      r2,r5                 ;2014
000674  e9cd0100          STRD     r0,r1,[sp,#0]         ;2014
000678  4621              MOV      r1,r4                 ;2014
00067a  4650              MOV      r0,r10                ;2014
00067c  f7fffffe          BL       convert_arc_comp2
000680  4680              MOV      r8,r0                 ;2014
000682  f1b80f00          CMP      r8,#0                 ;2030
000686  d0c1              BEQ      |L10.1548|
000688  4872              LDR      r0,|L10.2132|
00068a  f8d0014c          LDR      r0,[r0,#0x14c]        ;2030
00068e  e000              B        |L10.1682|
                  |L10.1680|
000690  e0c4              B        |L10.2076|
                  |L10.1682|
000692  2831              CMP      r0,#0x31              ;2030
000694  da1e              BGE      |L10.1748|
000696  496f              LDR      r1,|L10.2132|
000698  f8d1314c          LDR      r3,[r1,#0x14c]        ;2030
00069c  f8d1114c          LDR      r1,[r1,#0x14c]        ;2030
0006a0  1c49              ADDS     r1,r1,#1              ;2030
0006a2  4a6c              LDR      r2,|L10.2132|
0006a4  f8c2114c          STR      r1,[r2,#0x14c]        ;2030
0006a8  eb030183          ADD      r1,r3,r3,LSL #2       ;2030
0006ac  4a6b              LDR      r2,|L10.2140|
0006ae  eb021101          ADD      r1,r2,r1,LSL #4       ;2030
0006b2  4608              MOV      r0,r1                 ;2030
0006b4  4968              LDR      r1,|L10.2136|
0006b6  f7fffffe          BL       strcpy
0006ba  f04f0100          MOV      r1,#0                 ;2030
0006be  4865              LDR      r0,|L10.2132|
0006c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;2030
0006c4  eb000080          ADD      r0,r0,r0,LSL #2       ;2030
0006c8  4a64              LDR      r2,|L10.2140|
0006ca  eb021000          ADD      r0,r2,r0,LSL #4       ;2030
0006ce  7001              STRB     r1,[r0,#0]            ;2030
0006d0  4640              MOV      r0,r8                 ;2030
0006d2  e4e8              B        |L10.166|
                  |L10.1748|
0006d4  4640              MOV      r0,r8                 ;2030
0006d6  e4e6              B        |L10.166|
                  |L10.1752|
0006d8  f24b106c          MOV      r0,#0xb16c            ;2033
0006dc  5940              LDR      r0,[r0,r5]            ;2033
0006de  2803              CMP      r0,#3                 ;2033
0006e0  d14c              BNE      |L10.1916|
0006e2  f50470a8          ADD      r0,r4,#0x150          ;2035
0006e6  c803              LDM      r0,{r0,r1}            ;2035
0006e8  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;2035
0006ec  f50470b8          ADD      r0,r4,#0x170          ;2035
0006f0  c803              LDM      r0,{r0,r1}            ;2035
0006f2  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2035
0006f6  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;2035
0006fa  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2035
0006fe  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;2035
000702  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2035
000706  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;2035
00070a  e9cd0102          STRD     r0,r1,[sp,#8]         ;2035
00070e  f5057066          ADD      r0,r5,#0x398          ;2035
000712  f5057164          ADD      r1,r5,#0x390          ;2035
000716  f5057368          ADD      r3,r5,#0x3a0          ;2035
00071a  462a              MOV      r2,r5                 ;2035
00071c  e9cd1000          STRD     r1,r0,[sp,#0]         ;2035
000720  4621              MOV      r1,r4                 ;2035
000722  4650              MOV      r0,r10                ;2035
000724  f7fffffe          BL       convert_arc2
000728  4680              MOV      r8,r0                 ;2035
00072a  f1b80f00          CMP      r8,#0                 ;2053
00072e  d075              BEQ      |L10.2076|
000730  4848              LDR      r0,|L10.2132|
000732  f8d0014c          LDR      r0,[r0,#0x14c]        ;2053
000736  2831              CMP      r0,#0x31              ;2053
000738  da1e              BGE      |L10.1912|
00073a  4946              LDR      r1,|L10.2132|
00073c  f8d1314c          LDR      r3,[r1,#0x14c]        ;2053
000740  f8d1114c          LDR      r1,[r1,#0x14c]        ;2053
000744  1c49              ADDS     r1,r1,#1              ;2053
000746  4a43              LDR      r2,|L10.2132|
000748  f8c2114c          STR      r1,[r2,#0x14c]        ;2053
00074c  eb030183          ADD      r1,r3,r3,LSL #2       ;2053
000750  4a42              LDR      r2,|L10.2140|
000752  eb021101          ADD      r1,r2,r1,LSL #4       ;2053
000756  4608              MOV      r0,r1                 ;2053
000758  493f              LDR      r1,|L10.2136|
00075a  f7fffffe          BL       strcpy
00075e  f04f0100          MOV      r1,#0                 ;2053
000762  483c              LDR      r0,|L10.2132|
000764  f8d0014c          LDR      r0,[r0,#0x14c]        ;2053
000768  eb000080          ADD      r0,r0,r0,LSL #2       ;2053
00076c  4a3b              LDR      r2,|L10.2140|
00076e  eb021000          ADD      r0,r2,r0,LSL #4       ;2053
000772  7001              STRB     r1,[r0,#0]            ;2053
000774  4640              MOV      r0,r8                 ;2053
000776  e496              B        |L10.166|
                  |L10.1912|
000778  4640              MOV      r0,r8                 ;2053
00077a  e494              B        |L10.166|
                  |L10.1916|
00077c  f24b106c          MOV      r0,#0xb16c            ;2055
000780  5940              LDR      r0,[r0,r5]            ;2055
000782  2802              CMP      r0,#2                 ;2055
000784  d14d              BNE      |L10.2082|
000786  f50470b8          ADD      r0,r4,#0x170          ;2057
00078a  c803              LDM      r0,{r0,r1}            ;2057
00078c  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;2057
000790  f50470b0          ADD      r0,r4,#0x160          ;2057
000794  c803              LDM      r0,{r0,r1}            ;2057
000796  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2057
00079a  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;2057
00079e  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2057
0007a2  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;2057
0007a6  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2057
0007aa  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;2057
0007ae  e9cd0102          STRD     r0,r1,[sp,#8]         ;2057
0007b2  f5057064          ADD      r0,r5,#0x390          ;2057
0007b6  f5057168          ADD      r1,r5,#0x3a0          ;2057
0007ba  f5057366          ADD      r3,r5,#0x398          ;2057
0007be  462a              MOV      r2,r5                 ;2057
0007c0  e9cd1000          STRD     r1,r0,[sp,#0]         ;2057
0007c4  4621              MOV      r1,r4                 ;2057
0007c6  4650              MOV      r0,r10                ;2057
0007c8  f7fffffe          BL       convert_arc2
0007cc  4680              MOV      r8,r0                 ;2057
0007ce  f1b80f00          CMP      r8,#0                 ;2075
0007d2  d053              BEQ      |L10.2172|
0007d4  481f              LDR      r0,|L10.2132|
0007d6  f8d0014c          LDR      r0,[r0,#0x14c]        ;2075
0007da  2831              CMP      r0,#0x31              ;2075
0007dc  da1f              BGE      |L10.2078|
0007de  491d              LDR      r1,|L10.2132|
0007e0  f8d1314c          LDR      r3,[r1,#0x14c]        ;2075
0007e4  f8d1114c          LDR      r1,[r1,#0x14c]        ;2075
0007e8  1c49              ADDS     r1,r1,#1              ;2075
0007ea  4a1a              LDR      r2,|L10.2132|
0007ec  f8c2114c          STR      r1,[r2,#0x14c]        ;2075
0007f0  eb030183          ADD      r1,r3,r3,LSL #2       ;2075
0007f4  4a19              LDR      r2,|L10.2140|
0007f6  eb021101          ADD      r1,r2,r1,LSL #4       ;2075
0007fa  4608              MOV      r0,r1                 ;2075
0007fc  4916              LDR      r1,|L10.2136|
0007fe  f7fffffe          BL       strcpy
000802  f04f0100          MOV      r1,#0                 ;2075
000806  4813              LDR      r0,|L10.2132|
000808  f8d0014c          LDR      r0,[r0,#0x14c]        ;2075
00080c  eb000080          ADD      r0,r0,r0,LSL #2       ;2075
000810  4a12              LDR      r2,|L10.2140|
000812  eb021000          ADD      r0,r2,r0,LSL #4       ;2075
000816  7001              STRB     r1,[r0,#0]            ;2075
000818  4640              MOV      r0,r8                 ;2075
00081a  e444              B        |L10.166|
                  |L10.2076|
00081c  e02e              B        |L10.2172|
                  |L10.2078|
00081e  4640              MOV      r0,r8                 ;2075
000820  e441              B        |L10.166|
                  |L10.2082|
000822  f04f0100          MOV      r1,#0                 ;2078
000826  480b              LDR      r0,|L10.2132|
000828  f8c0114c          STR      r1,[r0,#0x14c]        ;2078
00082c  4601              MOV      r1,r0                 ;2078
00082e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2078
000832  f8d1114c          LDR      r1,[r1,#0x14c]        ;2078
000836  f1010101          ADD      r1,r1,#1              ;2078
00083a  4602              MOV      r2,r0                 ;2078
00083c  f8c2114c          STR      r1,[r2,#0x14c]        ;2078
000840  eb030183          ADD      r1,r3,r3,LSL #2       ;2078
000844  4a05              LDR      r2,|L10.2140|
000846  eb021101          ADD      r1,r2,r1,LSL #4       ;2078
00084a  4608              MOV      r0,r1                 ;2078
00084c  4902              LDR      r1,|L10.2136|
00084e  f7fffffe          BL       strcpy
000852  e005              B        |L10.2144|
                  |L10.2132|
                          DCD      _setup+0xc000
                  |L10.2136|
                          DCD      |symbol_number.444|
                  |L10.2140|
                          DCD      _setup+0xb1ac
                  |L10.2144|
000860  f04f0100          MOV      r1,#0                 ;2078
000864  4806              LDR      r0,|L10.2176|
000866  f8d0014c          LDR      r0,[r0,#0x14c]        ;2078
00086a  eb000080          ADD      r0,r0,r0,LSL #2       ;2078
00086e  4a05              LDR      r2,|L10.2180|
000870  eb021000          ADD      r0,r2,r0,LSL #4       ;2078
000874  7001              STRB     r1,[r0,#0]            ;2078
000876  f04f0022          MOV      r0,#0x22              ;2078
00087a  e414              B        |L10.166|
                  |L10.2172|
00087c  2000              MOVS     r0,#0                 ;2079
00087e  e412              B        |L10.166|
;;;2081   
                          ENDP

                  |L10.2176|
                          DCD      _setup+0xc000
                  |L10.2180|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_arc2||, CODE, READONLY, ALIGN=2

                  convert_arc2 PROC
;;;2101   
;;;2102       static int convert_arc2(                      /* ARGUMENTS                                */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;2103       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)     */
;;;2104       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;2105       setup_pointer settings,                       /* pointer to machine settings              */
;;;2106       double * current1,                            /* pointer to current value of coordinate 1 */
;;;2107       double * current2,                            /* pointer to current value of coordinate 2 */
;;;2108       double * current3,                            /* pointer to current value of coordinate 3 */
;;;2109       double end1,                                  /* coordinate 1 value at end of arc         */
;;;2110       double end2,                                  /* coordinate 2 value at end of arc         */
;;;2111       double end3,                                  /* coordinate 3 value at end of arc         */
;;;2112   #ifdef AA
;;;2113       double AA_end,                                /* a-value at end of arc                    *//*AA*/
;;;2114   #endif
;;;2115   #ifdef BB
;;;2116       double BB_end,                                /* b-value at end of arc                    *//*BB*/
;;;2117   #endif
;;;2118   #ifdef CC
;;;2119       double CC_end,                                /* c-value at end of arc                    *//*CC*/
;;;2120   #endif
;;;2121       double offset1,                               /* offset of center from current1           */
;;;2122       double offset2)                               /* offset of center from current2           */
;;;2123       {
000004  b09f              SUB      sp,sp,#0x7c
000006  468b              MOV      r11,r1
000008  469a              MOV      r10,r3
00000a  ac2e              ADD      r4,sp,#0xb8
00000c  e89403f0          LDM      r4,{r4-r9}
;;;2124           static char name[] SET_TO "convert_arc2";
;;;2125           double center1;
;;;2126           double center2;
;;;2127           int status;                               /* status returned from CHP function call     */
;;;2128           double tolerance;                         /* tolerance for difference of radii          */
;;;2129           int turn;                                 /* number of full or partial turns CCW in arc */
;;;2130   
;;;2131           tolerance SET_TO (settings->length_units IS CANON_UNITS_INCHES) ?
000010  9821              LDR      r0,[sp,#0x84]
000012  f8d0051c          LDR      r0,[r0,#0x51c]
000016  2801              CMP      r0,#1
000018  d102              BNE      |L11.32|
;;;2132               TOLERANCE_INCH : TOLERANCE_MM;
00001a  486d              LDR      r0,|L11.464|
00001c  496d              LDR      r1,|L11.468|
00001e  e001              B        |L11.36|
                  |L11.32|
000020  486d              LDR      r0,|L11.472|
000022  496e              LDR      r1,|L11.476|
                  |L11.36|
000024  e9cd0116          STRD     r0,r1,[sp,#0x58]
;;;2133   
;;;2134           if (block->r_flag)
000028  f8db01c0          LDR      r0,[r11,#0x1c0]
00002c  2800              CMP      r0,#0
00002e  d045              BEQ      |L11.188|
;;;2135           {
;;;2136               CHP(arc_data_r(move, *current1, *current2, end1, end2,
000030  a815              ADD      r0,sp,#0x54
000032  a91a              ADD      r1,sp,#0x68
000034  aa1c              ADD      r2,sp,#0x70
000036  e9cd2108          STRD     r2,r1,[sp,#0x20]
00003a  900a              STR      r0,[sp,#0x28]
00003c  f50b70e4          ADD      r0,r11,#0x1c8
000040  c803              LDM      r0,{r0,r1}
000042  aa02              ADD      r2,sp,#8
000044  c2f0              STM      r2!,{r4-r7}
000046  e9cd0106          STRD     r0,r1,[sp,#0x18]
00004a  982c              LDR      r0,[sp,#0xb0]
00004c  c803              LDM      r0,{r0,r1}
00004e  e9cd0100          STRD     r0,r1,[sp,#0]
000052  e9da0100          LDRD     r0,r1,[r10,#0]
000056  4602              MOV      r2,r0
000058  460b              MOV      r3,r1
00005a  e9cd0112          STRD     r0,r1,[sp,#0x48]
00005e  981f              LDR      r0,[sp,#0x7c]
000060  f7fffffe          BL       arc_data_r
000064  9019              STR      r0,[sp,#0x64]
000066  2800              CMP      r0,#0
000068  d072              BEQ      |L11.336|
00006a  485d              LDR      r0,|L11.480|
00006c  f8d0014c          LDR      r0,[r0,#0x14c]
000070  2831              CMP      r0,#0x31
000072  da21              BGE      |L11.184|
000074  495a              LDR      r1,|L11.480|
000076  f8d1314c          LDR      r3,[r1,#0x14c]
00007a  f8d1114c          LDR      r1,[r1,#0x14c]
00007e  1c49              ADDS     r1,r1,#1
000080  4a57              LDR      r2,|L11.480|
000082  f8c2114c          STR      r1,[r2,#0x14c]
000086  eb030183          ADD      r1,r3,r3,LSL #2
00008a  f6a26254          SUB      r2,r2,#0xe54
00008e  eb021101          ADD      r1,r2,r1,LSL #4
000092  4608              MOV      r0,r1
000094  4953              LDR      r1,|L11.484|
000096  f7fffffe          BL       strcpy
00009a  f04f0100          MOV      r1,#0
00009e  4850              LDR      r0,|L11.480|
0000a0  f8d0014c          LDR      r0,[r0,#0x14c]
0000a4  eb000080          ADD      r0,r0,r0,LSL #2
0000a8  4a4f              LDR      r2,|L11.488|
0000aa  eb021000          ADD      r0,r2,r0,LSL #4
0000ae  7001              STRB     r1,[r0,#0]
0000b0  9819              LDR      r0,[sp,#0x64]
                  |L11.178|
;;;2137                   block->r_number, &center1, &center2, &turn));
;;;2138           }
;;;2139           else
;;;2140           {
;;;2141               CHP(arc_data_ijk(move, *current1, *current2, end1, end2, offset1,
;;;2142                   offset2, &center1, &center2, &turn, tolerance));
;;;2143           }
;;;2144   
;;;2145           if (settings->feed_mode IS INVERSE_TIME)
;;;2146               inverse_time_rate_arc(*current1, *current2, *current3, center1, center2,
;;;2147                   turn, end1, end2, end3, block, settings);
;;;2148           ARC_FEED(end1, end2, center1, center2, turn,
;;;2149               end3
;;;2150       #ifdef AA
;;;2151               , AA_end
;;;2152       #else
;;;2153       #ifdef ALL_AXES
;;;2154               , 0
;;;2155       #endif
;;;2156       #endif
;;;2157       #ifdef BB
;;;2158               , BB_end
;;;2159       #else
;;;2160       #ifdef ALL_AXES
;;;2161               , 0
;;;2162       #endif
;;;2163       #endif
;;;2164       #ifdef CC
;;;2165               , CC_end
;;;2166       #else
;;;2167       #ifdef ALL_AXES
;;;2168               , 0
;;;2169       #endif
;;;2170       #endif
;;;2171               );
;;;2172           *current1 SET_TO end1;
;;;2173           *current2 SET_TO end2;
;;;2174           *current3 SET_TO end3;
;;;2175   #ifdef AA
;;;2176           settings->AA_current SET_TO AA_end;       /*AA*/
;;;2177   #endif
;;;2178   #ifdef BB
;;;2179           settings->BB_current SET_TO BB_end;       /*BB*/
;;;2180   #endif
;;;2181   #ifdef CC
;;;2182           settings->CC_current SET_TO CC_end;       /*CC*/
;;;2183   #endif
;;;2184           return RS274NGC_OK;
;;;2185       }
0000b2  b023              ADD      sp,sp,#0x8c
0000b4  e8bd8ff0          POP      {r4-r11,pc}
                  |L11.184|
0000b8  9819              LDR      r0,[sp,#0x64]         ;2136
0000ba  e7fa              B        |L11.178|
                  |L11.188|
0000bc  e9dd0116          LDRD     r0,r1,[sp,#0x58]      ;2141
0000c0  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;2141
0000c4  a815              ADD      r0,sp,#0x54           ;2141
0000c6  a91a              ADD      r1,sp,#0x68           ;2141
0000c8  aa1c              ADD      r2,sp,#0x70           ;2141
0000ca  e9cd210a          STRD     r2,r1,[sp,#0x28]      ;2141
0000ce  900c              STR      r0,[sp,#0x30]         ;2141
0000d0  e9dd0136          LDRD     r0,r1,[sp,#0xd8]      ;2141
0000d4  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2141
0000d8  e9dd0134          LDRD     r0,r1,[sp,#0xd0]      ;2141
0000dc  aa02              ADD      r2,sp,#8              ;2141
0000de  c2f0              STM      r2!,{r4-r7}           ;2141
0000e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2141
0000e4  992c              LDR      r1,[sp,#0xb0]         ;2141
0000e6  c903              LDM      r1,{r0,r1}            ;2141
0000e8  e9cd0100          STRD     r0,r1,[sp,#0]         ;2141
0000ec  e9da0100          LDRD     r0,r1,[r10,#0]        ;2141
0000f0  4602              MOV      r2,r0                 ;2141
0000f2  460b              MOV      r3,r1                 ;2141
0000f4  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2141
0000f8  981f              LDR      r0,[sp,#0x7c]         ;2141
0000fa  f7fffffe          BL       arc_data_ijk
0000fe  9019              STR      r0,[sp,#0x64]         ;2141
000100  b318              CBZ      r0,|L11.330|
000102  4837              LDR      r0,|L11.480|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;2141
000108  2831              CMP      r0,#0x31              ;2141
00010a  da1f              BGE      |L11.332|
00010c  4934              LDR      r1,|L11.480|
00010e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2141
000112  f8d1114c          LDR      r1,[r1,#0x14c]        ;2141
000116  1c49              ADDS     r1,r1,#1              ;2141
000118  4a31              LDR      r2,|L11.480|
00011a  f8c2114c          STR      r1,[r2,#0x14c]        ;2141
00011e  eb030183          ADD      r1,r3,r3,LSL #2       ;2141
000122  4a31              LDR      r2,|L11.488|
000124  eb021101          ADD      r1,r2,r1,LSL #4       ;2141
000128  4608              MOV      r0,r1                 ;2141
00012a  492e              LDR      r1,|L11.484|
00012c  f7fffffe          BL       strcpy
000130  f04f0100          MOV      r1,#0                 ;2141
000134  482a              LDR      r0,|L11.480|
000136  f8d0014c          LDR      r0,[r0,#0x14c]        ;2141
00013a  eb000080          ADD      r0,r0,r0,LSL #2       ;2141
00013e  4a2a              LDR      r2,|L11.488|
000140  eb021000          ADD      r0,r2,r0,LSL #4       ;2141
000144  7001              STRB     r1,[r0,#0]            ;2141
000146  9819              LDR      r0,[sp,#0x64]         ;2141
000148  e7b3              B        |L11.178|
                  |L11.330|
00014a  e001              B        |L11.336|
                  |L11.332|
00014c  9819              LDR      r0,[sp,#0x64]         ;2141
00014e  e7b0              B        |L11.178|
                  |L11.336|
000150  9821              LDR      r0,[sp,#0x84]         ;2145
000152  f8d003fc          LDR      r0,[r0,#0x3fc]        ;2145
000156  2801              CMP      r0,#1                 ;2145
000158  d11e              BNE      |L11.408|
00015a  9821              LDR      r0,[sp,#0x84]         ;2146
00015c  a908              ADD      r1,sp,#0x20           ;2146
00015e  e8a10bf0          STM      r1!,{r4-r9,r11}       ;2146
000162  900f              STR      r0,[sp,#0x3c]         ;2146
000164  9815              LDR      r0,[sp,#0x54]         ;2146
000166  9006              STR      r0,[sp,#0x18]         ;2146
000168  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2146
00016c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2146
000170  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;2146
000174  e9cd0102          STRD     r0,r1,[sp,#8]         ;2146
000178  992d              LDR      r1,[sp,#0xb4]         ;2146
00017a  c903              LDM      r1,{r0,r1}            ;2146
00017c  e9cd0100          STRD     r0,r1,[sp,#0]         ;2146
000180  992c              LDR      r1,[sp,#0xb0]         ;2146
000182  c903              LDM      r1,{r0,r1}            ;2146
000184  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2146
000188  e9da0100          LDRD     r0,r1,[r10,#0]        ;2146
00018c  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2146
000190  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2146
000194  f7fffffe          BL       inverse_time_rate_arc
                  |L11.408|
000198  e9cd8906          STRD     r8,r9,[sp,#0x18]      ;2148
00019c  9815              LDR      r0,[sp,#0x54]         ;2148
00019e  9004              STR      r0,[sp,#0x10]         ;2148
0001a0  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2148
0001a4  e9cd0102          STRD     r0,r1,[sp,#8]         ;2148
0001a8  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;2148
0001ac  4632              MOV      r2,r6                 ;2148
0001ae  463b              MOV      r3,r7                 ;2148
0001b0  e9cd0100          STRD     r0,r1,[sp,#0]         ;2148
0001b4  4620              MOV      r0,r4                 ;2148
0001b6  4629              MOV      r1,r5                 ;2148
0001b8  f7fffffe          BL       ARC_FEED
0001bc  e9ca4500          STRD     r4,r5,[r10,#0]        ;2172
0001c0  982c              LDR      r0,[sp,#0xb0]         ;2173
0001c2  c0c0              STM      r0!,{r6,r7}           ;2173
0001c4  982d              LDR      r0,[sp,#0xb4]         ;2174
0001c6  e9c08900          STRD     r8,r9,[r0,#0]         ;2174
0001ca  2000              MOVS     r0,#0                 ;2184
0001cc  e771              B        |L11.178|
;;;2186   
                          ENDP

0001ce  0000              DCW      0x0000
                  |L11.464|
                          DCD      0xeb1c432d
                  |L11.468|
                          DCD      0x3f2a36e2
                  |L11.472|
                          DCD      0xd2f1a9fc
                  |L11.476|
                          DCD      0x3f60624d
                  |L11.480|
                          DCD      _setup+0xc000
                  |L11.484|
                          DCD      |symbol_number.445|
                  |L11.488|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_arc_comp1||, CODE, READONLY, ALIGN=2

                  convert_arc_comp1 PROC
;;;2214   
;;;2215       static int convert_arc_comp1(                 /* ARGUMENTS                                   */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;2216       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)             */
;;;2217       block_pointer block,                          /* pointer to a block of RS274/NGC instructions     */
;;;2218       setup_pointer settings,                       /* pointer to machine settings                      */
;;;2219       double end_x,                                 /* x-value at end of programmed (then actual) arc   */
;;;2220       double end_y,                                 /* y-value at end of programmed (then actual) arc   */
;;;2221       double end_z                                  /* z-value at end of arc                            */
;;;2222   #ifdef AA
;;;2223       , double AA_end                               /* a-value at end of arc                      *//*AA*/
;;;2224   #endif
;;;2225   #ifdef BB
;;;2226       , double BB_end                               /* b-value at end of arc                      *//*BB*/
;;;2227   #endif
;;;2228   #ifdef CC
;;;2229       , double CC_end                               /* c-value at end of arc                      *//*CC*/
;;;2230   #endif
;;;2231       )
;;;2232       {
000004  b0a3              SUB      sp,sp,#0x8c
000006  468b              MOV      r11,r1
000008  4692              MOV      r10,r2
00000a  ac30              ADD      r4,sp,#0xc0
00000c  e89403f0          LDM      r4,{r4-r9}
;;;2233           static char name[] SET_TO "convert_arc_comp1";
;;;2234           double center_x;
;;;2235           double center_y;
;;;2236           double gamma;                             /* direction of perpendicular to arc at end */
;;;2237           int side;                                 /* offset side - right or left              */
;;;2238           int status;                               /* status returned from CHP function call   */
;;;2239           double tolerance;                         /* tolerance for difference of radii        */
;;;2240           double tool_radius;
;;;2241           int turn;                                 /* 1 for counterclockwise, -1 for clockwise */
;;;2242   
;;;2243           side SET_TO settings->cutter_comp_side;
000010  f8da03b0          LDR      r0,[r10,#0x3b0]
000014  901b              STR      r0,[sp,#0x6c]
;;;2244      /* always is positive */
;;;2245           tool_radius SET_TO settings->cutter_comp_radius;
000016  f50a706a          ADD      r0,r10,#0x3a8
00001a  c803              LDM      r0,{r0,r1}
00001c  e9cd0116          STRD     r0,r1,[sp,#0x58]
;;;2246           tolerance SET_TO (settings->length_units IS CANON_UNITS_INCHES) ?
000020  f8da051c          LDR      r0,[r10,#0x51c]
000024  2801              CMP      r0,#1
000026  d102              BNE      |L12.46|
;;;2247               TOLERANCE_INCH : TOLERANCE_MM;
000028  48c8              LDR      r0,|L12.844|
00002a  49c9              LDR      r1,|L12.848|
00002c  e001              B        |L12.50|
                  |L12.46|
00002e  48c9              LDR      r0,|L12.852|
000030  49c9              LDR      r1,|L12.856|
                  |L12.50|
000032  e9cd0118          STRD     r0,r1,[sp,#0x60]
;;;2248   
;;;2249           CHK((hypot((end_x - settings->current_x),
000036  f50a7066          ADD      r0,r10,#0x398
00003a  c803              LDM      r0,{r0,r1}
00003c  4632              MOV      r2,r6
00003e  463b              MOV      r3,r7
000040  e9cd010c          STRD     r0,r1,[sp,#0x30]
000044  f7fffffe          BL       __aeabi_drsub
000048  e9cd0110          STRD     r0,r1,[sp,#0x40]
00004c  f50a7064          ADD      r0,r10,#0x390
000050  c803              LDM      r0,{r0,r1}
000052  4622              MOV      r2,r4
000054  462b              MOV      r3,r5
000056  e9cd010c          STRD     r0,r1,[sp,#0x30]
00005a  f7fffffe          BL       __aeabi_drsub
00005e  e9cd010e          STRD     r0,r1,[sp,#0x38]
000062  e9dd2310          LDRD     r2,r3,[sp,#0x40]
000066  f7fffffe          BL       hypot
00006a  e9cd0112          STRD     r0,r1,[sp,#0x48]
00006e  e9dd2316          LDRD     r2,r3,[sp,#0x58]
000072  f7fffffe          BL       __aeabi_cdcmple
000076  d828              BHI      |L12.202|
000078  f04f0100          MOV      r1,#0
00007c  48b7              LDR      r0,|L12.860|
00007e  f8c0114c          STR      r1,[r0,#0x14c]
000082  4601              MOV      r1,r0
000084  f8d1314c          LDR      r3,[r1,#0x14c]
000088  f8d1114c          LDR      r1,[r1,#0x14c]
00008c  f1010101          ADD      r1,r1,#1
000090  4602              MOV      r2,r0
000092  f8c2114c          STR      r1,[r2,#0x14c]
000096  eb030183          ADD      r1,r3,r3,LSL #2
00009a  f6a06254          SUB      r2,r0,#0xe54
00009e  eb021101          ADD      r1,r2,r1,LSL #4
0000a2  4608              MOV      r0,r1
0000a4  49ae              LDR      r1,|L12.864|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0
0000ae  48ab              LDR      r0,|L12.860|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]
0000b4  eb000080          ADD      r0,r0,r0,LSL #2
0000b8  4aaa              LDR      r2,|L12.868|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4
0000be  7001              STRB     r1,[r0,#0]
0000c0  f04f0046          MOV      r0,#0x46
                  |L12.196|
;;;2250               (end_y - settings->current_y)) <= tool_radius),
;;;2251               NCE_CUTTER_GOUGING_WITH_CUTTER_RADIUS_COMP);
;;;2252   
;;;2253           if (block->r_flag)
;;;2254           {
;;;2255               CHP(arc_data_comp_r(move, side, tool_radius, settings->current_x,
;;;2256                   settings->current_y, end_x, end_y, block->r_number,
;;;2257                   &center_x, &center_y, &turn));
;;;2258           }
;;;2259           else
;;;2260           {
;;;2261               CHP(arc_data_comp_ijk(move, side, tool_radius, settings->current_x,
;;;2262                   settings->current_y, end_x, end_y,
;;;2263                   block->i_number, block->j_number,
;;;2264                   &center_x, &center_y, &turn, tolerance));
;;;2265           }
;;;2266   
;;;2267           gamma SET_TO
;;;2268               (((side IS LEFT) AND (move IS G_3)) OR
;;;2269               ((side IS RIGHT) AND (move IS G_2))) ?
;;;2270               atan2 ((center_y - end_y), (center_x - end_x)) :
;;;2271           atan2 ((end_y - center_y), (end_x - center_x));
;;;2272   
;;;2273           settings->program_x SET_TO end_x;
;;;2274           settings->program_y SET_TO end_y;
;;;2275      /* end_x reset actual */
;;;2276           end_x SET_TO (end_x + (tool_radius * cos(gamma)));
;;;2277      /* end_y reset actual */
;;;2278           end_y SET_TO (end_y + (tool_radius * sin(gamma)));
;;;2279   
;;;2280           if (settings->feed_mode IS INVERSE_TIME)
;;;2281               inverse_time_rate_arc(settings->current_x, settings->current_y,
;;;2282                   settings->current_z, center_x, center_y, turn,
;;;2283                   end_x, end_y, end_z, block, settings);
;;;2284           ARC_FEED(end_x, end_y, center_x, center_y, turn,
;;;2285               end_z
;;;2286       #ifdef AA
;;;2287               , AA_end
;;;2288       #else
;;;2289       #ifdef ALL_AXES
;;;2290               , 0
;;;2291       #endif
;;;2292       #endif
;;;2293       #ifdef BB
;;;2294               , BB_end
;;;2295       #else
;;;2296       #ifdef ALL_AXES
;;;2297               , 0
;;;2298       #endif
;;;2299       #endif
;;;2300       #ifdef CC
;;;2301               , CC_end
;;;2302       #else
;;;2303       #ifdef ALL_AXES
;;;2304               , 0
;;;2305       #endif
;;;2306       #endif
;;;2307               );
;;;2308           settings->current_x SET_TO end_x;
;;;2309           settings->current_y SET_TO end_y;
;;;2310           settings->current_z SET_TO end_z;
;;;2311   #ifdef AA
;;;2312           settings->AA_current SET_TO AA_end;       /*AA*/
;;;2313   #endif
;;;2314   #ifdef BB
;;;2315           settings->BB_current SET_TO BB_end;       /*BB*/
;;;2316   #endif
;;;2317   #ifdef CC
;;;2318           settings->CC_current SET_TO CC_end;       /*CC*/
;;;2319   #endif
;;;2320   
;;;2321           return RS274NGC_OK;
;;;2322       }
0000c4  b027              ADD      sp,sp,#0x9c
0000c6  e8bd8ff0          POP      {r4-r11,pc}
                  |L12.202|
0000ca  f8db01c0          LDR      r0,[r11,#0x1c0]       ;2253
0000ce  2800              CMP      r0,#0                 ;2253
0000d0  d044              BEQ      |L12.348|
0000d2  a815              ADD      r0,sp,#0x54           ;2255
0000d4  a91e              ADD      r1,sp,#0x78           ;2255
0000d6  aa20              ADD      r2,sp,#0x80           ;2255
0000d8  e9cd210a          STRD     r2,r1,[sp,#0x28]      ;2255
0000dc  900c              STR      r0,[sp,#0x30]         ;2255
0000de  f50b70e4          ADD      r0,r11,#0x1c8         ;2255
0000e2  c803              LDM      r0,{r0,r1}            ;2255
0000e4  aa04              ADD      r2,sp,#0x10           ;2255
0000e6  c2f0              STM      r2!,{r4-r7}           ;2255
0000e8  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2255
0000ec  f50a7066          ADD      r0,r10,#0x398         ;2255
0000f0  c803              LDM      r0,{r0,r1}            ;2255
0000f2  e9cd0102          STRD     r0,r1,[sp,#8]         ;2255
0000f6  f50a7064          ADD      r0,r10,#0x390         ;2255
0000fa  c803              LDM      r0,{r0,r1}            ;2255
0000fc  e9cd0100          STRD     r0,r1,[sp,#0]         ;2255
000100  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2255
000104  991b              LDR      r1,[sp,#0x6c]         ;2255
000106  9823              LDR      r0,[sp,#0x8c]         ;2255
000108  f7fffffe          BL       arc_data_comp_r
00010c  901a              STR      r0,[sp,#0x68]         ;2255
00010e  2800              CMP      r0,#0                 ;2255
000110  d073              BEQ      |L12.506|
000112  4892              LDR      r0,|L12.860|
000114  f8d0014c          LDR      r0,[r0,#0x14c]        ;2255
000118  2831              CMP      r0,#0x31              ;2255
00011a  da1d              BGE      |L12.344|
00011c  498f              LDR      r1,|L12.860|
00011e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2255
000122  f8d1214c          LDR      r2,[r1,#0x14c]        ;2255
000126  1c52              ADDS     r2,r2,#1              ;2255
000128  f8c1214c          STR      r2,[r1,#0x14c]        ;2255
00012c  eb030183          ADD      r1,r3,r3,LSL #2       ;2255
000130  4a8c              LDR      r2,|L12.868|
000132  eb021101          ADD      r1,r2,r1,LSL #4       ;2255
000136  4608              MOV      r0,r1                 ;2255
000138  4989              LDR      r1,|L12.864|
00013a  f7fffffe          BL       strcpy
00013e  f04f0100          MOV      r1,#0                 ;2255
000142  4886              LDR      r0,|L12.860|
000144  f8d0014c          LDR      r0,[r0,#0x14c]        ;2255
000148  eb000080          ADD      r0,r0,r0,LSL #2       ;2255
00014c  4a85              LDR      r2,|L12.868|
00014e  eb021000          ADD      r0,r2,r0,LSL #4       ;2255
000152  7001              STRB     r1,[r0,#0]            ;2255
000154  981a              LDR      r0,[sp,#0x68]         ;2255
000156  e7b5              B        |L12.196|
                  |L12.344|
000158  981a              LDR      r0,[sp,#0x68]         ;2255
00015a  e7b3              B        |L12.196|
                  |L12.348|
00015c  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;2261
000160  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2261
000164  a815              ADD      r0,sp,#0x54           ;2261
000166  a91e              ADD      r1,sp,#0x78           ;2261
000168  aa20              ADD      r2,sp,#0x80           ;2261
00016a  e9cd210c          STRD     r2,r1,[sp,#0x30]      ;2261
00016e  900e              STR      r0,[sp,#0x38]         ;2261
000170  f50b70b0          ADD      r0,r11,#0x160         ;2261
000174  c803              LDM      r0,{r0,r1}            ;2261
000176  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;2261
00017a  f50b70a8          ADD      r0,r11,#0x150         ;2261
00017e  c803              LDM      r0,{r0,r1}            ;2261
000180  aa04              ADD      r2,sp,#0x10           ;2261
000182  c2f0              STM      r2!,{r4-r7}           ;2261
000184  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2261
000188  f50a7066          ADD      r0,r10,#0x398         ;2261
00018c  c803              LDM      r0,{r0,r1}            ;2261
00018e  e9cd0102          STRD     r0,r1,[sp,#8]         ;2261
000192  f50a7064          ADD      r0,r10,#0x390         ;2261
000196  c803              LDM      r0,{r0,r1}            ;2261
000198  e9cd0100          STRD     r0,r1,[sp,#0]         ;2261
00019c  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2261
0001a0  991b              LDR      r1,[sp,#0x6c]         ;2261
0001a2  9823              LDR      r0,[sp,#0x8c]         ;2261
0001a4  f7fffffe          BL       arc_data_comp_ijk
0001a8  901a              STR      r0,[sp,#0x68]         ;2261
0001aa  b318              CBZ      r0,|L12.500|
0001ac  486b              LDR      r0,|L12.860|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;2261
0001b2  2831              CMP      r0,#0x31              ;2261
0001b4  da1f              BGE      |L12.502|
0001b6  4969              LDR      r1,|L12.860|
0001b8  f8d1314c          LDR      r3,[r1,#0x14c]        ;2261
0001bc  f8d1114c          LDR      r1,[r1,#0x14c]        ;2261
0001c0  1c49              ADDS     r1,r1,#1              ;2261
0001c2  4a66              LDR      r2,|L12.860|
0001c4  f8c2114c          STR      r1,[r2,#0x14c]        ;2261
0001c8  eb030183          ADD      r1,r3,r3,LSL #2       ;2261
0001cc  4a65              LDR      r2,|L12.868|
0001ce  eb021101          ADD      r1,r2,r1,LSL #4       ;2261
0001d2  4608              MOV      r0,r1                 ;2261
0001d4  4962              LDR      r1,|L12.864|
0001d6  f7fffffe          BL       strcpy
0001da  f04f0100          MOV      r1,#0                 ;2261
0001de  485f              LDR      r0,|L12.860|
0001e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;2261
0001e4  eb000080          ADD      r0,r0,r0,LSL #2       ;2261
0001e8  4a5e              LDR      r2,|L12.868|
0001ea  eb021000          ADD      r0,r2,r0,LSL #4       ;2261
0001ee  7001              STRB     r1,[r0,#0]            ;2261
0001f0  981a              LDR      r0,[sp,#0x68]         ;2261
0001f2  e767              B        |L12.196|
                  |L12.500|
0001f4  e001              B        |L12.506|
                  |L12.502|
0001f6  981a              LDR      r0,[sp,#0x68]         ;2261
0001f8  e764              B        |L12.196|
                  |L12.506|
0001fa  981b              LDR      r0,[sp,#0x6c]         ;2267
0001fc  2802              CMP      r0,#2                 ;2267
0001fe  d102              BNE      |L12.518|
000200  9823              LDR      r0,[sp,#0x8c]         ;2268
000202  281e              CMP      r0,#0x1e              ;2268
000204  d005              BEQ      |L12.530|
                  |L12.518|
000206  981b              LDR      r0,[sp,#0x6c]         ;2269
000208  2801              CMP      r0,#1                 ;2269
00020a  d117              BNE      |L12.572|
00020c  9823              LDR      r0,[sp,#0x8c]         ;2269
00020e  2814              CMP      r0,#0x14              ;2269
000210  d114              BNE      |L12.572|
                  |L12.530|
000212  4622              MOV      r2,r4                 ;2270
000214  462b              MOV      r3,r5                 ;2270
000216  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2270
00021a  f7fffffe          BL       __aeabi_dsub
00021e  4632              MOV      r2,r6                 ;2270
000220  463b              MOV      r3,r7                 ;2270
000222  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2270
000226  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2270
00022a  f7fffffe          BL       __aeabi_dsub
00022e  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2270
000232  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2270
000236  f7fffffe          BL       atan2
00023a  e013              B        |L12.612|
                  |L12.572|
00023c  4620              MOV      r0,r4                 ;2271
00023e  4629              MOV      r1,r5                 ;2271
000240  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2271
000244  f7fffffe          BL       __aeabi_dsub
000248  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2271
00024c  4630              MOV      r0,r6                 ;2271
00024e  4639              MOV      r1,r7                 ;2271
000250  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2271
000254  f7fffffe          BL       __aeabi_dsub
000258  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2271
00025c  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2271
000260  f7fffffe          BL       atan2
                  |L12.612|
000264  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;2271
000268  f50a4030          ADD      r0,r10,#0xb000        ;2273
00026c  f50070bc          ADD      r0,r0,#0x178          ;2273
000270  c030              STM      r0!,{r4,r5}           ;2273
000272  f50a4030          ADD      r0,r10,#0xb000        ;2274
000276  f50070c0          ADD      r0,r0,#0x180          ;2274
00027a  c0c0              STM      r0!,{r6,r7}           ;2274
00027c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;2276
000280  f7fffffe          BL       ||cos||
000284  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2276
000288  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2276
00028c  f7fffffe          BL       __aeabi_dmul
000290  4622              MOV      r2,r4                 ;2276
000292  462b              MOV      r3,r5                 ;2276
000294  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2276
000298  f7fffffe          BL       __aeabi_dadd
00029c  4604              MOV      r4,r0                 ;2276
00029e  460d              MOV      r5,r1                 ;2276
0002a0  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;2278
0002a4  f7fffffe          BL       ||sin||
0002a8  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2278
0002ac  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2278
0002b0  f7fffffe          BL       __aeabi_dmul
0002b4  4632              MOV      r2,r6                 ;2278
0002b6  463b              MOV      r3,r7                 ;2278
0002b8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2278
0002bc  f7fffffe          BL       __aeabi_dadd
0002c0  4606              MOV      r6,r0                 ;2278
0002c2  460f              MOV      r7,r1                 ;2278
0002c4  f8da03fc          LDR      r0,[r10,#0x3fc]       ;2280
0002c8  2801              CMP      r0,#1                 ;2280
0002ca  d121              BNE      |L12.784|
0002cc  a808              ADD      r0,sp,#0x20           ;2281
0002ce  e8a00bf0          STM      r0!,{r4-r9,r11}       ;2281
0002d2  f8cda03c          STR      r10,[sp,#0x3c]        ;2281
0002d6  9815              LDR      r0,[sp,#0x54]         ;2281
0002d8  9006              STR      r0,[sp,#0x18]         ;2281
0002da  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2281
0002de  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2281
0002e2  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2281
0002e6  e9cd0102          STRD     r0,r1,[sp,#8]         ;2281
0002ea  f50a7068          ADD      r0,r10,#0x3a0         ;2281
0002ee  c803              LDM      r0,{r0,r1}            ;2281
0002f0  e9cd0100          STRD     r0,r1,[sp,#0]         ;2281
0002f4  f50a7066          ADD      r0,r10,#0x398         ;2281
0002f8  c803              LDM      r0,{r0,r1}            ;2281
0002fa  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2281
0002fe  f50a7064          ADD      r0,r10,#0x390         ;2281
000302  c803              LDM      r0,{r0,r1}            ;2281
000304  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2281
000308  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2281
00030c  f7fffffe          BL       inverse_time_rate_arc
                  |L12.784|
000310  e9cd8906          STRD     r8,r9,[sp,#0x18]      ;2284
000314  9815              LDR      r0,[sp,#0x54]         ;2284
000316  9004              STR      r0,[sp,#0x10]         ;2284
000318  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2284
00031c  e9cd0102          STRD     r0,r1,[sp,#8]         ;2284
000320  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2284
000324  4632              MOV      r2,r6                 ;2284
000326  463b              MOV      r3,r7                 ;2284
000328  e9cd0100          STRD     r0,r1,[sp,#0]         ;2284
00032c  4620              MOV      r0,r4                 ;2284
00032e  4629              MOV      r1,r5                 ;2284
000330  f7fffffe          BL       ARC_FEED
000334  f50a7064          ADD      r0,r10,#0x390         ;2308
000338  c030              STM      r0!,{r4,r5}           ;2308
00033a  f50a7066          ADD      r0,r10,#0x398         ;2309
00033e  c0c0              STM      r0!,{r6,r7}           ;2309
000340  f8ca93a4          STR      r9,[r10,#0x3a4]       ;2310
000344  f8ca83a0          STR      r8,[r10,#0x3a0]       ;2310
000348  2000              MOVS     r0,#0                 ;2321
00034a  e6bb              B        |L12.196|
;;;2323   
                          ENDP

                  |L12.844|
                          DCD      0xeb1c432d
                  |L12.848|
                          DCD      0x3f2a36e2
                  |L12.852|
                          DCD      0xd2f1a9fc
                  |L12.856|
                          DCD      0x3f60624d
                  |L12.860|
                          DCD      _setup+0xc000
                  |L12.864|
                          DCD      |symbol_number.446|
                  |L12.868|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_arc_comp2||, CODE, READONLY, ALIGN=2

                  convert_arc_comp2 PROC
;;;2362   
;;;2363       static int convert_arc_comp2(                 /* ARGUMENTS                                 */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;2364       int move,                                     /* either G_2 (cw arc) or G_3 (ccw arc)           */
;;;2365       block_pointer block,                          /* pointer to a block of RS274/NGC instructions   */
;;;2366       setup_pointer settings,                       /* pointer to machine settings                    */
;;;2367       double end_x,                                 /* x-value at end of programmed (then actual) arc */
;;;2368       double end_y,                                 /* y-value at end of programmed (then actual) arc */
;;;2369       double end_z                                  /* z-value at end of arc                          */
;;;2370   #ifdef AA
;;;2371       , double AA_end                               /* a-value at end of arc                    *//*AA*/
;;;2372   #endif
;;;2373   #ifdef BB
;;;2374       , double BB_end                               /* b-value at end of arc                    *//*BB*/
;;;2375   #endif
;;;2376   #ifdef CC
;;;2377       , double CC_end                               /* c-value at end of arc                    *//*CC*/
;;;2378   #endif
;;;2379       )
;;;2380       {
000004  b0b7              SUB      sp,sp,#0xdc
000006  4616              MOV      r6,r2
000008  ac44              ADD      r4,sp,#0x110
00000a  e89407b0          LDM      r4,{r4,r5,r7-r10}
;;;2381           static char name[] SET_TO "convert_arc_comp2";
;;;2382           double alpha;                             /* direction of tangent to start of arc */
;;;2383           double arc_radius;
;;;2384           double beta;                              /* angle between two tangents above */
;;;2385           double center_x;                          /* center of arc */
;;;2386           double center_y;
;;;2387           double delta;                             /* direction of radius from start of arc to center of arc */
;;;2388           double gamma;                             /* direction of perpendicular to arc at end */
;;;2389           double mid_x;
;;;2390           double mid_y;
;;;2391           int side;
;;;2392      /* angle for testing corners */
;;;2393           double small SET_TO TOLERANCE_CONCAVE_CORNER;
00000e  49ff              LDR      r1,|L13.1036|
000010  48ff              LDR      r0,|L13.1040|
000012  e9cd1022          STRD     r1,r0,[sp,#0x88]
;;;2394           double start_x;
;;;2395           double start_y;
;;;2396           int status;                               /* status returned from CHP function call     */
;;;2397           double theta;                             /* direction of tangent to last cut */
;;;2398           double tolerance;
;;;2399           double tool_radius;
;;;2400           int turn;                                 /* number of full or partial circles CCW */
;;;2401   
;;;2402      /* find basic arc data: center_x, center_y, and turn */
;;;2403   
;;;2404           start_x SET_TO settings->program_x;
000016  f5064130          ADD      r1,r6,#0xb000
00001a  f50171bc          ADD      r1,r1,#0x178
00001e  c903              LDM      r1,{r0,r1}
000020  e9cd0120          STRD     r0,r1,[sp,#0x80]
;;;2405           start_y SET_TO settings->program_y;
000024  f5064030          ADD      r0,r6,#0xb000
000028  f50070c0          ADD      r0,r0,#0x180
00002c  c803              LDM      r0,{r0,r1}
00002e  e9cd011e          STRD     r0,r1,[sp,#0x78]
;;;2406           tolerance SET_TO (settings->length_units IS CANON_UNITS_INCHES) ?
000032  f8d6051c          LDR      r0,[r6,#0x51c]
000036  2801              CMP      r0,#1
000038  d102              BNE      |L13.64|
;;;2407               TOLERANCE_INCH : TOLERANCE_MM;
00003a  48f6              LDR      r0,|L13.1044|
00003c  49f6              LDR      r1,|L13.1048|
00003e  e001              B        |L13.68|
                  |L13.64|
000040  48f6              LDR      r0,|L13.1052|
000042  49f7              LDR      r1,|L13.1056|
                  |L13.68|
000044  e9cd0118          STRD     r0,r1,[sp,#0x60]
;;;2408   
;;;2409           if (block->r_flag)
000048  9838              LDR      r0,[sp,#0xe0]
00004a  f8d001c0          LDR      r0,[r0,#0x1c0]
00004e  2800              CMP      r0,#0
000050  d043              BEQ      |L13.218|
;;;2410           {
;;;2411               CHP(arc_data_r(move, start_x, start_y, end_x, end_y,
000052  a815              ADD      r0,sp,#0x54
000054  a92c              ADD      r1,sp,#0xb0
000056  aa2e              ADD      r2,sp,#0xb8
000058  e9cd2108          STRD     r2,r1,[sp,#0x20]
00005c  900a              STR      r0,[sp,#0x28]
00005e  9838              LDR      r0,[sp,#0xe0]
000060  f50070e4          ADD      r0,r0,#0x1c8
000064  c803              LDM      r0,{r0,r1}
000066  aa02              ADD      r2,sp,#8
000068  e8a201b0          STM      r2!,{r4,r5,r7,r8}
00006c  e9cd0106          STRD     r0,r1,[sp,#0x18]
000070  e9dd011e          LDRD     r0,r1,[sp,#0x78]
000074  e9cd0100          STRD     r0,r1,[sp,#0]
000078  e9dd2320          LDRD     r2,r3,[sp,#0x80]
00007c  9837              LDR      r0,[sp,#0xdc]
00007e  f7fffffe          BL       arc_data_r
000082  901d              STR      r0,[sp,#0x74]
000084  2800              CMP      r0,#0
000086  d073              BEQ      |L13.368|
000088  48e6              LDR      r0,|L13.1060|
00008a  f8d0014c          LDR      r0,[r0,#0x14c]
00008e  2831              CMP      r0,#0x31
000090  da21              BGE      |L13.214|
000092  49e4              LDR      r1,|L13.1060|
000094  f8d1314c          LDR      r3,[r1,#0x14c]
000098  f8d1114c          LDR      r1,[r1,#0x14c]
00009c  1c49              ADDS     r1,r1,#1
00009e  4ae1              LDR      r2,|L13.1060|
0000a0  f8c2114c          STR      r1,[r2,#0x14c]
0000a4  eb030183          ADD      r1,r3,r3,LSL #2
0000a8  f6a26254          SUB      r2,r2,#0xe54
0000ac  eb021101          ADD      r1,r2,r1,LSL #4
0000b0  4608              MOV      r0,r1
0000b2  49dd              LDR      r1,|L13.1064|
0000b4  f7fffffe          BL       strcpy
0000b8  f04f0100          MOV      r1,#0
0000bc  48d9              LDR      r0,|L13.1060|
0000be  f8d0014c          LDR      r0,[r0,#0x14c]
0000c2  eb000080          ADD      r0,r0,r0,LSL #2
0000c6  4ad9              LDR      r2,|L13.1068|
0000c8  eb021000          ADD      r0,r2,r0,LSL #4
0000cc  7001              STRB     r1,[r0,#0]
0000ce  981d              LDR      r0,[sp,#0x74]
                  |L13.208|
;;;2412                   block->r_number, &center_x, &center_y, &turn));
;;;2413           }
;;;2414           else
;;;2415           {
;;;2416               CHP(arc_data_ijk(move, start_x, start_y, end_x, end_y,
;;;2417                   block->i_number, block->j_number,
;;;2418                   &center_x, &center_y, &turn, tolerance));
;;;2419           }
;;;2420   
;;;2421      /* compute other data */
;;;2422           side SET_TO settings->cutter_comp_side;
;;;2423      /* always is positive */
;;;2424           tool_radius SET_TO settings->cutter_comp_radius;
;;;2425           arc_radius SET_TO hypot((center_x - end_x), (center_y - end_y));
;;;2426           theta SET_TO
;;;2427               atan2(settings->current_y - start_y, settings->current_x - start_x);
;;;2428           theta SET_TO (side IS LEFT) ? (theta - PI2) : (theta + PI2);
;;;2429           delta SET_TO atan2(center_y - start_y, center_x - start_x);
;;;2430           alpha SET_TO (move IS G_3) ? (delta - PI2) : (delta + PI2);
;;;2431           beta SET_TO (side IS LEFT) ? (theta - alpha) : (alpha - theta);
;;;2432           beta SET_TO (beta > (1.5 * PI))  ? (beta - TWO_PI) :
;;;2433           (beta < -PI2) ? (beta + TWO_PI) : beta;
;;;2434   
;;;2435           if (((side IS LEFT)  AND (move IS G_3)) OR
;;;2436               ((side IS RIGHT) AND (move IS G_2)))
;;;2437           {
;;;2438               gamma SET_TO atan2 ((center_y - end_y), (center_x - end_x));
;;;2439               CHK((arc_radius <= tool_radius),
;;;2440                   NCE_TOOL_RADIUS_NOT_LESS_THAN_ARC_RADIUS_WITH_COMP);
;;;2441           }
;;;2442           else
;;;2443           {
;;;2444               gamma SET_TO atan2 ((end_y - center_y), (end_x - center_x));
;;;2445               delta SET_TO (delta + PI);
;;;2446           }
;;;2447   
;;;2448           settings->program_x SET_TO end_x;
;;;2449           settings->program_y SET_TO end_y;
;;;2450      /* end_x reset actual */
;;;2451           end_x SET_TO (end_x + (tool_radius * cos(gamma)));
;;;2452      /* end_y reset actual */
;;;2453           end_y SET_TO (end_y + (tool_radius * sin(gamma)));
;;;2454   
;;;2455      /* check if extra arc needed and insert if so */
;;;2456   
;;;2457           CHK(((beta < -small) OR (beta > (PI + small))),
;;;2458               NCE_CONCAVE_CORNER_WITH_CUTTER_RADIUS_COMP);
;;;2459           if (beta > small)                         /* two arcs needed */
;;;2460           {
;;;2461               mid_x SET_TO (start_x + (tool_radius * cos(delta)));
;;;2462               mid_y SET_TO (start_y + (tool_radius * sin(delta)));
;;;2463               if (settings->feed_mode IS INVERSE_TIME)
;;;2464                   inverse_time_rate_arc2(start_x, start_y, (side IS LEFT) ? -1 : 1,
;;;2465                   mid_x, mid_y, center_x, center_y, turn,
;;;2466                   end_x, end_y, end_z, block, settings);
;;;2467               ARC_FEED(mid_x, mid_y, start_x, start_y, ((side IS LEFT) ? -1 : 1),
;;;2468                   settings->current_z
;;;2469       #ifdef AA
;;;2470                   , AA_end
;;;2471       #else
;;;2472       #ifdef ALL_AXES
;;;2473                   , 0
;;;2474       #endif
;;;2475       #endif
;;;2476       #ifdef BB
;;;2477                   , BB_end
;;;2478       #else
;;;2479       #ifdef ALL_AXES
;;;2480                   , 0
;;;2481       #endif
;;;2482       #endif
;;;2483       #ifdef CC
;;;2484                   , CC_end
;;;2485       #else
;;;2486       #ifdef ALL_AXES
;;;2487                   , 0
;;;2488       #endif
;;;2489       #endif
;;;2490                   );
;;;2491               ARC_FEED(end_x, end_y, center_x, center_y, turn,
;;;2492                   end_z
;;;2493       #ifdef AA
;;;2494                   , AA_end
;;;2495       #else
;;;2496       #ifdef ALL_AXES
;;;2497                   , 0
;;;2498       #endif
;;;2499       #endif
;;;2500       #ifdef BB
;;;2501                   , BB_end
;;;2502       #else
;;;2503       #ifdef ALL_AXES
;;;2504                   , 0
;;;2505       #endif
;;;2506       #endif
;;;2507       #ifdef CC
;;;2508                   , CC_end
;;;2509       #else
;;;2510       #ifdef ALL_AXES
;;;2511                   , 0
;;;2512       #endif
;;;2513       #endif
;;;2514                   );
;;;2515           }
;;;2516           else                                      /* one arc needed */
;;;2517           {
;;;2518               if (settings->feed_mode IS INVERSE_TIME)
;;;2519                   inverse_time_rate_arc(settings->current_x, settings->current_y,
;;;2520                       settings->current_z, center_x, center_y, turn,
;;;2521                       end_x, end_y, end_z, block, settings);
;;;2522               ARC_FEED(end_x, end_y, center_x, center_y, turn,
;;;2523                   end_z
;;;2524       #ifdef AA
;;;2525                   , AA_end
;;;2526       #else
;;;2527       #ifdef ALL_AXES
;;;2528                   , 0
;;;2529       #endif
;;;2530       #endif
;;;2531       #ifdef BB
;;;2532                   , BB_end
;;;2533       #else
;;;2534       #ifdef ALL_AXES
;;;2535                   , 0
;;;2536       #endif
;;;2537       #endif
;;;2538       #ifdef CC
;;;2539                   , CC_end
;;;2540       #else
;;;2541       #ifdef ALL_AXES
;;;2542                   , 0
;;;2543       #endif
;;;2544       #endif
;;;2545                   );
;;;2546           }
;;;2547   
;;;2548           settings->current_x SET_TO end_x;
;;;2549           settings->current_y SET_TO end_y;
;;;2550           settings->current_z SET_TO end_z;
;;;2551   #ifdef AA
;;;2552           settings->AA_current SET_TO AA_end;       /*AA*/
;;;2553   #endif
;;;2554   #ifdef BB
;;;2555           settings->BB_current SET_TO BB_end;       /*BB*/
;;;2556   #endif
;;;2557   #ifdef CC
;;;2558           settings->CC_current SET_TO CC_end;       /*CC*/
;;;2559   #endif
;;;2560   
;;;2561           return RS274NGC_OK;
;;;2562       }
0000d0  b03b              ADD      sp,sp,#0xec
0000d2  e8bd8ff0          POP      {r4-r11,pc}
                  |L13.214|
0000d6  981d              LDR      r0,[sp,#0x74]         ;2411
0000d8  e7fa              B        |L13.208|
                  |L13.218|
0000da  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;2416
0000de  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;2416
0000e2  a815              ADD      r0,sp,#0x54           ;2416
0000e4  a92c              ADD      r1,sp,#0xb0           ;2416
0000e6  aa2e              ADD      r2,sp,#0xb8           ;2416
0000e8  e9cd210a          STRD     r2,r1,[sp,#0x28]      ;2416
0000ec  900c              STR      r0,[sp,#0x30]         ;2416
0000ee  9838              LDR      r0,[sp,#0xe0]         ;2416
0000f0  f50070b0          ADD      r0,r0,#0x160          ;2416
0000f4  c803              LDM      r0,{r0,r1}            ;2416
0000f6  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2416
0000fa  9838              LDR      r0,[sp,#0xe0]         ;2416
0000fc  f50070a8          ADD      r0,r0,#0x150          ;2416
000100  c803              LDM      r0,{r0,r1}            ;2416
000102  aa02              ADD      r2,sp,#8              ;2416
000104  e8a201b0          STM      r2!,{r4,r5,r7,r8}     ;2416
000108  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2416
00010c  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2416
000110  e9cd0100          STRD     r0,r1,[sp,#0]         ;2416
000114  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2416
000118  9837              LDR      r0,[sp,#0xdc]         ;2416
00011a  f7fffffe          BL       arc_data_ijk
00011e  901d              STR      r0,[sp,#0x74]         ;2416
000120  b318              CBZ      r0,|L13.362|
000122  48c0              LDR      r0,|L13.1060|
000124  f8d0014c          LDR      r0,[r0,#0x14c]        ;2416
000128  2831              CMP      r0,#0x31              ;2416
00012a  da1f              BGE      |L13.364|
00012c  49bd              LDR      r1,|L13.1060|
00012e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2416
000132  f8d1114c          LDR      r1,[r1,#0x14c]        ;2416
000136  1c49              ADDS     r1,r1,#1              ;2416
000138  4aba              LDR      r2,|L13.1060|
00013a  f8c2114c          STR      r1,[r2,#0x14c]        ;2416
00013e  eb030183          ADD      r1,r3,r3,LSL #2       ;2416
000142  4aba              LDR      r2,|L13.1068|
000144  eb021101          ADD      r1,r2,r1,LSL #4       ;2416
000148  4608              MOV      r0,r1                 ;2416
00014a  49b7              LDR      r1,|L13.1064|
00014c  f7fffffe          BL       strcpy
000150  f04f0100          MOV      r1,#0                 ;2416
000154  48b3              LDR      r0,|L13.1060|
000156  f8d0014c          LDR      r0,[r0,#0x14c]        ;2416
00015a  eb000080          ADD      r0,r0,r0,LSL #2       ;2416
00015e  4ab3              LDR      r2,|L13.1068|
000160  eb021000          ADD      r0,r2,r0,LSL #4       ;2416
000164  7001              STRB     r1,[r0,#0]            ;2416
000166  981d              LDR      r0,[sp,#0x74]         ;2416
000168  e7b2              B        |L13.208|
                  |L13.362|
00016a  e001              B        |L13.368|
                  |L13.364|
00016c  981d              LDR      r0,[sp,#0x74]         ;2416
00016e  e7af              B        |L13.208|
                  |L13.368|
000170  f5067664          ADD      r6,r6,#0x390          ;2422
000174  f8d6b020          LDR      r11,[r6,#0x20]        ;2422
000178  e9d60106          LDRD     r0,r1,[r6,#0x18]      ;2424
00017c  e9cd0116          STRD     r0,r1,[sp,#0x58]      ;2424
000180  463a              MOV      r2,r7                 ;2425
000182  4643              MOV      r3,r8                 ;2425
000184  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2425
000188  f7fffffe          BL       __aeabi_dsub
00018c  4622              MOV      r2,r4                 ;2425
00018e  462b              MOV      r3,r5                 ;2425
000190  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2425
000194  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2425
000198  f7fffffe          BL       __aeabi_dsub
00019c  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2425
0001a0  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2425
0001a4  f7fffffe          BL       hypot
0001a8  e9cd0132          STRD     r0,r1,[sp,#0xc8]      ;2425
0001ac  e9d60100          LDRD     r0,r1,[r6,#0]         ;2426
0001b0  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;2426
0001b4  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2426
0001b8  f7fffffe          BL       __aeabi_dsub
0001bc  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2426
0001c0  e9d61002          LDRD     r1,r0,[r6,#8]         ;2426
0001c4  f5a67664          SUB      r6,r6,#0x390          ;2426
0001c8  e9cd100e          STRD     r1,r0,[sp,#0x38]      ;2426
0001cc  4608              MOV      r0,r1                 ;2426
0001ce  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2426
0001d2  990f              LDR      r1,[sp,#0x3c]         ;2426
0001d4  f7fffffe          BL       __aeabi_dsub
0001d8  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2426
0001dc  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2426
0001e0  f7fffffe          BL       atan2
0001e4  e9cd011a          STRD     r0,r1,[sp,#0x68]      ;2426
0001e8  f1bb0f02          CMP      r11,#2                ;2428
0001ec  d106              BNE      |L13.508|
0001ee  4a90              LDR      r2,|L13.1072|
0001f0  4b90              LDR      r3,|L13.1076|
0001f2  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2428
0001f6  f7fffffe          BL       __aeabi_dsub
0001fa  e005              B        |L13.520|
                  |L13.508|
0001fc  4a8c              LDR      r2,|L13.1072|
0001fe  4b8d              LDR      r3,|L13.1076|
000200  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2428
000204  f7fffffe          BL       __aeabi_dadd
                  |L13.520|
000208  e9cd011a          STRD     r0,r1,[sp,#0x68]      ;2428
00020c  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2429
000210  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2429
000214  f7fffffe          BL       __aeabi_dsub
000218  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2429
00021c  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2429
000220  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2429
000224  f7fffffe          BL       __aeabi_dsub
000228  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2429
00022c  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2429
000230  f7fffffe          BL       atan2
000234  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;2429
000238  9837              LDR      r0,[sp,#0xdc]         ;2430
00023a  281e              CMP      r0,#0x1e              ;2430
00023c  d106              BNE      |L13.588|
00023e  4a7c              LDR      r2,|L13.1072|
000240  4b7c              LDR      r3,|L13.1076|
000242  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2430
000246  f7fffffe          BL       __aeabi_dsub
00024a  e005              B        |L13.600|
                  |L13.588|
00024c  4a78              LDR      r2,|L13.1072|
00024e  4b79              LDR      r3,|L13.1076|
000250  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2430
000254  f7fffffe          BL       __aeabi_dadd
                  |L13.600|
000258  e9cd0134          STRD     r0,r1,[sp,#0xd0]      ;2430
00025c  f1bb0f02          CMP      r11,#2                ;2431
000260  d106              BNE      |L13.624|
000262  e9dd2334          LDRD     r2,r3,[sp,#0xd0]      ;2431
000266  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;2431
00026a  f7fffffe          BL       __aeabi_dsub
00026e  e005              B        |L13.636|
                  |L13.624|
000270  e9dd231a          LDRD     r2,r3,[sp,#0x68]      ;2431
000274  e9dd0134          LDRD     r0,r1,[sp,#0xd0]      ;2431
000278  f7fffffe          BL       __aeabi_dsub
                  |L13.636|
00027c  e9cd0130          STRD     r0,r1,[sp,#0xc0]      ;2431
000280  4a6d              LDR      r2,|L13.1080|
000282  4b6e              LDR      r3,|L13.1084|
000284  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2432
000288  f7fffffe          BL       __aeabi_cdrcmple
00028c  d206              BCS      |L13.668|
00028e  4a68              LDR      r2,|L13.1072|
000290  4b6b              LDR      r3,|L13.1088|
000292  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2432
000296  f7fffffe          BL       __aeabi_dsub
00029a  e00f              B        |L13.700|
                  |L13.668|
00029c  4a64              LDR      r2,|L13.1072|
00029e  4b69              LDR      r3,|L13.1092|
0002a0  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2433
0002a4  f7fffffe          BL       __aeabi_cdcmple
0002a8  d206              BCS      |L13.696|
0002aa  4a61              LDR      r2,|L13.1072|
0002ac  4b64              LDR      r3,|L13.1088|
0002ae  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2433
0002b2  f7fffffe          BL       __aeabi_dadd
0002b6  e001              B        |L13.700|
                  |L13.696|
0002b8  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2433
                  |L13.700|
0002bc  e9cd0130          STRD     r0,r1,[sp,#0xc0]      ;2433
0002c0  f1bb0f02          CMP      r11,#2                ;2435
0002c4  d102              BNE      |L13.716|
0002c6  9837              LDR      r0,[sp,#0xdc]         ;2435
0002c8  281e              CMP      r0,#0x1e              ;2435
0002ca  d005              BEQ      |L13.728|
                  |L13.716|
0002cc  f1bb0f01          CMP      r11,#1                ;2436
0002d0  d145              BNE      |L13.862|
0002d2  9837              LDR      r0,[sp,#0xdc]         ;2436
0002d4  2814              CMP      r0,#0x14              ;2436
0002d6  d142              BNE      |L13.862|
                  |L13.728|
0002d8  4622              MOV      r2,r4                 ;2438
0002da  462b              MOV      r3,r5                 ;2438
0002dc  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2438
0002e0  f7fffffe          BL       __aeabi_dsub
0002e4  463a              MOV      r2,r7                 ;2438
0002e6  4643              MOV      r3,r8                 ;2438
0002e8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2438
0002ec  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2438
0002f0  f7fffffe          BL       __aeabi_dsub
0002f4  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2438
0002f8  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2438
0002fc  f7fffffe          BL       atan2
000300  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;2438
000304  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2439
000308  e9dd0132          LDRD     r0,r1,[sp,#0xc8]      ;2439
00030c  f7fffffe          BL       __aeabi_cdcmple
000310  d843              BHI      |L13.922|
000312  f04f0100          MOV      r1,#0                 ;2439
000316  4843              LDR      r0,|L13.1060|
000318  f8c0114c          STR      r1,[r0,#0x14c]        ;2439
00031c  4601              MOV      r1,r0                 ;2439
00031e  f8d1314c          LDR      r3,[r1,#0x14c]        ;2439
000322  f8d1114c          LDR      r1,[r1,#0x14c]        ;2439
000326  f1010101          ADD      r1,r1,#1              ;2439
00032a  4602              MOV      r2,r0                 ;2439
00032c  f8c2114c          STR      r1,[r2,#0x14c]        ;2439
000330  eb030183          ADD      r1,r3,r3,LSL #2       ;2439
000334  4a3d              LDR      r2,|L13.1068|
000336  eb021101          ADD      r1,r2,r1,LSL #4       ;2439
00033a  4608              MOV      r0,r1                 ;2439
00033c  493a              LDR      r1,|L13.1064|
00033e  f7fffffe          BL       strcpy
000342  f04f0100          MOV      r1,#0                 ;2439
000346  4837              LDR      r0,|L13.1060|
000348  f8d0014c          LDR      r0,[r0,#0x14c]        ;2439
00034c  eb000080          ADD      r0,r0,r0,LSL #2       ;2439
000350  4a36              LDR      r2,|L13.1068|
000352  eb021000          ADD      r0,r2,r0,LSL #4       ;2439
000356  7001              STRB     r1,[r0,#0]            ;2439
000358  f04f00a7          MOV      r0,#0xa7              ;2439
00035c  e6b8              B        |L13.208|
                  |L13.862|
00035e  4620              MOV      r0,r4                 ;2444
000360  4629              MOV      r1,r5                 ;2444
000362  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;2444
000366  f7fffffe          BL       __aeabi_dsub
00036a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2444
00036e  4638              MOV      r0,r7                 ;2444
000370  4641              MOV      r1,r8                 ;2444
000372  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;2444
000376  f7fffffe          BL       __aeabi_dsub
00037a  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2444
00037e  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;2444
000382  f7fffffe          BL       atan2
000386  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;2444
00038a  4a29              LDR      r2,|L13.1072|
00038c  4b2e              LDR      r3,|L13.1096|
00038e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2445
000392  f7fffffe          BL       __aeabi_dadd
000396  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;2445
                  |L13.922|
00039a  f5064030          ADD      r0,r6,#0xb000         ;2448
00039e  f50070bc          ADD      r0,r0,#0x178          ;2448
0003a2  c030              STM      r0!,{r4,r5}           ;2448
0003a4  f5064030          ADD      r0,r6,#0xb000         ;2449
0003a8  f8c08184          STR      r8,[r0,#0x184]        ;2449
0003ac  f8c07180          STR      r7,[r0,#0x180]        ;2449
0003b0  e9dd0128          LDRD     r0,r1,[sp,#0xa0]      ;2451
0003b4  f7fffffe          BL       ||cos||
0003b8  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2451
0003bc  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2451
0003c0  f7fffffe          BL       __aeabi_dmul
0003c4  4622              MOV      r2,r4                 ;2451
0003c6  462b              MOV      r3,r5                 ;2451
0003c8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2451
0003cc  f7fffffe          BL       __aeabi_dadd
0003d0  4604              MOV      r4,r0                 ;2451
0003d2  460d              MOV      r5,r1                 ;2451
0003d4  e9dd0128          LDRD     r0,r1,[sp,#0xa0]      ;2453
0003d8  f7fffffe          BL       ||sin||
0003dc  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2453
0003e0  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2453
0003e4  f7fffffe          BL       __aeabi_dmul
0003e8  463a              MOV      r2,r7                 ;2453
0003ea  4643              MOV      r3,r8                 ;2453
0003ec  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2453
0003f0  f7fffffe          BL       __aeabi_dadd
0003f4  4607              MOV      r7,r0                 ;2453
0003f6  4688              MOV      r8,r1                 ;2453
0003f8  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;2457
0003fc  f0814100          EOR      r1,r1,#0x80000000     ;2457
000400  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2457
000404  e9dd2330          LDRD     r2,r3,[sp,#0xc0]      ;2457
000408  e020              B        |L13.1100|
00040a  0000              DCW      0x0000
                  |L13.1036|
                          DCD      0x47ae147b
                  |L13.1040|
                          DCD      0x3f847ae1
                  |L13.1044|
                          DCD      0xeb1c432d
                  |L13.1048|
                          DCD      0x3f2a36e2
                  |L13.1052|
                          DCD      0xd2f1a9fc
                  |L13.1056|
                          DCD      0x3f60624d
                  |L13.1060|
                          DCD      _setup+0xc000
                  |L13.1064|
                          DCD      |symbol_number.447|
                  |L13.1068|
                          DCD      _setup+0xb1ac
                  |L13.1072|
                          DCD      0x54442d18
                  |L13.1076|
                          DCD      0x3ff921fb
                  |L13.1080|
                          DCD      0x7f3321d2
                  |L13.1084|
                          DCD      0x4012d97c
                  |L13.1088|
                          DCD      0x401921fb
                  |L13.1092|
                          DCD      0xbff921fb
                  |L13.1096|
                          DCD      0x400921fb
                  |L13.1100|
00044c  f7fffffe          BL       __aeabi_cdrcmple
000450  d30c              BCC      |L13.1132|
000452  4880              LDR      r0,|L13.1620|
000454  4980              LDR      r1,|L13.1624|
000456  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;2457
00045a  f7fffffe          BL       __aeabi_dadd
00045e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2457
000462  e9dd2330          LDRD     r2,r3,[sp,#0xc0]      ;2457
000466  f7fffffe          BL       __aeabi_cdcmple
00046a  d226              BCS      |L13.1210|
                  |L13.1132|
00046c  f04f0100          MOV      r1,#0                 ;2457
000470  487a              LDR      r0,|L13.1628|
000472  f8c0114c          STR      r1,[r0,#0x14c]        ;2457
000476  4601              MOV      r1,r0                 ;2457
000478  f8d1314c          LDR      r3,[r1,#0x14c]        ;2457
00047c  f8d1114c          LDR      r1,[r1,#0x14c]        ;2457
000480  f1010101          ADD      r1,r1,#1              ;2457
000484  4602              MOV      r2,r0                 ;2457
000486  f8c2114c          STR      r1,[r2,#0x14c]        ;2457
00048a  eb030183          ADD      r1,r3,r3,LSL #2       ;2457
00048e  f6a06254          SUB      r2,r0,#0xe54          ;2457
000492  eb021101          ADD      r1,r2,r1,LSL #4       ;2457
000496  4608              MOV      r0,r1                 ;2457
000498  4971              LDR      r1,|L13.1632|
00049a  f7fffffe          BL       strcpy
00049e  f04f0100          MOV      r1,#0                 ;2457
0004a2  486e              LDR      r0,|L13.1628|
0004a4  f8d0014c          LDR      r0,[r0,#0x14c]        ;2457
0004a8  eb000080          ADD      r0,r0,r0,LSL #2       ;2457
0004ac  4a6d              LDR      r2,|L13.1636|
0004ae  eb021000          ADD      r0,r2,r0,LSL #4       ;2457
0004b2  7001              STRB     r1,[r0,#0]            ;2457
0004b4  f04f0043          MOV      r0,#0x43              ;2457
0004b8  e60a              B        |L13.208|
                  |L13.1210|
0004ba  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;2459
0004be  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;2459
0004c2  f7fffffe          BL       __aeabi_cdrcmple
0004c6  d27c              BCS      |L13.1474|
0004c8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2461
0004cc  f7fffffe          BL       ||cos||
0004d0  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2461
0004d4  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2461
0004d8  f7fffffe          BL       __aeabi_dmul
0004dc  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2461
0004e0  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;2461
0004e4  f7fffffe          BL       __aeabi_dadd
0004e8  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;2461
0004ec  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;2462
0004f0  f7fffffe          BL       ||sin||
0004f4  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;2462
0004f8  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;2462
0004fc  f7fffffe          BL       __aeabi_dmul
000500  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2462
000504  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2462
000508  f7fffffe          BL       __aeabi_dadd
00050c  e9cd0124          STRD     r0,r1,[sp,#0x90]      ;2462
000510  f8d603fc          LDR      r0,[r6,#0x3fc]        ;2463
000514  2801              CMP      r0,#1                 ;2463
000516  d125              BNE      |L13.1380|
000518  9838              LDR      r0,[sp,#0xe0]         ;2464
00051a  a90c              ADD      r1,sp,#0x30           ;2464
00051c  e8a107b0          STM      r1!,{r4,r5,r7-r10}    ;2464
000520  e9cd0612          STRD     r0,r6,[sp,#0x48]      ;2464
000524  9815              LDR      r0,[sp,#0x54]         ;2464
000526  900a              STR      r0,[sp,#0x28]         ;2464
000528  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2464
00052c  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;2464
000530  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2464
000534  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2464
000538  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;2464
00053c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2464
000540  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;2464
000544  e9cd0102          STRD     r0,r1,[sp,#8]         ;2464
000548  f1bb0f02          CMP      r11,#2                ;2464
00054c  d102              BNE      |L13.1364|
00054e  f04f30ff          MOV      r0,#0xffffffff        ;2464
000552  e000              B        |L13.1366|
                  |L13.1364|
000554  2001              MOVS     r0,#1                 ;2464
                  |L13.1366|
000556  9000              STR      r0,[sp,#0]            ;2464
000558  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;2464
00055c  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2464
000560  f7fffffe          BL       inverse_time_rate_arc2
                  |L13.1380|
000564  f5067068          ADD      r0,r6,#0x3a0          ;2467
000568  c803              LDM      r0,{r0,r1}            ;2467
00056a  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2467
00056e  f1bb0f02          CMP      r11,#2                ;2467
000572  d102              BNE      |L13.1402|
000574  f04f30ff          MOV      r0,#0xffffffff        ;2467
000578  e000              B        |L13.1404|
                  |L13.1402|
00057a  2001              MOVS     r0,#1                 ;2467
                  |L13.1404|
00057c  9004              STR      r0,[sp,#0x10]         ;2467
00057e  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;2467
000582  e9cd0102          STRD     r0,r1,[sp,#8]         ;2467
000586  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;2467
00058a  e9cd0100          STRD     r0,r1,[sp,#0]         ;2467
00058e  e9dd2324          LDRD     r2,r3,[sp,#0x90]      ;2467
000592  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;2467
000596  f7fffffe          BL       ARC_FEED
00059a  e9cd9a06          STRD     r9,r10,[sp,#0x18]     ;2491
00059e  9815              LDR      r0,[sp,#0x54]         ;2491
0005a0  9004              STR      r0,[sp,#0x10]         ;2491
0005a2  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2491
0005a6  e9cd0102          STRD     r0,r1,[sp,#8]         ;2491
0005aa  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2491
0005ae  463a              MOV      r2,r7                 ;2491
0005b0  4643              MOV      r3,r8                 ;2491
0005b2  e9cd0100          STRD     r0,r1,[sp,#0]         ;2491
0005b6  4620              MOV      r0,r4                 ;2491
0005b8  4629              MOV      r1,r5                 ;2491
0005ba  f7fffffe          BL       ARC_FEED
0005be  e03b              B        |L13.1592|
0005c0  e7ff              B        |L13.1474|
                  |L13.1474|
0005c2  f8d603fc          LDR      r0,[r6,#0x3fc]        ;2518
0005c6  2801              CMP      r0,#1                 ;2518
0005c8  d124              BNE      |L13.1556|
0005ca  9838              LDR      r0,[sp,#0xe0]         ;2519
0005cc  a908              ADD      r1,sp,#0x20           ;2519
0005ce  e8a107b0          STM      r1!,{r4,r5,r7-r10}    ;2519
0005d2  e9cd060e          STRD     r0,r6,[sp,#0x38]      ;2519
0005d6  9815              LDR      r0,[sp,#0x54]         ;2519
0005d8  9006              STR      r0,[sp,#0x18]         ;2519
0005da  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2519
0005de  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2519
0005e2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2519
0005e6  f5067664          ADD      r6,r6,#0x390          ;2519
0005ea  e9cd0102          STRD     r0,r1,[sp,#8]         ;2519
0005ee  e9d60104          LDRD     r0,r1,[r6,#0x10]      ;2519
0005f2  e9cd0100          STRD     r0,r1,[sp,#0]         ;2519
0005f6  e9d60102          LDRD     r0,r1,[r6,#8]         ;2519
0005fa  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;2519
0005fe  e9d61000          LDRD     r1,r0,[r6,#0]         ;2519
000602  f5a67664          SUB      r6,r6,#0x390          ;2519
000606  e9cd1010          STRD     r1,r0,[sp,#0x40]      ;2519
00060a  4608              MOV      r0,r1                 ;2519
00060c  a911              ADD      r1,sp,#0x44           ;2519
00060e  c90e              LDM      r1,{r1-r3}            ;2519
000610  f7fffffe          BL       inverse_time_rate_arc
                  |L13.1556|
000614  e9cd9a06          STRD     r9,r10,[sp,#0x18]     ;2522
000618  9815              LDR      r0,[sp,#0x54]         ;2522
00061a  9004              STR      r0,[sp,#0x10]         ;2522
00061c  e9dd012c          LDRD     r0,r1,[sp,#0xb0]      ;2522
000620  e9cd0102          STRD     r0,r1,[sp,#8]         ;2522
000624  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;2522
000628  463a              MOV      r2,r7                 ;2522
00062a  4643              MOV      r3,r8                 ;2522
00062c  e9cd0100          STRD     r0,r1,[sp,#0]         ;2522
000630  4620              MOV      r0,r4                 ;2522
000632  4629              MOV      r1,r5                 ;2522
000634  f7fffffe          BL       ARC_FEED
                  |L13.1592|
000638  f5067064          ADD      r0,r6,#0x390          ;2548
00063c  c030              STM      r0!,{r4,r5}           ;2548
00063e  f8c6839c          STR      r8,[r6,#0x39c]        ;2549
000642  f8c67398          STR      r7,[r6,#0x398]        ;2549
000646  f8c6a3a4          STR      r10,[r6,#0x3a4]       ;2550
00064a  f8c693a0          STR      r9,[r6,#0x3a0]        ;2550
00064e  2000              MOVS     r0,#0                 ;2561
000650  e53e              B        |L13.208|
;;;2563   
                          ENDP

000652  0000              DCW      0x0000
                  |L13.1620|
                          DCD      0x54442d18
                  |L13.1624|
                          DCD      0x400921fb
                  |L13.1628|
                          DCD      _setup+0xc000
                  |L13.1632|
                          DCD      |symbol_number.447|
                  |L13.1636|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_axis_offsets||, CODE, READONLY, ALIGN=2

                  convert_axis_offsets PROC
;;;2622   
;;;2623       static int convert_axis_offsets(              /* ARGUMENTS                               */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;2624       int g_code,                                   /* g_code being executed (must be in G_92 series) */
;;;2625       block_pointer block,                          /* pointer to a block of RS274/NGC instructions   */
;;;2626       setup_pointer settings)                       /* pointer to machine settings                    */
;;;2627       {
000004  b089              SUB      sp,sp,#0x24
000006  4681              MOV      r9,r0
000008  4688              MOV      r8,r1
00000a  4614              MOV      r4,r2
;;;2628           static char name[] SET_TO "convert_axis_offsets";
;;;2629           double * pars;                            /* short name for settings->parameters            */
;;;2630   
;;;2631           CHK((settings->cutter_comp_side ISNT OFF),/* not "IS ON" */
00000c  f8d403b0          LDR      r0,[r4,#0x3b0]
000010  b340              CBZ      r0,|L14.100|
000012  f04f0100          MOV      r1,#0
000016  48ff              LDR      r0,|L14.1044|
000018  f8c0114c          STR      r1,[r0,#0x14c]
00001c  4601              MOV      r1,r0
00001e  f8d1314c          LDR      r3,[r1,#0x14c]
000022  f8d1114c          LDR      r1,[r1,#0x14c]
000026  f1010101          ADD      r1,r1,#1
00002a  4602              MOV      r2,r0
00002c  f8c2114c          STR      r1,[r2,#0x14c]
000030  eb030183          ADD      r1,r3,r3,LSL #2
000034  f6a06254          SUB      r2,r0,#0xe54
000038  eb021101          ADD      r1,r2,r1,LSL #4
00003c  4608              MOV      r0,r1
00003e  49f6              LDR      r1,|L14.1048|
000040  f7fffffe          BL       strcpy
000044  f04f0100          MOV      r1,#0
000048  48f2              LDR      r0,|L14.1044|
00004a  f8d0014c          LDR      r0,[r0,#0x14c]
00004e  eb000080          ADD      r0,r0,r0,LSL #2
000052  4af2              LDR      r2,|L14.1052|
000054  eb021000          ADD      r0,r2,r0,LSL #4
000058  7001              STRB     r1,[r0,#0]
00005a  f04f0026          MOV      r0,#0x26
                  |L14.94|
;;;2632               NCE_CANNOT_CHANGE_AXIS_OFFSETS_WITH_CUTTER_RADIUS_COMP);
;;;2633           pars SET_TO settings->parameters;
;;;2634           if (g_code IS G_92)
;;;2635           {
;;;2636               if (block->x_flag IS ON)
;;;2637               {
;;;2638                   settings->axis_offset_x SET_TO
;;;2639                       (settings->current_x + settings->axis_offset_x - block->x_number);
;;;2640                   settings->current_x SET_TO block->x_number;
;;;2641               }
;;;2642   
;;;2643               if (block->y_flag IS ON)
;;;2644               {
;;;2645                   settings->axis_offset_y SET_TO
;;;2646                       (settings->current_y + settings->axis_offset_y - block->y_number);
;;;2647                   settings->current_y SET_TO block->y_number;
;;;2648               }
;;;2649   
;;;2650               if (block->z_flag IS ON)
;;;2651               {
;;;2652                   settings->axis_offset_z SET_TO
;;;2653                       (settings->current_z + settings->axis_offset_z - block->z_number);
;;;2654                   settings->current_z SET_TO block->z_number;
;;;2655               }
;;;2656   
;;;2657   #ifdef AA
;;;2658               if (block->a_flag IS ON)              /*AA*/
;;;2659   #endif
;;;2660   #ifdef AA
;;;2661               {                                     /*AA*/
;;;2662                   settings->AA_axis_offset SET_TO (settings->AA_current +
;;;2663       #endif
;;;2664       #ifdef AA
;;;2665      /*AA*/
;;;2666                       settings->AA_axis_offset - block->a_number);
;;;2667   #endif
;;;2668   #ifdef AA
;;;2669      /*AA*/
;;;2670                   settings->AA_current SET_TO block->a_number;
;;;2671               }
;;;2672   #endif
;;;2673   
;;;2674   #ifdef BB
;;;2675               if (block->b_flag IS ON)              /*BB*/
;;;2676   #endif
;;;2677   #ifdef BB
;;;2678               {                                     /*BB*/
;;;2679                   settings->BB_axis_offset SET_TO (settings->BB_current +
;;;2680       #endif
;;;2681       #ifdef BB
;;;2682      /*BB*/
;;;2683                       settings->BB_axis_offset - block->b_number);
;;;2684   #endif
;;;2685   #ifdef BB
;;;2686      /*BB*/
;;;2687                   settings->BB_current SET_TO block->b_number;
;;;2688               }
;;;2689   #endif
;;;2690   
;;;2691   #ifdef CC
;;;2692               if (block->c_flag IS ON)              /*CC*/
;;;2693   #endif
;;;2694   #ifdef CC
;;;2695               {                                     /*CC*/
;;;2696                   settings->CC_axis_offset SET_TO (settings->CC_current +
;;;2697       #endif
;;;2698       #ifdef CC
;;;2699      /*CC*/
;;;2700                       settings->CC_axis_offset - block->c_number);
;;;2701   #endif
;;;2702   #ifdef CC
;;;2703      /*CC*/
;;;2704                   settings->CC_current SET_TO block->c_number;
;;;2705               }
;;;2706   #endif
;;;2707   
;;;2708               SET_ORIGIN_OFFSETS(settings->origin_offset_x + settings->axis_offset_x,
;;;2709                   settings->origin_offset_y + settings->axis_offset_y,
;;;2710                   settings->origin_offset_z + settings->axis_offset_z
;;;2711       #ifdef AA
;;;2712                   ,                      (settings->AA_origin_offset + settings->AA_axis_offset)
;;;2713       #else
;;;2714       #ifdef ALL_AXES
;;;2715                   , 0
;;;2716       #endif
;;;2717       #endif
;;;2718       #ifdef BB
;;;2719                   ,                      (settings->BB_origin_offset + settings->BB_axis_offset)
;;;2720       #else
;;;2721       #ifdef ALL_AXES
;;;2722                   , 0
;;;2723       #endif
;;;2724       #endif
;;;2725       #ifdef CC
;;;2726                   ,                      (settings->CC_origin_offset + settings->CC_axis_offset)
;;;2727       #else
;;;2728       #ifdef ALL_AXES
;;;2729                   , 0
;;;2730       #endif
;;;2731       #endif
;;;2732                   );
;;;2733               pars[5211] SET_TO settings->axis_offset_x;
;;;2734               pars[5212] SET_TO settings->axis_offset_y;
;;;2735               pars[5213] SET_TO settings->axis_offset_z;
;;;2736   #ifdef AA
;;;2737      /*AA*/
;;;2738               pars[5214] SET_TO settings->AA_axis_offset;
;;;2739   #endif
;;;2740   #ifdef BB
;;;2741      /*BB*/
;;;2742               pars[5215] SET_TO settings->BB_axis_offset;
;;;2743   #endif
;;;2744   #ifdef CC
;;;2745      /*CC*/
;;;2746               pars[5216] SET_TO settings->CC_axis_offset;
;;;2747   #endif
;;;2748   
;;;2749           }
;;;2750           else if ((g_code IS G_92_1) OR (g_code IS G_92_2))
;;;2751           {
;;;2752               settings->current_x SET_TO
;;;2753                   settings->current_x + settings->axis_offset_x;
;;;2754               settings->current_y SET_TO
;;;2755                   settings->current_y + settings->axis_offset_y;
;;;2756               settings->current_z SET_TO
;;;2757                   settings->current_z + settings->axis_offset_z;
;;;2758   #ifdef AA
;;;2759               settings->AA_current SET_TO           /*AA*/
;;;2760       #endif
;;;2761       #ifdef AA
;;;2762      /*AA*/
;;;2763                   (settings->AA_current + settings->AA_axis_offset);
;;;2764   #endif
;;;2765   #ifdef BB
;;;2766               settings->BB_current SET_TO           /*BB*/
;;;2767       #endif
;;;2768       #ifdef BB
;;;2769      /*BB*/
;;;2770                   (settings->BB_current + settings->BB_axis_offset);
;;;2771   #endif
;;;2772   #ifdef CC
;;;2773               settings->CC_current SET_TO           /*CC*/
;;;2774       #endif
;;;2775       #ifdef CC
;;;2776      /*CC*/
;;;2777                   (settings->CC_current + settings->CC_axis_offset);
;;;2778   #endif
;;;2779               SET_ORIGIN_OFFSETS(settings->origin_offset_x,
;;;2780                   settings->origin_offset_y,
;;;2781                   settings->origin_offset_z
;;;2782       #ifdef AA
;;;2783                   ,            settings->AA_origin_offset
;;;2784       #else
;;;2785       #ifdef ALL_AXES
;;;2786                   , 0
;;;2787       #endif
;;;2788       #endif
;;;2789       #ifdef BB
;;;2790                   ,            settings->BB_origin_offset
;;;2791       #else
;;;2792       #ifdef ALL_AXES
;;;2793                   , 0
;;;2794       #endif
;;;2795       #endif
;;;2796       #ifdef CC
;;;2797                   ,            settings->CC_origin_offset
;;;2798       #else
;;;2799       #ifdef ALL_AXES
;;;2800                   , 0
;;;2801       #endif
;;;2802       #endif
;;;2803                   );
;;;2804               settings->axis_offset_x SET_TO 0.0;
;;;2805               settings->axis_offset_y SET_TO 0.0;
;;;2806               settings->axis_offset_z SET_TO 0.0;
;;;2807   #ifdef AA
;;;2808               settings->AA_axis_offset SET_TO 0.0;  /*AA*/
;;;2809   #endif
;;;2810   #ifdef BB
;;;2811               settings->BB_axis_offset SET_TO 0.0;  /*BB*/
;;;2812   #endif
;;;2813   #ifdef CC
;;;2814               settings->CC_axis_offset SET_TO 0.0;  /*CC*/
;;;2815   #endif
;;;2816               if (g_code IS G_92_1)
;;;2817               {
;;;2818                   pars[5211] SET_TO 0.0;
;;;2819                   pars[5212] SET_TO 0.0;
;;;2820                   pars[5213] SET_TO 0.0;
;;;2821   #ifdef AA
;;;2822                   pars[5214] SET_TO 0.0;            /*AA*/
;;;2823   #endif
;;;2824   #ifdef BB
;;;2825                   pars[5215] SET_TO 0.0;            /*BB*/
;;;2826   #endif
;;;2827   #ifdef CC
;;;2828                   pars[5216] SET_TO 0.0;            /*CC*/
;;;2829   #endif
;;;2830               }
;;;2831           }
;;;2832           else if (g_code IS G_92_3)
;;;2833           {
;;;2834               settings->current_x SET_TO
;;;2835                   settings->current_x + settings->axis_offset_x - pars[5211];
;;;2836               settings->current_y SET_TO
;;;2837                   settings->current_y + settings->axis_offset_y - pars[5212];
;;;2838               settings->current_z SET_TO
;;;2839                   settings->current_z + settings->axis_offset_z - pars[5213];
;;;2840   #ifdef AA
;;;2841               settings->AA_current SET_TO           /*AA*/
;;;2842       #endif
;;;2843       #ifdef AA
;;;2844      /*AA*/
;;;2845                   settings->AA_current + settings->AA_axis_offset - pars[5214];
;;;2846   #endif
;;;2847   #ifdef BB
;;;2848               settings->BB_current SET_TO           /*BB*/
;;;2849       #endif
;;;2850       #ifdef BB
;;;2851      /*BB*/
;;;2852                   settings->BB_current + settings->BB_axis_offset - pars[5215];
;;;2853   #endif
;;;2854   #ifdef CC
;;;2855               settings->CC_current SET_TO           /*CC*/
;;;2856       #endif
;;;2857       #ifdef CC
;;;2858      /*CC*/
;;;2859                   settings->CC_current + settings->CC_axis_offset - pars[5216];
;;;2860   #endif
;;;2861               settings->axis_offset_x SET_TO pars[5211];
;;;2862               settings->axis_offset_y SET_TO pars[5212];
;;;2863               settings->axis_offset_z SET_TO pars[5213];
;;;2864   #ifdef AA
;;;2865      /*AA*/
;;;2866               settings->AA_axis_offset SET_TO pars[5214];
;;;2867   #endif
;;;2868   #ifdef BB
;;;2869      /*BB*/
;;;2870               settings->BB_axis_offset SET_TO pars[5215];
;;;2871   #endif
;;;2872   #ifdef CC
;;;2873      /*CC*/
;;;2874               settings->CC_axis_offset SET_TO pars[5216];
;;;2875   #endif
;;;2876               SET_ORIGIN_OFFSETS(settings->origin_offset_x + settings->axis_offset_x,
;;;2877                   settings->origin_offset_y + settings->axis_offset_y,
;;;2878                   settings->origin_offset_z + settings->axis_offset_z
;;;2879       #ifdef AA
;;;2880                   ,                      (settings->AA_origin_offset + settings->AA_axis_offset)
;;;2881       #else
;;;2882       #ifdef ALL_AXES
;;;2883                   , 0
;;;2884       #endif
;;;2885       #endif
;;;2886       #ifdef BB
;;;2887                   ,                      (settings->BB_origin_offset + settings->BB_axis_offset)
;;;2888       #else
;;;2889       #ifdef ALL_AXES
;;;2890                   , 0
;;;2891       #endif
;;;2892       #endif
;;;2893       #ifdef CC
;;;2894                   ,                      (settings->CC_origin_offset + settings->CC_axis_offset)
;;;2895       #else
;;;2896       #ifdef ALL_AXES
;;;2897                   , 0
;;;2898       #endif
;;;2899       #endif
;;;2900                   );
;;;2901           }
;;;2902           else
;;;2903               ERM(NCE_BUG_CODE_NOT_IN_G92_SERIES);
;;;2904   
;;;2905           return RS274NGC_OK;
;;;2906       }
00005e  b009              ADD      sp,sp,#0x24
000060  e8bd8ff0          POP      {r4-r11,pc}
                  |L14.100|
000064  f50465c9          ADD      r5,r4,#0x648          ;2633
000068  f5b97f66          CMP      r9,#0x398             ;2634
00006c  d17d              BNE      |L14.362|
00006e  f8d801dc          LDR      r0,[r8,#0x1dc]        ;2636
000072  2801              CMP      r0,#1                 ;2636
000074  d11f              BNE      |L14.182|
000076  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;2638
00007a  460e              MOV      r6,r1                 ;2638
00007c  4607              MOV      r7,r0                 ;2638
00007e  f5047064          ADD      r0,r4,#0x390          ;2638
000082  c803              LDM      r0,{r0,r1}            ;2638
000084  4682              MOV      r10,r0                ;2638
000086  4632              MOV      r2,r6                 ;2638
000088  463b              MOV      r3,r7                 ;2638
00008a  f7fffffe          BL       __aeabi_dadd
00008e  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2638
000092  f50870f0          ADD      r0,r8,#0x1e0          ;2638
000096  c803              LDM      r0,{r0,r1}            ;2638
000098  4606              MOV      r6,r0                 ;2638
00009a  4632              MOV      r2,r6                 ;2638
00009c  460b              MOV      r3,r1                 ;2638
00009e  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2638
0000a2  f7fffffe          BL       __aeabi_dsub
0000a6  e9c4011a          STRD     r0,r1,[r4,#0x68]      ;2638
0000aa  f50870f0          ADD      r0,r8,#0x1e0          ;2640
0000ae  c803              LDM      r0,{r0,r1}            ;2640
0000b0  f5047264          ADD      r2,r4,#0x390          ;2640
0000b4  c203              STM      r2!,{r0,r1}           ;2640
                  |L14.182|
0000b6  f8d801e8          LDR      r0,[r8,#0x1e8]        ;2643
0000ba  2801              CMP      r0,#1                 ;2643
0000bc  d124              BNE      |L14.264|
0000be  e9d4011c          LDRD     r0,r1,[r4,#0x70]      ;2645
0000c2  4606              MOV      r6,r0                 ;2645
0000c4  460f              MOV      r7,r1                 ;2645
0000c6  f8d41398          LDR      r1,[r4,#0x398]        ;2645
0000ca  468a              MOV      r10,r1                ;2645
0000cc  f8d4039c          LDR      r0,[r4,#0x39c]        ;2645
0000d0  4683              MOV      r11,r0                ;2645
0000d2  4632              MOV      r2,r6                 ;2645
0000d4  463b              MOV      r3,r7                 ;2645
0000d6  4650              MOV      r0,r10                ;2645
0000d8  4659              MOV      r1,r11                ;2645
0000da  f7fffffe          BL       __aeabi_dadd
0000de  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2645
0000e2  f8d811f0          LDR      r1,[r8,#0x1f0]        ;2645
0000e6  460e              MOV      r6,r1                 ;2645
0000e8  4632              MOV      r2,r6                 ;2645
0000ea  f8d801f4          LDR      r0,[r8,#0x1f4]        ;2645
0000ee  4603              MOV      r3,r0                 ;2645
0000f0  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2645
0000f4  f7fffffe          BL       __aeabi_dsub
0000f8  e9c4011c          STRD     r0,r1,[r4,#0x70]      ;2645
0000fc  f50870f8          ADD      r0,r8,#0x1f0          ;2647
000100  c803              LDM      r0,{r0,r1}            ;2647
000102  f5047266          ADD      r2,r4,#0x398          ;2647
000106  c203              STM      r2!,{r0,r1}           ;2647
                  |L14.264|
000108  f8d801f8          LDR      r0,[r8,#0x1f8]        ;2650
00010c  2801              CMP      r0,#1                 ;2650
00010e  d11f              BNE      |L14.336|
000110  e9d4101e          LDRD     r1,r0,[r4,#0x78]      ;2652
000114  460e              MOV      r6,r1                 ;2652
000116  4607              MOV      r7,r0                 ;2652
000118  f5047068          ADD      r0,r4,#0x3a0          ;2652
00011c  c803              LDM      r0,{r0,r1}            ;2652
00011e  4682              MOV      r10,r0                ;2652
000120  4632              MOV      r2,r6                 ;2652
000122  463b              MOV      r3,r7                 ;2652
000124  f7fffffe          BL       __aeabi_dadd
000128  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2652
00012c  f5087000          ADD      r0,r8,#0x200          ;2652
000130  c803              LDM      r0,{r0,r1}            ;2652
000132  4606              MOV      r6,r0                 ;2652
000134  4632              MOV      r2,r6                 ;2652
000136  460b              MOV      r3,r1                 ;2652
000138  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2652
00013c  f7fffffe          BL       __aeabi_dsub
000140  e9c4011e          STRD     r0,r1,[r4,#0x78]      ;2652
000144  f5087000          ADD      r0,r8,#0x200          ;2654
000148  c803              LDM      r0,{r0,r1}            ;2654
00014a  f5047268          ADD      r2,r4,#0x3a0          ;2654
00014e  c203              STM      r2!,{r0,r1}           ;2654
                  |L14.336|
000150  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2708
000154  4606              MOV      r6,r0                 ;2708
000156  460f              MOV      r7,r1                 ;2708
000158  f50460c8          ADD      r0,r4,#0x640          ;2708
00015c  c803              LDM      r0,{r0,r1}            ;2708
00015e  4682              MOV      r10,r0                ;2708
000160  4632              MOV      r2,r6                 ;2708
000162  463b              MOV      r3,r7                 ;2708
000164  f7fffffe          BL       __aeabi_dadd
000168  e000              B        |L14.364|
                  |L14.362|
00016a  e03f              B        |L14.492|
                  |L14.364|
00016c  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2708
000170  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;2708
000174  460e              MOV      r6,r1                 ;2708
000176  4607              MOV      r7,r0                 ;2708
000178  f50460c7          ADD      r0,r4,#0x638          ;2708
00017c  c803              LDM      r0,{r0,r1}            ;2708
00017e  4682              MOV      r10,r0                ;2708
000180  4632              MOV      r2,r6                 ;2708
000182  463b              MOV      r3,r7                 ;2708
000184  f7fffffe          BL       __aeabi_dadd
000188  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2708
00018c  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;2708
000190  460e              MOV      r6,r1                 ;2708
000192  4607              MOV      r7,r0                 ;2708
000194  f8d41630          LDR      r1,[r4,#0x630]        ;2708
000198  468a              MOV      r10,r1                ;2708
00019a  f8d40634          LDR      r0,[r4,#0x634]        ;2708
00019e  4683              MOV      r11,r0                ;2708
0001a0  4632              MOV      r2,r6                 ;2708
0001a2  463b              MOV      r3,r7                 ;2708
0001a4  4650              MOV      r0,r10                ;2708
0001a6  4659              MOV      r1,r11                ;2708
0001a8  f7fffffe          BL       __aeabi_dadd
0001ac  e9cd0102          STRD     r0,r1,[sp,#8]         ;2708
0001b0  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2708
0001b4  e9cd0100          STRD     r0,r1,[sp,#0]         ;2708
0001b8  a802              ADD      r0,sp,#8              ;2708
0001ba  c80f              LDM      r0,{r0-r3}            ;2708
0001bc  f7fffffe          BL       SET_ORIGIN_OFFSETS
0001c0  f5054220          ADD      r2,r5,#0xa000         ;2733
0001c4  e9d4011a          LDRD     r0,r1,[r4,#0x68]      ;2733
0001c8  f5027236          ADD      r2,r2,#0x2d8          ;2733
0001cc  c203              STM      r2!,{r0,r1}           ;2733
0001ce  f5054020          ADD      r0,r5,#0xa000         ;2734
0001d2  e9d4121c          LDRD     r1,r2,[r4,#0x70]      ;2734
0001d6  f5007038          ADD      r0,r0,#0x2e0          ;2734
0001da  c006              STM      r0!,{r1,r2}           ;2734
0001dc  f5054220          ADD      r2,r5,#0xa000         ;2735
0001e0  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2735
0001e4  f502723a          ADD      r2,r2,#0x2e8          ;2735
0001e8  c203              STM      r2!,{r0,r1}           ;2735
                  |L14.490|
0001ea  e157              B        |L14.1180|
                  |L14.492|
0001ec  f5a97040          SUB      r0,r9,#0x300          ;2750
0001f0  3899              SUBS     r0,r0,#0x99           ;2750
0001f2  d001              BEQ      |L14.504|
0001f4  1e40              SUBS     r0,r0,#1              ;2750
0001f6  d164              BNE      |L14.706|
                  |L14.504|
0001f8  e9d4011a          LDRD     r0,r1,[r4,#0x68]      ;2752
0001fc  4606              MOV      r6,r0                 ;2752
0001fe  460f              MOV      r7,r1                 ;2752
000200  f8d41390          LDR      r1,[r4,#0x390]        ;2752
000204  468a              MOV      r10,r1                ;2752
000206  f8d40394          LDR      r0,[r4,#0x394]        ;2752
00020a  4683              MOV      r11,r0                ;2752
00020c  4632              MOV      r2,r6                 ;2752
00020e  463b              MOV      r3,r7                 ;2752
000210  4650              MOV      r0,r10                ;2752
000212  4659              MOV      r1,r11                ;2752
000214  f7fffffe          BL       __aeabi_dadd
000218  f5047264          ADD      r2,r4,#0x390          ;2752
00021c  c203              STM      r2!,{r0,r1}           ;2752
00021e  e9d4011c          LDRD     r0,r1,[r4,#0x70]      ;2754
000222  4682              MOV      r10,r0                ;2754
000224  468b              MOV      r11,r1                ;2754
000226  f5047066          ADD      r0,r4,#0x398          ;2754
00022a  c803              LDM      r0,{r0,r1}            ;2754
00022c  4606              MOV      r6,r0                 ;2754
00022e  4652              MOV      r2,r10                ;2754
000230  465b              MOV      r3,r11                ;2754
000232  f7fffffe          BL       __aeabi_dadd
000236  f5047266          ADD      r2,r4,#0x398          ;2754
00023a  c203              STM      r2!,{r0,r1}           ;2754
00023c  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2756
000240  4682              MOV      r10,r0                ;2756
000242  468b              MOV      r11,r1                ;2756
000244  f5047068          ADD      r0,r4,#0x3a0          ;2756
000248  c803              LDM      r0,{r0,r1}            ;2756
00024a  4606              MOV      r6,r0                 ;2756
00024c  4652              MOV      r2,r10                ;2756
00024e  465b              MOV      r3,r11                ;2756
000250  f7fffffe          BL       __aeabi_dadd
000254  f5047268          ADD      r2,r4,#0x3a0          ;2756
000258  c203              STM      r2!,{r0,r1}           ;2756
00025a  f50460c8          ADD      r0,r4,#0x640          ;2779
00025e  c803              LDM      r0,{r0,r1}            ;2779
000260  e9cd0100          STRD     r0,r1,[sp,#0]         ;2779
000264  f8d41638          LDR      r1,[r4,#0x638]        ;2779
000268  460e              MOV      r6,r1                 ;2779
00026a  f8d4063c          LDR      r0,[r4,#0x63c]        ;2779
00026e  4607              MOV      r7,r0                 ;2779
000270  f8d41630          LDR      r1,[r4,#0x630]        ;2779
000274  468a              MOV      r10,r1                ;2779
000276  f8d40634          LDR      r0,[r4,#0x634]        ;2779
00027a  4683              MOV      r11,r0                ;2779
00027c  4632              MOV      r2,r6                 ;2779
00027e  463b              MOV      r3,r7                 ;2779
000280  4650              MOV      r0,r10                ;2779
000282  4659              MOV      r1,r11                ;2779
000284  f7fffffe          BL       SET_ORIGIN_OFFSETS
000288  f04f0100          MOV      r1,#0                 ;2804
00028c  66a1              STR      r1,[r4,#0x68]         ;2804
00028e  66e1              STR      r1,[r4,#0x6c]         ;2804
000290  6721              STR      r1,[r4,#0x70]         ;2805
000292  6761              STR      r1,[r4,#0x74]         ;2805
000294  67a1              STR      r1,[r4,#0x78]         ;2806
000296  67e1              STR      r1,[r4,#0x7c]         ;2806
000298  f5a97040          SUB      r0,r9,#0x300          ;2816
00029c  3899              SUBS     r0,r0,#0x99           ;2816
00029e  d1a4              BNE      |L14.490|
0002a0  4602              MOV      r2,r0                 ;2818
0002a2  f5054020          ADD      r0,r5,#0xa000         ;2818
0002a6  f8c022d8          STR      r2,[r0,#0x2d8]        ;2818
0002aa  f8c022dc          STR      r2,[r0,#0x2dc]        ;2818
0002ae  f8c022e0          STR      r2,[r0,#0x2e0]        ;2819
0002b2  f8c022e4          STR      r2,[r0,#0x2e4]        ;2819
0002b6  4602              MOV      r2,r0                 ;2820
0002b8  f8c212e8          STR      r1,[r2,#0x2e8]        ;2820
0002bc  f8c212ec          STR      r1,[r2,#0x2ec]        ;2820
0002c0  e0ec              B        |L14.1180|
                  |L14.706|
0002c2  f5a97040          SUB      r0,r9,#0x300          ;2832
0002c6  389b              SUBS     r0,r0,#0x9b           ;2832
0002c8  d17d              BNE      |L14.966|
0002ca  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;2834
0002ce  460e              MOV      r6,r1                 ;2834
0002d0  4607              MOV      r7,r0                 ;2834
0002d2  f8d41390          LDR      r1,[r4,#0x390]        ;2834
0002d6  468a              MOV      r10,r1                ;2834
0002d8  f8d40394          LDR      r0,[r4,#0x394]        ;2834
0002dc  4683              MOV      r11,r0                ;2834
0002de  4632              MOV      r2,r6                 ;2834
0002e0  463b              MOV      r3,r7                 ;2834
0002e2  4650              MOV      r0,r10                ;2834
0002e4  4659              MOV      r1,r11                ;2834
0002e6  f7fffffe          BL       __aeabi_dadd
0002ea  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2834
0002ee  f5054020          ADD      r0,r5,#0xa000         ;2834
0002f2  f8d012d8          LDR      r1,[r0,#0x2d8]        ;2834
0002f6  f8d002dc          LDR      r0,[r0,#0x2dc]        ;2834
0002fa  460e              MOV      r6,r1                 ;2834
0002fc  4632              MOV      r2,r6                 ;2834
0002fe  4603              MOV      r3,r0                 ;2834
000300  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2834
000304  f7fffffe          BL       __aeabi_dsub
000308  f5047264          ADD      r2,r4,#0x390          ;2834
00030c  c203              STM      r2!,{r0,r1}           ;2834
00030e  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;2836
000312  468a              MOV      r10,r1                ;2836
000314  4683              MOV      r11,r0                ;2836
000316  f8d41398          LDR      r1,[r4,#0x398]        ;2836
00031a  460e              MOV      r6,r1                 ;2836
00031c  f8d4039c          LDR      r0,[r4,#0x39c]        ;2836
000320  4607              MOV      r7,r0                 ;2836
000322  4652              MOV      r2,r10                ;2836
000324  465b              MOV      r3,r11                ;2836
000326  4630              MOV      r0,r6                 ;2836
000328  4639              MOV      r1,r7                 ;2836
00032a  f7fffffe          BL       __aeabi_dadd
00032e  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2836
000332  f5054120          ADD      r1,r5,#0xa000         ;2836
000336  f5017138          ADD      r1,r1,#0x2e0          ;2836
00033a  c903              LDM      r1,{r0,r1}            ;2836
00033c  4606              MOV      r6,r0                 ;2836
00033e  4632              MOV      r2,r6                 ;2836
000340  460b              MOV      r3,r1                 ;2836
000342  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2836
000346  f7fffffe          BL       __aeabi_dsub
00034a  f5047266          ADD      r2,r4,#0x398          ;2836
00034e  c203              STM      r2!,{r0,r1}           ;2836
000350  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2838
000354  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2838
000358  f8d413a0          LDR      r1,[r4,#0x3a0]        ;2838
00035c  460e              MOV      r6,r1                 ;2838
00035e  f8d403a4          LDR      r0,[r4,#0x3a4]        ;2838
000362  4607              MOV      r7,r0                 ;2838
000364  4630              MOV      r0,r6                 ;2838
000366  4639              MOV      r1,r7                 ;2838
000368  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;2838
00036c  f7fffffe          BL       __aeabi_dadd
000370  4682              MOV      r10,r0                ;2838
000372  468b              MOV      r11,r1                ;2838
000374  f5054120          ADD      r1,r5,#0xa000         ;2838
000378  f501713a          ADD      r1,r1,#0x2e8          ;2838
00037c  c903              LDM      r1,{r0,r1}            ;2838
00037e  4606              MOV      r6,r0                 ;2838
000380  4632              MOV      r2,r6                 ;2838
000382  460b              MOV      r3,r1                 ;2838
000384  4650              MOV      r0,r10                ;2838
000386  4659              MOV      r1,r11                ;2838
000388  f7fffffe          BL       __aeabi_dsub
00038c  f5047268          ADD      r2,r4,#0x3a0          ;2838
000390  c203              STM      r2!,{r0,r1}           ;2838
000392  f5054020          ADD      r0,r5,#0xa000         ;2861
000396  f5007036          ADD      r0,r0,#0x2d8          ;2861
00039a  c803              LDM      r0,{r0,r1}            ;2861
00039c  e9c4011a          STRD     r0,r1,[r4,#0x68]      ;2861
0003a0  f5054120          ADD      r1,r5,#0xa000         ;2862
0003a4  f5017138          ADD      r1,r1,#0x2e0          ;2862
0003a8  c903              LDM      r1,{r0,r1}            ;2862
0003aa  e9c4011c          STRD     r0,r1,[r4,#0x70]      ;2862
0003ae  f5054120          ADD      r1,r5,#0xa000         ;2863
0003b2  f501713a          ADD      r1,r1,#0x2e8          ;2863
0003b6  c903              LDM      r1,{r0,r1}            ;2863
0003b8  e9c4011e          STRD     r0,r1,[r4,#0x78]      ;2863
0003bc  e9d4011e          LDRD     r0,r1,[r4,#0x78]      ;2876
0003c0  4606              MOV      r6,r0                 ;2876
0003c2  460f              MOV      r7,r1                 ;2876
0003c4  e000              B        |L14.968|
                  |L14.966|
0003c6  e042              B        |L14.1102|
                  |L14.968|
0003c8  f8d41640          LDR      r1,[r4,#0x640]        ;2876
0003cc  468a              MOV      r10,r1                ;2876
0003ce  f8d40644          LDR      r0,[r4,#0x644]        ;2876
0003d2  4683              MOV      r11,r0                ;2876
0003d4  4632              MOV      r2,r6                 ;2876
0003d6  463b              MOV      r3,r7                 ;2876
0003d8  4650              MOV      r0,r10                ;2876
0003da  4659              MOV      r1,r11                ;2876
0003dc  f7fffffe          BL       __aeabi_dadd
0003e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;2876
0003e4  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;2876
0003e8  468a              MOV      r10,r1                ;2876
0003ea  4683              MOV      r11,r0                ;2876
0003ec  f8d41638          LDR      r1,[r4,#0x638]        ;2876
0003f0  460e              MOV      r6,r1                 ;2876
0003f2  f8d4063c          LDR      r0,[r4,#0x63c]        ;2876
0003f6  4607              MOV      r7,r0                 ;2876
0003f8  4652              MOV      r2,r10                ;2876
0003fa  465b              MOV      r3,r11                ;2876
0003fc  4630              MOV      r0,r6                 ;2876
0003fe  4639              MOV      r1,r7                 ;2876
000400  f7fffffe          BL       __aeabi_dadd
000404  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;2876
000408  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;2876
00040c  460e              MOV      r6,r1                 ;2876
00040e  4607              MOV      r7,r0                 ;2876
000410  e006              B        |L14.1056|
000412  0000              DCW      0x0000
                  |L14.1044|
                          DCD      _setup+0xc000
                  |L14.1048|
                          DCD      |symbol_number.448|
                  |L14.1052|
                          DCD      _setup+0xb1ac
                  |L14.1056|
000420  f8d41630          LDR      r1,[r4,#0x630]        ;2876
000424  468a              MOV      r10,r1                ;2876
000426  f8d40634          LDR      r0,[r4,#0x634]        ;2876
00042a  4683              MOV      r11,r0                ;2876
00042c  4632              MOV      r2,r6                 ;2876
00042e  463b              MOV      r3,r7                 ;2876
000430  4650              MOV      r0,r10                ;2876
000432  4659              MOV      r1,r11                ;2876
000434  f7fffffe          BL       __aeabi_dadd
000438  e9cd0102          STRD     r0,r1,[sp,#8]         ;2876
00043c  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;2876
000440  e9cd0100          STRD     r0,r1,[sp,#0]         ;2876
000444  a802              ADD      r0,sp,#8              ;2876
000446  c80f              LDM      r0,{r0-r3}            ;2876
000448  f7fffffe          BL       SET_ORIGIN_OFFSETS
00044c  e026              B        |L14.1180|
                  |L14.1102|
00044e  f04f0100          MOV      r1,#0                 ;2903
000452  4813              LDR      r0,|L14.1184|
000454  f8c0114c          STR      r1,[r0,#0x14c]        ;2903
000458  4601              MOV      r1,r0                 ;2903
00045a  f8d1314c          LDR      r3,[r1,#0x14c]        ;2903
00045e  f8d1114c          LDR      r1,[r1,#0x14c]        ;2903
000462  f1010101          ADD      r1,r1,#1              ;2903
000466  4602              MOV      r2,r0                 ;2903
000468  f8c2114c          STR      r1,[r2,#0x14c]        ;2903
00046c  eb030183          ADD      r1,r3,r3,LSL #2       ;2903
000470  f6a06254          SUB      r2,r0,#0xe54          ;2903
000474  eb021101          ADD      r1,r2,r1,LSL #4       ;2903
000478  4608              MOV      r0,r1                 ;2903
00047a  490a              LDR      r1,|L14.1188|
00047c  f7fffffe          BL       strcpy
000480  f04f0100          MOV      r1,#0                 ;2903
000484  4806              LDR      r0,|L14.1184|
000486  f8d0014c          LDR      r0,[r0,#0x14c]        ;2903
00048a  eb000080          ADD      r0,r0,r0,LSL #2       ;2903
00048e  4a06              LDR      r2,|L14.1192|
000490  eb021000          ADD      r0,r2,r0,LSL #4       ;2903
000494  7001              STRB     r1,[r0,#0]            ;2903
000496  f04f001c          MOV      r0,#0x1c              ;2903
00049a  e5e0              B        |L14.94|
                  |L14.1180|
00049c  2000              MOVS     r0,#0                 ;2905
00049e  e5de              B        |L14.94|
;;;2907   
                          ENDP

                  |L14.1184|
                          DCD      _setup+0xc000
                  |L14.1188|
                          DCD      |symbol_number.448|
                  |L14.1192|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_comment||, CODE, READONLY, ALIGN=1

                  convert_comment PROC
;;;2930   
;;;2931       static int convert_comment(                   /*ARGUMENTS            */
000000  b570              PUSH     {r4-r6,lr}
;;;2932       char * comment)                               /* string with comment */
;;;2933       {
000002  4606              MOV      r6,r0
;;;2934           int m;
;;;2935           int item;
;;;2936   
;;;2937           for (m SET_TO 0; ((item SET_TO comment[m]) IS ' ') OR (item IS '\t') ; m++);
000004  f04f0000          MOV      r0,#0
000008  4604              MOV      r4,r0
00000a  e002              B        |L15.18|
                  |L15.12|
00000c  f1040001          ADD      r0,r4,#1
000010  4604              MOV      r4,r0
                  |L15.18|
000012  5d35              LDRB     r5,[r6,r4]
000014  2d20              CMP      r5,#0x20
000016  d0f9              BEQ      |L15.12|
000018  2d09              CMP      r5,#9
00001a  d0f7              BEQ      |L15.12|
;;;2938           if ((item ISNT 'M') AND (item ISNT 'm'))
00001c  2d4d              CMP      r5,#0x4d
00001e  d006              BEQ      |L15.46|
000020  2d6d              CMP      r5,#0x6d
000022  d004              BEQ      |L15.46|
;;;2939           {
;;;2940               COMMENT(comment);
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       COMMENT
;;;2941               return RS274NGC_OK;
00002a  2000              MOVS     r0,#0
                  |L15.44|
;;;2942           }
;;;2943           for (m++; ((item SET_TO comment[m]) IS ' ') OR (item IS '\t') ; m++);
;;;2944           if ((item ISNT 'S') AND (item ISNT 's'))
;;;2945           {
;;;2946               COMMENT(comment);
;;;2947               return RS274NGC_OK;
;;;2948           }
;;;2949           for (m++; ((item SET_TO comment[m]) IS ' ') OR (item IS '\t') ; m++);
;;;2950           if ((item ISNT 'G') AND (item ISNT 'g'))
;;;2951           {
;;;2952               COMMENT(comment);
;;;2953               return RS274NGC_OK;
;;;2954           }
;;;2955           for (m++; ((item SET_TO comment[m]) IS ' ') OR (item IS '\t') ; m++);
;;;2956           if (item ISNT ',')
;;;2957           {
;;;2958               COMMENT(comment);
;;;2959               return RS274NGC_OK;
;;;2960           }
;;;2961           MESSAGE(comment + m + 1);
;;;2962           return RS274NGC_OK;
;;;2963       }
00002c  bd70              POP      {r4-r6,pc}
                  |L15.46|
00002e  f1040001          ADD      r0,r4,#1              ;2943
000032  4604              MOV      r4,r0                 ;2943
000034  e002              B        |L15.60|
                  |L15.54|
000036  f1040001          ADD      r0,r4,#1              ;2943
00003a  4604              MOV      r4,r0                 ;2943
                  |L15.60|
00003c  5d30              LDRB     r0,[r6,r4]            ;2943
00003e  4605              MOV      r5,r0                 ;2943
000040  2820              CMP      r0,#0x20              ;2943
000042  d0f8              BEQ      |L15.54|
000044  2d09              CMP      r5,#9                 ;2943
000046  d0f6              BEQ      |L15.54|
000048  2d53              CMP      r5,#0x53              ;2944
00004a  d006              BEQ      |L15.90|
00004c  2d73              CMP      r5,#0x73              ;2944
00004e  d004              BEQ      |L15.90|
000050  4630              MOV      r0,r6                 ;2946
000052  f7fffffe          BL       COMMENT
000056  2000              MOVS     r0,#0                 ;2947
000058  e7e8              B        |L15.44|
                  |L15.90|
00005a  f1040001          ADD      r0,r4,#1              ;2949
00005e  4604              MOV      r4,r0                 ;2949
000060  e002              B        |L15.104|
                  |L15.98|
000062  f1040001          ADD      r0,r4,#1              ;2949
000066  4604              MOV      r4,r0                 ;2949
                  |L15.104|
000068  5d30              LDRB     r0,[r6,r4]            ;2949
00006a  4605              MOV      r5,r0                 ;2949
00006c  2820              CMP      r0,#0x20              ;2949
00006e  d0f8              BEQ      |L15.98|
000070  2d09              CMP      r5,#9                 ;2949
000072  d0f6              BEQ      |L15.98|
000074  2d47              CMP      r5,#0x47              ;2950
000076  d006              BEQ      |L15.134|
000078  2d67              CMP      r5,#0x67              ;2950
00007a  d004              BEQ      |L15.134|
00007c  4630              MOV      r0,r6                 ;2952
00007e  f7fffffe          BL       COMMENT
000082  2000              MOVS     r0,#0                 ;2953
000084  e7d2              B        |L15.44|
                  |L15.134|
000086  f1040001          ADD      r0,r4,#1              ;2955
00008a  4604              MOV      r4,r0                 ;2955
00008c  e002              B        |L15.148|
                  |L15.142|
00008e  f1040001          ADD      r0,r4,#1              ;2955
000092  4604              MOV      r4,r0                 ;2955
                  |L15.148|
000094  5d30              LDRB     r0,[r6,r4]            ;2955
000096  4605              MOV      r5,r0                 ;2955
000098  2820              CMP      r0,#0x20              ;2955
00009a  d0f8              BEQ      |L15.142|
00009c  2d09              CMP      r5,#9                 ;2955
00009e  d0f6              BEQ      |L15.142|
0000a0  2d2c              CMP      r5,#0x2c              ;2956
0000a2  d004              BEQ      |L15.174|
0000a4  4630              MOV      r0,r6                 ;2958
0000a6  f7fffffe          BL       COMMENT
0000aa  2000              MOVS     r0,#0                 ;2959
0000ac  e7be              B        |L15.44|
                  |L15.174|
0000ae  1931              ADDS     r1,r6,r4              ;2961
0000b0  1c49              ADDS     r1,r1,#1              ;2961
0000b2  4608              MOV      r0,r1                 ;2961
0000b4  f7fffffe          BL       MESSAGE
0000b8  2000              MOVS     r0,#0                 ;2962
0000ba  e7b7              B        |L15.44|
;;;2964   
                          ENDP


                          AREA ||i.convert_control_mode||, CODE, READONLY, ALIGN=2

                  convert_control_mode PROC
;;;2997   
;;;2998       static int convert_control_mode(              /* ARGUMENTS                             */
000000  b570              PUSH     {r4-r6,lr}
;;;2999       int g_code,                                   /* g_code being executed (G_61, G61_1, OR G_64) */
;;;3000       setup_pointer settings)                       /* pointer to machine settings                  */
;;;3001       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;3002           static char name[] SET_TO "convert_control_mode";
;;;3003           if (g_code IS G_61)
000006  f5a47000          SUB      r0,r4,#0x200
00000a  3862              SUBS     r0,r0,#0x62
00000c  d107              BNE      |L16.30|
;;;3004           {
;;;3005               SET_MOTION_CONTROL_MODE(CANON_EXACT_PATH);
00000e  2002              MOVS     r0,#2
000010  f7fffffe          BL       SET_MOTION_CONTROL_MODE
;;;3006               settings->control_mode SET_TO CANON_EXACT_PATH;
000014  f04f0002          MOV      r0,#2
000018  f8c50388          STR      r0,[r5,#0x388]
00001c  e03d              B        |L16.154|
                  |L16.30|
;;;3007           }
;;;3008           else if (g_code IS G_61_1)
00001e  f5a47000          SUB      r0,r4,#0x200
000022  3863              SUBS     r0,r0,#0x63
000024  d107              BNE      |L16.54|
;;;3009           {
;;;3010               SET_MOTION_CONTROL_MODE(CANON_EXACT_STOP);
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       SET_MOTION_CONTROL_MODE
;;;3011               settings->control_mode SET_TO CANON_EXACT_STOP;
00002c  f04f0001          MOV      r0,#1
000030  f8c50388          STR      r0,[r5,#0x388]
000034  e031              B        |L16.154|
                  |L16.54|
;;;3012           }
;;;3013           else if (g_code IS G_64)
000036  f5b47f20          CMP      r4,#0x280
00003a  d107              BNE      |L16.76|
;;;3014           {
;;;3015               SET_MOTION_CONTROL_MODE(CANON_CONTINUOUS);
00003c  2003              MOVS     r0,#3
00003e  f7fffffe          BL       SET_MOTION_CONTROL_MODE
;;;3016               settings->control_mode SET_TO CANON_CONTINUOUS;
000042  f04f0003          MOV      r0,#3
000046  f8c50388          STR      r0,[r5,#0x388]
00004a  e026              B        |L16.154|
                  |L16.76|
;;;3017           }
;;;3018           else
;;;3019               ERM(NCE_BUG_CODE_NOT_G61_G61_1_OR_G64);
00004c  f04f0100          MOV      r1,#0
000050  4813              LDR      r0,|L16.160|
000052  f8c0114c          STR      r1,[r0,#0x14c]
000056  4601              MOV      r1,r0
000058  f8d1314c          LDR      r3,[r1,#0x14c]
00005c  f8d1114c          LDR      r1,[r1,#0x14c]
000060  f1010101          ADD      r1,r1,#1
000064  4602              MOV      r2,r0
000066  f8c2114c          STR      r1,[r2,#0x14c]
00006a  eb030183          ADD      r1,r3,r3,LSL #2
00006e  f6a06254          SUB      r2,r0,#0xe54
000072  eb021101          ADD      r1,r2,r1,LSL #4
000076  4608              MOV      r0,r1
000078  490a              LDR      r1,|L16.164|
00007a  f7fffffe          BL       strcpy
00007e  f04f0100          MOV      r1,#0
000082  4807              LDR      r0,|L16.160|
000084  f8d0014c          LDR      r0,[r0,#0x14c]
000088  eb000080          ADD      r0,r0,r0,LSL #2
00008c  4a06              LDR      r2,|L16.168|
00008e  eb021000          ADD      r0,r2,r0,LSL #4
000092  7001              STRB     r1,[r0,#0]
000094  f04f0018          MOV      r0,#0x18
                  |L16.152|
;;;3020           return RS274NGC_OK;
;;;3021       }
000098  bd70              POP      {r4-r6,pc}
                  |L16.154|
00009a  2000              MOVS     r0,#0                 ;3020
00009c  e7fc              B        |L16.152|
;;;3022   
                          ENDP

00009e  0000              DCW      0x0000
                  |L16.160|
                          DCD      _setup+0xc000
                  |L16.164|
                          DCD      |symbol_number.449|
                  |L16.168|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_coordinate_system||, CODE, READONLY, ALIGN=2

                  convert_coordinate_system PROC
;;;3093   
;;;3094       static int convert_coordinate_system(         /* ARGUMENTS                         */
000000  e92d4ff3          PUSH     {r0,r1,r4-r11,lr}
;;;3095       int g_code,                                   /* g_code called (must be one listed above)      */
;;;3096       setup_pointer settings)                       /* pointer to machine settings                   */
;;;3097       {
000004  b089              SUB      sp,sp,#0x24
000006  468a              MOV      r10,r1
;;;3098           static char name[] SET_TO "convert_coordinate_system";
;;;3099           int origin;
;;;3100           double x;
;;;3101           double y;
;;;3102           double z;
;;;3103   #ifdef AA
;;;3104           double a;                                 /*AA*/
;;;3105   #endif
;;;3106   #ifdef BB
;;;3107           double b;                                 /*BB*/
;;;3108   #endif
;;;3109   #ifdef CC
;;;3110           double c;                                 /*CC*/
;;;3111   #endif
;;;3112           double * parameters;
;;;3113   
;;;3114           parameters SET_TO settings->parameters;
000008  f50a60c9          ADD      r0,r10,#0x648
00000c  9008              STR      r0,[sp,#0x20]
;;;3115           switch(g_code)
00000e  9809              LDR      r0,[sp,#0x24]
000010  f5b07f11          CMP      r0,#0x244
000014  d023              BEQ      |L17.94|
000016  dc0b              BGT      |L17.48|
000018  f5b07f07          CMP      r0,#0x21c
00001c  d013              BEQ      |L17.70|
00001e  f5a07000          SUB      r0,r0,#0x200
000022  3826              SUBS     r0,r0,#0x26
000024  d012              BEQ      |L17.76|
000026  280a              CMP      r0,#0xa
000028  d013              BEQ      |L17.82|
00002a  2814              CMP      r0,#0x14
00002c  d126              BNE      |L17.124|
00002e  e013              B        |L17.88|
                  |L17.48|
000030  f5a07000          SUB      r0,r0,#0x200
000034  384e              SUBS     r0,r0,#0x4e
000036  d015              BEQ      |L17.100|
000038  2801              CMP      r0,#1
00003a  d016              BEQ      |L17.106|
00003c  2802              CMP      r0,#2
00003e  d017              BEQ      |L17.112|
000040  2803              CMP      r0,#3
000042  d11b              BNE      |L17.124|
000044  e017              B        |L17.118|
                  |L17.70|
;;;3116           {
;;;3117               case 540:
;;;3118                   origin SET_TO 1;
000046  f04f0b01          MOV      r11,#1
;;;3119                   break;
00004a  e040              B        |L17.206|
                  |L17.76|
;;;3120               case 550:
;;;3121                   origin SET_TO 2;
00004c  f04f0b02          MOV      r11,#2
;;;3122                   break;
000050  e03d              B        |L17.206|
                  |L17.82|
;;;3123               case 560:
;;;3124                   origin SET_TO 3;
000052  f04f0b03          MOV      r11,#3
;;;3125                   break;
000056  e03a              B        |L17.206|
                  |L17.88|
;;;3126               case 570:
;;;3127                   origin SET_TO 4;
000058  f04f0b04          MOV      r11,#4
;;;3128                   break;
00005c  e037              B        |L17.206|
                  |L17.94|
;;;3129               case 580:
;;;3130                   origin SET_TO 5;
00005e  f04f0b05          MOV      r11,#5
;;;3131                   break;
000062  e034              B        |L17.206|
                  |L17.100|
;;;3132               case 590:
;;;3133                   origin SET_TO 6;
000064  f04f0b06          MOV      r11,#6
;;;3134                   break;
000068  e031              B        |L17.206|
                  |L17.106|
;;;3135               case 591:
;;;3136                   origin SET_TO 7;
00006a  f04f0b07          MOV      r11,#7
;;;3137                   break;
00006e  e02e              B        |L17.206|
                  |L17.112|
;;;3138               case 592:
;;;3139                   origin SET_TO 8;
000070  f04f0b08          MOV      r11,#8
;;;3140                   break;
000074  e02b              B        |L17.206|
                  |L17.118|
;;;3141               case 593:
;;;3142                   origin SET_TO 9;
000076  f04f0b09          MOV      r11,#9
;;;3143                   break;
00007a  e028              B        |L17.206|
                  |L17.124|
;;;3144               default:
;;;3145                   ERM(NCE_BUG_CODE_NOT_IN_RANGE_G54_TO_G593);
00007c  f04f0100          MOV      r1,#0
000080  4872              LDR      r0,|L17.588|
000082  f8c0114c          STR      r1,[r0,#0x14c]
000086  4601              MOV      r1,r0
000088  f8d1314c          LDR      r3,[r1,#0x14c]
00008c  f8d1114c          LDR      r1,[r1,#0x14c]
000090  f1010101          ADD      r1,r1,#1
000094  4602              MOV      r2,r0
000096  f8c2114c          STR      r1,[r2,#0x14c]
00009a  eb030183          ADD      r1,r3,r3,LSL #2
00009e  f6a06254          SUB      r2,r0,#0xe54
0000a2  eb021101          ADD      r1,r2,r1,LSL #4
0000a6  4608              MOV      r0,r1
0000a8  4969              LDR      r1,|L17.592|
0000aa  f7fffffe          BL       strcpy
0000ae  f04f0100          MOV      r1,#0
0000b2  4866              LDR      r0,|L17.588|
0000b4  f8d0014c          LDR      r0,[r0,#0x14c]
0000b8  eb000080          ADD      r0,r0,r0,LSL #2
0000bc  4a65              LDR      r2,|L17.596|
0000be  eb021000          ADD      r0,r2,r0,LSL #4
0000c2  7001              STRB     r1,[r0,#0]
0000c4  f04f001d          MOV      r0,#0x1d
                  |L17.200|
;;;3146           }
;;;3147   
;;;3148           if (origin IS settings->origin_index)     /* already using this origin */
;;;3149           {
;;;3150   #ifdef DEBUG_EMC
;;;3151               COMMENT("interpreter: continuing to use same coordinate system");
;;;3152   #endif
;;;3153               return RS274NGC_OK;
;;;3154           }
;;;3155   
;;;3156           settings->origin_index SET_TO origin;
;;;3157           parameters[5220] SET_TO (double)origin;
;;;3158   
;;;3159      /* axis offsets could be included in the two set of calculations for
;;;3160         current_x, current_y, etc., but do not need to be because the results
;;;3161         would be the same. They would be added in then subtracted out. */
;;;3162           settings->current_x SET_TO
;;;3163               (settings->current_x + settings->origin_offset_x);
;;;3164           settings->current_y SET_TO
;;;3165               (settings->current_y + settings->origin_offset_y);
;;;3166           settings->current_z SET_TO
;;;3167               (settings->current_z + settings->origin_offset_z);
;;;3168   #ifdef AA
;;;3169           settings->AA_current SET_TO               /*AA*/
;;;3170       #endif
;;;3171       #ifdef AA
;;;3172      /*AA*/
;;;3173               (settings->AA_current + settings->AA_origin_offset);
;;;3174   #endif
;;;3175   #ifdef BB
;;;3176           settings->BB_current SET_TO               /*BB*/
;;;3177       #endif
;;;3178       #ifdef BB
;;;3179      /*BB*/
;;;3180               (settings->BB_current + settings->BB_origin_offset);
;;;3181   #endif
;;;3182   #ifdef CC
;;;3183           settings->CC_current SET_TO               /*CC*/
;;;3184       #endif
;;;3185       #ifdef CC
;;;3186      /*CC*/
;;;3187               (settings->CC_current + settings->CC_origin_offset);
;;;3188   #endif
;;;3189   
;;;3190           x SET_TO parameters[5201 + (origin * 20)];
;;;3191           y SET_TO parameters[5202 + (origin * 20)];
;;;3192           z SET_TO parameters[5203 + (origin * 20)];
;;;3193   #ifdef AA
;;;3194           a SET_TO parameters[5204 + (origin * 20)];/*AA*/
;;;3195   #endif
;;;3196   #ifdef BB
;;;3197           b SET_TO parameters[5205 + (origin * 20)];/*BB*/
;;;3198   #endif
;;;3199   #ifdef CC
;;;3200           c SET_TO parameters[5206 + (origin * 20)];/*CC*/
;;;3201   #endif
;;;3202   
;;;3203           settings->origin_offset_x SET_TO x;
;;;3204           settings->origin_offset_y SET_TO y;
;;;3205           settings->origin_offset_z SET_TO z;
;;;3206   #ifdef AA
;;;3207           settings->AA_origin_offset SET_TO a;      /*AA*/
;;;3208   #endif
;;;3209   #ifdef BB
;;;3210           settings->BB_origin_offset SET_TO b;      /*BB*/
;;;3211   #endif
;;;3212   #ifdef CC
;;;3213           settings->CC_origin_offset SET_TO c;      /*CC*/
;;;3214   #endif
;;;3215   
;;;3216           settings->current_x SET_TO (settings->current_x - x);
;;;3217           settings->current_y SET_TO (settings->current_y - y);
;;;3218           settings->current_z SET_TO (settings->current_z - z);
;;;3219   #ifdef AA
;;;3220      /*AA*/
;;;3221           settings->AA_current SET_TO (settings->AA_current - a);
;;;3222   #endif
;;;3223   #ifdef BB
;;;3224      /*BB*/
;;;3225           settings->BB_current SET_TO (settings->BB_current - b);
;;;3226   #endif
;;;3227   #ifdef CC
;;;3228      /*CC*/
;;;3229           settings->CC_current SET_TO (settings->CC_current - c);
;;;3230   #endif
;;;3231   
;;;3232           SET_ORIGIN_OFFSETS(x + settings->axis_offset_x,
;;;3233               y + settings->axis_offset_y,
;;;3234               z + settings->axis_offset_z
;;;3235       #ifdef AA
;;;3236               ,            a + settings->AA_axis_offset
;;;3237       #else
;;;3238       #ifdef ALL_AXES
;;;3239               , 0
;;;3240       #endif
;;;3241       #endif
;;;3242       #ifdef BB
;;;3243               ,            b + settings->BB_axis_offset
;;;3244       #else
;;;3245       #ifdef ALL_AXES
;;;3246               , 0
;;;3247       #endif
;;;3248       #endif
;;;3249       #ifdef CC
;;;3250               ,            c + settings->CC_axis_offset
;;;3251       #else
;;;3252       #ifdef ALL_AXES
;;;3253               , 0
;;;3254       #endif
;;;3255       #endif
;;;3256               );
;;;3257           return RS274NGC_OK;
;;;3258       }
0000c8  b00b              ADD      sp,sp,#0x2c
0000ca  e8bd8ff0          POP      {r4-r11,pc}
                  |L17.206|
0000ce  bf00              NOP                            ;3119
0000d0  f8da062c          LDR      r0,[r10,#0x62c]       ;3148
0000d4  4558              CMP      r0,r11                ;3148
0000d6  d104              BNE      |L17.226|
0000d8  a05f              ADR      r0,|L17.600|
0000da  f7fffffe          BL       COMMENT
0000de  2000              MOVS     r0,#0                 ;3153
0000e0  e7f2              B        |L17.200|
                  |L17.226|
0000e2  f8cab62c          STR      r11,[r10,#0x62c]      ;3156
0000e6  4658              MOV      r0,r11                ;3157
0000e8  f7fffffe          BL       __aeabi_i2d
0000ec  9a08              LDR      r2,[sp,#0x20]         ;3157
0000ee  f5024220          ADD      r2,r2,#0xa000         ;3157
0000f2  f5027248          ADD      r2,r2,#0x320          ;3157
0000f6  c203              STM      r2!,{r0,r1}           ;3157
0000f8  f50a60c6          ADD      r0,r10,#0x630         ;3162
0000fc  c803              LDM      r0,{r0,r1}            ;3162
0000fe  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3162
000102  f50a7064          ADD      r0,r10,#0x390         ;3162
000106  c803              LDM      r0,{r0,r1}            ;3162
000108  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;3162
00010c  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3162
000110  f7fffffe          BL       __aeabi_dadd
000114  f50a7264          ADD      r2,r10,#0x390         ;3162
000118  c203              STM      r2!,{r0,r1}           ;3162
00011a  f50a60c7          ADD      r0,r10,#0x638         ;3164
00011e  c803              LDM      r0,{r0,r1}            ;3164
000120  4602              MOV      r2,r0                 ;3164
000122  e9cd2106          STRD     r2,r1,[sp,#0x18]      ;3164
000126  f50a7066          ADD      r0,r10,#0x398         ;3164
00012a  c803              LDM      r0,{r0,r1}            ;3164
00012c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;3164
000130  9b07              LDR      r3,[sp,#0x1c]         ;3164
000132  f7fffffe          BL       __aeabi_dadd
000136  f50a7266          ADD      r2,r10,#0x398         ;3164
00013a  c203              STM      r2!,{r0,r1}           ;3164
00013c  f50a60c8          ADD      r0,r10,#0x640         ;3166
000140  c803              LDM      r0,{r0,r1}            ;3166
000142  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3166
000146  f50a7068          ADD      r0,r10,#0x3a0         ;3166
00014a  c803              LDM      r0,{r0,r1}            ;3166
00014c  4602              MOV      r2,r0                 ;3166
00014e  e9cd2104          STRD     r2,r1,[sp,#0x10]      ;3166
000152  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3166
000156  9804              LDR      r0,[sp,#0x10]         ;3166
000158  f7fffffe          BL       __aeabi_dadd
00015c  f50a7268          ADD      r2,r10,#0x3a0         ;3166
000160  c203              STM      r2!,{r0,r1}           ;3166
000162  eb0b008b          ADD      r0,r11,r11,LSL #2     ;3190
000166  f2414151          MOV      r1,#0x1451            ;3190
00016a  eb010180          ADD      r1,r1,r0,LSL #2       ;3190
00016e  9808              LDR      r0,[sp,#0x20]         ;3190
000170  eb0000c1          ADD      r0,r0,r1,LSL #3       ;3190
000174  c830              LDM      r0!,{r4,r5}           ;3190
000176  eb0b008b          ADD      r0,r11,r11,LSL #2     ;3191
00017a  f2414152          MOV      r1,#0x1452            ;3191
00017e  eb010180          ADD      r1,r1,r0,LSL #2       ;3191
000182  9808              LDR      r0,[sp,#0x20]         ;3191
000184  eb0000c1          ADD      r0,r0,r1,LSL #3       ;3191
000188  c8c0              LDM      r0!,{r6,r7}           ;3191
00018a  eb0b008b          ADD      r0,r11,r11,LSL #2     ;3192
00018e  f2414153          MOV      r1,#0x1453            ;3192
000192  eb010180          ADD      r1,r1,r0,LSL #2       ;3192
000196  9808              LDR      r0,[sp,#0x20]         ;3192
000198  eb0000c1          ADD      r0,r0,r1,LSL #3       ;3192
00019c  e9d08900          LDRD     r8,r9,[r0,#0]         ;3192
0001a0  f50a60c6          ADD      r0,r10,#0x630         ;3203
0001a4  c030              STM      r0!,{r4,r5}           ;3203
0001a6  f50a60c7          ADD      r0,r10,#0x638         ;3204
0001aa  c0c0              STM      r0!,{r6,r7}           ;3204
0001ac  f8ca9644          STR      r9,[r10,#0x644]       ;3205
0001b0  f8ca8640          STR      r8,[r10,#0x640]       ;3205
0001b4  f50a7064          ADD      r0,r10,#0x390         ;3216
0001b8  c803              LDM      r0,{r0,r1}            ;3216
0001ba  4622              MOV      r2,r4                 ;3216
0001bc  462b              MOV      r3,r5                 ;3216
0001be  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3216
0001c2  f7fffffe          BL       __aeabi_dsub
0001c6  f50a7264          ADD      r2,r10,#0x390         ;3216
0001ca  c203              STM      r2!,{r0,r1}           ;3216
0001cc  f50a7066          ADD      r0,r10,#0x398         ;3217
0001d0  c803              LDM      r0,{r0,r1}            ;3217
0001d2  4632              MOV      r2,r6                 ;3217
0001d4  463b              MOV      r3,r7                 ;3217
0001d6  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3217
0001da  f7fffffe          BL       __aeabi_dsub
0001de  f50a7266          ADD      r2,r10,#0x398         ;3217
0001e2  c203              STM      r2!,{r0,r1}           ;3217
0001e4  f50a7068          ADD      r0,r10,#0x3a0         ;3218
0001e8  c803              LDM      r0,{r0,r1}            ;3218
0001ea  4642              MOV      r2,r8                 ;3218
0001ec  464b              MOV      r3,r9                 ;3218
0001ee  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3218
0001f2  f7fffffe          BL       __aeabi_dsub
0001f6  f50a7268          ADD      r2,r10,#0x3a0         ;3218
0001fa  c203              STM      r2!,{r0,r1}           ;3218
0001fc  e9da011e          LDRD     r0,r1,[r10,#0x78]     ;3232
000200  4642              MOV      r2,r8                 ;3232
000202  464b              MOV      r3,r9                 ;3232
000204  e9cd0100          STRD     r0,r1,[sp,#0]         ;3232
000208  f7fffffe          BL       __aeabi_dadd
00020c  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;3232
000210  e9da011c          LDRD     r0,r1,[r10,#0x70]     ;3232
000214  4632              MOV      r2,r6                 ;3232
000216  463b              MOV      r3,r7                 ;3232
000218  e9cd0100          STRD     r0,r1,[sp,#0]         ;3232
00021c  f7fffffe          BL       __aeabi_dadd
000220  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;3232
000224  e9da011a          LDRD     r0,r1,[r10,#0x68]     ;3232
000228  4622              MOV      r2,r4                 ;3232
00022a  462b              MOV      r3,r5                 ;3232
00022c  e9cd0100          STRD     r0,r1,[sp,#0]         ;3232
000230  f7fffffe          BL       __aeabi_dadd
000234  e9cd0102          STRD     r0,r1,[sp,#8]         ;3232
000238  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;3232
00023c  e9cd0100          STRD     r0,r1,[sp,#0]         ;3232
000240  a802              ADD      r0,sp,#8              ;3232
000242  c80f              LDM      r0,{r0-r3}            ;3232
000244  f7fffffe          BL       SET_ORIGIN_OFFSETS
000248  2000              MOVS     r0,#0                 ;3257
00024a  e73d              B        |L17.200|
;;;3259   
                          ENDP

                  |L17.588|
                          DCD      _setup+0xc000
                  |L17.592|
                          DCD      |symbol_number.450|
                  |L17.596|
                          DCD      _setup+0xb1ac
                  |L17.600|
000258  696e7465          DCB      "interpreter: continuing to use same coordinate system",0
00025c  72707265
000260  7465723a
000264  20636f6e
000268  74696e75
00026c  696e6720
000270  746f2075
000274  73652073
000278  616d6520
00027c  636f6f72
000280  64696e61
000284  74652073
000288  79737465
00028c  6d00    
00028e  00                DCB      0
00028f  00                DCB      0

                          AREA ||i.convert_cutter_compensation||, CODE, READONLY, ALIGN=2

                  convert_cutter_compensation PROC
;;;3284   
;;;3285       static int convert_cutter_compensation(       /* ARGUMENTS                  */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;3286       int g_code,                                   /* must be G_40, G_41, or G_42              */
;;;3287       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;3288       setup_pointer settings)                       /* pointer to machine settings              */
;;;3289       {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4616              MOV      r6,r2
;;;3290           static char name[] SET_TO "convert_cutter_compensation";
;;;3291           int status;
;;;3292   
;;;3293           if (g_code IS G_40)
00000a  f5b47fc8          CMP      r4,#0x190
00000e  d12c              BNE      |L18.106|
;;;3294           {
;;;3295               CHP(convert_cutter_compensation_off(settings));
000010  4630              MOV      r0,r6
000012  f7fffffe          BL       convert_cutter_compensation_off
000016  0005              MOVS     r5,r0
000018  d07e              BEQ      |L18.280|
00001a  4859              LDR      r0,|L18.384|
00001c  f8d0014c          LDR      r0,[r0,#0x14c]
000020  2831              CMP      r0,#0x31
000022  da20              BGE      |L18.102|
000024  4956              LDR      r1,|L18.384|
000026  f8d1314c          LDR      r3,[r1,#0x14c]
00002a  f8d1114c          LDR      r1,[r1,#0x14c]
00002e  1c49              ADDS     r1,r1,#1
000030  4a53              LDR      r2,|L18.384|
000032  f8c2114c          STR      r1,[r2,#0x14c]
000036  eb030183          ADD      r1,r3,r3,LSL #2
00003a  f6a26254          SUB      r2,r2,#0xe54
00003e  eb021101          ADD      r1,r2,r1,LSL #4
000042  4608              MOV      r0,r1
000044  494f              LDR      r1,|L18.388|
000046  f7fffffe          BL       strcpy
00004a  f04f0100          MOV      r1,#0
00004e  484c              LDR      r0,|L18.384|
000050  f8d0014c          LDR      r0,[r0,#0x14c]
000054  eb000080          ADD      r0,r0,r0,LSL #2
000058  4a4b              LDR      r2,|L18.392|
00005a  eb021000          ADD      r0,r2,r0,LSL #4
00005e  7001              STRB     r1,[r0,#0]
000060  4628              MOV      r0,r5
                  |L18.98|
;;;3296           }
;;;3297           else if (g_code IS G_41)
;;;3298           {
;;;3299               CHP(convert_cutter_compensation_on(LEFT, block, settings));
;;;3300           }
;;;3301           else if (g_code IS G_42)
;;;3302           {
;;;3303               CHP(convert_cutter_compensation_on(RIGHT, block, settings));
;;;3304           }
;;;3305           else
;;;3306               ERM(NCE_BUG_CODE_NOT_G40_G41_OR_G42);
;;;3307   
;;;3308           return RS274NGC_OK;
;;;3309       }
000062  e8bd81f0          POP      {r4-r8,pc}
                  |L18.102|
000066  4628              MOV      r0,r5                 ;3295
000068  e7fb              B        |L18.98|
                  |L18.106|
00006a  f5b47fcd          CMP      r4,#0x19a             ;3297
00006e  d12c              BNE      |L18.202|
000070  4632              MOV      r2,r6                 ;3299
000072  4639              MOV      r1,r7                 ;3299
000074  2002              MOVS     r0,#2                 ;3299
000076  f7fffffe          BL       convert_cutter_compensation_on
00007a  0005              MOVS     r5,r0                 ;3299
00007c  d07d              BEQ      |L18.378|
00007e  4840              LDR      r0,|L18.384|
000080  f8d0014c          LDR      r0,[r0,#0x14c]        ;3299
000084  2831              CMP      r0,#0x31              ;3299
000086  da1e              BGE      |L18.198|
000088  493d              LDR      r1,|L18.384|
00008a  f8d1314c          LDR      r3,[r1,#0x14c]        ;3299
00008e  f8d1114c          LDR      r1,[r1,#0x14c]        ;3299
000092  1c49              ADDS     r1,r1,#1              ;3299
000094  4a3a              LDR      r2,|L18.384|
000096  f8c2114c          STR      r1,[r2,#0x14c]        ;3299
00009a  eb030183          ADD      r1,r3,r3,LSL #2       ;3299
00009e  4a3a              LDR      r2,|L18.392|
0000a0  eb021101          ADD      r1,r2,r1,LSL #4       ;3299
0000a4  4608              MOV      r0,r1                 ;3299
0000a6  4937              LDR      r1,|L18.388|
0000a8  f7fffffe          BL       strcpy
0000ac  f04f0100          MOV      r1,#0                 ;3299
0000b0  4833              LDR      r0,|L18.384|
0000b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;3299
0000b6  eb000080          ADD      r0,r0,r0,LSL #2       ;3299
0000ba  4a33              LDR      r2,|L18.392|
0000bc  eb021000          ADD      r0,r2,r0,LSL #4       ;3299
0000c0  7001              STRB     r1,[r0,#0]            ;3299
0000c2  4628              MOV      r0,r5                 ;3299
0000c4  e7cd              B        |L18.98|
                  |L18.198|
0000c6  4628              MOV      r0,r5                 ;3299
0000c8  e7cb              B        |L18.98|
                  |L18.202|
0000ca  f5b47fd2          CMP      r4,#0x1a4             ;3301
0000ce  d12e              BNE      |L18.302|
0000d0  4632              MOV      r2,r6                 ;3303
0000d2  4639              MOV      r1,r7                 ;3303
0000d4  2001              MOVS     r0,#1                 ;3303
0000d6  f7fffffe          BL       convert_cutter_compensation_on
0000da  0005              MOVS     r5,r0                 ;3303
0000dc  d04d              BEQ      |L18.378|
0000de  4828              LDR      r0,|L18.384|
0000e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;3303
0000e4  2831              CMP      r0,#0x31              ;3303
0000e6  da20              BGE      |L18.298|
0000e8  4925              LDR      r1,|L18.384|
0000ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;3303
0000ee  f8d1114c          LDR      r1,[r1,#0x14c]        ;3303
0000f2  1c49              ADDS     r1,r1,#1              ;3303
0000f4  4a22              LDR      r2,|L18.384|
0000f6  f8c2114c          STR      r1,[r2,#0x14c]        ;3303
0000fa  eb030183          ADD      r1,r3,r3,LSL #2       ;3303
0000fe  4a22              LDR      r2,|L18.392|
000100  eb021101          ADD      r1,r2,r1,LSL #4       ;3303
000104  4608              MOV      r0,r1                 ;3303
000106  491f              LDR      r1,|L18.388|
000108  f7fffffe          BL       strcpy
00010c  f04f0100          MOV      r1,#0                 ;3303
000110  481b              LDR      r0,|L18.384|
000112  f8d0014c          LDR      r0,[r0,#0x14c]        ;3303
000116  e000              B        |L18.282|
                  |L18.280|
000118  e02f              B        |L18.378|
                  |L18.282|
00011a  eb000080          ADD      r0,r0,r0,LSL #2       ;3303
00011e  4a1a              LDR      r2,|L18.392|
000120  eb021000          ADD      r0,r2,r0,LSL #4       ;3303
000124  7001              STRB     r1,[r0,#0]            ;3303
000126  4628              MOV      r0,r5                 ;3303
000128  e79b              B        |L18.98|
                  |L18.298|
00012a  4628              MOV      r0,r5                 ;3303
00012c  e799              B        |L18.98|
                  |L18.302|
00012e  f04f0100          MOV      r1,#0                 ;3306
000132  4813              LDR      r0,|L18.384|
000134  f8c0114c          STR      r1,[r0,#0x14c]        ;3306
000138  4601              MOV      r1,r0                 ;3306
00013a  f8d1314c          LDR      r3,[r1,#0x14c]        ;3306
00013e  f8d1114c          LDR      r1,[r1,#0x14c]        ;3306
000142  f1010101          ADD      r1,r1,#1              ;3306
000146  4602              MOV      r2,r0                 ;3306
000148  f8c2114c          STR      r1,[r2,#0x14c]        ;3306
00014c  eb030183          ADD      r1,r3,r3,LSL #2       ;3306
000150  4a0d              LDR      r2,|L18.392|
000152  eb021101          ADD      r1,r2,r1,LSL #4       ;3306
000156  4608              MOV      r0,r1                 ;3306
000158  490a              LDR      r1,|L18.388|
00015a  f7fffffe          BL       strcpy
00015e  f04f0100          MOV      r1,#0                 ;3306
000162  4807              LDR      r0,|L18.384|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;3306
000168  eb000080          ADD      r0,r0,r0,LSL #2       ;3306
00016c  4a06              LDR      r2,|L18.392|
00016e  eb021000          ADD      r0,r2,r0,LSL #4       ;3306
000172  7001              STRB     r1,[r0,#0]            ;3306
000174  f04f0015          MOV      r0,#0x15              ;3306
000178  e773              B        |L18.98|
                  |L18.378|
00017a  2000              MOVS     r0,#0                 ;3308
00017c  e771              B        |L18.98|
;;;3310   
                          ENDP

00017e  0000              DCW      0x0000
                  |L18.384|
                          DCD      _setup+0xc000
                  |L18.388|
                          DCD      |symbol_number.451|
                  |L18.392|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cutter_compensation_off||, CODE, READONLY, ALIGN=2

                  convert_cutter_compensation_off PROC
;;;3327   
;;;3328       static int convert_cutter_compensation_off(   /* ARGUMENTS                   */
000000  b510              PUSH     {r4,lr}
;;;3329       setup_pointer settings)                       /* pointer to machine settings */
;;;3330       {
000002  4604              MOV      r4,r0
;;;3331   #ifdef DEBUG_EMC
;;;3332           COMMENT("interpreter: cutter radius compensation off");
000004  a008              ADR      r0,|L19.40|
000006  f7fffffe          BL       COMMENT
;;;3333   #endif
;;;3334           settings->cutter_comp_side SET_TO OFF;
00000a  f04f0000          MOV      r0,#0
00000e  f8c403b0          STR      r0,[r4,#0x3b0]
;;;3335           settings->program_x SET_TO UNKNOWN;
000012  4a10              LDR      r2,|L19.84|
000014  4810              LDR      r0,|L19.88|
000016  f5044130          ADD      r1,r4,#0xb000
00001a  f8c12178          STR      r2,[r1,#0x178]
00001e  f8c1017c          STR      r0,[r1,#0x17c]
;;;3336           return RS274NGC_OK;
000022  f04f0000          MOV      r0,#0
;;;3337       }
000026  bd10              POP      {r4,pc}
;;;3338   
                          ENDP

                  |L19.40|
000028  696e7465          DCB      "interpreter: cutter radius compensation off",0
00002c  72707265
000030  7465723a
000034  20637574
000038  74657220
00003c  72616469
000040  75732063
000044  6f6d7065
000048  6e736174
00004c  696f6e20
000050  6f666600
                  |L19.84|
                          DCD      0x0c924223
                  |L19.88|
                          DCD      0x3bc79ca1

                          AREA ||i.convert_cutter_compensation_on||, CODE, READONLY, ALIGN=2

                  convert_cutter_compensation_on PROC
;;;3390   
;;;3391       static int convert_cutter_compensation_on(    /* ARGUMENTS               */
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;3392       int side,                                     /* side of path cutter is on (LEFT or RIGHT) */
;;;3393       block_pointer block,                          /* pointer to a block of RS274 instructions  */
;;;3394       setup_pointer settings)                       /* pointer to machine settings               */
;;;3395       {
000004  4681              MOV      r9,r0
000006  468a              MOV      r10,r1
000008  4690              MOV      r8,r2
;;;3396           static char name[] SET_TO "convert_cutter_compensation_on";
;;;3397           double radius;
;;;3398           int index;
;;;3399   
;;;3400           CHK((settings->plane ISNT CANON_PLANE_XY),
00000a  f24b106c          MOV      r0,#0xb16c
00000e  f8500008          LDR      r0,[r0,r8]
000012  2801              CMP      r0,#1
000014  d027              BEQ      |L20.102|
000016  f04f0100          MOV      r1,#0
00001a  484c              LDR      r0,|L20.332|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4943              LDR      r1,|L20.336|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  483f              LDR      r0,|L20.332|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a3f              LDR      r2,|L20.340|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0035          MOV      r0,#0x35
                  |L20.98|
;;;3401               NCE_CANNOT_TURN_CUTTER_RADIUS_COMP_ON_OUT_OF_XY_PLANE);
;;;3402           CHK((settings->cutter_comp_side ISNT OFF),
;;;3403               NCE_CANNOT_TURN_CUTTER_RADIUS_COMP_ON_WHEN_ON);
;;;3404           index SET_TO
;;;3405               (block->d_number ISNT -1) ? block->d_number : settings->current_slot;
;;;3406           radius SET_TO ((settings->tool_table[index].diameter)/2.0);
;;;3407   
;;;3408           if (radius < 0.0)                         /* switch side & make radius positive if radius negative */
;;;3409           {
;;;3410               radius SET_TO -radius;
;;;3411               if (side IS RIGHT)
;;;3412                   side SET_TO LEFT;
;;;3413               else
;;;3414                   side SET_TO RIGHT;
;;;3415           }
;;;3416   
;;;3417   #ifdef DEBUG_EMC
;;;3418           if (side IS RIGHT)
;;;3419               COMMENT("interpreter: cutter radius compensation on right");
;;;3420           else
;;;3421               COMMENT("interpreter: cutter radius compensation on left");
;;;3422   #endif
;;;3423   
;;;3424           settings->cutter_comp_radius SET_TO radius;
;;;3425           settings->tool_table_index SET_TO index;
;;;3426           settings->cutter_comp_side SET_TO side;
;;;3427           return RS274NGC_OK;
;;;3428       }
000062  e8bd9ff0          POP      {r4-r12,pc}
                  |L20.102|
000066  f8d803b0          LDR      r0,[r8,#0x3b0]        ;3402
00006a  b328              CBZ      r0,|L20.184|
00006c  f04f0100          MOV      r1,#0                 ;3402
000070  4836              LDR      r0,|L20.332|
000072  f8c0114c          STR      r1,[r0,#0x14c]        ;3402
000076  4601              MOV      r1,r0                 ;3402
000078  f8d1314c          LDR      r3,[r1,#0x14c]        ;3402
00007c  f8d1114c          LDR      r1,[r1,#0x14c]        ;3402
000080  f1010101          ADD      r1,r1,#1              ;3402
000084  4602              MOV      r2,r0                 ;3402
000086  f8c2114c          STR      r1,[r2,#0x14c]        ;3402
00008a  eb030183          ADD      r1,r3,r3,LSL #2       ;3402
00008e  4a31              LDR      r2,|L20.340|
000090  eb021101          ADD      r1,r2,r1,LSL #4       ;3402
000094  4608              MOV      r0,r1                 ;3402
000096  492e              LDR      r1,|L20.336|
000098  f7fffffe          BL       strcpy
00009c  f04f0100          MOV      r1,#0                 ;3402
0000a0  482a              LDR      r0,|L20.332|
0000a2  f8d0014c          LDR      r0,[r0,#0x14c]        ;3402
0000a6  eb000080          ADD      r0,r0,r0,LSL #2       ;3402
0000aa  4a2a              LDR      r2,|L20.340|
0000ac  eb021000          ADD      r0,r2,r0,LSL #4       ;3402
0000b0  7001              STRB     r1,[r0,#0]            ;3402
0000b2  f04f0036          MOV      r0,#0x36              ;3402
0000b6  e7d4              B        |L20.98|
                  |L20.184|
0000b8  f8da0100          LDR      r0,[r10,#0x100]       ;3404
0000bc  1c40              ADDS     r0,r0,#1              ;3404
0000be  d002              BEQ      |L20.198|
0000c0  f8da0100          LDR      r0,[r10,#0x100]       ;3405
0000c4  e001              B        |L20.202|
                  |L20.198|
0000c6  f8d8038c          LDR      r0,[r8,#0x38c]        ;3405
                  |L20.202|
0000ca  4683              MOV      r11,r0                ;3405
0000cc  eb0b004b          ADD      r0,r11,r11,LSL #1     ;3406
0000d0  f24c1160          MOV      r1,#0xc160            ;3406
0000d4  4441              ADD      r1,r1,r8              ;3406
0000d6  eb0100c0          ADD      r0,r1,r0,LSL #3       ;3406
0000da  e9d01004          LDRD     r1,r0,[r0,#0x10]      ;3406
0000de  460e              MOV      r6,r1                 ;3406
0000e0  4607              MOV      r7,r0                 ;3406
0000e2  f04f0200          MOV      r2,#0                 ;3406
0000e6  f04f4380          MOV      r3,#0x40000000        ;3406
0000ea  4630              MOV      r0,r6                 ;3406
0000ec  4639              MOV      r1,r7                 ;3406
0000ee  f7fffffe          BL       __aeabi_ddiv
0000f2  4604              MOV      r4,r0                 ;3406
0000f4  460d              MOV      r5,r1                 ;3406
0000f6  f04f0200          MOV      r2,#0                 ;3408
0000fa  4613              MOV      r3,r2                 ;3408
0000fc  4620              MOV      r0,r4                 ;3408
0000fe  4629              MOV      r1,r5                 ;3408
000100  f7fffffe          BL       __aeabi_cdcmple
000104  d20c              BCS      |L20.288|
000106  f0854000          EOR      r0,r5,#0x80000000     ;3410
00010a  4605              MOV      r5,r0                 ;3410
00010c  f1b90f01          CMP      r9,#1                 ;3411
000110  d103              BNE      |L20.282|
000112  f04f0002          MOV      r0,#2                 ;3412
000116  4681              MOV      r9,r0                 ;3412
000118  e002              B        |L20.288|
                  |L20.282|
00011a  f04f0001          MOV      r0,#1                 ;3414
00011e  4681              MOV      r9,r0                 ;3414
                  |L20.288|
000120  f1b90f01          CMP      r9,#1                 ;3418
000124  d103              BNE      |L20.302|
000126  a00c              ADR      r0,|L20.344|
000128  f7fffffe          BL       COMMENT
00012c  e002              B        |L20.308|
                  |L20.302|
00012e  a017              ADR      r0,|L20.396|
000130  f7fffffe          BL       COMMENT
                  |L20.308|
000134  f508706a          ADD      r0,r8,#0x3a8          ;3424
000138  c030              STM      r0!,{r4,r5}           ;3424
00013a  f64c5078          MOV      r0,#0xcd78            ;3425
00013e  f840b008          STR      r11,[r0,r8]           ;3425
000142  f8c893b0          STR      r9,[r8,#0x3b0]        ;3426
000146  f04f0000          MOV      r0,#0                 ;3427
00014a  e78a              B        |L20.98|
;;;3429   
                          ENDP

                  |L20.332|
                          DCD      _setup+0xc000
                  |L20.336|
                          DCD      |symbol_number.452|
                  |L20.340|
                          DCD      _setup+0xb1ac
                  |L20.344|
000158  696e7465          DCB      "interpreter: cutter radius compensation on right",0
00015c  72707265
000160  7465723a
000164  20637574
000168  74657220
00016c  72616469
000170  75732063
000174  6f6d7065
000178  6e736174
00017c  696f6e20
000180  6f6e2072
000184  69676874
000188  00      
000189  00                DCB      0
00018a  00                DCB      0
00018b  00                DCB      0
                  |L20.396|
00018c  696e7465          DCB      "interpreter: cutter radius compensation on left",0
000190  72707265
000194  7465723a
000198  20637574
00019c  74657220
0001a0  72616469
0001a4  75732063
0001a8  6f6d7065
0001ac  6e736174
0001b0  696f6e20
0001b4  6f6e206c
0001b8  65667400

                          AREA ||i.convert_cycle||, CODE, READONLY, ALIGN=2

                  convert_cycle PROC
;;;3459   
;;;3460       static int convert_cycle(                     /* ARGUMENTS                                      */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;3461       int motion,                                   /* a g-code between G_81 and G_89, a canned cycle */
;;;3462       block_pointer block,                          /* pointer to a block of RS274 instructions       */
;;;3463       setup_pointer settings)                       /* pointer to machine settings                    */
;;;3464       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;3465           static char name[] SET_TO "convert_cycle";
;;;3466           CANON_PLANE plane;
;;;3467           int status;
;;;3468   
;;;3469           plane SET_TO settings->plane;
00000a  f24b106c          MOV      r0,#0xb16c
00000e  5940              LDR      r0,[r0,r5]
000010  4607              MOV      r7,r0
;;;3470           if (block->r_flag IS OFF)
000012  f8d401c0          LDR      r0,[r4,#0x1c0]
000016  bb90              CBNZ     r0,|L21.126|
;;;3471           {
;;;3472               if (settings->motion_mode IS motion)
000018  f8d50628          LDR      r0,[r5,#0x628]
00001c  42b0              CMP      r0,r6
00001e  d106              BNE      |L21.46|
;;;3473                   block->r_number SET_TO settings->cycle_r;
000020  f505707c          ADD      r0,r5,#0x3f0
000024  c803              LDM      r0,{r0,r1}
000026  f50473e4          ADD      r3,r4,#0x1c8
00002a  c303              STM      r3!,{r0,r1}
00002c  e028              B        |L21.128|
                  |L21.46|
;;;3474               else
;;;3475                   ERM(NCE_R_CLEARANCE_PLANE_UNSPECIFIED_IN_CYCLE);
00002e  f04f0100          MOV      r1,#0
000032  488f              LDR      r0,|L21.624|
000034  f8c0114c          STR      r1,[r0,#0x14c]
000038  4601              MOV      r1,r0
00003a  f8d1314c          LDR      r3,[r1,#0x14c]
00003e  f8d1114c          LDR      r1,[r1,#0x14c]
000042  f1010101          ADD      r1,r1,#1
000046  4602              MOV      r2,r0
000048  f8c2114c          STR      r1,[r2,#0x14c]
00004c  eb030183          ADD      r1,r3,r3,LSL #2
000050  f6a06254          SUB      r2,r0,#0xe54
000054  eb021101          ADD      r1,r2,r1,LSL #4
000058  4608              MOV      r0,r1
00005a  4986              LDR      r1,|L21.628|
00005c  f7fffffe          BL       strcpy
000060  f04f0100          MOV      r1,#0
000064  4882              LDR      r0,|L21.624|
000066  f8d0014c          LDR      r0,[r0,#0x14c]
00006a  eb000080          ADD      r0,r0,r0,LSL #2
00006e  4a82              LDR      r2,|L21.632|
000070  eb021000          ADD      r0,r2,r0,LSL #4
000074  7001              STRB     r1,[r0,#0]
000076  f04f0092          MOV      r0,#0x92
                  |L21.122|
;;;3476           }
;;;3477   
;;;3478           CHK((block->l_number IS 0), NCE_CANNOT_DO_ZERO_REPEATS_OF_CYCLE);
;;;3479           if (block->l_number IS -1)
;;;3480               block->l_number SET_TO 1;
;;;3481   
;;;3482           if (plane IS CANON_PLANE_XY)
;;;3483           {
;;;3484               CHP(convert_cycle_xy(motion, block, settings));
;;;3485           }
;;;3486           else if (plane IS CANON_PLANE_YZ)
;;;3487           {
;;;3488               CHP(convert_cycle_yz(motion, block, settings));
;;;3489           }
;;;3490           else if (plane IS CANON_PLANE_XZ)
;;;3491           {
;;;3492               CHP(convert_cycle_zx(motion, block, settings));
;;;3493           }
;;;3494           else
;;;3495               ERM(NCE_BUG_PLANE_NOT_XY_YZ_OR_XZ);
;;;3496   
;;;3497           settings->cycle_l SET_TO block->l_number;
;;;3498           settings->cycle_r SET_TO block->r_number;
;;;3499           settings->motion_mode SET_TO motion;
;;;3500           return RS274NGC_OK;
;;;3501       }
00007a  e8bd81f0          POP      {r4-r8,pc}
                  |L21.126|
00007e  e7ff              B        |L21.128|
                  |L21.128|
000080  f8d40178          LDR      r0,[r4,#0x178]        ;3478
000084  bb28              CBNZ     r0,|L21.210|
000086  f04f0100          MOV      r1,#0                 ;3478
00008a  4879              LDR      r0,|L21.624|
00008c  f8c0114c          STR      r1,[r0,#0x14c]        ;3478
000090  4601              MOV      r1,r0                 ;3478
000092  f8d1314c          LDR      r3,[r1,#0x14c]        ;3478
000096  f8d1114c          LDR      r1,[r1,#0x14c]        ;3478
00009a  f1010101          ADD      r1,r1,#1              ;3478
00009e  4602              MOV      r2,r0                 ;3478
0000a0  f8c2114c          STR      r1,[r2,#0x14c]        ;3478
0000a4  eb030183          ADD      r1,r3,r3,LSL #2       ;3478
0000a8  4a73              LDR      r2,|L21.632|
0000aa  eb021101          ADD      r1,r2,r1,LSL #4       ;3478
0000ae  4608              MOV      r0,r1                 ;3478
0000b0  4970              LDR      r1,|L21.628|
0000b2  f7fffffe          BL       strcpy
0000b6  f04f0100          MOV      r1,#0                 ;3478
0000ba  486d              LDR      r0,|L21.624|
0000bc  f8d0014c          LDR      r0,[r0,#0x14c]        ;3478
0000c0  eb000080          ADD      r0,r0,r0,LSL #2       ;3478
0000c4  4a6c              LDR      r2,|L21.632|
0000c6  eb021000          ADD      r0,r2,r0,LSL #4       ;3478
0000ca  7001              STRB     r1,[r0,#0]            ;3478
0000cc  f04f002a          MOV      r0,#0x2a              ;3478
0000d0  e7d3              B        |L21.122|
                  |L21.210|
0000d2  f8d40178          LDR      r0,[r4,#0x178]        ;3479
0000d6  1c40              ADDS     r0,r0,#1              ;3479
0000d8  d103              BNE      |L21.226|
0000da  f04f0001          MOV      r0,#1                 ;3480
0000de  f8c40178          STR      r0,[r4,#0x178]        ;3480
                  |L21.226|
0000e2  2f01              CMP      r7,#1                 ;3482
0000e4  d12d              BNE      |L21.322|
0000e6  462a              MOV      r2,r5                 ;3484
0000e8  4621              MOV      r1,r4                 ;3484
0000ea  4630              MOV      r0,r6                 ;3484
0000ec  f7fffffe          BL       convert_cycle_xy
0000f0  ea5f0800          MOVS     r8,r0                 ;3484
0000f4  d07e              BEQ      |L21.500|
0000f6  485e              LDR      r0,|L21.624|
0000f8  f8d0014c          LDR      r0,[r0,#0x14c]        ;3484
0000fc  2831              CMP      r0,#0x31              ;3484
0000fe  da1e              BGE      |L21.318|
000100  495b              LDR      r1,|L21.624|
000102  f8d1314c          LDR      r3,[r1,#0x14c]        ;3484
000106  f8d1114c          LDR      r1,[r1,#0x14c]        ;3484
00010a  1c49              ADDS     r1,r1,#1              ;3484
00010c  4a58              LDR      r2,|L21.624|
00010e  f8c2114c          STR      r1,[r2,#0x14c]        ;3484
000112  eb030183          ADD      r1,r3,r3,LSL #2       ;3484
000116  4a58              LDR      r2,|L21.632|
000118  eb021101          ADD      r1,r2,r1,LSL #4       ;3484
00011c  4608              MOV      r0,r1                 ;3484
00011e  4955              LDR      r1,|L21.628|
000120  f7fffffe          BL       strcpy
000124  f04f0100          MOV      r1,#0                 ;3484
000128  4851              LDR      r0,|L21.624|
00012a  f8d0014c          LDR      r0,[r0,#0x14c]        ;3484
00012e  eb000080          ADD      r0,r0,r0,LSL #2       ;3484
000132  4a51              LDR      r2,|L21.632|
000134  eb021000          ADD      r0,r2,r0,LSL #4       ;3484
000138  7001              STRB     r1,[r0,#0]            ;3484
00013a  4640              MOV      r0,r8                 ;3484
00013c  e79d              B        |L21.122|
                  |L21.318|
00013e  4640              MOV      r0,r8                 ;3484
000140  e79b              B        |L21.122|
                  |L21.322|
000142  2f02              CMP      r7,#2                 ;3486
000144  d12d              BNE      |L21.418|
000146  462a              MOV      r2,r5                 ;3488
000148  4621              MOV      r1,r4                 ;3488
00014a  4630              MOV      r0,r6                 ;3488
00014c  f7fffffe          BL       convert_cycle_yz
000150  ea5f0800          MOVS     r8,r0                 ;3488
000154  d07d              BEQ      |L21.594|
000156  4846              LDR      r0,|L21.624|
000158  f8d0014c          LDR      r0,[r0,#0x14c]        ;3488
00015c  2831              CMP      r0,#0x31              ;3488
00015e  da1e              BGE      |L21.414|
000160  4943              LDR      r1,|L21.624|
000162  f8d1314c          LDR      r3,[r1,#0x14c]        ;3488
000166  f8d1114c          LDR      r1,[r1,#0x14c]        ;3488
00016a  1c49              ADDS     r1,r1,#1              ;3488
00016c  4a40              LDR      r2,|L21.624|
00016e  f8c2114c          STR      r1,[r2,#0x14c]        ;3488
000172  eb030183          ADD      r1,r3,r3,LSL #2       ;3488
000176  4a40              LDR      r2,|L21.632|
000178  eb021101          ADD      r1,r2,r1,LSL #4       ;3488
00017c  4608              MOV      r0,r1                 ;3488
00017e  493d              LDR      r1,|L21.628|
000180  f7fffffe          BL       strcpy
000184  f04f0100          MOV      r1,#0                 ;3488
000188  4839              LDR      r0,|L21.624|
00018a  f8d0014c          LDR      r0,[r0,#0x14c]        ;3488
00018e  eb000080          ADD      r0,r0,r0,LSL #2       ;3488
000192  4a39              LDR      r2,|L21.632|
000194  eb021000          ADD      r0,r2,r0,LSL #4       ;3488
000198  7001              STRB     r1,[r0,#0]            ;3488
00019a  4640              MOV      r0,r8                 ;3488
00019c  e76d              B        |L21.122|
                  |L21.414|
00019e  4640              MOV      r0,r8                 ;3488
0001a0  e76b              B        |L21.122|
                  |L21.418|
0001a2  2f03              CMP      r7,#3                 ;3490
0001a4  d12f              BNE      |L21.518|
0001a6  462a              MOV      r2,r5                 ;3492
0001a8  4621              MOV      r1,r4                 ;3492
0001aa  4630              MOV      r0,r6                 ;3492
0001ac  f7fffffe          BL       convert_cycle_zx
0001b0  ea5f0800          MOVS     r8,r0                 ;3492
0001b4  d04d              BEQ      |L21.594|
0001b6  482e              LDR      r0,|L21.624|
0001b8  f8d0014c          LDR      r0,[r0,#0x14c]        ;3492
0001bc  2831              CMP      r0,#0x31              ;3492
0001be  da20              BGE      |L21.514|
0001c0  492b              LDR      r1,|L21.624|
0001c2  f8d1314c          LDR      r3,[r1,#0x14c]        ;3492
0001c6  f8d1114c          LDR      r1,[r1,#0x14c]        ;3492
0001ca  1c49              ADDS     r1,r1,#1              ;3492
0001cc  4a28              LDR      r2,|L21.624|
0001ce  f8c2114c          STR      r1,[r2,#0x14c]        ;3492
0001d2  eb030183          ADD      r1,r3,r3,LSL #2       ;3492
0001d6  4a28              LDR      r2,|L21.632|
0001d8  eb021101          ADD      r1,r2,r1,LSL #4       ;3492
0001dc  4608              MOV      r0,r1                 ;3492
0001de  4925              LDR      r1,|L21.628|
0001e0  f7fffffe          BL       strcpy
0001e4  f04f0100          MOV      r1,#0                 ;3492
0001e8  4821              LDR      r0,|L21.624|
0001ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;3492
0001ee  eb000080          ADD      r0,r0,r0,LSL #2       ;3492
0001f2  e000              B        |L21.502|
                  |L21.500|
0001f4  e02d              B        |L21.594|
                  |L21.502|
0001f6  4a20              LDR      r2,|L21.632|
0001f8  eb021000          ADD      r0,r2,r0,LSL #4       ;3492
0001fc  7001              STRB     r1,[r0,#0]            ;3492
0001fe  4640              MOV      r0,r8                 ;3492
000200  e73b              B        |L21.122|
                  |L21.514|
000202  4640              MOV      r0,r8                 ;3492
000204  e739              B        |L21.122|
                  |L21.518|
000206  f04f0100          MOV      r1,#0                 ;3495
00020a  4819              LDR      r0,|L21.624|
00020c  f8c0114c          STR      r1,[r0,#0x14c]        ;3495
000210  4601              MOV      r1,r0                 ;3495
000212  f8d1314c          LDR      r3,[r1,#0x14c]        ;3495
000216  f8d1114c          LDR      r1,[r1,#0x14c]        ;3495
00021a  f1010101          ADD      r1,r1,#1              ;3495
00021e  4602              MOV      r2,r0                 ;3495
000220  f8c2114c          STR      r1,[r2,#0x14c]        ;3495
000224  eb030183          ADD      r1,r3,r3,LSL #2       ;3495
000228  4a13              LDR      r2,|L21.632|
00022a  eb021101          ADD      r1,r2,r1,LSL #4       ;3495
00022e  4608              MOV      r0,r1                 ;3495
000230  4910              LDR      r1,|L21.628|
000232  f7fffffe          BL       strcpy
000236  f04f0100          MOV      r1,#0                 ;3495
00023a  480d              LDR      r0,|L21.624|
00023c  f8d0014c          LDR      r0,[r0,#0x14c]        ;3495
000240  eb000080          ADD      r0,r0,r0,LSL #2       ;3495
000244  4a0c              LDR      r2,|L21.632|
000246  eb021000          ADD      r0,r2,r0,LSL #4       ;3495
00024a  7001              STRB     r1,[r0,#0]            ;3495
00024c  f04f0022          MOV      r0,#0x22              ;3495
000250  e713              B        |L21.122|
                  |L21.594|
000252  f8d40178          LDR      r0,[r4,#0x178]        ;3497
000256  f8c503d8          STR      r0,[r5,#0x3d8]        ;3497
00025a  f50470e4          ADD      r0,r4,#0x1c8          ;3498
00025e  c803              LDM      r0,{r0,r1}            ;3498
000260  f505727c          ADD      r2,r5,#0x3f0          ;3498
000264  c203              STM      r2!,{r0,r1}           ;3498
000266  f8c56628          STR      r6,[r5,#0x628]        ;3499
00026a  2000              MOVS     r0,#0                 ;3500
00026c  e705              B        |L21.122|
;;;3502   
                          ENDP

00026e  0000              DCW      0x0000
                  |L21.624|
                          DCD      _setup+0xc000
                  |L21.628|
                          DCD      |symbol_number.453|
                  |L21.632|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g81||, CODE, READONLY, ALIGN=1

                  convert_cycle_g81 PROC
;;;3528   
;;;3529       static int convert_cycle_g81(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3530       CANON_PLANE plane,                            /* selected plane                   */
;;;3531       double x,                                     /* x-value where cycle is executed  */
;;;3532       double y,                                     /* y-value where cycle is executed  */
;;;3533       double clear_z,                               /* z-value of clearance plane       */
;;;3534       double bottom_z)                              /* value of z at bottom of cycle    */
;;;3535       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;3536   //        static char name[] SET_TO "convert_cycle_g81";
;;;3537   
;;;3538           cycle_feed(plane, x, y, bottom_z);
000010  4632              MOV      r2,r6
000012  463b              MOV      r3,r7
000014  e88d0c30          STM      sp,{r4,r5,r10,r11}
000018  9804              LDR      r0,[sp,#0x10]
00001a  f7fffffe          BL       cycle_feed
;;;3539           cycle_traverse(plane, x, y, clear_z);
00001e  4632              MOV      r2,r6
000020  463b              MOV      r3,r7
000022  e88d0330          STM      sp,{r4,r5,r8,r9}
000026  9804              LDR      r0,[sp,#0x10]
000028  f7fffffe          BL       cycle_traverse
;;;3540   
;;;3541           return RS274NGC_OK;
00002c  2000              MOVS     r0,#0
;;;3542       }
00002e  b008              ADD      sp,sp,#0x20
000030  e8bd9ff0          POP      {r4-r12,pc}
;;;3543   
                          ENDP


                          AREA ||i.convert_cycle_g82||, CODE, READONLY, ALIGN=1

                  convert_cycle_g82 PROC
;;;3568   
;;;3569       static int convert_cycle_g82(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3570       CANON_PLANE plane,                            /* selected plane                   */
;;;3571       double x,                                     /* x-value where cycle is executed  */
;;;3572       double y,                                     /* y-value where cycle is executed  */
;;;3573       double clear_z,                               /* z-value of clearance plane       */
;;;3574       double bottom_z,                              /* value of z at bottom of cycle    */
;;;3575       double dwell)                                 /* dwell time                       */
;;;3576       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;3577   //        static char name[] SET_TO "convert_cycle_g82";
;;;3578   
;;;3579           cycle_feed(plane, x, y, bottom_z);
000010  4632              MOV      r2,r6
000012  463b              MOV      r3,r7
000014  e88d0c30          STM      sp,{r4,r5,r10,r11}
000018  9804              LDR      r0,[sp,#0x10]
00001a  f7fffffe          BL       cycle_feed
;;;3580           DWELL(dwell);
00001e  e9dd0118          LDRD     r0,r1,[sp,#0x60]
000022  f7fffffe          BL       DWELL
;;;3581           cycle_traverse(plane, x, y, clear_z);
000026  4632              MOV      r2,r6
000028  463b              MOV      r3,r7
00002a  e88d0330          STM      sp,{r4,r5,r8,r9}
00002e  9804              LDR      r0,[sp,#0x10]
000030  f7fffffe          BL       cycle_traverse
;;;3582   
;;;3583           return RS274NGC_OK;
000034  2000              MOVS     r0,#0
;;;3584       }
000036  b008              ADD      sp,sp,#0x20
000038  e8bd9ff0          POP      {r4-r12,pc}
;;;3585   
                          ENDP


                          AREA ||i.convert_cycle_g83||, CODE, READONLY, ALIGN=2

                  convert_cycle_g83 PROC
;;;3621   
;;;3622       static int convert_cycle_g83(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3623       CANON_PLANE plane,                            /* selected plane                   */
;;;3624       double x,                                     /* x-value where cycle is executed  */
;;;3625       double y,                                     /* y-value where cycle is executed  */
;;;3626       double r,                                     /* initial z-value                  */
;;;3627       double clear_z,                               /* z-value of clearance plane       */
;;;3628       double bottom_z,                              /* value of z at bottom of cycle    */
;;;3629       double delta)                                 /* size of z-axis feed increment    */
;;;3630       {
000004  b088              SUB      sp,sp,#0x20
000006  4690              MOV      r8,r2
000008  4699              MOV      r9,r3
00000a  e9ddab1a          LDRD     r10,r11,[sp,#0x68]
00000e  e9dd4516          LDRD     r4,r5,[sp,#0x58]
;;;3631   //        static char name[] SET_TO "convert_cycle_g83";
;;;3632           double current_depth;
;;;3633           double rapid_delta;
;;;3634   
;;;3635           rapid_delta SET_TO G83_RAPID_DELTA;
000012  492f              LDR      r1,|L24.208|
000014  482f              LDR      r0,|L24.212|
000016  e9cd1006          STRD     r1,r0,[sp,#0x18]
;;;3636           if (_setup.length_units IS CANON_UNITS_MM)
00001a  482f              LDR      r0,|L24.216|
00001c  f8d0051c          LDR      r0,[r0,#0x51c]  ; _setup
000020  2802              CMP      r0,#2
000022  d108              BNE      |L24.54|
;;;3637               rapid_delta SET_TO (rapid_delta * 25.4);
000024  f04f3266          MOV      r2,#0x66666666
000028  4b2c              LDR      r3,|L24.220|
00002a  e9dd0106          LDRD     r0,r1,[sp,#0x18]
00002e  f7fffffe          BL       __aeabi_dmul
000032  e9cd0106          STRD     r0,r1,[sp,#0x18]
                  |L24.54|
;;;3638   
;;;3639           for (current_depth SET_TO (r - delta);
000036  e9dd231e          LDRD     r2,r3,[sp,#0x78]
00003a  e9dd0118          LDRD     r0,r1,[sp,#0x60]
00003e  f7fffffe          BL       __aeabi_dsub
000042  4606              MOV      r6,r0
000044  460f              MOV      r7,r1
000046  e026              B        |L24.150|
                  |L24.72|
;;;3640               current_depth > bottom_z;
;;;3641               current_depth SET_TO (current_depth - delta))
;;;3642           {
;;;3643               cycle_feed(plane, x, y, current_depth);
000048  4642              MOV      r2,r8
00004a  464b              MOV      r3,r9
00004c  e88d00f0          STM      sp,{r4-r7}
000050  9808              LDR      r0,[sp,#0x20]
000052  f7fffffe          BL       cycle_feed
;;;3644               cycle_traverse(plane, x, y, clear_z);
000056  4642              MOV      r2,r8
000058  464b              MOV      r3,r9
00005a  e88d0c30          STM      sp,{r4,r5,r10,r11}
00005e  9808              LDR      r0,[sp,#0x20]
000060  f7fffffe          BL       cycle_traverse
;;;3645               cycle_traverse(plane, x, y, current_depth + rapid_delta);
000064  4630              MOV      r0,r6
000066  4639              MOV      r1,r7
000068  e9dd2306          LDRD     r2,r3,[sp,#0x18]
00006c  f7fffffe          BL       __aeabi_dadd
000070  e9cd0104          STRD     r0,r1,[sp,#0x10]
000074  4642              MOV      r2,r8
000076  464b              MOV      r3,r9
000078  e9cd4500          STRD     r4,r5,[sp,#0]
00007c  e9cd0102          STRD     r0,r1,[sp,#8]
000080  9808              LDR      r0,[sp,#0x20]
000082  f7fffffe          BL       cycle_traverse
000086  4630              MOV      r0,r6                 ;3641
000088  4639              MOV      r1,r7                 ;3641
00008a  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;3641
00008e  f7fffffe          BL       __aeabi_dsub
000092  4606              MOV      r6,r0                 ;3641
000094  460f              MOV      r7,r1                 ;3641
                  |L24.150|
000096  4630              MOV      r0,r6                 ;3640
000098  4639              MOV      r1,r7                 ;3640
00009a  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;3640
00009e  f7fffffe          BL       __aeabi_cdrcmple
0000a2  d3d1              BCC      |L24.72|
;;;3646           }
;;;3647           cycle_feed(plane, x, y, bottom_z);
0000a4  e9dd011c          LDRD     r0,r1,[sp,#0x70]
0000a8  4642              MOV      r2,r8
0000aa  464b              MOV      r3,r9
0000ac  e9cd4500          STRD     r4,r5,[sp,#0]
0000b0  e9cd0102          STRD     r0,r1,[sp,#8]
0000b4  9808              LDR      r0,[sp,#0x20]
0000b6  f7fffffe          BL       cycle_feed
;;;3648           cycle_traverse(plane, x, y, clear_z);
0000ba  4642              MOV      r2,r8
0000bc  464b              MOV      r3,r9
0000be  e88d0c30          STM      sp,{r4,r5,r10,r11}
0000c2  9808              LDR      r0,[sp,#0x20]
0000c4  f7fffffe          BL       cycle_traverse
;;;3649   
;;;3650           return RS274NGC_OK;
0000c8  2000              MOVS     r0,#0
;;;3651       }
0000ca  b00c              ADD      sp,sp,#0x30
0000cc  e8bd9ff0          POP      {r4-r12,pc}
;;;3652   
                          ENDP

                  |L24.208|
                          DCD      0x47ae147b
                  |L24.212|
                          DCD      0x3f847ae1
                  |L24.216|
                          DCD      _setup
                  |L24.220|
                          DCD      0x40396666

                          AREA ||i.convert_cycle_g84||, CODE, READONLY, ALIGN=2

                  convert_cycle_g84 PROC
;;;3686   
;;;3687       static int convert_cycle_g84(                 /* ARGUMENTS                           */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3688       CANON_PLANE plane,                            /* selected plane                      */
;;;3689       double x,                                     /* x-value where cycle is executed     */
;;;3690       double y,                                     /* y-value where cycle is executed     */
;;;3691       double clear_z,                               /* z-value of clearance plane          */
;;;3692       double bottom_z,                              /* value of z at bottom of cycle       */
;;;3693       CANON_DIRECTION direction,                    /* direction spindle turning at outset */
;;;3694       CANON_SPEED_FEED_MODE mode)                   /* the speed-feed mode at outset       */
;;;3695       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;3696           static char name[] SET_TO "convert_cycle_g84";
;;;3697   
;;;3698           CHK((direction ISNT CANON_CLOCKWISE),
000010  9818              LDR      r0,[sp,#0x60]
000012  2802              CMP      r0,#2
000014  d028              BEQ      |L25.104|
000016  f04f0100          MOV      r1,#0
00001a  4823              LDR      r0,|L25.168|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  491a              LDR      r1,|L25.172|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4816              LDR      r0,|L25.168|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a16              LDR      r2,|L25.176|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f009d          MOV      r0,#0x9d
                  |L25.98|
;;;3699               NCE_SPINDLE_NOT_TURNING_CLOCKWISE_IN_G84);
;;;3700           START_SPEED_FEED_SYNCH();
;;;3701           cycle_feed(plane, x, y, bottom_z);
;;;3702           STOP_SPINDLE_TURNING();
;;;3703           START_SPINDLE_COUNTERCLOCKWISE();
;;;3704           cycle_feed(plane, x, y, clear_z);
;;;3705           if (mode ISNT CANON_SYNCHED)
;;;3706               STOP_SPEED_FEED_SYNCH();
;;;3707           STOP_SPINDLE_TURNING();
;;;3708           START_SPINDLE_CLOCKWISE();
;;;3709   
;;;3710           return RS274NGC_OK;
;;;3711       }
000062  b008              ADD      sp,sp,#0x20
000064  e8bd9ff0          POP      {r4-r12,pc}
                  |L25.104|
000068  f7fffffe          BL       START_SPEED_FEED_SYNCH
00006c  4632              MOV      r2,r6                 ;3701
00006e  463b              MOV      r3,r7                 ;3701
000070  e88d0c30          STM      sp,{r4,r5,r10,r11}    ;3701
000074  9804              LDR      r0,[sp,#0x10]         ;3701
000076  f7fffffe          BL       cycle_feed
00007a  f7fffffe          BL       STOP_SPINDLE_TURNING
00007e  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
000082  4632              MOV      r2,r6                 ;3704
000084  463b              MOV      r3,r7                 ;3704
000086  e88d0330          STM      sp,{r4,r5,r8,r9}      ;3704
00008a  9804              LDR      r0,[sp,#0x10]         ;3704
00008c  f7fffffe          BL       cycle_feed
000090  9819              LDR      r0,[sp,#0x64]         ;3705
000092  2801              CMP      r0,#1                 ;3705
000094  d001              BEQ      |L25.154|
000096  f7fffffe          BL       STOP_SPEED_FEED_SYNCH
                  |L25.154|
00009a  f7fffffe          BL       STOP_SPINDLE_TURNING
00009e  f7fffffe          BL       START_SPINDLE_CLOCKWISE
0000a2  2000              MOVS     r0,#0                 ;3710
0000a4  e7dd              B        |L25.98|
;;;3712   
                          ENDP

0000a6  0000              DCW      0x0000
                  |L25.168|
                          DCD      _setup+0xc000
                  |L25.172|
                          DCD      |symbol_number.454|
                  |L25.176|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g85||, CODE, READONLY, ALIGN=1

                  convert_cycle_g85 PROC
;;;3737   
;;;3738       static int convert_cycle_g85(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3739       CANON_PLANE plane,                            /* selected plane                   */
;;;3740       double x,                                     /* x-value where cycle is executed  */
;;;3741       double y,                                     /* y-value where cycle is executed  */
;;;3742       double clear_z,                               /* z-value of clearance plane       */
;;;3743       double bottom_z)                              /* value of z at bottom of cycle    */
;;;3744       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;3745   //        static char name[] SET_TO "convert_cycle_g85";
;;;3746   
;;;3747           cycle_feed(plane, x, y, bottom_z);
000010  4632              MOV      r2,r6
000012  463b              MOV      r3,r7
000014  e88d0c30          STM      sp,{r4,r5,r10,r11}
000018  9804              LDR      r0,[sp,#0x10]
00001a  f7fffffe          BL       cycle_feed
;;;3748           cycle_feed(plane, x, y, clear_z);
00001e  4632              MOV      r2,r6
000020  463b              MOV      r3,r7
000022  e88d0330          STM      sp,{r4,r5,r8,r9}
000026  9804              LDR      r0,[sp,#0x10]
000028  f7fffffe          BL       cycle_feed
;;;3749   
;;;3750           return RS274NGC_OK;
00002c  2000              MOVS     r0,#0
;;;3751       }
00002e  b008              ADD      sp,sp,#0x20
000030  e8bd9ff0          POP      {r4-r12,pc}
;;;3752   
                          ENDP


                          AREA ||i.convert_cycle_g86||, CODE, READONLY, ALIGN=2

                  convert_cycle_g86 PROC
;;;3783   
;;;3784       static int convert_cycle_g86(                 /* ARGUMENTS                           */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3785       CANON_PLANE plane,                            /* selected plane                      */
;;;3786       double x,                                     /* x-value where cycle is executed     */
;;;3787       double y,                                     /* y-value where cycle is executed     */
;;;3788       double clear_z,                               /* z-value of clearance plane          */
;;;3789       double bottom_z,                              /* value of z at bottom of cycle       */
;;;3790       double dwell,                                 /* dwell time                          */
;;;3791       CANON_DIRECTION direction)                    /* direction spindle turning at outset */
;;;3792       {
000004  4683              MOV      r11,r0
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  f8dda058          LDR      r10,[sp,#0x58]
00000e  ac0e              ADD      r4,sp,#0x38
000010  e8940330          LDM      r4,{r4,r5,r8,r9}
;;;3793           static char name[] SET_TO "convert_cycle_g86";
;;;3794   
;;;3795           CHK(((direction ISNT CANON_CLOCKWISE) AND
000014  f1ba0f02          CMP      r10,#2
000018  d02b              BEQ      |L27.114|
00001a  f1ba0f03          CMP      r10,#3
00001e  d028              BEQ      |L27.114|
000020  f04f0100          MOV      r1,#0
000024  4824              LDR      r0,|L27.184|
000026  f8c0114c          STR      r1,[r0,#0x14c]
00002a  4601              MOV      r1,r0
00002c  f8d1314c          LDR      r3,[r1,#0x14c]
000030  f8d1114c          LDR      r1,[r1,#0x14c]
000034  f1010101          ADD      r1,r1,#1
000038  4602              MOV      r2,r0
00003a  f8c2114c          STR      r1,[r2,#0x14c]
00003e  eb030183          ADD      r1,r3,r3,LSL #2
000042  f6a06254          SUB      r2,r0,#0xe54
000046  eb021101          ADD      r1,r2,r1,LSL #4
00004a  4608              MOV      r0,r1
00004c  491b              LDR      r1,|L27.188|
00004e  f7fffffe          BL       strcpy
000052  f04f0100          MOV      r1,#0
000056  4818              LDR      r0,|L27.184|
000058  f8d0014c          LDR      r0,[r0,#0x14c]
00005c  eb000080          ADD      r0,r0,r0,LSL #2
000060  4a17              LDR      r2,|L27.192|
000062  eb021000          ADD      r0,r2,r0,LSL #4
000066  7001              STRB     r1,[r0,#0]
000068  f04f009e          MOV      r0,#0x9e
                  |L27.108|
;;;3796               (direction ISNT CANON_COUNTERCLOCKWISE)),
;;;3797               NCE_SPINDLE_NOT_TURNING_IN_G86);
;;;3798   
;;;3799           cycle_feed(plane, x, y, bottom_z);
;;;3800           DWELL(dwell);
;;;3801           STOP_SPINDLE_TURNING();
;;;3802           cycle_traverse(plane, x, y, clear_z);
;;;3803           if (direction IS CANON_CLOCKWISE)
;;;3804               START_SPINDLE_CLOCKWISE();
;;;3805           else
;;;3806               START_SPINDLE_COUNTERCLOCKWISE();
;;;3807   
;;;3808           return RS274NGC_OK;
;;;3809       }
00006c  b004              ADD      sp,sp,#0x10
00006e  e8bd9ff0          POP      {r4-r12,pc}
                  |L27.114|
000072  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;3799
000076  4632              MOV      r2,r6                 ;3799
000078  463b              MOV      r3,r7                 ;3799
00007a  e9cd4500          STRD     r4,r5,[sp,#0]         ;3799
00007e  e9cd0102          STRD     r0,r1,[sp,#8]         ;3799
000082  4658              MOV      r0,r11                ;3799
000084  f7fffffe          BL       cycle_feed
000088  e9dd0114          LDRD     r0,r1,[sp,#0x50]      ;3800
00008c  f7fffffe          BL       DWELL
000090  f7fffffe          BL       STOP_SPINDLE_TURNING
000094  4632              MOV      r2,r6                 ;3802
000096  463b              MOV      r3,r7                 ;3802
000098  4658              MOV      r0,r11                ;3802
00009a  e88d0330          STM      sp,{r4,r5,r8,r9}      ;3802
00009e  f7fffffe          BL       cycle_traverse
0000a2  f1ba0f02          CMP      r10,#2                ;3803
0000a6  d102              BNE      |L27.174|
0000a8  f7fffffe          BL       START_SPINDLE_CLOCKWISE
0000ac  e001              B        |L27.178|
                  |L27.174|
0000ae  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
                  |L27.178|
0000b2  2000              MOVS     r0,#0                 ;3808
0000b4  e7da              B        |L27.108|
;;;3810   
                          ENDP

0000b6  0000              DCW      0x0000
                  |L27.184|
                          DCD      _setup+0xc000
                  |L27.188|
                          DCD      |symbol_number.455|
                  |L27.192|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g87||, CODE, READONLY, ALIGN=2

                  convert_cycle_g87 PROC
;;;3869   
;;;3870       static int convert_cycle_g87(                 /* ARGUMENTS                           */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3871       CANON_PLANE plane,                            /* selected plane                      */
;;;3872       double x,                                     /* x-value where cycle is executed     */
;;;3873       double offset_x,                              /* x-axis offset position              */
;;;3874       double y,                                     /* y-value where cycle is executed     */
;;;3875       double offset_y,                              /* y-axis offset position              */
;;;3876       double r,                                     /* z_value of r_plane                  */
;;;3877       double clear_z,                               /* z-value of clearance plane          */
;;;3878       double middle_z,                              /* z-value of top of back bore         */
;;;3879       double bottom_z,                              /* value of z at bottom of cycle       */
;;;3880       CANON_DIRECTION direction)                    /* direction spindle turning at outset */
;;;3881       {
000004  b084              SUB      sp,sp,#0x10
000006  4683              MOV      r11,r0
000008  e9dd9a1f          LDRD     r9,r10,[sp,#0x7c]
00000c  f8dd8078          LDR      r8,[sp,#0x78]
000010  ac14              ADD      r4,sp,#0x50
000012  ccf0              LDM      r4,{r4-r7}
;;;3882           static char name[] SET_TO "convert_cycle_g87";
;;;3883   
;;;3884           CHK(((direction ISNT CANON_CLOCKWISE) AND
000014  f1ba0f02          CMP      r10,#2
000018  d02b              BEQ      |L28.114|
00001a  f1ba0f03          CMP      r10,#3
00001e  d028              BEQ      |L28.114|
000020  f04f0100          MOV      r1,#0
000024  4847              LDR      r0,|L28.324|
000026  f8c0114c          STR      r1,[r0,#0x14c]
00002a  4601              MOV      r1,r0
00002c  f8d1314c          LDR      r3,[r1,#0x14c]
000030  f8d1114c          LDR      r1,[r1,#0x14c]
000034  f1010101          ADD      r1,r1,#1
000038  4602              MOV      r2,r0
00003a  f8c2114c          STR      r1,[r2,#0x14c]
00003e  eb030183          ADD      r1,r3,r3,LSL #2
000042  f6a06254          SUB      r2,r0,#0xe54
000046  eb021101          ADD      r1,r2,r1,LSL #4
00004a  4608              MOV      r0,r1
00004c  493e              LDR      r1,|L28.328|
00004e  f7fffffe          BL       strcpy
000052  f04f0100          MOV      r1,#0
000056  483b              LDR      r0,|L28.324|
000058  f8d0014c          LDR      r0,[r0,#0x14c]
00005c  eb000080          ADD      r0,r0,r0,LSL #2
000060  4a3a              LDR      r2,|L28.332|
000062  eb021000          ADD      r0,r2,r0,LSL #4
000066  7001              STRB     r1,[r0,#0]
000068  f04f009f          MOV      r0,#0x9f
                  |L28.108|
;;;3885               (direction ISNT CANON_COUNTERCLOCKWISE)),
;;;3886               NCE_SPINDLE_NOT_TURNING_IN_G87);
;;;3887   
;;;3888           cycle_traverse(plane, offset_x, offset_y, r);
;;;3889           STOP_SPINDLE_TURNING();
;;;3890           ORIENT_SPINDLE(0.0, direction);
;;;3891           cycle_traverse(plane, offset_x, offset_y, bottom_z);
;;;3892           cycle_traverse(plane, x, y, bottom_z);
;;;3893           if (direction IS CANON_CLOCKWISE)
;;;3894               START_SPINDLE_CLOCKWISE();
;;;3895           else
;;;3896               START_SPINDLE_COUNTERCLOCKWISE();
;;;3897           cycle_feed(plane, x, y, middle_z);
;;;3898           cycle_feed(plane, x, y, bottom_z);
;;;3899           STOP_SPINDLE_TURNING();
;;;3900           ORIENT_SPINDLE(0.0, direction);
;;;3901           cycle_traverse(plane, offset_x, offset_y, bottom_z);
;;;3902           cycle_traverse(plane, offset_x, offset_y, clear_z);
;;;3903           cycle_traverse(plane, x, y, clear_z);
;;;3904           if (direction IS CANON_CLOCKWISE)
;;;3905               START_SPINDLE_CLOCKWISE();
;;;3906           else
;;;3907               START_SPINDLE_COUNTERCLOCKWISE();
;;;3908   
;;;3909           return RS274NGC_OK;
;;;3910       }
00006c  b008              ADD      sp,sp,#0x20
00006e  e8bd9ff0          POP      {r4-r12,pc}
                  |L28.114|
000072  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;3888
000076  e9cd6700          STRD     r6,r7,[sp,#0]         ;3888
00007a  e9cd0102          STRD     r0,r1,[sp,#8]         ;3888
00007e  4658              MOV      r0,r11                ;3888
000080  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;3888
000084  f7fffffe          BL       cycle_traverse
000088  f7fffffe          BL       STOP_SPINDLE_TURNING
00008c  4652              MOV      r2,r10                ;3890
00008e  2000              MOVS     r0,#0                 ;3890
000090  4601              MOV      r1,r0                 ;3890
000092  f7fffffe          BL       ORIENT_SPINDLE
000096  e88d03c0          STM      sp,{r6-r9}            ;3891
00009a  4658              MOV      r0,r11                ;3891
00009c  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;3891
0000a0  f7fffffe          BL       cycle_traverse
0000a4  e88d0330          STM      sp,{r4,r5,r8,r9}      ;3892
0000a8  4658              MOV      r0,r11                ;3892
0000aa  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3892
0000ae  f7fffffe          BL       cycle_traverse
0000b2  f1ba0f02          CMP      r10,#2                ;3893
0000b6  d102              BNE      |L28.190|
0000b8  f7fffffe          BL       START_SPINDLE_CLOCKWISE
0000bc  e001              B        |L28.194|
                  |L28.190|
0000be  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
                  |L28.194|
0000c2  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;3897
0000c6  e9cd4500          STRD     r4,r5,[sp,#0]         ;3897
0000ca  e9cd0102          STRD     r0,r1,[sp,#8]         ;3897
0000ce  4658              MOV      r0,r11                ;3897
0000d0  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3897
0000d4  f7fffffe          BL       cycle_feed
0000d8  e88d0330          STM      sp,{r4,r5,r8,r9}      ;3898
0000dc  4658              MOV      r0,r11                ;3898
0000de  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3898
0000e2  f7fffffe          BL       cycle_feed
0000e6  f7fffffe          BL       STOP_SPINDLE_TURNING
0000ea  4652              MOV      r2,r10                ;3900
0000ec  2000              MOVS     r0,#0                 ;3900
0000ee  4601              MOV      r1,r0                 ;3900
0000f0  f7fffffe          BL       ORIENT_SPINDLE
0000f4  e88d03c0          STM      sp,{r6-r9}            ;3901
0000f8  4658              MOV      r0,r11                ;3901
0000fa  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;3901
0000fe  f7fffffe          BL       cycle_traverse
000102  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;3902
000106  e9cd6700          STRD     r6,r7,[sp,#0]         ;3902
00010a  e9cd0102          STRD     r0,r1,[sp,#8]         ;3902
00010e  4658              MOV      r0,r11                ;3902
000110  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;3902
000114  f7fffffe          BL       cycle_traverse
000118  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;3903
00011c  e9cd4500          STRD     r4,r5,[sp,#0]         ;3903
000120  e9cd0102          STRD     r0,r1,[sp,#8]         ;3903
000124  4658              MOV      r0,r11                ;3903
000126  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;3903
00012a  f7fffffe          BL       cycle_traverse
00012e  f1ba0f02          CMP      r10,#2                ;3904
000132  d102              BNE      |L28.314|
000134  f7fffffe          BL       START_SPINDLE_CLOCKWISE
000138  e001              B        |L28.318|
                  |L28.314|
00013a  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
                  |L28.318|
00013e  2000              MOVS     r0,#0                 ;3909
000140  e794              B        |L28.108|
;;;3911   
                          ENDP

000142  0000              DCW      0x0000
                  |L28.324|
                          DCD      _setup+0xc000
                  |L28.328|
                          DCD      |symbol_number.456|
                  |L28.332|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g88||, CODE, READONLY, ALIGN=2

                  convert_cycle_g88 PROC
;;;3941   
;;;3942       static int convert_cycle_g88(                 /* ARGUMENTS                           */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3943       CANON_PLANE plane,                            /* selected plane                      */
;;;3944       double x,                                     /* x-value where cycle is executed     */
;;;3945       double y,                                     /* y-value where cycle is executed     */
;;;3946       double bottom_z,                              /* value of z at bottom of cycle       */
;;;3947       double dwell,                                 /* dwell time                          */
;;;3948       CANON_DIRECTION direction)                    /* direction spindle turning at outset */
;;;3949       {
000004  4683              MOV      r11,r0
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
00000a  f8dda050          LDR      r10,[sp,#0x50]
00000e  ae0e              ADD      r6,sp,#0x38
000010  e89603c0          LDM      r6,{r6-r9}
;;;3950           static char name[] SET_TO "convert_cycle_g88";
;;;3951   
;;;3952           CHK(((direction ISNT CANON_CLOCKWISE) AND
000014  f1ba0f02          CMP      r10,#2
000018  d02b              BEQ      |L29.114|
00001a  f1ba0f03          CMP      r10,#3
00001e  d028              BEQ      |L29.114|
000020  f04f0100          MOV      r1,#0
000024  481f              LDR      r0,|L29.164|
000026  f8c0114c          STR      r1,[r0,#0x14c]
00002a  4601              MOV      r1,r0
00002c  f8d1314c          LDR      r3,[r1,#0x14c]
000030  f8d1114c          LDR      r1,[r1,#0x14c]
000034  f1010101          ADD      r1,r1,#1
000038  4602              MOV      r2,r0
00003a  f8c2114c          STR      r1,[r2,#0x14c]
00003e  eb030183          ADD      r1,r3,r3,LSL #2
000042  f6a06254          SUB      r2,r0,#0xe54
000046  eb021101          ADD      r1,r2,r1,LSL #4
00004a  4608              MOV      r0,r1
00004c  4916              LDR      r1,|L29.168|
00004e  f7fffffe          BL       strcpy
000052  f04f0100          MOV      r1,#0
000056  4813              LDR      r0,|L29.164|
000058  f8d0014c          LDR      r0,[r0,#0x14c]
00005c  eb000080          ADD      r0,r0,r0,LSL #2
000060  4a12              LDR      r2,|L29.172|
000062  eb021000          ADD      r0,r2,r0,LSL #4
000066  7001              STRB     r1,[r0,#0]
000068  f04f00a0          MOV      r0,#0xa0
                  |L29.108|
;;;3953               (direction ISNT CANON_COUNTERCLOCKWISE)),
;;;3954               NCE_SPINDLE_NOT_TURNING_IN_G88);
;;;3955   
;;;3956           cycle_feed(plane, x, y, bottom_z);
;;;3957           DWELL(dwell);
;;;3958           STOP_SPINDLE_TURNING();
;;;3959           PROGRAM_STOP();                           /* operator retracts the spindle here */
;;;3960           if (direction IS CANON_CLOCKWISE)
;;;3961               START_SPINDLE_CLOCKWISE();
;;;3962           else
;;;3963               START_SPINDLE_COUNTERCLOCKWISE();
;;;3964   
;;;3965           return RS274NGC_OK;
;;;3966       }
00006c  b004              ADD      sp,sp,#0x10
00006e  e8bd9ff0          POP      {r4-r12,pc}
                  |L29.114|
000072  4622              MOV      r2,r4                 ;3956
000074  462b              MOV      r3,r5                 ;3956
000076  4658              MOV      r0,r11                ;3956
000078  e88d03c0          STM      sp,{r6-r9}            ;3956
00007c  f7fffffe          BL       cycle_feed
000080  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;3957
000084  f7fffffe          BL       DWELL
000088  f7fffffe          BL       STOP_SPINDLE_TURNING
00008c  f7fffffe          BL       PROGRAM_STOP
000090  f1ba0f02          CMP      r10,#2                ;3960
000094  d102              BNE      |L29.156|
000096  f7fffffe          BL       START_SPINDLE_CLOCKWISE
00009a  e001              B        |L29.160|
                  |L29.156|
00009c  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
                  |L29.160|
0000a0  2000              MOVS     r0,#0                 ;3965
0000a2  e7e3              B        |L29.108|
;;;3967   
                          ENDP

                  |L29.164|
                          DCD      _setup+0xc000
                  |L29.168|
                          DCD      |symbol_number.457|
                  |L29.172|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_g89||, CODE, READONLY, ALIGN=1

                  convert_cycle_g89 PROC
;;;3991   
;;;3992       static int convert_cycle_g89(                 /* ARGUMENTS                        */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;3993       CANON_PLANE plane,                            /* selected plane                   */
;;;3994       double x,                                     /* x-value where cycle is executed  */
;;;3995       double y,                                     /* y-value where cycle is executed  */
;;;3996       double clear_z,                               /* z-value of clearance plane       */
;;;3997       double bottom_z,                              /* value of z at bottom of cycle    */
;;;3998       double dwell)                                 /* dwell time                       */
;;;3999       {
000004  b084              SUB      sp,sp,#0x10
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
00000a  ac12              ADD      r4,sp,#0x48
00000c  e8940f30          LDM      r4,{r4,r5,r8-r11}
;;;4000   //        static char name[] SET_TO "convert_cycle_g89";
;;;4001   
;;;4002           cycle_feed(plane, x, y, bottom_z);
000010  4632              MOV      r2,r6
000012  463b              MOV      r3,r7
000014  e88d0c30          STM      sp,{r4,r5,r10,r11}
000018  9804              LDR      r0,[sp,#0x10]
00001a  f7fffffe          BL       cycle_feed
;;;4003           DWELL(dwell);
00001e  e9dd0118          LDRD     r0,r1,[sp,#0x60]
000022  f7fffffe          BL       DWELL
;;;4004           cycle_feed(plane, x, y, clear_z);
000026  4632              MOV      r2,r6
000028  463b              MOV      r3,r7
00002a  e88d0330          STM      sp,{r4,r5,r8,r9}
00002e  9804              LDR      r0,[sp,#0x10]
000030  f7fffffe          BL       cycle_feed
;;;4005   
;;;4006           return RS274NGC_OK;
000034  2000              MOVS     r0,#0
;;;4007       }
000036  b008              ADD      sp,sp,#0x20
000038  e8bd9ff0          POP      {r4-r12,pc}
;;;4008   
                          ENDP


                          AREA ||i.convert_cycle_xy||, CODE, READONLY, ALIGN=2

                  convert_cycle_xy PROC
;;;4125   
;;;4126           static int convert_cycle_xy(              /* ARGUMENTS                                 */
000000  b507              PUSH     {r0-r2,lr}
;;;4127           int motion,                               /* a g-code between G_81 and G_89, a canned cycle */
;;;4128           block_pointer block,                      /* pointer to a block of RS274 instructions       */
;;;4129           setup_pointer settings)                   /* pointer to machine settings                    */
;;;4130       {
000002  b0b0              SUB      sp,sp,#0xc0
;;;4131           static char name[] SET_TO "convert_cycle_xy";
;;;4132           double aa;
;;;4133           double aa_increment;
;;;4134           double bb;
;;;4135           double bb_increment;
;;;4136           double cc;
;;;4137           double clear_cc;
;;;4138           double i;
;;;4139           double j;
;;;4140           double k;
;;;4141           double old_cc;
;;;4142           CANON_PLANE plane;
;;;4143           double r;
;;;4144           int repeat;
;;;4145           CANON_MOTION_MODE save_mode;
;;;4146           int status;
;;;4147   
;;;4148           plane SET_TO CANON_PLANE_XY;
000004  f04f0001          MOV      r0,#1
000008  901b              STR      r0,[sp,#0x6c]
;;;4149           if (settings->motion_mode ISNT motion)
00000a  9832              LDR      r0,[sp,#0xc8]
00000c  f8d01628          LDR      r1,[r0,#0x628]
000010  9830              LDR      r0,[sp,#0xc0]
000012  4281              CMP      r1,r0
000014  d02a              BEQ      |L31.108|
;;;4150           {
;;;4151               CHK((block->z_flag IS OFF),
000016  9831              LDR      r0,[sp,#0xc4]
000018  f8d001f8          LDR      r0,[r0,#0x1f8]
00001c  bb30              CBNZ     r0,|L31.108|
00001e  f04f0100          MOV      r1,#0
000022  48ff              LDR      r0,|L31.1056|
000024  f8c0114c          STR      r1,[r0,#0x14c]
000028  f8d0214c          LDR      r2,[r0,#0x14c]
00002c  f8d0014c          LDR      r0,[r0,#0x14c]
000030  f1000001          ADD      r0,r0,#1
000034  49fa              LDR      r1,|L31.1056|
000036  f8c1014c          STR      r0,[r1,#0x14c]
00003a  eb020082          ADD      r0,r2,r2,LSL #2
00003e  f6a16154          SUB      r1,r1,#0xe54
000042  eb011000          ADD      r0,r1,r0,LSL #4
000046  49f7              LDR      r1,|L31.1060|
000048  9014              STR      r0,[sp,#0x50]
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  48f3              LDR      r0,|L31.1056|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4af2              LDR      r2,|L31.1064|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  f04f00c3          MOV      r0,#0xc3
                  |L31.104|
;;;4152                   NCE_Z_VALUE_UNSPECIFIED_IN_XY_PLANE_CANNED_CYCLE);
;;;4153           }
;;;4154           block->z_number SET_TO
;;;4155               block->z_flag IS ON ? block->z_number : settings->cycle_cc;
;;;4156           old_cc SET_TO settings->current_z;
;;;4157   
;;;4158           if (settings->distance_mode IS MODE_ABSOLUTE)
;;;4159           {
;;;4160               aa_increment SET_TO 0.0;
;;;4161               bb_increment SET_TO 0.0;
;;;4162               r SET_TO block->r_number;
;;;4163               cc SET_TO block->z_number;
;;;4164               aa SET_TO block->x_flag IS ON ? block->x_number : settings->current_x;
;;;4165               bb SET_TO block->y_flag IS ON ? block->y_number : settings->current_y;
;;;4166           }
;;;4167           else if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4168           {
;;;4169               aa_increment SET_TO block->x_number;
;;;4170               bb_increment SET_TO block->y_number;
;;;4171               r SET_TO (block->r_number + old_cc);
;;;4172               cc SET_TO (r + block->z_number);      /* [NCMS, page 98] */
;;;4173               aa SET_TO settings->current_x;
;;;4174               bb SET_TO settings->current_y;
;;;4175           }
;;;4176           else
;;;4177               ERM(NCE_BUG_DISTANCE_MODE_NOT_G90_OR_G91);
;;;4178           CHK((r < cc), NCE_R_LESS_THAN_Z_IN_CYCLE_IN_XY_PLANE);
;;;4179   
;;;4180           if (old_cc < r)
;;;4181           {
;;;4182               STRAIGHT_TRAVERSE(settings->current_x, settings->current_y, r
;;;4183       #ifdef AA
;;;4184                   ,     settings->AA_current
;;;4185       #else
;;;4186       #ifdef ALL_AXES
;;;4187                   , 0
;;;4188       #endif
;;;4189       #endif
;;;4190       #ifdef BB
;;;4191                   ,  settings->BB_current
;;;4192       #else
;;;4193       #ifdef ALL_AXES
;;;4194                   , 0
;;;4195       #endif
;;;4196       #endif
;;;4197       #ifdef CC
;;;4198                   ,  settings->CC_current
;;;4199       #else
;;;4200       #ifdef ALL_AXES
;;;4201                   , 0
;;;4202       #endif
;;;4203       #endif
;;;4204                   );
;;;4205               old_cc SET_TO r;
;;;4206           }
;;;4207           clear_cc SET_TO (settings->retract_mode IS R_PLANE) ? r : old_cc;
;;;4208   
;;;4209           save_mode SET_TO GET_EXTERNAL_MOTION_CONTROL_MODE();
;;;4210           if (save_mode ISNT CANON_EXACT_PATH)
;;;4211               SET_MOTION_CONTROL_MODE(CANON_EXACT_PATH);
;;;4212   
;;;4213           switch(motion)
;;;4214           {
;;;4215               case G_81:
;;;4216                   CYCLE_MACRO(convert_cycle_g81(CANON_PLANE_XY, aa, bb, clear_cc, cc))
;;;4217                       break;
;;;4218               case G_82:
;;;4219                   CHK(((settings->motion_mode ISNT G_82) AND (block->p_number IS -1.0)),
;;;4220                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G82);
;;;4221                   block->p_number SET_TO
;;;4222                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4223                   CYCLE_MACRO(convert_cycle_g82 (CANON_PLANE_XY, aa, bb, clear_cc, cc,
;;;4224                       block->p_number))
;;;4225                       settings->cycle_p SET_TO block->p_number;
;;;4226                   break;
;;;4227               case G_83:
;;;4228                   CHK(((settings->motion_mode ISNT G_83) AND (block->q_number IS -1.0)),
;;;4229                       NCE_Q_WORD_MISSING_WITH_G83);
;;;4230                   block->q_number SET_TO
;;;4231                       block->q_number IS -1.0 ? settings->cycle_q : block->q_number;
;;;4232                   CYCLE_MACRO(convert_cycle_g83 (CANON_PLANE_XY, aa, bb, r, clear_cc, cc,
;;;4233                       block->q_number))
;;;4234                       settings->cycle_q SET_TO block->q_number;
;;;4235                   break;
;;;4236               case G_84:
;;;4237                   CYCLE_MACRO(convert_cycle_g84 (CANON_PLANE_XY, aa, bb, clear_cc, cc,
;;;4238                       settings->spindle_turning, settings->speed_feed_mode))
;;;4239                       break;
;;;4240               case G_85:
;;;4241                   CYCLE_MACRO(convert_cycle_g85 (CANON_PLANE_XY, aa, bb, clear_cc, cc))
;;;4242                       break;
;;;4243               case G_86:
;;;4244                   CHK(((settings->motion_mode ISNT G_86) AND (block->p_number IS -1.0)),
;;;4245                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G86);
;;;4246                   block->p_number SET_TO
;;;4247                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4248                   CYCLE_MACRO(convert_cycle_g86 (CANON_PLANE_XY, aa, bb, clear_cc, cc,
;;;4249                       block->p_number, settings->spindle_turning))
;;;4250                       settings->cycle_p SET_TO block->p_number;
;;;4251                   break;
;;;4252               case G_87:
;;;4253                   if (settings->motion_mode ISNT G_87)
;;;4254                   {
;;;4255                       CHK((block->i_flag IS OFF), NCE_I_WORD_MISSING_WITH_G87);
;;;4256                       CHK((block->j_flag IS OFF), NCE_J_WORD_MISSING_WITH_G87);
;;;4257                       CHK((block->k_flag IS OFF), NCE_K_WORD_MISSING_WITH_G87);
;;;4258                   }
;;;4259                   i SET_TO block->i_flag IS ON ? block->i_number : settings->cycle_i;
;;;4260                   j SET_TO block->j_flag IS ON ? block->j_number : settings->cycle_j;
;;;4261                   k SET_TO block->k_flag IS ON ? block->k_number : settings->cycle_k;
;;;4262                   settings->cycle_i SET_TO i;
;;;4263                   settings->cycle_j SET_TO j;
;;;4264                   settings->cycle_k SET_TO k;
;;;4265                   if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4266                   {
;;;4267                       k SET_TO (cc + k);            /* k always absolute in function call below */
;;;4268                   }
;;;4269                   CYCLE_MACRO(convert_cycle_g87 (CANON_PLANE_XY, aa, (aa + i), bb,
;;;4270                       (bb + j), r, clear_cc, k, cc, settings->spindle_turning))
;;;4271                       break;
;;;4272               case G_88:
;;;4273                   CHK(((settings->motion_mode ISNT G_88) AND (block->p_number IS -1.0)),
;;;4274                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G88);
;;;4275                   block->p_number SET_TO
;;;4276                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4277                   CYCLE_MACRO(convert_cycle_g88 (CANON_PLANE_XY, aa, bb, cc,
;;;4278                       block->p_number, settings->spindle_turning))
;;;4279                       settings->cycle_p SET_TO block->p_number;
;;;4280                   break;
;;;4281               case G_89:
;;;4282                   CHK(((settings->motion_mode ISNT G_89) AND (block->p_number IS -1.0)),
;;;4283                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G89);
;;;4284                   block->p_number SET_TO
;;;4285                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4286                   CYCLE_MACRO(convert_cycle_g89 (CANON_PLANE_XY, aa, bb, clear_cc, cc,
;;;4287                       block->p_number))
;;;4288                       settings->cycle_p SET_TO block->p_number;
;;;4289                   break;
;;;4290               default:
;;;4291                   ERM(NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
;;;4292           }
;;;4293           settings->current_x SET_TO aa;            /* CYCLE_MACRO updates aa and bb */
;;;4294           settings->current_y SET_TO bb;
;;;4295           settings->current_z SET_TO clear_cc;
;;;4296           settings->cycle_cc SET_TO block->z_number;
;;;4297   
;;;4298           if (save_mode ISNT CANON_EXACT_PATH)
;;;4299               SET_MOTION_CONTROL_MODE(save_mode);
;;;4300   
;;;4301           return RS274NGC_OK;
;;;4302       }
000068  b033              ADD      sp,sp,#0xcc
00006a  bd00              POP      {pc}
                  |L31.108|
00006c  9831              LDR      r0,[sp,#0xc4]         ;4154
00006e  f8d001f8          LDR      r0,[r0,#0x1f8]        ;4154
000072  2801              CMP      r0,#1                 ;4154
000074  d104              BNE      |L31.128|
000076  9931              LDR      r1,[sp,#0xc4]         ;4155
000078  f5017100          ADD      r1,r1,#0x200          ;4155
00007c  c903              LDM      r1,{r0,r1}            ;4155
00007e  e003              B        |L31.136|
                  |L31.128|
000080  9932              LDR      r1,[sp,#0xc8]         ;4155
000082  f501716e          ADD      r1,r1,#0x3b8          ;4155
000086  c903              LDM      r1,{r0,r1}            ;4155
                  |L31.136|
000088  9a31              LDR      r2,[sp,#0xc4]         ;4155
00008a  f5027200          ADD      r2,r2,#0x200          ;4155
00008e  c203              STM      r2!,{r0,r1}           ;4155
000090  9832              LDR      r0,[sp,#0xc8]         ;4156
000092  f5007068          ADD      r0,r0,#0x3a0          ;4156
000096  c803              LDM      r0,{r0,r1}            ;4156
000098  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4156
00009c  9832              LDR      r0,[sp,#0xc8]         ;4158
00009e  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4158
0000a2  bb98              CBNZ     r0,|L31.268|
0000a4  f04f0100          MOV      r1,#0                 ;4160
0000a8  912c              STR      r1,[sp,#0xb0]         ;4160
0000aa  912d              STR      r1,[sp,#0xb4]         ;4160
0000ac  4608              MOV      r0,r1                 ;4161
0000ae  9028              STR      r0,[sp,#0xa0]         ;4161
0000b0  9029              STR      r0,[sp,#0xa4]         ;4161
0000b2  9931              LDR      r1,[sp,#0xc4]         ;4162
0000b4  f50171e4          ADD      r1,r1,#0x1c8          ;4162
0000b8  c903              LDM      r1,{r0,r1}            ;4162
0000ba  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4162
0000be  9831              LDR      r0,[sp,#0xc4]         ;4163
0000c0  f5007000          ADD      r0,r0,#0x200          ;4163
0000c4  c803              LDM      r0,{r0,r1}            ;4163
0000c6  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4163
0000ca  9831              LDR      r0,[sp,#0xc4]         ;4164
0000cc  f8d001dc          LDR      r0,[r0,#0x1dc]        ;4164
0000d0  2801              CMP      r0,#1                 ;4164
0000d2  d104              BNE      |L31.222|
0000d4  9931              LDR      r1,[sp,#0xc4]         ;4164
0000d6  f50171f0          ADD      r1,r1,#0x1e0          ;4164
0000da  c903              LDM      r1,{r0,r1}            ;4164
0000dc  e003              B        |L31.230|
                  |L31.222|
0000de  9932              LDR      r1,[sp,#0xc8]         ;4164
0000e0  f5017164          ADD      r1,r1,#0x390          ;4164
0000e4  c903              LDM      r1,{r0,r1}            ;4164
                  |L31.230|
0000e6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4164
0000ea  9831              LDR      r0,[sp,#0xc4]         ;4165
0000ec  f8d001e8          LDR      r0,[r0,#0x1e8]        ;4165
0000f0  2801              CMP      r0,#1                 ;4165
0000f2  d104              BNE      |L31.254|
0000f4  9931              LDR      r1,[sp,#0xc4]         ;4165
0000f6  f50171f8          ADD      r1,r1,#0x1f0          ;4165
0000fa  c903              LDM      r1,{r0,r1}            ;4165
0000fc  e003              B        |L31.262|
                  |L31.254|
0000fe  9932              LDR      r1,[sp,#0xc8]         ;4165
000100  f5017166          ADD      r1,r1,#0x398          ;4165
000104  c903              LDM      r1,{r0,r1}            ;4165
                  |L31.262|
000106  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4165
00010a  e05b              B        |L31.452|
                  |L31.268|
00010c  e7ff              B        |L31.270|
                  |L31.270|
00010e  9832              LDR      r0,[sp,#0xc8]         ;4167
000110  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4167
000114  2801              CMP      r0,#1                 ;4167
000116  d130              BNE      |L31.378|
000118  9931              LDR      r1,[sp,#0xc4]         ;4169
00011a  f50171f0          ADD      r1,r1,#0x1e0          ;4169
00011e  c903              LDM      r1,{r0,r1}            ;4169
000120  e9cd012c          STRD     r0,r1,[sp,#0xb0]      ;4169
000124  9931              LDR      r1,[sp,#0xc4]         ;4170
000126  f50171f8          ADD      r1,r1,#0x1f0          ;4170
00012a  c903              LDM      r1,{r0,r1}            ;4170
00012c  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;4170
000130  9931              LDR      r1,[sp,#0xc4]         ;4171
000132  f50171e4          ADD      r1,r1,#0x1c8          ;4171
000136  c903              LDM      r1,{r0,r1}            ;4171
000138  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4171
00013c  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;4171
000140  f7fffffe          BL       __aeabi_dadd
000144  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4171
000148  9931              LDR      r1,[sp,#0xc4]         ;4172
00014a  f5017100          ADD      r1,r1,#0x200          ;4172
00014e  c903              LDM      r1,{r0,r1}            ;4172
000150  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4172
000154  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4172
000158  f7fffffe          BL       __aeabi_dadd
00015c  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4172
000160  9832              LDR      r0,[sp,#0xc8]         ;4173
000162  f5007064          ADD      r0,r0,#0x390          ;4173
000166  c803              LDM      r0,{r0,r1}            ;4173
000168  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4173
00016c  9932              LDR      r1,[sp,#0xc8]         ;4174
00016e  f5017166          ADD      r1,r1,#0x398          ;4174
000172  c903              LDM      r1,{r0,r1}            ;4174
000174  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4174
000178  e024              B        |L31.452|
                  |L31.378|
00017a  f04f0100          MOV      r1,#0                 ;4177
00017e  48a8              LDR      r0,|L31.1056|
000180  f8c0114c          STR      r1,[r0,#0x14c]        ;4177
000184  f8d0214c          LDR      r2,[r0,#0x14c]        ;4177
000188  f8d0014c          LDR      r0,[r0,#0x14c]        ;4177
00018c  f1000001          ADD      r0,r0,#1              ;4177
000190  49a3              LDR      r1,|L31.1056|
000192  f8c1014c          STR      r0,[r1,#0x14c]        ;4177
000196  eb020182          ADD      r1,r2,r2,LSL #2       ;4177
00019a  48a3              LDR      r0,|L31.1064|
00019c  eb001001          ADD      r0,r0,r1,LSL #4       ;4177
0001a0  49a0              LDR      r1,|L31.1060|
0001a2  9014              STR      r0,[sp,#0x50]         ;4177
0001a4  f7fffffe          BL       strcpy
0001a8  f04f0100          MOV      r1,#0                 ;4177
0001ac  489c              LDR      r0,|L31.1056|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;4177
0001b2  eb000080          ADD      r0,r0,r0,LSL #2       ;4177
0001b6  4a9c              LDR      r2,|L31.1064|
0001b8  eb021000          ADD      r0,r2,r0,LSL #4       ;4177
0001bc  7001              STRB     r1,[r0,#0]            ;4177
0001be  f04f001f          MOV      r0,#0x1f              ;4177
                  |L31.450|
0001c2  e751              B        |L31.104|
                  |L31.452|
0001c4  e9dd2326          LDRD     r2,r3,[sp,#0x98]      ;4178
0001c8  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4178
0001cc  f7fffffe          BL       __aeabi_cdcmple
0001d0  d224              BCS      |L31.540|
0001d2  f04f0100          MOV      r1,#0                 ;4178
0001d6  4892              LDR      r0,|L31.1056|
0001d8  f8c0114c          STR      r1,[r0,#0x14c]        ;4178
0001dc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4178
0001e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4178
0001e4  f1000001          ADD      r0,r0,#1              ;4178
0001e8  498d              LDR      r1,|L31.1056|
0001ea  f8c1014c          STR      r0,[r1,#0x14c]        ;4178
0001ee  eb020082          ADD      r0,r2,r2,LSL #2       ;4178
0001f2  498d              LDR      r1,|L31.1064|
0001f4  eb011000          ADD      r0,r1,r0,LSL #4       ;4178
0001f8  498a              LDR      r1,|L31.1060|
0001fa  9014              STR      r0,[sp,#0x50]         ;4178
0001fc  f7fffffe          BL       strcpy
000200  f04f0100          MOV      r1,#0                 ;4178
000204  4886              LDR      r0,|L31.1056|
000206  f8d0014c          LDR      r0,[r0,#0x14c]        ;4178
00020a  eb000080          ADD      r0,r0,r0,LSL #2       ;4178
00020e  4a86              LDR      r2,|L31.1064|
000210  eb021000          ADD      r0,r2,r0,LSL #4       ;4178
000214  7001              STRB     r1,[r0,#0]            ;4178
000216  f04f0096          MOV      r0,#0x96              ;4178
                  |L31.538|
00021a  e725              B        |L31.104|
                  |L31.540|
00021c  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4180
000220  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4180
000224  f7fffffe          BL       __aeabi_cdcmple
000228  d217              BCS      |L31.602|
00022a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4182
00022e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4182
000232  9932              LDR      r1,[sp,#0xc8]         ;4182
000234  f5017166          ADD      r1,r1,#0x398          ;4182
000238  c903              LDM      r1,{r0,r1}            ;4182
00023a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4182
00023e  9932              LDR      r1,[sp,#0xc8]         ;4182
000240  f5017164          ADD      r1,r1,#0x390          ;4182
000244  c903              LDM      r1,{r0,r1}            ;4182
000246  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;4182
00024a  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;4182
00024e  f7fffffe          BL       STRAIGHT_TRAVERSE
000252  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4205
000256  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4205
                  |L31.602|
00025a  9832              LDR      r0,[sp,#0xc8]         ;4207
00025c  f5004030          ADD      r0,r0,#0xb000         ;4207
000260  f8900188          LDRB     r0,[r0,#0x188]        ;4207
000264  b910              CBNZ     r0,|L31.620|
000266  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4207
00026a  e001              B        |L31.624|
                  |L31.620|
00026c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4207
                  |L31.624|
000270  e9cd0124          STRD     r0,r1,[sp,#0x90]      ;4207
000274  f7fffffe          BL       GET_EXTERNAL_MOTION_CONTROL_MODE
000278  9016              STR      r0,[sp,#0x58]         ;4209
00027a  9816              LDR      r0,[sp,#0x58]         ;4210
00027c  2802              CMP      r0,#2                 ;4210
00027e  d002              BEQ      |L31.646|
000280  2002              MOVS     r0,#2                 ;4211
000282  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L31.646|
000286  f2403252          MOV      r2,#0x352             ;4213
00028a  9830              LDR      r0,[sp,#0xc0]         ;4213
00028c  1a81              SUBS     r1,r0,r2              ;4213
00028e  4290              CMP      r0,r2                 ;4213
000290  d07d              BEQ      |L31.910|
000292  dc0a              BGT      |L31.682|
000294  f5a07040          SUB      r0,r0,#0x300          ;4213
000298  382a              SUBS     r0,r0,#0x2a           ;4213
00029a  d00f              BEQ      |L31.700|
00029c  280a              CMP      r0,#0xa               ;4213
00029e  d077              BEQ      |L31.912|
0002a0  2814              CMP      r0,#0x14              ;4213
0002a2  d076              BEQ      |L31.914|
0002a4  281e              CMP      r0,#0x1e              ;4213
                  |L31.678|
0002a6  d175              BNE      |L31.916|
0002a8  e24a              B        |L31.1856|
                  |L31.682|
0002aa  290a              CMP      r1,#0xa               ;4213
0002ac  d073              BEQ      |L31.918|
0002ae  2914              CMP      r1,#0x14              ;4213
0002b0  d072              BEQ      |L31.920|
0002b2  291e              CMP      r1,#0x1e              ;4213
0002b4  d071              BEQ      |L31.922|
0002b6  2928              CMP      r1,#0x28              ;4213
0002b8  d1f5              BNE      |L31.678|
0002ba  e3fe              B        |L31.2746|
                  |L31.700|
0002bc  9831              LDR      r0,[sp,#0xc4]         ;4216
0002be  f8d00178          LDR      r0,[r0,#0x178]        ;4216
0002c2  9017              STR      r0,[sp,#0x5c]         ;4216
0002c4  e07a              B        |L31.956|
                  |L31.710|
0002c6  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4216
0002ca  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4216
0002ce  f7fffffe          BL       __aeabi_dadd
0002d2  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4216
0002d6  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4216
0002da  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4216
0002de  f7fffffe          BL       __aeabi_dadd
0002e2  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4216
0002e6  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4216
0002ea  e9cd0102          STRD     r0,r1,[sp,#8]         ;4216
0002ee  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4216
0002f2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4216
0002f6  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4216
0002fa  981b              LDR      r0,[sp,#0x6c]         ;4216
0002fc  f7fffffe          BL       cycle_traverse
000300  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4216
000304  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4216
000308  f7fffffe          BL       __aeabi_cdcmpeq
00030c  d00c              BEQ      |L31.808|
00030e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4216
000312  e9cd0102          STRD     r0,r1,[sp,#8]         ;4216
000316  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4216
00031a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4216
00031e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4216
000322  981b              LDR      r0,[sp,#0x6c]         ;4216
000324  f7fffffe          BL       cycle_traverse
                  |L31.808|
000328  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4216
00032c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4216
000330  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4216
000334  e9cd0102          STRD     r0,r1,[sp,#8]         ;4216
000338  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4216
00033c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4216
000340  2001              MOVS     r0,#1                 ;4216
000342  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4216
000346  f7fffffe          BL       convert_cycle_g81
00034a  9015              STR      r0,[sp,#0x54]         ;4216
00034c  b330              CBZ      r0,|L31.924|
00034e  4834              LDR      r0,|L31.1056|
000350  f8d0014c          LDR      r0,[r0,#0x14c]        ;4216
000354  2831              CMP      r0,#0x31              ;4216
000356  da27              BGE      |L31.936|
000358  4831              LDR      r0,|L31.1056|
00035a  f8d0214c          LDR      r2,[r0,#0x14c]        ;4216
00035e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4216
000362  1c40              ADDS     r0,r0,#1              ;4216
000364  492e              LDR      r1,|L31.1056|
000366  f8c1014c          STR      r0,[r1,#0x14c]        ;4216
00036a  eb020182          ADD      r1,r2,r2,LSL #2       ;4216
00036e  482e              LDR      r0,|L31.1064|
000370  eb001001          ADD      r0,r0,r1,LSL #4       ;4216
000374  492b              LDR      r1,|L31.1060|
000376  9014              STR      r0,[sp,#0x50]         ;4216
000378  f7fffffe          BL       strcpy
00037c  f04f0100          MOV      r1,#0                 ;4216
000380  4827              LDR      r0,|L31.1056|
000382  f8d0014c          LDR      r0,[r0,#0x14c]        ;4216
000386  eb000380          ADD      r3,r0,r0,LSL #2       ;4216
00038a  4827              LDR      r0,|L31.1064|
00038c  e007              B        |L31.926|
                  |L31.910|
00038e  e268              B        |L31.2146|
                  |L31.912|
000390  e018              B        |L31.964|
                  |L31.914|
000392  e0f7              B        |L31.1412|
                  |L31.916|
000394  e3f1              B        |L31.2938|
                  |L31.918|
000396  e2e0              B        |L31.2394|
                  |L31.920|
000398  e3bf              B        |L31.2842|
                  |L31.922|
00039a  e3ef              B        |L31.2940|
                  |L31.924|
00039c  e006              B        |L31.940|
                  |L31.926|
00039e  eb001003          ADD      r0,r0,r3,LSL #4       ;4216
0003a2  7001              STRB     r1,[r0,#0]            ;4216
0003a4  9815              LDR      r0,[sp,#0x54]         ;4216
                  |L31.934|
0003a6  e65f              B        |L31.104|
                  |L31.936|
0003a8  9815              LDR      r0,[sp,#0x54]         ;4216
0003aa  e65d              B        |L31.104|
                  |L31.940|
0003ac  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4216
0003b0  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4216
0003b4  9817              LDR      r0,[sp,#0x5c]         ;4216
0003b6  f1a00001          SUB      r0,r0,#1              ;4216
0003ba  9017              STR      r0,[sp,#0x5c]         ;4216
                  |L31.956|
0003bc  9817              LDR      r0,[sp,#0x5c]         ;4216
0003be  2800              CMP      r0,#0                 ;4216
0003c0  dc81              BGT      |L31.710|
                  |L31.962|
0003c2  e3a9              B        |L31.2840|
                  |L31.964|
0003c4  9832              LDR      r0,[sp,#0xc8]         ;4219
0003c6  f8d00628          LDR      r0,[r0,#0x628]        ;4219
0003ca  f5b07f4d          CMP      r0,#0x334             ;4219
0003ce  d038              BEQ      |L31.1090|
0003d0  9931              LDR      r1,[sp,#0xc4]         ;4219
0003d2  f50171d8          ADD      r1,r1,#0x1b0          ;4219
0003d6  c903              LDM      r1,{r0,r1}            ;4219
0003d8  2200              MOVS     r2,#0                 ;4219
0003da  4b14              LDR      r3,|L31.1068|
0003dc  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4219
0003e0  f7fffffe          BL       __aeabi_cdcmpeq
0003e4  d12d              BNE      |L31.1090|
0003e6  f04f0100          MOV      r1,#0                 ;4219
0003ea  480d              LDR      r0,|L31.1056|
0003ec  f8c0114c          STR      r1,[r0,#0x14c]        ;4219
0003f0  f8d0214c          LDR      r2,[r0,#0x14c]        ;4219
0003f4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4219
0003f8  f1000001          ADD      r0,r0,#1              ;4219
0003fc  4908              LDR      r1,|L31.1056|
0003fe  f8c1014c          STR      r0,[r1,#0x14c]        ;4219
000402  eb020082          ADD      r0,r2,r2,LSL #2       ;4219
000406  4908              LDR      r1,|L31.1064|
000408  eb011000          ADD      r0,r1,r0,LSL #4       ;4219
00040c  4905              LDR      r1,|L31.1060|
00040e  9014              STR      r0,[sp,#0x50]         ;4219
000410  f7fffffe          BL       strcpy
000414  f04f0100          MOV      r1,#0                 ;4219
000418  4801              LDR      r0,|L31.1056|
00041a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4219
00041e  e007              B        |L31.1072|
                  |L31.1056|
                          DCD      _setup+0xc000
                  |L31.1060|
                          DCD      |symbol_number.458|
                  |L31.1064|
                          DCD      _setup+0xb1ac
                  |L31.1068|
                          DCD      0xbff00000
                  |L31.1072|
000430  eb000080          ADD      r0,r0,r0,LSL #2       ;4219
000434  4aff              LDR      r2,|L31.2100|
000436  eb021000          ADD      r0,r2,r0,LSL #4       ;4219
00043a  7001              STRB     r1,[r0,#0]            ;4219
00043c  f04f0049          MOV      r0,#0x49              ;4219
                  |L31.1088|
000440  e612              B        |L31.104|
                  |L31.1090|
000442  9931              LDR      r1,[sp,#0xc4]         ;4221
000444  f50171d8          ADD      r1,r1,#0x1b0          ;4221
000448  c903              LDM      r1,{r0,r1}            ;4221
00044a  2200              MOVS     r2,#0                 ;4221
00044c  4bfa              LDR      r3,|L31.2104|
00044e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4221
000452  f7fffffe          BL       __aeabi_cdcmpeq
000456  d104              BNE      |L31.1122|
000458  9932              LDR      r1,[sp,#0xc8]         ;4222
00045a  f5017178          ADD      r1,r1,#0x3e0          ;4222
00045e  c903              LDM      r1,{r0,r1}            ;4222
000460  e003              B        |L31.1130|
                  |L31.1122|
000462  9931              LDR      r1,[sp,#0xc4]         ;4222
000464  f50171d8          ADD      r1,r1,#0x1b0          ;4222
000468  c903              LDM      r1,{r0,r1}            ;4222
                  |L31.1130|
00046a  9a31              LDR      r2,[sp,#0xc4]         ;4222
00046c  f50272d8          ADD      r2,r2,#0x1b0          ;4222
000470  c203              STM      r2!,{r0,r1}           ;4222
000472  9831              LDR      r0,[sp,#0xc4]         ;4223
000474  f8d00178          LDR      r0,[r0,#0x178]        ;4223
000478  9017              STR      r0,[sp,#0x5c]         ;4223
00047a  e077              B        |L31.1388|
                  |L31.1148|
00047c  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4223
000480  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4223
000484  f7fffffe          BL       __aeabi_dadd
000488  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4223
00048c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4223
000490  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4223
000494  f7fffffe          BL       __aeabi_dadd
000498  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4223
00049c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4223
0004a0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4223
0004a4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4223
0004a8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4223
0004ac  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4223
0004b0  981b              LDR      r0,[sp,#0x6c]         ;4223
0004b2  f7fffffe          BL       cycle_traverse
0004b6  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4223
0004ba  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4223
0004be  f7fffffe          BL       __aeabi_cdcmpeq
0004c2  d00c              BEQ      |L31.1246|
0004c4  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4223
0004c8  e9cd0102          STRD     r0,r1,[sp,#8]         ;4223
0004cc  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4223
0004d0  e9cd0100          STRD     r0,r1,[sp,#0]         ;4223
0004d4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4223
0004d8  981b              LDR      r0,[sp,#0x6c]         ;4223
0004da  f7fffffe          BL       cycle_traverse
                  |L31.1246|
0004de  9831              LDR      r0,[sp,#0xc4]         ;4223
0004e0  f50070d8          ADD      r0,r0,#0x1b0          ;4223
0004e4  c803              LDM      r0,{r0,r1}            ;4223
0004e6  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4223
0004ea  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4223
0004ee  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4223
0004f2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4223
0004f6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4223
0004fa  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4223
0004fe  e9cd0100          STRD     r0,r1,[sp,#0]         ;4223
000502  2001              MOVS     r0,#1                 ;4223
000504  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4223
000508  f7fffffe          BL       convert_cycle_g82
00050c  9015              STR      r0,[sp,#0x54]         ;4223
00050e  b328              CBZ      r0,|L31.1372|
000510  48ca              LDR      r0,|L31.2108|
000512  f8d0014c          LDR      r0,[r0,#0x14c]        ;4223
000516  2831              CMP      r0,#0x31              ;4223
000518  da1e              BGE      |L31.1368|
00051a  48c8              LDR      r0,|L31.2108|
00051c  f8d0214c          LDR      r2,[r0,#0x14c]        ;4223
000520  f8d0014c          LDR      r0,[r0,#0x14c]        ;4223
000524  1c40              ADDS     r0,r0,#1              ;4223
000526  49c5              LDR      r1,|L31.2108|
000528  f8c1014c          STR      r0,[r1,#0x14c]        ;4223
00052c  eb020082          ADD      r0,r2,r2,LSL #2       ;4223
000530  49c0              LDR      r1,|L31.2100|
000532  eb011000          ADD      r0,r1,r0,LSL #4       ;4223
000536  49c2              LDR      r1,|L31.2112|
000538  9014              STR      r0,[sp,#0x50]         ;4223
00053a  f7fffffe          BL       strcpy
00053e  f04f0100          MOV      r1,#0                 ;4223
000542  48be              LDR      r0,|L31.2108|
000544  f8d0014c          LDR      r0,[r0,#0x14c]        ;4223
000548  eb000080          ADD      r0,r0,r0,LSL #2       ;4223
00054c  4ab9              LDR      r2,|L31.2100|
00054e  eb021000          ADD      r0,r2,r0,LSL #4       ;4223
000552  7001              STRB     r1,[r0,#0]            ;4223
000554  9815              LDR      r0,[sp,#0x54]         ;4223
000556  e587              B        |L31.104|
                  |L31.1368|
000558  9815              LDR      r0,[sp,#0x54]         ;4223
00055a  e585              B        |L31.104|
                  |L31.1372|
00055c  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4223
000560  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4223
000564  9817              LDR      r0,[sp,#0x5c]         ;4223
000566  f1a00001          SUB      r0,r0,#1              ;4223
00056a  9017              STR      r0,[sp,#0x5c]         ;4223
                  |L31.1388|
00056c  9817              LDR      r0,[sp,#0x5c]         ;4223
00056e  2800              CMP      r0,#0                 ;4223
000570  dc84              BGT      |L31.1148|
000572  9831              LDR      r0,[sp,#0xc4]         ;4225
000574  f50070d8          ADD      r0,r0,#0x1b0          ;4225
000578  c806              LDM      r0!,{r1,r2}           ;4225
00057a  9832              LDR      r0,[sp,#0xc8]         ;4225
00057c  f5007078          ADD      r0,r0,#0x3e0          ;4225
000580  c006              STM      r0!,{r1,r2}           ;4225
000582  e71e              B        |L31.962|
                  |L31.1412|
000584  9832              LDR      r0,[sp,#0xc8]         ;4228
000586  f8d00628          LDR      r0,[r0,#0x628]        ;4228
00058a  f5a07140          SUB      r1,r0,#0x300          ;4228
00058e  393e              SUBS     r1,r1,#0x3e           ;4228
000590  d02f              BEQ      |L31.1522|
000592  9931              LDR      r1,[sp,#0xc4]         ;4228
000594  f50171dc          ADD      r1,r1,#0x1b8          ;4228
000598  c903              LDM      r1,{r0,r1}            ;4228
00059a  2200              MOVS     r2,#0                 ;4228
00059c  4ba6              LDR      r3,|L31.2104|
00059e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4228
0005a2  f7fffffe          BL       __aeabi_cdcmpeq
0005a6  d124              BNE      |L31.1522|
0005a8  f04f0100          MOV      r1,#0                 ;4228
0005ac  48a3              LDR      r0,|L31.2108|
0005ae  f8c0114c          STR      r1,[r0,#0x14c]        ;4228
0005b2  f8d0214c          LDR      r2,[r0,#0x14c]        ;4228
0005b6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4228
0005ba  f1000001          ADD      r0,r0,#1              ;4228
0005be  499f              LDR      r1,|L31.2108|
0005c0  f8c1014c          STR      r0,[r1,#0x14c]        ;4228
0005c4  eb020082          ADD      r0,r2,r2,LSL #2       ;4228
0005c8  499a              LDR      r1,|L31.2100|
0005ca  eb011000          ADD      r0,r1,r0,LSL #4       ;4228
0005ce  499c              LDR      r1,|L31.2112|
0005d0  9014              STR      r0,[sp,#0x50]         ;4228
0005d2  f7fffffe          BL       strcpy
0005d6  f04f0100          MOV      r1,#0                 ;4228
0005da  4898              LDR      r0,|L31.2108|
0005dc  f8d0014c          LDR      r0,[r0,#0x14c]        ;4228
0005e0  eb000080          ADD      r0,r0,r0,LSL #2       ;4228
0005e4  4a93              LDR      r2,|L31.2100|
0005e6  eb021000          ADD      r0,r2,r0,LSL #4       ;4228
0005ea  7001              STRB     r1,[r0,#0]            ;4228
0005ec  f04f008f          MOV      r0,#0x8f              ;4228
0005f0  e53a              B        |L31.104|
                  |L31.1522|
0005f2  9931              LDR      r1,[sp,#0xc4]         ;4230
0005f4  f50171dc          ADD      r1,r1,#0x1b8          ;4230
0005f8  c903              LDM      r1,{r0,r1}            ;4230
0005fa  2200              MOVS     r2,#0                 ;4230
0005fc  4b8e              LDR      r3,|L31.2104|
0005fe  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4230
000602  f7fffffe          BL       __aeabi_cdcmpeq
000606  d104              BNE      |L31.1554|
000608  9932              LDR      r1,[sp,#0xc8]         ;4231
00060a  f501717a          ADD      r1,r1,#0x3e8          ;4231
00060e  c903              LDM      r1,{r0,r1}            ;4231
000610  e003              B        |L31.1562|
                  |L31.1554|
000612  9931              LDR      r1,[sp,#0xc4]         ;4231
000614  f50171dc          ADD      r1,r1,#0x1b8          ;4231
000618  c903              LDM      r1,{r0,r1}            ;4231
                  |L31.1562|
00061a  9a31              LDR      r2,[sp,#0xc4]         ;4231
00061c  f50272dc          ADD      r2,r2,#0x1b8          ;4231
000620  c203              STM      r2!,{r0,r1}           ;4231
000622  9831              LDR      r0,[sp,#0xc4]         ;4232
000624  f8d00178          LDR      r0,[r0,#0x178]        ;4232
000628  9017              STR      r0,[sp,#0x5c]         ;4232
00062a  e07b              B        |L31.1828|
                  |L31.1580|
00062c  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4232
000630  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4232
000634  f7fffffe          BL       __aeabi_dadd
000638  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4232
00063c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4232
000640  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4232
000644  f7fffffe          BL       __aeabi_dadd
000648  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4232
00064c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4232
000650  e9cd0102          STRD     r0,r1,[sp,#8]         ;4232
000654  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4232
000658  e9cd0100          STRD     r0,r1,[sp,#0]         ;4232
00065c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4232
000660  981b              LDR      r0,[sp,#0x6c]         ;4232
000662  f7fffffe          BL       cycle_traverse
000666  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4232
00066a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4232
00066e  f7fffffe          BL       __aeabi_cdcmpeq
000672  d00c              BEQ      |L31.1678|
000674  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4232
000678  e9cd0102          STRD     r0,r1,[sp,#8]         ;4232
00067c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4232
000680  e9cd0100          STRD     r0,r1,[sp,#0]         ;4232
000684  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4232
000688  981b              LDR      r0,[sp,#0x6c]         ;4232
00068a  f7fffffe          BL       cycle_traverse
                  |L31.1678|
00068e  9931              LDR      r1,[sp,#0xc4]         ;4232
000690  f50171dc          ADD      r1,r1,#0x1b8          ;4232
000694  c903              LDM      r1,{r0,r1}            ;4232
000696  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4232
00069a  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4232
00069e  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4232
0006a2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4232
0006a6  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4232
0006aa  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4232
0006ae  e9cd0102          STRD     r0,r1,[sp,#8]         ;4232
0006b2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4232
0006b6  e9cd0100          STRD     r0,r1,[sp,#0]         ;4232
0006ba  2001              MOVS     r0,#1                 ;4232
0006bc  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4232
0006c0  f7fffffe          BL       convert_cycle_g83
0006c4  9015              STR      r0,[sp,#0x54]         ;4232
0006c6  b328              CBZ      r0,|L31.1812|
0006c8  485c              LDR      r0,|L31.2108|
0006ca  f8d0014c          LDR      r0,[r0,#0x14c]        ;4232
0006ce  2831              CMP      r0,#0x31              ;4232
0006d0  da1e              BGE      |L31.1808|
0006d2  485a              LDR      r0,|L31.2108|
0006d4  f8d0214c          LDR      r2,[r0,#0x14c]        ;4232
0006d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4232
0006dc  1c40              ADDS     r0,r0,#1              ;4232
0006de  4957              LDR      r1,|L31.2108|
0006e0  f8c1014c          STR      r0,[r1,#0x14c]        ;4232
0006e4  eb020082          ADD      r0,r2,r2,LSL #2       ;4232
0006e8  4952              LDR      r1,|L31.2100|
0006ea  eb011000          ADD      r0,r1,r0,LSL #4       ;4232
0006ee  4954              LDR      r1,|L31.2112|
0006f0  9014              STR      r0,[sp,#0x50]         ;4232
0006f2  f7fffffe          BL       strcpy
0006f6  f04f0100          MOV      r1,#0                 ;4232
0006fa  4850              LDR      r0,|L31.2108|
0006fc  f8d0014c          LDR      r0,[r0,#0x14c]        ;4232
000700  eb000080          ADD      r0,r0,r0,LSL #2       ;4232
000704  4a4b              LDR      r2,|L31.2100|
000706  eb021000          ADD      r0,r2,r0,LSL #4       ;4232
00070a  7001              STRB     r1,[r0,#0]            ;4232
00070c  9815              LDR      r0,[sp,#0x54]         ;4232
                  |L31.1806|
00070e  e4ab              B        |L31.104|
                  |L31.1808|
000710  9815              LDR      r0,[sp,#0x54]         ;4232
000712  e4a9              B        |L31.104|
                  |L31.1812|
000714  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4232
000718  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4232
00071c  9817              LDR      r0,[sp,#0x5c]         ;4232
00071e  f1a00001          SUB      r0,r0,#1              ;4232
000722  9017              STR      r0,[sp,#0x5c]         ;4232
                  |L31.1828|
000724  9817              LDR      r0,[sp,#0x5c]         ;4232
000726  2800              CMP      r0,#0                 ;4232
000728  dc80              BGT      |L31.1580|
00072a  9831              LDR      r0,[sp,#0xc4]         ;4234
00072c  f8d021b8          LDR      r2,[r0,#0x1b8]        ;4234
000730  f8d011bc          LDR      r1,[r0,#0x1bc]        ;4234
000734  9832              LDR      r0,[sp,#0xc8]         ;4234
000736  f8c023e8          STR      r2,[r0,#0x3e8]        ;4234
00073a  f8c013ec          STR      r1,[r0,#0x3ec]        ;4234
00073e  e640              B        |L31.962|
                  |L31.1856|
000740  9831              LDR      r0,[sp,#0xc4]         ;4237
000742  f8d00178          LDR      r0,[r0,#0x178]        ;4237
000746  9017              STR      r0,[sp,#0x5c]         ;4237
000748  e086              B        |L31.2136|
                  |L31.1866|
00074a  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4237
00074e  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4237
000752  f7fffffe          BL       __aeabi_dadd
000756  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4237
00075a  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4237
00075e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4237
000762  f7fffffe          BL       __aeabi_dadd
000766  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4237
00076a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4237
00076e  e9cd0102          STRD     r0,r1,[sp,#8]         ;4237
000772  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4237
000776  e9cd0100          STRD     r0,r1,[sp,#0]         ;4237
00077a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4237
00077e  981b              LDR      r0,[sp,#0x6c]         ;4237
000780  f7fffffe          BL       cycle_traverse
000784  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4237
000788  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4237
00078c  f7fffffe          BL       __aeabi_cdcmpeq
000790  d00c              BEQ      |L31.1964|
000792  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4237
000796  e9cd0102          STRD     r0,r1,[sp,#8]         ;4237
00079a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4237
00079e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4237
0007a2  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4237
0007a6  981b              LDR      r0,[sp,#0x6c]         ;4237
0007a8  f7fffffe          BL       cycle_traverse
                  |L31.1964|
0007ac  9832              LDR      r0,[sp,#0xc8]         ;4237
0007ae  f5004030          ADD      r0,r0,#0xb000         ;4237
0007b2  f8d011a0          LDR      r1,[r0,#0x1a0]        ;4237
0007b6  9832              LDR      r0,[sp,#0xc8]         ;4237
0007b8  f5004030          ADD      r0,r0,#0xb000         ;4237
0007bc  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4237
0007c0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4237
0007c4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4237
0007c8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4237
0007cc  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4237
0007d0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4237
0007d4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4237
0007d8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4237
0007dc  2001              MOVS     r0,#1                 ;4237
0007de  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4237
0007e2  f7fffffe          BL       convert_cycle_g84
0007e6  9015              STR      r0,[sp,#0x54]         ;4237
0007e8  b318              CBZ      r0,|L31.2098|
0007ea  4814              LDR      r0,|L31.2108|
0007ec  f8d0014c          LDR      r0,[r0,#0x14c]        ;4237
0007f0  2831              CMP      r0,#0x31              ;4237
0007f2  da27              BGE      |L31.2116|
0007f4  4811              LDR      r0,|L31.2108|
0007f6  f8d0214c          LDR      r2,[r0,#0x14c]        ;4237
0007fa  f8d0014c          LDR      r0,[r0,#0x14c]        ;4237
0007fe  1c40              ADDS     r0,r0,#1              ;4237
000800  490e              LDR      r1,|L31.2108|
000802  eb020282          ADD      r2,r2,r2,LSL #2       ;4237
000806  f8c1014c          STR      r0,[r1,#0x14c]        ;4237
00080a  480a              LDR      r0,|L31.2100|
00080c  eb001002          ADD      r0,r0,r2,LSL #4       ;4237
000810  490b              LDR      r1,|L31.2112|
000812  9014              STR      r0,[sp,#0x50]         ;4237
000814  f7fffffe          BL       strcpy
000818  f04f0100          MOV      r1,#0                 ;4237
00081c  4807              LDR      r0,|L31.2108|
00081e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4237
000822  eb000080          ADD      r0,r0,r0,LSL #2       ;4237
000826  4a03              LDR      r2,|L31.2100|
000828  eb021000          ADD      r0,r2,r0,LSL #4       ;4237
00082c  7001              STRB     r1,[r0,#0]            ;4237
00082e  9815              LDR      r0,[sp,#0x54]         ;4237
                  |L31.2096|
000830  e41a              B        |L31.104|
                  |L31.2098|
000832  e009              B        |L31.2120|
                  |L31.2100|
                          DCD      _setup+0xb1ac
                  |L31.2104|
                          DCD      0xbff00000
                  |L31.2108|
                          DCD      _setup+0xc000
                  |L31.2112|
                          DCD      |symbol_number.458|
                  |L31.2116|
000844  9815              LDR      r0,[sp,#0x54]         ;4237
000846  e40f              B        |L31.104|
                  |L31.2120|
000848  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4237
00084c  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4237
000850  9817              LDR      r0,[sp,#0x5c]         ;4237
000852  f1a00001          SUB      r0,r0,#1              ;4237
000856  9017              STR      r0,[sp,#0x5c]         ;4237
                  |L31.2136|
000858  9817              LDR      r0,[sp,#0x5c]         ;4237
00085a  2800              CMP      r0,#0                 ;4237
00085c  f73faf75          BGT      |L31.1866|
000860  e5af              B        |L31.962|
                  |L31.2146|
000862  9831              LDR      r0,[sp,#0xc4]         ;4241
000864  f8d00178          LDR      r0,[r0,#0x178]        ;4241
000868  9017              STR      r0,[sp,#0x5c]         ;4241
00086a  e072              B        |L31.2386|
                  |L31.2156|
00086c  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4241
000870  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4241
000874  f7fffffe          BL       __aeabi_dadd
000878  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4241
00087c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4241
000880  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4241
000884  f7fffffe          BL       __aeabi_dadd
000888  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4241
00088c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4241
000890  e9cd0102          STRD     r0,r1,[sp,#8]         ;4241
000894  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4241
000898  e9cd0100          STRD     r0,r1,[sp,#0]         ;4241
00089c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4241
0008a0  981b              LDR      r0,[sp,#0x6c]         ;4241
0008a2  f7fffffe          BL       cycle_traverse
0008a6  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4241
0008aa  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4241
0008ae  f7fffffe          BL       __aeabi_cdcmpeq
0008b2  d00c              BEQ      |L31.2254|
0008b4  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4241
0008b8  e9cd0102          STRD     r0,r1,[sp,#8]         ;4241
0008bc  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4241
0008c0  e9cd0100          STRD     r0,r1,[sp,#0]         ;4241
0008c4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4241
0008c8  981b              LDR      r0,[sp,#0x6c]         ;4241
0008ca  f7fffffe          BL       cycle_traverse
                  |L31.2254|
0008ce  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4241
0008d2  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4241
0008d6  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4241
0008da  e9cd0102          STRD     r0,r1,[sp,#8]         ;4241
0008de  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4241
0008e2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4241
0008e6  2001              MOVS     r0,#1                 ;4241
0008e8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4241
0008ec  f7fffffe          BL       convert_cycle_g85
0008f0  9015              STR      r0,[sp,#0x54]         ;4241
0008f2  b330              CBZ      r0,|L31.2370|
0008f4  48ff              LDR      r0,|L31.3316|
0008f6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4241
0008fa  2831              CMP      r0,#0x31              ;4241
0008fc  da1f              BGE      |L31.2366|
0008fe  48fd              LDR      r0,|L31.3316|
000900  f8d0214c          LDR      r2,[r0,#0x14c]        ;4241
000904  f8d0014c          LDR      r0,[r0,#0x14c]        ;4241
000908  1c40              ADDS     r0,r0,#1              ;4241
00090a  49fa              LDR      r1,|L31.3316|
00090c  f8c1014c          STR      r0,[r1,#0x14c]        ;4241
000910  eb020082          ADD      r0,r2,r2,LSL #2       ;4241
000914  f6a16154          SUB      r1,r1,#0xe54          ;4241
000918  eb011000          ADD      r0,r1,r0,LSL #4       ;4241
00091c  49f6              LDR      r1,|L31.3320|
00091e  9014              STR      r0,[sp,#0x50]         ;4241
000920  f7fffffe          BL       strcpy
000924  f04f0100          MOV      r1,#0                 ;4241
000928  48f2              LDR      r0,|L31.3316|
00092a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4241
00092e  eb000080          ADD      r0,r0,r0,LSL #2       ;4241
000932  4af2              LDR      r2,|L31.3324|
000934  eb021000          ADD      r0,r2,r0,LSL #4       ;4241
000938  7001              STRB     r1,[r0,#0]            ;4241
00093a  9815              LDR      r0,[sp,#0x54]         ;4241
                  |L31.2364|
00093c  e441              B        |L31.450|
                  |L31.2366|
00093e  9815              LDR      r0,[sp,#0x54]         ;4241
000940  e43f              B        |L31.450|
                  |L31.2370|
000942  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4241
000946  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4241
00094a  9817              LDR      r0,[sp,#0x5c]         ;4241
00094c  f1a00001          SUB      r0,r0,#1              ;4241
000950  9017              STR      r0,[sp,#0x5c]         ;4241
                  |L31.2386|
000952  9817              LDR      r0,[sp,#0x5c]         ;4241
000954  2800              CMP      r0,#0                 ;4241
000956  dc89              BGT      |L31.2156|
000958  e533              B        |L31.962|
                  |L31.2394|
00095a  9832              LDR      r0,[sp,#0xc8]         ;4244
00095c  f8d00628          LDR      r0,[r0,#0x628]        ;4244
000960  f5b07f57          CMP      r0,#0x35c             ;4244
000964  d02f              BEQ      |L31.2502|
000966  9931              LDR      r1,[sp,#0xc4]         ;4244
000968  f50171d8          ADD      r1,r1,#0x1b0          ;4244
00096c  c903              LDM      r1,{r0,r1}            ;4244
00096e  2200              MOVS     r2,#0                 ;4244
000970  4be3              LDR      r3,|L31.3328|
000972  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4244
000976  f7fffffe          BL       __aeabi_cdcmpeq
00097a  d124              BNE      |L31.2502|
00097c  f04f0100          MOV      r1,#0                 ;4244
000980  48dc              LDR      r0,|L31.3316|
000982  f8c0114c          STR      r1,[r0,#0x14c]        ;4244
000986  f8d0214c          LDR      r2,[r0,#0x14c]        ;4244
00098a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4244
00098e  f1000001          ADD      r0,r0,#1              ;4244
000992  49d8              LDR      r1,|L31.3316|
000994  f8c1014c          STR      r0,[r1,#0x14c]        ;4244
000998  eb020082          ADD      r0,r2,r2,LSL #2       ;4244
00099c  49d7              LDR      r1,|L31.3324|
00099e  eb011000          ADD      r0,r1,r0,LSL #4       ;4244
0009a2  49d5              LDR      r1,|L31.3320|
0009a4  9014              STR      r0,[sp,#0x50]         ;4244
0009a6  f7fffffe          BL       strcpy
0009aa  f04f0100          MOV      r1,#0                 ;4244
0009ae  48d1              LDR      r0,|L31.3316|
0009b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4244
0009b4  eb000080          ADD      r0,r0,r0,LSL #2       ;4244
0009b8  4ad0              LDR      r2,|L31.3324|
0009ba  eb021000          ADD      r0,r2,r0,LSL #4       ;4244
0009be  7001              STRB     r1,[r0,#0]            ;4244
0009c0  f04f004a          MOV      r0,#0x4a              ;4244
                  |L31.2500|
0009c4  e429              B        |L31.538|
                  |L31.2502|
0009c6  9931              LDR      r1,[sp,#0xc4]         ;4246
0009c8  f50171d8          ADD      r1,r1,#0x1b0          ;4246
0009cc  c903              LDM      r1,{r0,r1}            ;4246
0009ce  2200              MOVS     r2,#0                 ;4246
0009d0  4bcb              LDR      r3,|L31.3328|
0009d2  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4246
0009d6  f7fffffe          BL       __aeabi_cdcmpeq
0009da  d104              BNE      |L31.2534|
0009dc  9932              LDR      r1,[sp,#0xc8]         ;4247
0009de  f5017178          ADD      r1,r1,#0x3e0          ;4247
0009e2  c903              LDM      r1,{r0,r1}            ;4247
0009e4  e003              B        |L31.2542|
                  |L31.2534|
0009e6  9931              LDR      r1,[sp,#0xc4]         ;4247
0009e8  f50171d8          ADD      r1,r1,#0x1b0          ;4247
0009ec  c903              LDM      r1,{r0,r1}            ;4247
                  |L31.2542|
0009ee  9a31              LDR      r2,[sp,#0xc4]         ;4247
0009f0  f50272d8          ADD      r2,r2,#0x1b0          ;4247
0009f4  c203              STM      r2!,{r0,r1}           ;4247
0009f6  9831              LDR      r0,[sp,#0xc4]         ;4248
0009f8  f8d00178          LDR      r0,[r0,#0x178]        ;4248
0009fc  9017              STR      r0,[sp,#0x5c]         ;4248
0009fe  e07f              B        |L31.2816|
                  |L31.2560|
000a00  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4248
000a04  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4248
000a08  f7fffffe          BL       __aeabi_dadd
000a0c  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4248
000a10  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4248
000a14  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4248
000a18  f7fffffe          BL       __aeabi_dadd
000a1c  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4248
000a20  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4248
000a24  e9cd0102          STRD     r0,r1,[sp,#8]         ;4248
000a28  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4248
000a2c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4248
000a30  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4248
000a34  981b              LDR      r0,[sp,#0x6c]         ;4248
000a36  f7fffffe          BL       cycle_traverse
000a3a  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4248
000a3e  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4248
000a42  f7fffffe          BL       __aeabi_cdcmpeq
000a46  d00c              BEQ      |L31.2658|
000a48  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4248
000a4c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4248
000a50  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4248
000a54  e9cd0100          STRD     r0,r1,[sp,#0]         ;4248
000a58  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4248
000a5c  981b              LDR      r0,[sp,#0x6c]         ;4248
000a5e  f7fffffe          BL       cycle_traverse
                  |L31.2658|
000a62  9832              LDR      r0,[sp,#0xc8]         ;4248
000a64  f5004030          ADD      r0,r0,#0xb000         ;4248
000a68  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4248
000a6c  9008              STR      r0,[sp,#0x20]         ;4248
000a6e  9831              LDR      r0,[sp,#0xc4]         ;4248
000a70  f50070d8          ADD      r0,r0,#0x1b0          ;4248
000a74  c803              LDM      r0,{r0,r1}            ;4248
000a76  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4248
000a7a  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4248
000a7e  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4248
000a82  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4248
000a86  e9cd0102          STRD     r0,r1,[sp,#8]         ;4248
000a8a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4248
000a8e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4248
000a92  2001              MOVS     r0,#1                 ;4248
000a94  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4248
000a98  f7fffffe          BL       convert_cycle_g86
000a9c  9015              STR      r0,[sp,#0x54]         ;4248
000a9e  b338              CBZ      r0,|L31.2800|
000aa0  4894              LDR      r0,|L31.3316|
000aa2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4248
000aa6  2831              CMP      r0,#0x31              ;4248
000aa8  da20              BGE      |L31.2796|
000aaa  4892              LDR      r0,|L31.3316|
000aac  f8d0214c          LDR      r2,[r0,#0x14c]        ;4248
000ab0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4248
000ab4  1c40              ADDS     r0,r0,#1              ;4248
000ab6  498f              LDR      r1,|L31.3316|
000ab8  e000              B        |L31.2748|
                  |L31.2746|
000aba  e28a              B        |L31.4050|
                  |L31.2748|
000abc  f8c1014c          STR      r0,[r1,#0x14c]        ;4248
000ac0  eb020082          ADD      r0,r2,r2,LSL #2       ;4248
000ac4  498d              LDR      r1,|L31.3324|
000ac6  eb011000          ADD      r0,r1,r0,LSL #4       ;4248
000aca  498b              LDR      r1,|L31.3320|
000acc  9014              STR      r0,[sp,#0x50]         ;4248
000ace  f7fffffe          BL       strcpy
000ad2  f04f0100          MOV      r1,#0                 ;4248
000ad6  4887              LDR      r0,|L31.3316|
000ad8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4248
000adc  eb000080          ADD      r0,r0,r0,LSL #2       ;4248
000ae0  4a86              LDR      r2,|L31.3324|
000ae2  eb021000          ADD      r0,r2,r0,LSL #4       ;4248
000ae6  7001              STRB     r1,[r0,#0]            ;4248
000ae8  9815              LDR      r0,[sp,#0x54]         ;4248
                  |L31.2794|
000aea  e45c              B        |L31.934|
                  |L31.2796|
000aec  9815              LDR      r0,[sp,#0x54]         ;4248
000aee  e45a              B        |L31.934|
                  |L31.2800|
000af0  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4248
000af4  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4248
000af8  9817              LDR      r0,[sp,#0x5c]         ;4248
000afa  f1a00001          SUB      r0,r0,#1              ;4248
000afe  9017              STR      r0,[sp,#0x5c]         ;4248
                  |L31.2816|
000b00  9817              LDR      r0,[sp,#0x5c]         ;4248
000b02  2800              CMP      r0,#0                 ;4248
000b04  f73faf7c          BGT      |L31.2560|
000b08  9831              LDR      r0,[sp,#0xc4]         ;4250
000b0a  f50070d8          ADD      r0,r0,#0x1b0          ;4250
000b0e  c806              LDM      r0!,{r1,r2}           ;4250
000b10  9832              LDR      r0,[sp,#0xc8]         ;4250
000b12  f5007078          ADD      r0,r0,#0x3e0          ;4250
000b16  c006              STM      r0!,{r1,r2}           ;4250
                  |L31.2840|
000b18  e360              B        |L31.4572|
                  |L31.2842|
000b1a  9832              LDR      r0,[sp,#0xc8]         ;4253
000b1c  f8d01628          LDR      r1,[r0,#0x628]        ;4253
000b20  f5a17040          SUB      r0,r1,#0x300          ;4253
000b24  3866              SUBS     r0,r0,#0x66           ;4253
000b26  d07d              BEQ      |L31.3108|
000b28  9831              LDR      r0,[sp,#0xc4]         ;4255
000b2a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4255
000b2e  bb30              CBNZ     r0,|L31.2942|
000b30  f04f0100          MOV      r1,#0                 ;4255
000b34  486f              LDR      r0,|L31.3316|
000b36  f8c0114c          STR      r1,[r0,#0x14c]        ;4255
000b3a  f8d0214c          LDR      r2,[r0,#0x14c]        ;4255
000b3e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4255
000b42  f1000001          ADD      r0,r0,#1              ;4255
000b46  496b              LDR      r1,|L31.3316|
000b48  f8c1014c          STR      r0,[r1,#0x14c]        ;4255
000b4c  eb020082          ADD      r0,r2,r2,LSL #2       ;4255
000b50  496a              LDR      r1,|L31.3324|
000b52  eb011000          ADD      r0,r1,r0,LSL #4       ;4255
000b56  4968              LDR      r1,|L31.3320|
000b58  9014              STR      r0,[sp,#0x50]         ;4255
000b5a  f7fffffe          BL       strcpy
000b5e  f04f0100          MOV      r1,#0                 ;4255
000b62  4864              LDR      r0,|L31.3316|
000b64  f8d0014c          LDR      r0,[r0,#0x14c]        ;4255
000b68  eb000080          ADD      r0,r0,r0,LSL #2       ;4255
000b6c  4a63              LDR      r2,|L31.3324|
000b6e  eb021000          ADD      r0,r2,r0,LSL #4       ;4255
000b72  7001              STRB     r1,[r0,#0]            ;4255
000b74  f04f0057          MOV      r0,#0x57              ;4255
000b78  e415              B        |L31.934|
                  |L31.2938|
000b7a  e301              B        |L31.4480|
                  |L31.2940|
000b7c  e14e              B        |L31.3612|
                  |L31.2942|
000b7e  9831              LDR      r0,[sp,#0xc4]         ;4256
000b80  f8d00158          LDR      r0,[r0,#0x158]        ;4256
000b84  bb20              CBNZ     r0,|L31.3024|
000b86  f04f0100          MOV      r1,#0                 ;4256
000b8a  485a              LDR      r0,|L31.3316|
000b8c  f8c0114c          STR      r1,[r0,#0x14c]        ;4256
000b90  f8d0214c          LDR      r2,[r0,#0x14c]        ;4256
000b94  f8d0014c          LDR      r0,[r0,#0x14c]        ;4256
000b98  f1000001          ADD      r0,r0,#1              ;4256
000b9c  4955              LDR      r1,|L31.3316|
000b9e  f8c1014c          STR      r0,[r1,#0x14c]        ;4256
000ba2  eb020082          ADD      r0,r2,r2,LSL #2       ;4256
000ba6  4955              LDR      r1,|L31.3324|
000ba8  eb011000          ADD      r0,r1,r0,LSL #4       ;4256
000bac  4952              LDR      r1,|L31.3320|
000bae  9014              STR      r0,[sp,#0x50]         ;4256
000bb0  f7fffffe          BL       strcpy
000bb4  f04f0100          MOV      r1,#0                 ;4256
000bb8  484e              LDR      r0,|L31.3316|
000bba  f8d0014c          LDR      r0,[r0,#0x14c]        ;4256
000bbe  eb000080          ADD      r0,r0,r0,LSL #2       ;4256
000bc2  4a4e              LDR      r2,|L31.3324|
000bc4  eb021000          ADD      r0,r2,r0,LSL #4       ;4256
000bc8  7001              STRB     r1,[r0,#0]            ;4256
000bca  f04f005a          MOV      r0,#0x5a              ;4256
000bce  e437              B        |L31.1088|
                  |L31.3024|
000bd0  9831              LDR      r0,[sp,#0xc4]         ;4257
000bd2  f8d00168          LDR      r0,[r0,#0x168]        ;4257
000bd6  bb20              CBNZ     r0,|L31.3106|
000bd8  f04f0100          MOV      r1,#0                 ;4257
000bdc  4845              LDR      r0,|L31.3316|
000bde  f8c0114c          STR      r1,[r0,#0x14c]        ;4257
000be2  f8d0214c          LDR      r2,[r0,#0x14c]        ;4257
000be6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4257
000bea  f1000001          ADD      r0,r0,#1              ;4257
000bee  4941              LDR      r1,|L31.3316|
000bf0  f8c1014c          STR      r0,[r1,#0x14c]        ;4257
000bf4  eb020082          ADD      r0,r2,r2,LSL #2       ;4257
000bf8  4940              LDR      r1,|L31.3324|
000bfa  eb011000          ADD      r0,r1,r0,LSL #4       ;4257
000bfe  493e              LDR      r1,|L31.3320|
000c00  9014              STR      r0,[sp,#0x50]         ;4257
000c02  f7fffffe          BL       strcpy
000c06  f04f0100          MOV      r1,#0                 ;4257
000c0a  483a              LDR      r0,|L31.3316|
000c0c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4257
000c10  eb000080          ADD      r0,r0,r0,LSL #2       ;4257
000c14  4a39              LDR      r2,|L31.3324|
000c16  eb021000          ADD      r0,r2,r0,LSL #4       ;4257
000c1a  7001              STRB     r1,[r0,#0]            ;4257
000c1c  f04f005d          MOV      r0,#0x5d              ;4257
000c20  e40e              B        |L31.1088|
                  |L31.3106|
000c22  e7ff              B        |L31.3108|
                  |L31.3108|
000c24  9831              LDR      r0,[sp,#0xc4]         ;4259
000c26  f8d0014c          LDR      r0,[r0,#0x14c]        ;4259
000c2a  2801              CMP      r0,#1                 ;4259
000c2c  d104              BNE      |L31.3128|
000c2e  9931              LDR      r1,[sp,#0xc4]         ;4259
000c30  f50171a8          ADD      r1,r1,#0x150          ;4259
000c34  c903              LDM      r1,{r0,r1}            ;4259
000c36  e003              B        |L31.3136|
                  |L31.3128|
000c38  9932              LDR      r1,[sp,#0xc8]         ;4259
000c3a  f5017170          ADD      r1,r1,#0x3c0          ;4259
000c3e  c903              LDM      r1,{r0,r1}            ;4259
                  |L31.3136|
000c40  e9cd0122          STRD     r0,r1,[sp,#0x88]      ;4259
000c44  9831              LDR      r0,[sp,#0xc4]         ;4260
000c46  f8d00158          LDR      r0,[r0,#0x158]        ;4260
000c4a  2801              CMP      r0,#1                 ;4260
000c4c  d104              BNE      |L31.3160|
000c4e  9931              LDR      r1,[sp,#0xc4]         ;4260
000c50  f50171b0          ADD      r1,r1,#0x160          ;4260
000c54  c903              LDM      r1,{r0,r1}            ;4260
000c56  e003              B        |L31.3168|
                  |L31.3160|
000c58  9932              LDR      r1,[sp,#0xc8]         ;4260
000c5a  f5017172          ADD      r1,r1,#0x3c8          ;4260
000c5e  c903              LDM      r1,{r0,r1}            ;4260
                  |L31.3168|
000c60  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;4260
000c64  9831              LDR      r0,[sp,#0xc4]         ;4261
000c66  f8d00168          LDR      r0,[r0,#0x168]        ;4261
000c6a  2801              CMP      r0,#1                 ;4261
000c6c  d104              BNE      |L31.3192|
000c6e  9931              LDR      r1,[sp,#0xc4]         ;4261
000c70  f50171b8          ADD      r1,r1,#0x170          ;4261
000c74  c903              LDM      r1,{r0,r1}            ;4261
000c76  e003              B        |L31.3200|
                  |L31.3192|
000c78  9932              LDR      r1,[sp,#0xc8]         ;4261
000c7a  f5017174          ADD      r1,r1,#0x3d0          ;4261
000c7e  c903              LDM      r1,{r0,r1}            ;4261
                  |L31.3200|
000c80  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;4261
000c84  9a32              LDR      r2,[sp,#0xc8]         ;4262
000c86  e9dd1022          LDRD     r1,r0,[sp,#0x88]      ;4262
000c8a  f8c213c0          STR      r1,[r2,#0x3c0]        ;4262
000c8e  f8c203c4          STR      r0,[r2,#0x3c4]        ;4262
000c92  9a32              LDR      r2,[sp,#0xc8]         ;4263
000c94  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;4263
000c98  f5027272          ADD      r2,r2,#0x3c8          ;4263
000c9c  c203              STM      r2!,{r0,r1}           ;4263
000c9e  9a32              LDR      r2,[sp,#0xc8]         ;4264
000ca0  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;4264
000ca4  f5027274          ADD      r2,r2,#0x3d0          ;4264
000ca8  c203              STM      r2!,{r0,r1}           ;4264
000caa  9832              LDR      r0,[sp,#0xc8]         ;4265
000cac  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4265
000cb0  2801              CMP      r0,#1                 ;4265
000cb2  d107              BNE      |L31.3268|
000cb4  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;4267
000cb8  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4267
000cbc  f7fffffe          BL       __aeabi_dadd
000cc0  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;4267
                  |L31.3268|
000cc4  9831              LDR      r0,[sp,#0xc4]         ;4269
000cc6  f8d00178          LDR      r0,[r0,#0x178]        ;4269
000cca  9017              STR      r0,[sp,#0x5c]         ;4269
000ccc  e0a1              B        |L31.3602|
                  |L31.3278|
000cce  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4269
000cd2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4269
000cd6  f7fffffe          BL       __aeabi_dadd
000cda  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4269
000cde  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4269
000ce2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4269
000ce6  f7fffffe          BL       __aeabi_dadd
000cea  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4269
000cee  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4269
000cf2  e007              B        |L31.3332|
                  |L31.3316|
                          DCD      _setup+0xc000
                  |L31.3320|
                          DCD      |symbol_number.458|
                  |L31.3324|
                          DCD      _setup+0xb1ac
                  |L31.3328|
                          DCD      0xbff00000
                  |L31.3332|
000d04  e9cd0102          STRD     r0,r1,[sp,#8]         ;4269
000d08  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4269
000d0c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4269
000d10  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4269
000d14  981b              LDR      r0,[sp,#0x6c]         ;4269
000d16  f7fffffe          BL       cycle_traverse
000d1a  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4269
000d1e  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4269
000d22  f7fffffe          BL       __aeabi_cdcmpeq
000d26  d00c              BEQ      |L31.3394|
000d28  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4269
000d2c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4269
000d30  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4269
000d34  e9cd0100          STRD     r0,r1,[sp,#0]         ;4269
000d38  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4269
000d3c  981b              LDR      r0,[sp,#0x6c]         ;4269
000d3e  f7fffffe          BL       cycle_traverse
                  |L31.3394|
000d42  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;4269
000d46  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4269
000d4a  f7fffffe          BL       __aeabi_dadd
000d4e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4269
000d52  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;4269
000d56  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4269
000d5a  f7fffffe          BL       __aeabi_dadd
000d5e  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;4269
000d62  9832              LDR      r0,[sp,#0xc8]         ;4269
000d64  f5004030          ADD      r0,r0,#0xb000         ;4269
000d68  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4269
000d6c  900e              STR      r0,[sp,#0x38]         ;4269
000d6e  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4269
000d72  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;4269
000d76  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;4269
000d7a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;4269
000d7e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4269
000d82  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4269
000d86  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4269
000d8a  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4269
000d8e  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;4269
000d92  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4269
000d96  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4269
000d9a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4269
000d9e  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;4269
000da2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4269
000da6  2001              MOVS     r0,#1                 ;4269
000da8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4269
000dac  f7fffffe          BL       convert_cycle_g87
000db0  9015              STR      r0,[sp,#0x54]         ;4269
000db2  b330              CBZ      r0,|L31.3586|
000db4  48ff              LDR      r0,|L31.4532|
000db6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4269
000dba  2831              CMP      r0,#0x31              ;4269
000dbc  da1f              BGE      |L31.3582|
000dbe  48fd              LDR      r0,|L31.4532|
000dc0  f8d0214c          LDR      r2,[r0,#0x14c]        ;4269
000dc4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4269
000dc8  1c40              ADDS     r0,r0,#1              ;4269
000dca  49fa              LDR      r1,|L31.4532|
000dcc  f8c1014c          STR      r0,[r1,#0x14c]        ;4269
000dd0  eb020082          ADD      r0,r2,r2,LSL #2       ;4269
000dd4  f6a16154          SUB      r1,r1,#0xe54          ;4269
000dd8  eb011000          ADD      r0,r1,r0,LSL #4       ;4269
000ddc  49f6              LDR      r1,|L31.4536|
000dde  9014              STR      r0,[sp,#0x50]         ;4269
000de0  f7fffffe          BL       strcpy
000de4  f04f0100          MOV      r1,#0                 ;4269
000de8  48f2              LDR      r0,|L31.4532|
000dea  f8d0014c          LDR      r0,[r0,#0x14c]        ;4269
000dee  eb000080          ADD      r0,r0,r0,LSL #2       ;4269
000df2  4af2              LDR      r2,|L31.4540|
000df4  eb021000          ADD      r0,r2,r0,LSL #4       ;4269
000df8  7001              STRB     r1,[r0,#0]            ;4269
000dfa  9815              LDR      r0,[sp,#0x54]         ;4269
000dfc  e487              B        |L31.1806|
                  |L31.3582|
000dfe  9815              LDR      r0,[sp,#0x54]         ;4269
000e00  e485              B        |L31.1806|
                  |L31.3586|
000e02  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4269
000e06  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4269
000e0a  9817              LDR      r0,[sp,#0x5c]         ;4269
000e0c  f1a00001          SUB      r0,r0,#1              ;4269
000e10  9017              STR      r0,[sp,#0x5c]         ;4269
                  |L31.3602|
000e12  9817              LDR      r0,[sp,#0x5c]         ;4269
000e14  2800              CMP      r0,#0                 ;4269
000e16  f73faf5a          BGT      |L31.3278|
000e1a  e1df              B        |L31.4572|
                  |L31.3612|
000e1c  9832              LDR      r0,[sp,#0xc8]         ;4273
000e1e  f8d00628          LDR      r0,[r0,#0x628]        ;4273
000e22  f5b07f5c          CMP      r0,#0x370             ;4273
000e26  d02f              BEQ      |L31.3720|
000e28  9931              LDR      r1,[sp,#0xc4]         ;4273
000e2a  f50171d8          ADD      r1,r1,#0x1b0          ;4273
000e2e  c903              LDM      r1,{r0,r1}            ;4273
000e30  2200              MOVS     r2,#0                 ;4273
000e32  4be3              LDR      r3,|L31.4544|
000e34  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4273
000e38  f7fffffe          BL       __aeabi_cdcmpeq
000e3c  d124              BNE      |L31.3720|
000e3e  f04f0100          MOV      r1,#0                 ;4273
000e42  48dc              LDR      r0,|L31.4532|
000e44  f8c0114c          STR      r1,[r0,#0x14c]        ;4273
000e48  f8d0214c          LDR      r2,[r0,#0x14c]        ;4273
000e4c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4273
000e50  f1000001          ADD      r0,r0,#1              ;4273
000e54  49d7              LDR      r1,|L31.4532|
000e56  f8c1014c          STR      r0,[r1,#0x14c]        ;4273
000e5a  eb020082          ADD      r0,r2,r2,LSL #2       ;4273
000e5e  49d7              LDR      r1,|L31.4540|
000e60  eb011000          ADD      r0,r1,r0,LSL #4       ;4273
000e64  49d4              LDR      r1,|L31.4536|
000e66  9014              STR      r0,[sp,#0x50]         ;4273
000e68  f7fffffe          BL       strcpy
000e6c  f04f0100          MOV      r1,#0                 ;4273
000e70  48d0              LDR      r0,|L31.4532|
000e72  f8d0014c          LDR      r0,[r0,#0x14c]        ;4273
000e76  eb000080          ADD      r0,r0,r0,LSL #2       ;4273
000e7a  4ad0              LDR      r2,|L31.4540|
000e7c  eb021000          ADD      r0,r2,r0,LSL #4       ;4273
000e80  7001              STRB     r1,[r0,#0]            ;4273
000e82  f04f004b          MOV      r0,#0x4b              ;4273
000e86  e442              B        |L31.1806|
                  |L31.3720|
000e88  9931              LDR      r1,[sp,#0xc4]         ;4275
000e8a  f50171d8          ADD      r1,r1,#0x1b0          ;4275
000e8e  c903              LDM      r1,{r0,r1}            ;4275
000e90  2200              MOVS     r2,#0                 ;4275
000e92  4bcb              LDR      r3,|L31.4544|
000e94  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4275
000e98  f7fffffe          BL       __aeabi_cdcmpeq
000e9c  d104              BNE      |L31.3752|
000e9e  9932              LDR      r1,[sp,#0xc8]         ;4276
000ea0  f5017178          ADD      r1,r1,#0x3e0          ;4276
000ea4  c903              LDM      r1,{r0,r1}            ;4276
000ea6  e003              B        |L31.3760|
                  |L31.3752|
000ea8  9931              LDR      r1,[sp,#0xc4]         ;4276
000eaa  f50171d8          ADD      r1,r1,#0x1b0          ;4276
000eae  c903              LDM      r1,{r0,r1}            ;4276
                  |L31.3760|
000eb0  9a31              LDR      r2,[sp,#0xc4]         ;4276
000eb2  f50272d8          ADD      r2,r2,#0x1b0          ;4276
000eb6  c203              STM      r2!,{r0,r1}           ;4276
000eb8  9831              LDR      r0,[sp,#0xc4]         ;4277
000eba  f8d00178          LDR      r0,[r0,#0x178]        ;4277
000ebe  9017              STR      r0,[sp,#0x5c]         ;4277
000ec0  e079              B        |L31.4022|
                  |L31.3778|
000ec2  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4277
000ec6  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4277
000eca  f7fffffe          BL       __aeabi_dadd
000ece  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4277
000ed2  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4277
000ed6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4277
000eda  f7fffffe          BL       __aeabi_dadd
000ede  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4277
000ee2  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4277
000ee6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4277
000eea  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4277
000eee  e9cd0100          STRD     r0,r1,[sp,#0]         ;4277
000ef2  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4277
000ef6  981b              LDR      r0,[sp,#0x6c]         ;4277
000ef8  f7fffffe          BL       cycle_traverse
000efc  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4277
000f00  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4277
000f04  f7fffffe          BL       __aeabi_cdcmpeq
000f08  d00c              BEQ      |L31.3876|
000f0a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4277
000f0e  e9cd0102          STRD     r0,r1,[sp,#8]         ;4277
000f12  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4277
000f16  e9cd0100          STRD     r0,r1,[sp,#0]         ;4277
000f1a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4277
000f1e  981b              LDR      r0,[sp,#0x6c]         ;4277
000f20  f7fffffe          BL       cycle_traverse
                  |L31.3876|
000f24  9832              LDR      r0,[sp,#0xc8]         ;4277
000f26  f5004030          ADD      r0,r0,#0xb000         ;4277
000f2a  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4277
000f2e  9006              STR      r0,[sp,#0x18]         ;4277
000f30  9831              LDR      r0,[sp,#0xc4]         ;4277
000f32  f50070d8          ADD      r0,r0,#0x1b0          ;4277
000f36  c803              LDM      r0,{r0,r1}            ;4277
000f38  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4277
000f3c  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4277
000f40  e9cd0102          STRD     r0,r1,[sp,#8]         ;4277
000f44  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4277
000f48  e9cd0100          STRD     r0,r1,[sp,#0]         ;4277
000f4c  2001              MOVS     r0,#1                 ;4277
000f4e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4277
000f52  f7fffffe          BL       convert_cycle_g88
000f56  9015              STR      r0,[sp,#0x54]         ;4277
000f58  b328              CBZ      r0,|L31.4006|
000f5a  4896              LDR      r0,|L31.4532|
000f5c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4277
000f60  2831              CMP      r0,#0x31              ;4277
000f62  da1e              BGE      |L31.4002|
000f64  4893              LDR      r0,|L31.4532|
000f66  f8d0214c          LDR      r2,[r0,#0x14c]        ;4277
000f6a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4277
000f6e  1c40              ADDS     r0,r0,#1              ;4277
000f70  4990              LDR      r1,|L31.4532|
000f72  f8c1014c          STR      r0,[r1,#0x14c]        ;4277
000f76  eb020082          ADD      r0,r2,r2,LSL #2       ;4277
000f7a  4990              LDR      r1,|L31.4540|
000f7c  eb011000          ADD      r0,r1,r0,LSL #4       ;4277
000f80  498d              LDR      r1,|L31.4536|
000f82  9014              STR      r0,[sp,#0x50]         ;4277
000f84  f7fffffe          BL       strcpy
000f88  f04f0100          MOV      r1,#0                 ;4277
000f8c  4889              LDR      r0,|L31.4532|
000f8e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4277
000f92  eb000080          ADD      r0,r0,r0,LSL #2       ;4277
000f96  4a89              LDR      r2,|L31.4540|
000f98  eb021000          ADD      r0,r2,r0,LSL #4       ;4277
000f9c  7001              STRB     r1,[r0,#0]            ;4277
000f9e  9815              LDR      r0,[sp,#0x54]         ;4277
000fa0  e446              B        |L31.2096|
                  |L31.4002|
000fa2  9815              LDR      r0,[sp,#0x54]         ;4277
000fa4  e444              B        |L31.2096|
                  |L31.4006|
000fa6  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4277
000faa  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4277
000fae  9817              LDR      r0,[sp,#0x5c]         ;4277
000fb0  f1a00001          SUB      r0,r0,#1              ;4277
000fb4  9017              STR      r0,[sp,#0x5c]         ;4277
                  |L31.4022|
000fb6  9817              LDR      r0,[sp,#0x5c]         ;4277
000fb8  2800              CMP      r0,#0                 ;4277
000fba  dc82              BGT      |L31.3778|
000fbc  9831              LDR      r0,[sp,#0xc4]         ;4279
000fbe  f8d021b0          LDR      r2,[r0,#0x1b0]        ;4279
000fc2  f8d011b4          LDR      r1,[r0,#0x1b4]        ;4279
000fc6  9832              LDR      r0,[sp,#0xc8]         ;4279
000fc8  f8c023e0          STR      r2,[r0,#0x3e0]        ;4279
000fcc  f8c013e4          STR      r1,[r0,#0x3e4]        ;4279
000fd0  e104              B        |L31.4572|
                  |L31.4050|
000fd2  9832              LDR      r0,[sp,#0xc8]         ;4282
000fd4  f8d00628          LDR      r0,[r0,#0x628]        ;4282
000fd8  f5a07140          SUB      r1,r0,#0x300          ;4282
000fdc  397a              SUBS     r1,r1,#0x7a           ;4282
000fde  d02f              BEQ      |L31.4160|
000fe0  9931              LDR      r1,[sp,#0xc4]         ;4282
000fe2  f50171d8          ADD      r1,r1,#0x1b0          ;4282
000fe6  c903              LDM      r1,{r0,r1}            ;4282
000fe8  2200              MOVS     r2,#0                 ;4282
000fea  4b75              LDR      r3,|L31.4544|
000fec  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4282
000ff0  f7fffffe          BL       __aeabi_cdcmpeq
000ff4  d124              BNE      |L31.4160|
000ff6  f04f0100          MOV      r1,#0                 ;4282
000ffa  486e              LDR      r0,|L31.4532|
000ffc  f8c0114c          STR      r1,[r0,#0x14c]        ;4282
001000  f8d0214c          LDR      r2,[r0,#0x14c]        ;4282
001004  f8d0014c          LDR      r0,[r0,#0x14c]        ;4282
001008  f1000001          ADD      r0,r0,#1              ;4282
00100c  4969              LDR      r1,|L31.4532|
00100e  f8c1014c          STR      r0,[r1,#0x14c]        ;4282
001012  eb020082          ADD      r0,r2,r2,LSL #2       ;4282
001016  4969              LDR      r1,|L31.4540|
001018  eb011000          ADD      r0,r1,r0,LSL #4       ;4282
00101c  4966              LDR      r1,|L31.4536|
00101e  9014              STR      r0,[sp,#0x50]         ;4282
001020  f7fffffe          BL       strcpy
001024  f04f0100          MOV      r1,#0                 ;4282
001028  4862              LDR      r0,|L31.4532|
00102a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4282
00102e  eb000080          ADD      r0,r0,r0,LSL #2       ;4282
001032  4a62              LDR      r2,|L31.4540|
001034  eb021000          ADD      r0,r2,r0,LSL #4       ;4282
001038  7001              STRB     r1,[r0,#0]            ;4282
00103a  f04f004c          MOV      r0,#0x4c              ;4282
00103e  e47d              B        |L31.2364|
                  |L31.4160|
001040  9931              LDR      r1,[sp,#0xc4]         ;4284
001042  f50171d8          ADD      r1,r1,#0x1b0          ;4284
001046  c903              LDM      r1,{r0,r1}            ;4284
001048  2200              MOVS     r2,#0                 ;4284
00104a  4b5d              LDR      r3,|L31.4544|
00104c  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4284
001050  f7fffffe          BL       __aeabi_cdcmpeq
001054  d104              BNE      |L31.4192|
001056  9932              LDR      r1,[sp,#0xc8]         ;4285
001058  f5017178          ADD      r1,r1,#0x3e0          ;4285
00105c  c903              LDM      r1,{r0,r1}            ;4285
00105e  e003              B        |L31.4200|
                  |L31.4192|
001060  9931              LDR      r1,[sp,#0xc4]         ;4285
001062  f50171d8          ADD      r1,r1,#0x1b0          ;4285
001066  c903              LDM      r1,{r0,r1}            ;4285
                  |L31.4200|
001068  9a31              LDR      r2,[sp,#0xc4]         ;4285
00106a  f50272d8          ADD      r2,r2,#0x1b0          ;4285
00106e  c203              STM      r2!,{r0,r1}           ;4285
001070  9831              LDR      r0,[sp,#0xc4]         ;4286
001072  f8d00178          LDR      r0,[r0,#0x178]        ;4286
001076  9017              STR      r0,[sp,#0x5c]         ;4286
001078  e076              B        |L31.4456|
                  |L31.4218|
00107a  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4286
00107e  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4286
001082  f7fffffe          BL       __aeabi_dadd
001086  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4286
00108a  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4286
00108e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4286
001092  f7fffffe          BL       __aeabi_dadd
001096  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4286
00109a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4286
00109e  e9cd0102          STRD     r0,r1,[sp,#8]         ;4286
0010a2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4286
0010a6  e9cd0100          STRD     r0,r1,[sp,#0]         ;4286
0010aa  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4286
0010ae  981b              LDR      r0,[sp,#0x6c]         ;4286
0010b0  f7fffffe          BL       cycle_traverse
0010b4  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4286
0010b8  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4286
0010bc  f7fffffe          BL       __aeabi_cdcmpeq
0010c0  d00c              BEQ      |L31.4316|
0010c2  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4286
0010c6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4286
0010ca  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4286
0010ce  e9cd0100          STRD     r0,r1,[sp,#0]         ;4286
0010d2  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4286
0010d6  981b              LDR      r0,[sp,#0x6c]         ;4286
0010d8  f7fffffe          BL       cycle_traverse
                  |L31.4316|
0010dc  9931              LDR      r1,[sp,#0xc4]         ;4286
0010de  f50171d8          ADD      r1,r1,#0x1b0          ;4286
0010e2  c903              LDM      r1,{r0,r1}            ;4286
0010e4  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4286
0010e8  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4286
0010ec  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4286
0010f0  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4286
0010f4  e9cd0102          STRD     r0,r1,[sp,#8]         ;4286
0010f8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4286
0010fc  e9cd0100          STRD     r0,r1,[sp,#0]         ;4286
001100  2001              MOVS     r0,#1                 ;4286
001102  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4286
001106  f7fffffe          BL       convert_cycle_g89
00110a  9015              STR      r0,[sp,#0x54]         ;4286
00110c  b320              CBZ      r0,|L31.4440|
00110e  4829              LDR      r0,|L31.4532|
001110  f8d0014c          LDR      r0,[r0,#0x14c]        ;4286
001114  2831              CMP      r0,#0x31              ;4286
001116  da1d              BGE      |L31.4436|
001118  4826              LDR      r0,|L31.4532|
00111a  f8d0214c          LDR      r2,[r0,#0x14c]        ;4286
00111e  f8d0114c          LDR      r1,[r0,#0x14c]        ;4286
001122  1c49              ADDS     r1,r1,#1              ;4286
001124  f8c0114c          STR      r1,[r0,#0x14c]        ;4286
001128  eb020082          ADD      r0,r2,r2,LSL #2       ;4286
00112c  4923              LDR      r1,|L31.4540|
00112e  eb011000          ADD      r0,r1,r0,LSL #4       ;4286
001132  4921              LDR      r1,|L31.4536|
001134  9014              STR      r0,[sp,#0x50]         ;4286
001136  f7fffffe          BL       strcpy
00113a  f04f0100          MOV      r1,#0                 ;4286
00113e  481d              LDR      r0,|L31.4532|
001140  f8d0014c          LDR      r0,[r0,#0x14c]        ;4286
001144  eb000080          ADD      r0,r0,r0,LSL #2       ;4286
001148  4a1c              LDR      r2,|L31.4540|
00114a  eb021000          ADD      r0,r2,r0,LSL #4       ;4286
00114e  7001              STRB     r1,[r0,#0]            ;4286
001150  9815              LDR      r0,[sp,#0x54]         ;4286
001152  e437              B        |L31.2500|
                  |L31.4436|
001154  9815              LDR      r0,[sp,#0x54]         ;4286
001156  e435              B        |L31.2500|
                  |L31.4440|
001158  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4286
00115c  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4286
001160  9817              LDR      r0,[sp,#0x5c]         ;4286
001162  f1a00001          SUB      r0,r0,#1              ;4286
001166  9017              STR      r0,[sp,#0x5c]         ;4286
                  |L31.4456|
001168  9817              LDR      r0,[sp,#0x5c]         ;4286
00116a  2800              CMP      r0,#0                 ;4286
00116c  dc85              BGT      |L31.4218|
00116e  9831              LDR      r0,[sp,#0xc4]         ;4288
001170  f50070d8          ADD      r0,r0,#0x1b0          ;4288
001174  c806              LDM      r0!,{r1,r2}           ;4288
001176  9832              LDR      r0,[sp,#0xc8]         ;4288
001178  f5007078          ADD      r0,r0,#0x3e0          ;4288
00117c  c006              STM      r0!,{r1,r2}           ;4288
00117e  e02d              B        |L31.4572|
                  |L31.4480|
001180  f04f0100          MOV      r1,#0                 ;4291
001184  480b              LDR      r0,|L31.4532|
001186  f8c0114c          STR      r1,[r0,#0x14c]        ;4291
00118a  f8d0214c          LDR      r2,[r0,#0x14c]        ;4291
00118e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4291
001192  f1000001          ADD      r0,r0,#1              ;4291
001196  4907              LDR      r1,|L31.4532|
001198  f8c1014c          STR      r0,[r1,#0x14c]        ;4291
00119c  eb020082          ADD      r0,r2,r2,LSL #2       ;4291
0011a0  4906              LDR      r1,|L31.4540|
0011a2  eb011000          ADD      r0,r1,r0,LSL #4       ;4291
0011a6  4904              LDR      r1,|L31.4536|
0011a8  9014              STR      r0,[sp,#0x50]         ;4291
0011aa  f7fffffe          BL       strcpy
0011ae  f04f0100          MOV      r1,#0                 ;4291
0011b2  e007              B        |L31.4548|
                  |L31.4532|
                          DCD      _setup+0xc000
                  |L31.4536|
                          DCD      |symbol_number.458|
                  |L31.4540|
                          DCD      _setup+0xb1ac
                  |L31.4544|
                          DCD      0xbff00000
                  |L31.4548|
0011c4  4818              LDR      r0,|L31.4648|
0011c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4291
0011ca  eb000080          ADD      r0,r0,r0,LSL #2       ;4291
0011ce  4a17              LDR      r2,|L31.4652|
0011d0  eb021000          ADD      r0,r2,r0,LSL #4       ;4291
0011d4  7001              STRB     r1,[r0,#0]            ;4291
0011d6  f04f0020          MOV      r0,#0x20              ;4291
0011da  e486              B        |L31.2794|
                  |L31.4572|
0011dc  bf00              NOP                            ;4217
0011de  9a32              LDR      r2,[sp,#0xc8]         ;4293
0011e0  e9dd102e          LDRD     r1,r0,[sp,#0xb8]      ;4293
0011e4  f8c21390          STR      r1,[r2,#0x390]        ;4293
0011e8  f8c20394          STR      r0,[r2,#0x394]        ;4293
0011ec  9a32              LDR      r2,[sp,#0xc8]         ;4294
0011ee  e9dd102a          LDRD     r1,r0,[sp,#0xa8]      ;4294
0011f2  f8c21398          STR      r1,[r2,#0x398]        ;4294
0011f6  f8c2039c          STR      r0,[r2,#0x39c]        ;4294
0011fa  9a32              LDR      r2,[sp,#0xc8]         ;4295
0011fc  e9dd1024          LDRD     r1,r0,[sp,#0x90]      ;4295
001200  f8c213a0          STR      r1,[r2,#0x3a0]        ;4295
001204  f8c203a4          STR      r0,[r2,#0x3a4]        ;4295
001208  9931              LDR      r1,[sp,#0xc4]         ;4296
00120a  f5017100          ADD      r1,r1,#0x200          ;4296
00120e  c905              LDM      r1!,{r0,r2}           ;4296
001210  9932              LDR      r1,[sp,#0xc8]         ;4296
001212  f501716e          ADD      r1,r1,#0x3b8          ;4296
001216  c105              STM      r1!,{r0,r2}           ;4296
001218  9816              LDR      r0,[sp,#0x58]         ;4298
00121a  2802              CMP      r0,#2                 ;4298
00121c  d002              BEQ      |L31.4644|
00121e  9816              LDR      r0,[sp,#0x58]         ;4299
001220  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L31.4644|
001224  2000              MOVS     r0,#0                 ;4301
001226  e460              B        |L31.2794|
;;;4303   
                          ENDP

                  |L31.4648|
                          DCD      _setup+0xc000
                  |L31.4652|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_yz||, CODE, READONLY, ALIGN=2

                  convert_cycle_yz PROC
;;;4352   
;;;4353       static int convert_cycle_yz(                  /* ARGUMENTS                                 */
000000  b507              PUSH     {r0-r2,lr}
;;;4354       int motion,                                   /* a g-code between G_81 and G_89, a canned cycle */
;;;4355       block_pointer block,                          /* pointer to a block of RS274/NGC instructions   */
;;;4356       setup_pointer settings)                       /* pointer to machine settings                    */
;;;4357       {
000002  b0b0              SUB      sp,sp,#0xc0
;;;4358           static char name[] SET_TO "convert_cycle_yz";
;;;4359           double aa;
;;;4360           double aa_increment;
;;;4361           double bb;
;;;4362           double bb_increment;
;;;4363           double cc;
;;;4364           double clear_cc;
;;;4365           double i;
;;;4366           double j;
;;;4367           double k;
;;;4368           double old_cc;
;;;4369           CANON_PLANE plane;
;;;4370           double r;
;;;4371           int repeat;
;;;4372           CANON_MOTION_MODE save_mode;
;;;4373           int status;
;;;4374   
;;;4375           plane SET_TO CANON_PLANE_YZ;
000004  f04f0002          MOV      r0,#2
000008  901b              STR      r0,[sp,#0x6c]
;;;4376           if (settings->motion_mode ISNT motion)
00000a  9832              LDR      r0,[sp,#0xc8]
00000c  f8d01628          LDR      r1,[r0,#0x628]
000010  9830              LDR      r0,[sp,#0xc0]
000012  4281              CMP      r1,r0
000014  d02a              BEQ      |L32.108|
;;;4377           {
;;;4378               CHK((block->x_flag IS OFF),
000016  9831              LDR      r0,[sp,#0xc4]
000018  f8d001dc          LDR      r0,[r0,#0x1dc]
00001c  bb30              CBNZ     r0,|L32.108|
00001e  f04f0100          MOV      r1,#0
000022  48ff              LDR      r0,|L32.1056|
000024  f8c0114c          STR      r1,[r0,#0x14c]
000028  f8d0214c          LDR      r2,[r0,#0x14c]
00002c  f8d0014c          LDR      r0,[r0,#0x14c]
000030  f1000001          ADD      r0,r0,#1
000034  49fa              LDR      r1,|L32.1056|
000036  f8c1014c          STR      r0,[r1,#0x14c]
00003a  eb020082          ADD      r0,r2,r2,LSL #2
00003e  f6a16154          SUB      r1,r1,#0xe54
000042  eb011000          ADD      r0,r1,r0,LSL #4
000046  49f7              LDR      r1,|L32.1060|
000048  9014              STR      r0,[sp,#0x50]
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  48f3              LDR      r0,|L32.1056|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4af2              LDR      r2,|L32.1064|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  f04f00bf          MOV      r0,#0xbf
                  |L32.104|
;;;4379                   NCE_X_VALUE_UNSPECIFIED_IN_YZ_PLANE_CANNED_CYCLE);
;;;4380           }
;;;4381           block->x_number SET_TO
;;;4382               block->x_flag IS ON ? block->x_number : settings->cycle_cc;
;;;4383           old_cc SET_TO settings->current_x;
;;;4384   
;;;4385           if (settings->distance_mode IS MODE_ABSOLUTE)
;;;4386           {
;;;4387               aa_increment SET_TO 0.0;
;;;4388               bb_increment SET_TO 0.0;
;;;4389               r SET_TO block->r_number;
;;;4390               cc SET_TO block->x_number;
;;;4391               aa SET_TO block->y_flag IS ON ? block->y_number : settings->current_y;
;;;4392               bb SET_TO block->z_flag IS ON ? block->z_number : settings->current_z;
;;;4393           }
;;;4394           else if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4395           {
;;;4396               aa_increment SET_TO block->y_number;
;;;4397               bb_increment SET_TO block->z_number;
;;;4398               r SET_TO (block->r_number + old_cc);
;;;4399               cc SET_TO (r + block->x_number);      /* [NCMS, page 98] */
;;;4400               aa SET_TO settings->current_y;
;;;4401               bb SET_TO settings->current_z;
;;;4402           }
;;;4403           else
;;;4404               ERM(NCE_BUG_DISTANCE_MODE_NOT_G90_OR_G91);
;;;4405           CHK((r < cc), NCE_R_LESS_THAN_X_IN_CYCLE_IN_YZ_PLANE);
;;;4406   
;;;4407           if (old_cc < r)
;;;4408           {
;;;4409               STRAIGHT_TRAVERSE(r, settings->current_y, settings->current_z
;;;4410       #ifdef AA
;;;4411                   ,      settings->AA_current
;;;4412       #else
;;;4413       #ifdef ALL_AXES
;;;4414                   , 0
;;;4415       #endif
;;;4416       #endif
;;;4417       #ifdef BB
;;;4418                   ,  settings->BB_current
;;;4419       #else
;;;4420       #ifdef ALL_AXES
;;;4421                   , 0
;;;4422       #endif
;;;4423       #endif
;;;4424       #ifdef CC
;;;4425                   ,  settings->CC_current
;;;4426       #else
;;;4427       #ifdef ALL_AXES
;;;4428                   , 0
;;;4429       #endif
;;;4430       #endif
;;;4431                   );
;;;4432               old_cc SET_TO r;
;;;4433           }
;;;4434           clear_cc SET_TO (settings->retract_mode IS R_PLANE) ? r : old_cc;
;;;4435   
;;;4436           save_mode = GET_EXTERNAL_MOTION_CONTROL_MODE();
;;;4437           if (save_mode ISNT CANON_EXACT_PATH)
;;;4438               SET_MOTION_CONTROL_MODE(CANON_EXACT_PATH);
;;;4439   
;;;4440           switch(motion)
;;;4441           {
;;;4442               case G_81:
;;;4443                   CYCLE_MACRO(convert_cycle_g81(CANON_PLANE_YZ, aa, bb, clear_cc, cc))
;;;4444                       break;
;;;4445               case G_82:
;;;4446                   CHK(((settings->motion_mode ISNT G_82) AND (block->p_number IS -1.0)),
;;;4447                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G82);
;;;4448                   block->p_number SET_TO
;;;4449                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4450                   CYCLE_MACRO(convert_cycle_g82 (CANON_PLANE_YZ, aa, bb, clear_cc, cc,
;;;4451                       block->p_number))
;;;4452                       settings->cycle_p SET_TO block->p_number;
;;;4453                   break;
;;;4454               case G_83:
;;;4455                   CHK(((settings->motion_mode ISNT G_83) AND (block->q_number IS -1.0)),
;;;4456                       NCE_Q_WORD_MISSING_WITH_G83);
;;;4457                   block->q_number SET_TO
;;;4458                       block->q_number IS -1.0 ? settings->cycle_q : block->q_number;
;;;4459                   CYCLE_MACRO(convert_cycle_g83 (CANON_PLANE_YZ, aa, bb, r, clear_cc, cc,
;;;4460                       block->q_number))
;;;4461                       settings->cycle_q SET_TO block->q_number;
;;;4462                   break;
;;;4463               case G_84:
;;;4464                   CYCLE_MACRO(convert_cycle_g84 (CANON_PLANE_YZ, aa, bb, clear_cc, cc,
;;;4465                       settings->spindle_turning, settings->speed_feed_mode))
;;;4466                       break;
;;;4467               case G_85:
;;;4468                   CYCLE_MACRO(convert_cycle_g85 (CANON_PLANE_YZ, aa, bb, clear_cc, cc))
;;;4469                       break;
;;;4470               case G_86:
;;;4471                   CHK(((settings->motion_mode ISNT G_86) AND (block->p_number IS -1.0)),
;;;4472                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G86);
;;;4473                   block->p_number SET_TO
;;;4474                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4475                   CYCLE_MACRO(convert_cycle_g86 (CANON_PLANE_YZ, aa, bb, clear_cc, cc,
;;;4476                       block->p_number, settings->spindle_turning))
;;;4477                       settings->cycle_p SET_TO block->p_number;
;;;4478                   break;
;;;4479               case G_87:
;;;4480                   if (settings->motion_mode ISNT G_87)
;;;4481                   {
;;;4482                       CHK((block->i_flag IS OFF), NCE_I_WORD_MISSING_WITH_G87);
;;;4483                       CHK((block->j_flag IS OFF), NCE_J_WORD_MISSING_WITH_G87);
;;;4484                       CHK((block->k_flag IS OFF), NCE_K_WORD_MISSING_WITH_G87);
;;;4485                   }
;;;4486                   i SET_TO block->i_flag IS ON ? block->i_number : settings->cycle_i;
;;;4487                   j SET_TO block->j_flag IS ON ? block->j_number : settings->cycle_j;
;;;4488                   k SET_TO block->k_flag IS ON ? block->k_number : settings->cycle_k;
;;;4489                   settings->cycle_i SET_TO i;
;;;4490                   settings->cycle_j SET_TO j;
;;;4491                   settings->cycle_k SET_TO k;
;;;4492                   if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4493                   {
;;;4494                       i SET_TO (cc + i);            /* i always absolute in function call below */
;;;4495                   }
;;;4496                   CYCLE_MACRO(convert_cycle_g87 (CANON_PLANE_YZ, aa, (aa + j), bb,
;;;4497                       (bb + k), r, clear_cc, i, cc, settings->spindle_turning))
;;;4498                       break;
;;;4499               case G_88:
;;;4500                   CHK(((settings->motion_mode ISNT G_88) AND (block->p_number IS -1.0)),
;;;4501                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G88);
;;;4502                   block->p_number SET_TO
;;;4503                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4504                   CYCLE_MACRO(convert_cycle_g88 (CANON_PLANE_YZ, aa, bb, cc,
;;;4505                       block->p_number, settings->spindle_turning))
;;;4506                       settings->cycle_p SET_TO block->p_number;
;;;4507                   break;
;;;4508               case G_89:
;;;4509                   CHK(((settings->motion_mode ISNT G_89) AND (block->p_number IS -1.0)),
;;;4510                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G89);
;;;4511                   block->p_number SET_TO
;;;4512                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4513                   CYCLE_MACRO(convert_cycle_g89 (CANON_PLANE_YZ, aa, bb, clear_cc, cc,
;;;4514                       block->p_number))
;;;4515                       settings->cycle_p SET_TO block->p_number;
;;;4516                   break;
;;;4517               default:
;;;4518                   ERM(NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
;;;4519           }
;;;4520           settings->current_y SET_TO aa;            /* CYCLE_MACRO updates aa and bb */
;;;4521           settings->current_z SET_TO bb;
;;;4522           settings->current_x SET_TO clear_cc;
;;;4523           settings->cycle_cc SET_TO block->x_number;
;;;4524   
;;;4525           if (save_mode ISNT CANON_EXACT_PATH)
;;;4526               SET_MOTION_CONTROL_MODE(save_mode);
;;;4527   
;;;4528           return RS274NGC_OK;
;;;4529       }
000068  b033              ADD      sp,sp,#0xcc
00006a  bd00              POP      {pc}
                  |L32.108|
00006c  9831              LDR      r0,[sp,#0xc4]         ;4381
00006e  f8d001dc          LDR      r0,[r0,#0x1dc]        ;4381
000072  2801              CMP      r0,#1                 ;4381
000074  d104              BNE      |L32.128|
000076  9931              LDR      r1,[sp,#0xc4]         ;4382
000078  f50171f0          ADD      r1,r1,#0x1e0          ;4382
00007c  c903              LDM      r1,{r0,r1}            ;4382
00007e  e003              B        |L32.136|
                  |L32.128|
000080  9932              LDR      r1,[sp,#0xc8]         ;4382
000082  f501716e          ADD      r1,r1,#0x3b8          ;4382
000086  c903              LDM      r1,{r0,r1}            ;4382
                  |L32.136|
000088  9a31              LDR      r2,[sp,#0xc4]         ;4382
00008a  f50272f0          ADD      r2,r2,#0x1e0          ;4382
00008e  c203              STM      r2!,{r0,r1}           ;4382
000090  9832              LDR      r0,[sp,#0xc8]         ;4383
000092  f5007064          ADD      r0,r0,#0x390          ;4383
000096  c803              LDM      r0,{r0,r1}            ;4383
000098  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4383
00009c  9832              LDR      r0,[sp,#0xc8]         ;4385
00009e  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4385
0000a2  bb98              CBNZ     r0,|L32.268|
0000a4  f04f0100          MOV      r1,#0                 ;4387
0000a8  912c              STR      r1,[sp,#0xb0]         ;4387
0000aa  912d              STR      r1,[sp,#0xb4]         ;4387
0000ac  4608              MOV      r0,r1                 ;4388
0000ae  9028              STR      r0,[sp,#0xa0]         ;4388
0000b0  9029              STR      r0,[sp,#0xa4]         ;4388
0000b2  9831              LDR      r0,[sp,#0xc4]         ;4389
0000b4  f50070e4          ADD      r0,r0,#0x1c8          ;4389
0000b8  c803              LDM      r0,{r0,r1}            ;4389
0000ba  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4389
0000be  9931              LDR      r1,[sp,#0xc4]         ;4390
0000c0  f50171f0          ADD      r1,r1,#0x1e0          ;4390
0000c4  c903              LDM      r1,{r0,r1}            ;4390
0000c6  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4390
0000ca  9831              LDR      r0,[sp,#0xc4]         ;4391
0000cc  f8d001e8          LDR      r0,[r0,#0x1e8]        ;4391
0000d0  2801              CMP      r0,#1                 ;4391
0000d2  d104              BNE      |L32.222|
0000d4  9931              LDR      r1,[sp,#0xc4]         ;4391
0000d6  f50171f8          ADD      r1,r1,#0x1f0          ;4391
0000da  c903              LDM      r1,{r0,r1}            ;4391
0000dc  e003              B        |L32.230|
                  |L32.222|
0000de  9932              LDR      r1,[sp,#0xc8]         ;4391
0000e0  f5017166          ADD      r1,r1,#0x398          ;4391
0000e4  c903              LDM      r1,{r0,r1}            ;4391
                  |L32.230|
0000e6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4391
0000ea  9831              LDR      r0,[sp,#0xc4]         ;4392
0000ec  f8d001f8          LDR      r0,[r0,#0x1f8]        ;4392
0000f0  2801              CMP      r0,#1                 ;4392
0000f2  d104              BNE      |L32.254|
0000f4  9931              LDR      r1,[sp,#0xc4]         ;4392
0000f6  f5017100          ADD      r1,r1,#0x200          ;4392
0000fa  c903              LDM      r1,{r0,r1}            ;4392
0000fc  e003              B        |L32.262|
                  |L32.254|
0000fe  9932              LDR      r1,[sp,#0xc8]         ;4392
000100  f5017168          ADD      r1,r1,#0x3a0          ;4392
000104  c903              LDM      r1,{r0,r1}            ;4392
                  |L32.262|
000106  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4392
00010a  e05b              B        |L32.452|
                  |L32.268|
00010c  e7ff              B        |L32.270|
                  |L32.270|
00010e  9832              LDR      r0,[sp,#0xc8]         ;4394
000110  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4394
000114  2801              CMP      r0,#1                 ;4394
000116  d130              BNE      |L32.378|
000118  9831              LDR      r0,[sp,#0xc4]         ;4396
00011a  f50070f8          ADD      r0,r0,#0x1f0          ;4396
00011e  c803              LDM      r0,{r0,r1}            ;4396
000120  e9cd012c          STRD     r0,r1,[sp,#0xb0]      ;4396
000124  9831              LDR      r0,[sp,#0xc4]         ;4397
000126  f5007000          ADD      r0,r0,#0x200          ;4397
00012a  c803              LDM      r0,{r0,r1}            ;4397
00012c  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;4397
000130  9931              LDR      r1,[sp,#0xc4]         ;4398
000132  f50171e4          ADD      r1,r1,#0x1c8          ;4398
000136  c903              LDM      r1,{r0,r1}            ;4398
000138  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4398
00013c  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;4398
000140  f7fffffe          BL       __aeabi_dadd
000144  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4398
000148  9931              LDR      r1,[sp,#0xc4]         ;4399
00014a  f50171f0          ADD      r1,r1,#0x1e0          ;4399
00014e  c903              LDM      r1,{r0,r1}            ;4399
000150  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4399
000154  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4399
000158  f7fffffe          BL       __aeabi_dadd
00015c  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4399
000160  9932              LDR      r1,[sp,#0xc8]         ;4400
000162  f5017166          ADD      r1,r1,#0x398          ;4400
000166  c903              LDM      r1,{r0,r1}            ;4400
000168  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4400
00016c  9832              LDR      r0,[sp,#0xc8]         ;4401
00016e  f5007068          ADD      r0,r0,#0x3a0          ;4401
000172  c803              LDM      r0,{r0,r1}            ;4401
000174  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4401
000178  e024              B        |L32.452|
                  |L32.378|
00017a  f04f0100          MOV      r1,#0                 ;4404
00017e  48a8              LDR      r0,|L32.1056|
000180  f8c0114c          STR      r1,[r0,#0x14c]        ;4404
000184  f8d0214c          LDR      r2,[r0,#0x14c]        ;4404
000188  f8d0014c          LDR      r0,[r0,#0x14c]        ;4404
00018c  f1000001          ADD      r0,r0,#1              ;4404
000190  49a3              LDR      r1,|L32.1056|
000192  f8c1014c          STR      r0,[r1,#0x14c]        ;4404
000196  eb020182          ADD      r1,r2,r2,LSL #2       ;4404
00019a  48a3              LDR      r0,|L32.1064|
00019c  eb001001          ADD      r0,r0,r1,LSL #4       ;4404
0001a0  49a0              LDR      r1,|L32.1060|
0001a2  9014              STR      r0,[sp,#0x50]         ;4404
0001a4  f7fffffe          BL       strcpy
0001a8  f04f0100          MOV      r1,#0                 ;4404
0001ac  489c              LDR      r0,|L32.1056|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;4404
0001b2  eb000080          ADD      r0,r0,r0,LSL #2       ;4404
0001b6  4a9c              LDR      r2,|L32.1064|
0001b8  eb021000          ADD      r0,r2,r0,LSL #4       ;4404
0001bc  7001              STRB     r1,[r0,#0]            ;4404
0001be  f04f001f          MOV      r0,#0x1f              ;4404
                  |L32.450|
0001c2  e751              B        |L32.104|
                  |L32.452|
0001c4  e9dd2326          LDRD     r2,r3,[sp,#0x98]      ;4405
0001c8  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4405
0001cc  f7fffffe          BL       __aeabi_cdcmple
0001d0  d224              BCS      |L32.540|
0001d2  f04f0100          MOV      r1,#0                 ;4405
0001d6  4892              LDR      r0,|L32.1056|
0001d8  f8c0114c          STR      r1,[r0,#0x14c]        ;4405
0001dc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4405
0001e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4405
0001e4  f1000001          ADD      r0,r0,#1              ;4405
0001e8  498d              LDR      r1,|L32.1056|
0001ea  f8c1014c          STR      r0,[r1,#0x14c]        ;4405
0001ee  eb020082          ADD      r0,r2,r2,LSL #2       ;4405
0001f2  498d              LDR      r1,|L32.1064|
0001f4  eb011000          ADD      r0,r1,r0,LSL #4       ;4405
0001f8  498a              LDR      r1,|L32.1060|
0001fa  9014              STR      r0,[sp,#0x50]         ;4405
0001fc  f7fffffe          BL       strcpy
000200  f04f0100          MOV      r1,#0                 ;4405
000204  4886              LDR      r0,|L32.1056|
000206  f8d0014c          LDR      r0,[r0,#0x14c]        ;4405
00020a  eb000080          ADD      r0,r0,r0,LSL #2       ;4405
00020e  4a86              LDR      r2,|L32.1064|
000210  eb021000          ADD      r0,r2,r0,LSL #4       ;4405
000214  7001              STRB     r1,[r0,#0]            ;4405
000216  f04f0094          MOV      r0,#0x94              ;4405
                  |L32.538|
00021a  e725              B        |L32.104|
                  |L32.540|
00021c  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4407
000220  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4407
000224  f7fffffe          BL       __aeabi_cdcmple
000228  d215              BCS      |L32.598|
00022a  9832              LDR      r0,[sp,#0xc8]         ;4409
00022c  f5007068          ADD      r0,r0,#0x3a0          ;4409
000230  c803              LDM      r0,{r0,r1}            ;4409
000232  e9cd0100          STRD     r0,r1,[sp,#0]         ;4409
000236  9932              LDR      r1,[sp,#0xc8]         ;4409
000238  f5017166          ADD      r1,r1,#0x398          ;4409
00023c  c903              LDM      r1,{r0,r1}            ;4409
00023e  4602              MOV      r2,r0                 ;4409
000240  460b              MOV      r3,r1                 ;4409
000242  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4409
000246  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4409
00024a  f7fffffe          BL       STRAIGHT_TRAVERSE
00024e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4432
000252  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4432
                  |L32.598|
000256  9832              LDR      r0,[sp,#0xc8]         ;4434
000258  f5004030          ADD      r0,r0,#0xb000         ;4434
00025c  f8900188          LDRB     r0,[r0,#0x188]        ;4434
000260  b910              CBNZ     r0,|L32.616|
000262  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4434
000266  e001              B        |L32.620|
                  |L32.616|
000268  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4434
                  |L32.620|
00026c  e9cd0124          STRD     r0,r1,[sp,#0x90]      ;4434
000270  f7fffffe          BL       GET_EXTERNAL_MOTION_CONTROL_MODE
000274  9016              STR      r0,[sp,#0x58]         ;4436
000276  9816              LDR      r0,[sp,#0x58]         ;4437
000278  2802              CMP      r0,#2                 ;4437
00027a  d002              BEQ      |L32.642|
00027c  2002              MOVS     r0,#2                 ;4438
00027e  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L32.642|
000282  f2403252          MOV      r2,#0x352             ;4440
000286  9830              LDR      r0,[sp,#0xc0]         ;4440
000288  1a81              SUBS     r1,r0,r2              ;4440
00028a  4290              CMP      r0,r2                 ;4440
00028c  d07d              BEQ      |L32.906|
00028e  dc0a              BGT      |L32.678|
000290  f5a07040          SUB      r0,r0,#0x300          ;4440
000294  382a              SUBS     r0,r0,#0x2a           ;4440
000296  d00f              BEQ      |L32.696|
000298  280a              CMP      r0,#0xa               ;4440
00029a  d077              BEQ      |L32.908|
00029c  2814              CMP      r0,#0x14              ;4440
00029e  d076              BEQ      |L32.910|
0002a0  281e              CMP      r0,#0x1e              ;4440
                  |L32.674|
0002a2  d175              BNE      |L32.912|
0002a4  e24a              B        |L32.1852|
                  |L32.678|
0002a6  290a              CMP      r1,#0xa               ;4440
0002a8  d073              BEQ      |L32.914|
0002aa  2914              CMP      r1,#0x14              ;4440
0002ac  d072              BEQ      |L32.916|
0002ae  291e              CMP      r1,#0x1e              ;4440
0002b0  d071              BEQ      |L32.918|
0002b2  2928              CMP      r1,#0x28              ;4440
0002b4  d1f5              BNE      |L32.674|
0002b6  e3fe              B        |L32.2742|
                  |L32.696|
0002b8  9831              LDR      r0,[sp,#0xc4]         ;4443
0002ba  f8d00178          LDR      r0,[r0,#0x178]        ;4443
0002be  9017              STR      r0,[sp,#0x5c]         ;4443
0002c0  e07a              B        |L32.952|
                  |L32.706|
0002c2  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4443
0002c6  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4443
0002ca  f7fffffe          BL       __aeabi_dadd
0002ce  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4443
0002d2  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4443
0002d6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4443
0002da  f7fffffe          BL       __aeabi_dadd
0002de  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4443
0002e2  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4443
0002e6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4443
0002ea  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4443
0002ee  e9cd0100          STRD     r0,r1,[sp,#0]         ;4443
0002f2  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4443
0002f6  981b              LDR      r0,[sp,#0x6c]         ;4443
0002f8  f7fffffe          BL       cycle_traverse
0002fc  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4443
000300  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4443
000304  f7fffffe          BL       __aeabi_cdcmpeq
000308  d00c              BEQ      |L32.804|
00030a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4443
00030e  e9cd0102          STRD     r0,r1,[sp,#8]         ;4443
000312  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4443
000316  e9cd0100          STRD     r0,r1,[sp,#0]         ;4443
00031a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4443
00031e  981b              LDR      r0,[sp,#0x6c]         ;4443
000320  f7fffffe          BL       cycle_traverse
                  |L32.804|
000324  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4443
000328  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4443
00032c  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4443
000330  e9cd0102          STRD     r0,r1,[sp,#8]         ;4443
000334  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4443
000338  e9cd0100          STRD     r0,r1,[sp,#0]         ;4443
00033c  2002              MOVS     r0,#2                 ;4443
00033e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4443
000342  f7fffffe          BL       convert_cycle_g81
000346  9015              STR      r0,[sp,#0x54]         ;4443
000348  b330              CBZ      r0,|L32.920|
00034a  4835              LDR      r0,|L32.1056|
00034c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4443
000350  2831              CMP      r0,#0x31              ;4443
000352  da27              BGE      |L32.932|
000354  4832              LDR      r0,|L32.1056|
000356  f8d0214c          LDR      r2,[r0,#0x14c]        ;4443
00035a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4443
00035e  1c40              ADDS     r0,r0,#1              ;4443
000360  492f              LDR      r1,|L32.1056|
000362  f8c1014c          STR      r0,[r1,#0x14c]        ;4443
000366  eb020182          ADD      r1,r2,r2,LSL #2       ;4443
00036a  482f              LDR      r0,|L32.1064|
00036c  eb001001          ADD      r0,r0,r1,LSL #4       ;4443
000370  492c              LDR      r1,|L32.1060|
000372  9014              STR      r0,[sp,#0x50]         ;4443
000374  f7fffffe          BL       strcpy
000378  f04f0100          MOV      r1,#0                 ;4443
00037c  4828              LDR      r0,|L32.1056|
00037e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4443
000382  eb000380          ADD      r3,r0,r0,LSL #2       ;4443
000386  4828              LDR      r0,|L32.1064|
000388  e007              B        |L32.922|
                  |L32.906|
00038a  e268              B        |L32.2142|
                  |L32.908|
00038c  e018              B        |L32.960|
                  |L32.910|
00038e  e0f7              B        |L32.1408|
                  |L32.912|
000390  e3f1              B        |L32.2934|
                  |L32.914|
000392  e2e0              B        |L32.2390|
                  |L32.916|
000394  e3bf              B        |L32.2838|
                  |L32.918|
000396  e3ef              B        |L32.2936|
                  |L32.920|
000398  e006              B        |L32.936|
                  |L32.922|
00039a  eb001003          ADD      r0,r0,r3,LSL #4       ;4443
00039e  7001              STRB     r1,[r0,#0]            ;4443
0003a0  9815              LDR      r0,[sp,#0x54]         ;4443
                  |L32.930|
0003a2  e661              B        |L32.104|
                  |L32.932|
0003a4  9815              LDR      r0,[sp,#0x54]         ;4443
0003a6  e65f              B        |L32.104|
                  |L32.936|
0003a8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4443
0003ac  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4443
0003b0  9817              LDR      r0,[sp,#0x5c]         ;4443
0003b2  f1a00001          SUB      r0,r0,#1              ;4443
0003b6  9017              STR      r0,[sp,#0x5c]         ;4443
                  |L32.952|
0003b8  9817              LDR      r0,[sp,#0x5c]         ;4443
0003ba  2800              CMP      r0,#0                 ;4443
0003bc  dc81              BGT      |L32.706|
                  |L32.958|
0003be  e3a9              B        |L32.2836|
                  |L32.960|
0003c0  9832              LDR      r0,[sp,#0xc8]         ;4446
0003c2  f8d00628          LDR      r0,[r0,#0x628]        ;4446
0003c6  f5b07f4d          CMP      r0,#0x334             ;4446
0003ca  d038              BEQ      |L32.1086|
0003cc  9931              LDR      r1,[sp,#0xc4]         ;4446
0003ce  f50171d8          ADD      r1,r1,#0x1b0          ;4446
0003d2  c903              LDM      r1,{r0,r1}            ;4446
0003d4  2200              MOVS     r2,#0                 ;4446
0003d6  4b15              LDR      r3,|L32.1068|
0003d8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4446
0003dc  f7fffffe          BL       __aeabi_cdcmpeq
0003e0  d12d              BNE      |L32.1086|
0003e2  f04f0100          MOV      r1,#0                 ;4446
0003e6  480e              LDR      r0,|L32.1056|
0003e8  f8c0114c          STR      r1,[r0,#0x14c]        ;4446
0003ec  f8d0214c          LDR      r2,[r0,#0x14c]        ;4446
0003f0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4446
0003f4  f1000001          ADD      r0,r0,#1              ;4446
0003f8  4909              LDR      r1,|L32.1056|
0003fa  f8c1014c          STR      r0,[r1,#0x14c]        ;4446
0003fe  eb020082          ADD      r0,r2,r2,LSL #2       ;4446
000402  4909              LDR      r1,|L32.1064|
000404  eb011000          ADD      r0,r1,r0,LSL #4       ;4446
000408  4906              LDR      r1,|L32.1060|
00040a  9014              STR      r0,[sp,#0x50]         ;4446
00040c  f7fffffe          BL       strcpy
000410  f04f0100          MOV      r1,#0                 ;4446
000414  4802              LDR      r0,|L32.1056|
000416  f8d0014c          LDR      r0,[r0,#0x14c]        ;4446
00041a  eb000080          ADD      r0,r0,r0,LSL #2       ;4446
00041e  e007              B        |L32.1072|
                  |L32.1056|
                          DCD      _setup+0xc000
                  |L32.1060|
                          DCD      |symbol_number.459|
                  |L32.1064|
                          DCD      _setup+0xb1ac
                  |L32.1068|
                          DCD      0xbff00000
                  |L32.1072|
000430  4aff              LDR      r2,|L32.2096|
000432  eb021000          ADD      r0,r2,r0,LSL #4       ;4446
000436  7001              STRB     r1,[r0,#0]            ;4446
000438  f04f0049          MOV      r0,#0x49              ;4446
                  |L32.1084|
00043c  e614              B        |L32.104|
                  |L32.1086|
00043e  9931              LDR      r1,[sp,#0xc4]         ;4448
000440  f50171d8          ADD      r1,r1,#0x1b0          ;4448
000444  c903              LDM      r1,{r0,r1}            ;4448
000446  2200              MOVS     r2,#0                 ;4448
000448  4bfa              LDR      r3,|L32.2100|
00044a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4448
00044e  f7fffffe          BL       __aeabi_cdcmpeq
000452  d104              BNE      |L32.1118|
000454  9932              LDR      r1,[sp,#0xc8]         ;4449
000456  f5017178          ADD      r1,r1,#0x3e0          ;4449
00045a  c903              LDM      r1,{r0,r1}            ;4449
00045c  e003              B        |L32.1126|
                  |L32.1118|
00045e  9931              LDR      r1,[sp,#0xc4]         ;4449
000460  f50171d8          ADD      r1,r1,#0x1b0          ;4449
000464  c903              LDM      r1,{r0,r1}            ;4449
                  |L32.1126|
000466  9a31              LDR      r2,[sp,#0xc4]         ;4449
000468  f50272d8          ADD      r2,r2,#0x1b0          ;4449
00046c  c203              STM      r2!,{r0,r1}           ;4449
00046e  9831              LDR      r0,[sp,#0xc4]         ;4450
000470  f8d00178          LDR      r0,[r0,#0x178]        ;4450
000474  9017              STR      r0,[sp,#0x5c]         ;4450
000476  e077              B        |L32.1384|
                  |L32.1144|
000478  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4450
00047c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4450
000480  f7fffffe          BL       __aeabi_dadd
000484  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4450
000488  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4450
00048c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4450
000490  f7fffffe          BL       __aeabi_dadd
000494  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4450
000498  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4450
00049c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4450
0004a0  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4450
0004a4  e9cd0100          STRD     r0,r1,[sp,#0]         ;4450
0004a8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4450
0004ac  981b              LDR      r0,[sp,#0x6c]         ;4450
0004ae  f7fffffe          BL       cycle_traverse
0004b2  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4450
0004b6  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4450
0004ba  f7fffffe          BL       __aeabi_cdcmpeq
0004be  d00c              BEQ      |L32.1242|
0004c0  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4450
0004c4  e9cd0102          STRD     r0,r1,[sp,#8]         ;4450
0004c8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4450
0004cc  e9cd0100          STRD     r0,r1,[sp,#0]         ;4450
0004d0  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4450
0004d4  981b              LDR      r0,[sp,#0x6c]         ;4450
0004d6  f7fffffe          BL       cycle_traverse
                  |L32.1242|
0004da  9831              LDR      r0,[sp,#0xc4]         ;4450
0004dc  f50070d8          ADD      r0,r0,#0x1b0          ;4450
0004e0  c803              LDM      r0,{r0,r1}            ;4450
0004e2  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4450
0004e6  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4450
0004ea  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4450
0004ee  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4450
0004f2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4450
0004f6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4450
0004fa  e9cd0100          STRD     r0,r1,[sp,#0]         ;4450
0004fe  2002              MOVS     r0,#2                 ;4450
000500  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4450
000504  f7fffffe          BL       convert_cycle_g82
000508  9015              STR      r0,[sp,#0x54]         ;4450
00050a  b328              CBZ      r0,|L32.1368|
00050c  48ca              LDR      r0,|L32.2104|
00050e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4450
000512  2831              CMP      r0,#0x31              ;4450
000514  da1e              BGE      |L32.1364|
000516  48c8              LDR      r0,|L32.2104|
000518  f8d0214c          LDR      r2,[r0,#0x14c]        ;4450
00051c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4450
000520  1c40              ADDS     r0,r0,#1              ;4450
000522  49c5              LDR      r1,|L32.2104|
000524  f8c1014c          STR      r0,[r1,#0x14c]        ;4450
000528  eb020082          ADD      r0,r2,r2,LSL #2       ;4450
00052c  49c0              LDR      r1,|L32.2096|
00052e  eb011000          ADD      r0,r1,r0,LSL #4       ;4450
000532  49c2              LDR      r1,|L32.2108|
000534  9014              STR      r0,[sp,#0x50]         ;4450
000536  f7fffffe          BL       strcpy
00053a  f04f0100          MOV      r1,#0                 ;4450
00053e  48be              LDR      r0,|L32.2104|
000540  f8d0014c          LDR      r0,[r0,#0x14c]        ;4450
000544  eb000080          ADD      r0,r0,r0,LSL #2       ;4450
000548  4ab9              LDR      r2,|L32.2096|
00054a  eb021000          ADD      r0,r2,r0,LSL #4       ;4450
00054e  7001              STRB     r1,[r0,#0]            ;4450
000550  9815              LDR      r0,[sp,#0x54]         ;4450
000552  e589              B        |L32.104|
                  |L32.1364|
000554  9815              LDR      r0,[sp,#0x54]         ;4450
000556  e587              B        |L32.104|
                  |L32.1368|
000558  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4450
00055c  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4450
000560  9817              LDR      r0,[sp,#0x5c]         ;4450
000562  f1a00001          SUB      r0,r0,#1              ;4450
000566  9017              STR      r0,[sp,#0x5c]         ;4450
                  |L32.1384|
000568  9817              LDR      r0,[sp,#0x5c]         ;4450
00056a  2800              CMP      r0,#0                 ;4450
00056c  dc84              BGT      |L32.1144|
00056e  9831              LDR      r0,[sp,#0xc4]         ;4452
000570  f50070d8          ADD      r0,r0,#0x1b0          ;4452
000574  c806              LDM      r0!,{r1,r2}           ;4452
000576  9832              LDR      r0,[sp,#0xc8]         ;4452
000578  f5007078          ADD      r0,r0,#0x3e0          ;4452
00057c  c006              STM      r0!,{r1,r2}           ;4452
00057e  e71e              B        |L32.958|
                  |L32.1408|
000580  9832              LDR      r0,[sp,#0xc8]         ;4455
000582  f8d00628          LDR      r0,[r0,#0x628]        ;4455
000586  f5a07140          SUB      r1,r0,#0x300          ;4455
00058a  393e              SUBS     r1,r1,#0x3e           ;4455
00058c  d02f              BEQ      |L32.1518|
00058e  9931              LDR      r1,[sp,#0xc4]         ;4455
000590  f50171dc          ADD      r1,r1,#0x1b8          ;4455
000594  c903              LDM      r1,{r0,r1}            ;4455
000596  2200              MOVS     r2,#0                 ;4455
000598  4ba6              LDR      r3,|L32.2100|
00059a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4455
00059e  f7fffffe          BL       __aeabi_cdcmpeq
0005a2  d124              BNE      |L32.1518|
0005a4  f04f0100          MOV      r1,#0                 ;4455
0005a8  48a3              LDR      r0,|L32.2104|
0005aa  f8c0114c          STR      r1,[r0,#0x14c]        ;4455
0005ae  f8d0214c          LDR      r2,[r0,#0x14c]        ;4455
0005b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4455
0005b6  f1000001          ADD      r0,r0,#1              ;4455
0005ba  499f              LDR      r1,|L32.2104|
0005bc  f8c1014c          STR      r0,[r1,#0x14c]        ;4455
0005c0  eb020082          ADD      r0,r2,r2,LSL #2       ;4455
0005c4  499a              LDR      r1,|L32.2096|
0005c6  eb011000          ADD      r0,r1,r0,LSL #4       ;4455
0005ca  499c              LDR      r1,|L32.2108|
0005cc  9014              STR      r0,[sp,#0x50]         ;4455
0005ce  f7fffffe          BL       strcpy
0005d2  f04f0100          MOV      r1,#0                 ;4455
0005d6  4898              LDR      r0,|L32.2104|
0005d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4455
0005dc  eb000080          ADD      r0,r0,r0,LSL #2       ;4455
0005e0  4a93              LDR      r2,|L32.2096|
0005e2  eb021000          ADD      r0,r2,r0,LSL #4       ;4455
0005e6  7001              STRB     r1,[r0,#0]            ;4455
0005e8  f04f008f          MOV      r0,#0x8f              ;4455
0005ec  e53c              B        |L32.104|
                  |L32.1518|
0005ee  9931              LDR      r1,[sp,#0xc4]         ;4457
0005f0  f50171dc          ADD      r1,r1,#0x1b8          ;4457
0005f4  c903              LDM      r1,{r0,r1}            ;4457
0005f6  2200              MOVS     r2,#0                 ;4457
0005f8  4b8e              LDR      r3,|L32.2100|
0005fa  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4457
0005fe  f7fffffe          BL       __aeabi_cdcmpeq
000602  d104              BNE      |L32.1550|
000604  9932              LDR      r1,[sp,#0xc8]         ;4458
000606  f501717a          ADD      r1,r1,#0x3e8          ;4458
00060a  c903              LDM      r1,{r0,r1}            ;4458
00060c  e003              B        |L32.1558|
                  |L32.1550|
00060e  9931              LDR      r1,[sp,#0xc4]         ;4458
000610  f50171dc          ADD      r1,r1,#0x1b8          ;4458
000614  c903              LDM      r1,{r0,r1}            ;4458
                  |L32.1558|
000616  9a31              LDR      r2,[sp,#0xc4]         ;4458
000618  f50272dc          ADD      r2,r2,#0x1b8          ;4458
00061c  c203              STM      r2!,{r0,r1}           ;4458
00061e  9831              LDR      r0,[sp,#0xc4]         ;4459
000620  f8d00178          LDR      r0,[r0,#0x178]        ;4459
000624  9017              STR      r0,[sp,#0x5c]         ;4459
000626  e07b              B        |L32.1824|
                  |L32.1576|
000628  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4459
00062c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4459
000630  f7fffffe          BL       __aeabi_dadd
000634  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4459
000638  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4459
00063c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4459
000640  f7fffffe          BL       __aeabi_dadd
000644  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4459
000648  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4459
00064c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4459
000650  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4459
000654  e9cd0100          STRD     r0,r1,[sp,#0]         ;4459
000658  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4459
00065c  981b              LDR      r0,[sp,#0x6c]         ;4459
00065e  f7fffffe          BL       cycle_traverse
000662  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4459
000666  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4459
00066a  f7fffffe          BL       __aeabi_cdcmpeq
00066e  d00c              BEQ      |L32.1674|
000670  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4459
000674  e9cd0102          STRD     r0,r1,[sp,#8]         ;4459
000678  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4459
00067c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4459
000680  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4459
000684  981b              LDR      r0,[sp,#0x6c]         ;4459
000686  f7fffffe          BL       cycle_traverse
                  |L32.1674|
00068a  9931              LDR      r1,[sp,#0xc4]         ;4459
00068c  f50171dc          ADD      r1,r1,#0x1b8          ;4459
000690  c903              LDM      r1,{r0,r1}            ;4459
000692  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4459
000696  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4459
00069a  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4459
00069e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4459
0006a2  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4459
0006a6  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4459
0006aa  e9cd0102          STRD     r0,r1,[sp,#8]         ;4459
0006ae  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4459
0006b2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4459
0006b6  2002              MOVS     r0,#2                 ;4459
0006b8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4459
0006bc  f7fffffe          BL       convert_cycle_g83
0006c0  9015              STR      r0,[sp,#0x54]         ;4459
0006c2  b328              CBZ      r0,|L32.1808|
0006c4  485c              LDR      r0,|L32.2104|
0006c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4459
0006ca  2831              CMP      r0,#0x31              ;4459
0006cc  da1e              BGE      |L32.1804|
0006ce  485a              LDR      r0,|L32.2104|
0006d0  f8d0214c          LDR      r2,[r0,#0x14c]        ;4459
0006d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4459
0006d8  1c40              ADDS     r0,r0,#1              ;4459
0006da  4957              LDR      r1,|L32.2104|
0006dc  f8c1014c          STR      r0,[r1,#0x14c]        ;4459
0006e0  eb020082          ADD      r0,r2,r2,LSL #2       ;4459
0006e4  4952              LDR      r1,|L32.2096|
0006e6  eb011000          ADD      r0,r1,r0,LSL #4       ;4459
0006ea  4954              LDR      r1,|L32.2108|
0006ec  9014              STR      r0,[sp,#0x50]         ;4459
0006ee  f7fffffe          BL       strcpy
0006f2  f04f0100          MOV      r1,#0                 ;4459
0006f6  4850              LDR      r0,|L32.2104|
0006f8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4459
0006fc  eb000080          ADD      r0,r0,r0,LSL #2       ;4459
000700  4a4b              LDR      r2,|L32.2096|
000702  eb021000          ADD      r0,r2,r0,LSL #4       ;4459
000706  7001              STRB     r1,[r0,#0]            ;4459
000708  9815              LDR      r0,[sp,#0x54]         ;4459
                  |L32.1802|
00070a  e4ad              B        |L32.104|
                  |L32.1804|
00070c  9815              LDR      r0,[sp,#0x54]         ;4459
00070e  e4ab              B        |L32.104|
                  |L32.1808|
000710  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4459
000714  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4459
000718  9817              LDR      r0,[sp,#0x5c]         ;4459
00071a  f1a00001          SUB      r0,r0,#1              ;4459
00071e  9017              STR      r0,[sp,#0x5c]         ;4459
                  |L32.1824|
000720  9817              LDR      r0,[sp,#0x5c]         ;4459
000722  2800              CMP      r0,#0                 ;4459
000724  dc80              BGT      |L32.1576|
000726  9831              LDR      r0,[sp,#0xc4]         ;4461
000728  f8d021b8          LDR      r2,[r0,#0x1b8]        ;4461
00072c  f8d011bc          LDR      r1,[r0,#0x1bc]        ;4461
000730  9832              LDR      r0,[sp,#0xc8]         ;4461
000732  f8c023e8          STR      r2,[r0,#0x3e8]        ;4461
000736  f8c013ec          STR      r1,[r0,#0x3ec]        ;4461
00073a  e640              B        |L32.958|
                  |L32.1852|
00073c  9831              LDR      r0,[sp,#0xc4]         ;4464
00073e  f8d00178          LDR      r0,[r0,#0x178]        ;4464
000742  9017              STR      r0,[sp,#0x5c]         ;4464
000744  e086              B        |L32.2132|
                  |L32.1862|
000746  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4464
00074a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4464
00074e  f7fffffe          BL       __aeabi_dadd
000752  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4464
000756  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4464
00075a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4464
00075e  f7fffffe          BL       __aeabi_dadd
000762  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4464
000766  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4464
00076a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4464
00076e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4464
000772  e9cd0100          STRD     r0,r1,[sp,#0]         ;4464
000776  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4464
00077a  981b              LDR      r0,[sp,#0x6c]         ;4464
00077c  f7fffffe          BL       cycle_traverse
000780  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4464
000784  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4464
000788  f7fffffe          BL       __aeabi_cdcmpeq
00078c  d00c              BEQ      |L32.1960|
00078e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4464
000792  e9cd0102          STRD     r0,r1,[sp,#8]         ;4464
000796  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4464
00079a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4464
00079e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4464
0007a2  981b              LDR      r0,[sp,#0x6c]         ;4464
0007a4  f7fffffe          BL       cycle_traverse
                  |L32.1960|
0007a8  9832              LDR      r0,[sp,#0xc8]         ;4464
0007aa  f5004030          ADD      r0,r0,#0xb000         ;4464
0007ae  f8d011a0          LDR      r1,[r0,#0x1a0]        ;4464
0007b2  9832              LDR      r0,[sp,#0xc8]         ;4464
0007b4  f5004030          ADD      r0,r0,#0xb000         ;4464
0007b8  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4464
0007bc  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4464
0007c0  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4464
0007c4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4464
0007c8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4464
0007cc  e9cd0102          STRD     r0,r1,[sp,#8]         ;4464
0007d0  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4464
0007d4  e9cd0100          STRD     r0,r1,[sp,#0]         ;4464
0007d8  2002              MOVS     r0,#2                 ;4464
0007da  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4464
0007de  f7fffffe          BL       convert_cycle_g84
0007e2  9015              STR      r0,[sp,#0x54]         ;4464
0007e4  b318              CBZ      r0,|L32.2094|
0007e6  4814              LDR      r0,|L32.2104|
0007e8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4464
0007ec  2831              CMP      r0,#0x31              ;4464
0007ee  da27              BGE      |L32.2112|
0007f0  4811              LDR      r0,|L32.2104|
0007f2  f8d0214c          LDR      r2,[r0,#0x14c]        ;4464
0007f6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4464
0007fa  1c40              ADDS     r0,r0,#1              ;4464
0007fc  490e              LDR      r1,|L32.2104|
0007fe  eb020282          ADD      r2,r2,r2,LSL #2       ;4464
000802  f8c1014c          STR      r0,[r1,#0x14c]        ;4464
000806  480a              LDR      r0,|L32.2096|
000808  eb001002          ADD      r0,r0,r2,LSL #4       ;4464
00080c  490b              LDR      r1,|L32.2108|
00080e  9014              STR      r0,[sp,#0x50]         ;4464
000810  f7fffffe          BL       strcpy
000814  f04f0100          MOV      r1,#0                 ;4464
000818  4807              LDR      r0,|L32.2104|
00081a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4464
00081e  eb000080          ADD      r0,r0,r0,LSL #2       ;4464
000822  4a03              LDR      r2,|L32.2096|
000824  eb021000          ADD      r0,r2,r0,LSL #4       ;4464
000828  7001              STRB     r1,[r0,#0]            ;4464
00082a  9815              LDR      r0,[sp,#0x54]         ;4464
                  |L32.2092|
00082c  e41c              B        |L32.104|
                  |L32.2094|
00082e  e009              B        |L32.2116|
                  |L32.2096|
                          DCD      _setup+0xb1ac
                  |L32.2100|
                          DCD      0xbff00000
                  |L32.2104|
                          DCD      _setup+0xc000
                  |L32.2108|
                          DCD      |symbol_number.459|
                  |L32.2112|
000840  9815              LDR      r0,[sp,#0x54]         ;4464
000842  e411              B        |L32.104|
                  |L32.2116|
000844  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4464
000848  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4464
00084c  9817              LDR      r0,[sp,#0x5c]         ;4464
00084e  f1a00001          SUB      r0,r0,#1              ;4464
000852  9017              STR      r0,[sp,#0x5c]         ;4464
                  |L32.2132|
000854  9817              LDR      r0,[sp,#0x5c]         ;4464
000856  2800              CMP      r0,#0                 ;4464
000858  f73faf75          BGT      |L32.1862|
00085c  e5af              B        |L32.958|
                  |L32.2142|
00085e  9831              LDR      r0,[sp,#0xc4]         ;4468
000860  f8d00178          LDR      r0,[r0,#0x178]        ;4468
000864  9017              STR      r0,[sp,#0x5c]         ;4468
000866  e072              B        |L32.2382|
                  |L32.2152|
000868  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4468
00086c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4468
000870  f7fffffe          BL       __aeabi_dadd
000874  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4468
000878  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4468
00087c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4468
000880  f7fffffe          BL       __aeabi_dadd
000884  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4468
000888  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4468
00088c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4468
000890  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4468
000894  e9cd0100          STRD     r0,r1,[sp,#0]         ;4468
000898  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4468
00089c  981b              LDR      r0,[sp,#0x6c]         ;4468
00089e  f7fffffe          BL       cycle_traverse
0008a2  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4468
0008a6  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4468
0008aa  f7fffffe          BL       __aeabi_cdcmpeq
0008ae  d00c              BEQ      |L32.2250|
0008b0  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4468
0008b4  e9cd0102          STRD     r0,r1,[sp,#8]         ;4468
0008b8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4468
0008bc  e9cd0100          STRD     r0,r1,[sp,#0]         ;4468
0008c0  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4468
0008c4  981b              LDR      r0,[sp,#0x6c]         ;4468
0008c6  f7fffffe          BL       cycle_traverse
                  |L32.2250|
0008ca  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4468
0008ce  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4468
0008d2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4468
0008d6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4468
0008da  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4468
0008de  e9cd0100          STRD     r0,r1,[sp,#0]         ;4468
0008e2  2002              MOVS     r0,#2                 ;4468
0008e4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4468
0008e8  f7fffffe          BL       convert_cycle_g85
0008ec  9015              STR      r0,[sp,#0x54]         ;4468
0008ee  b330              CBZ      r0,|L32.2366|
0008f0  48ff              LDR      r0,|L32.3312|
0008f2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4468
0008f6  2831              CMP      r0,#0x31              ;4468
0008f8  da1f              BGE      |L32.2362|
0008fa  48fd              LDR      r0,|L32.3312|
0008fc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4468
000900  f8d0014c          LDR      r0,[r0,#0x14c]        ;4468
000904  1c40              ADDS     r0,r0,#1              ;4468
000906  49fa              LDR      r1,|L32.3312|
000908  f8c1014c          STR      r0,[r1,#0x14c]        ;4468
00090c  eb020082          ADD      r0,r2,r2,LSL #2       ;4468
000910  f6a16154          SUB      r1,r1,#0xe54          ;4468
000914  eb011000          ADD      r0,r1,r0,LSL #4       ;4468
000918  49f6              LDR      r1,|L32.3316|
00091a  9014              STR      r0,[sp,#0x50]         ;4468
00091c  f7fffffe          BL       strcpy
000920  f04f0100          MOV      r1,#0                 ;4468
000924  48f2              LDR      r0,|L32.3312|
000926  f8d0014c          LDR      r0,[r0,#0x14c]        ;4468
00092a  eb000080          ADD      r0,r0,r0,LSL #2       ;4468
00092e  4af2              LDR      r2,|L32.3320|
000930  eb021000          ADD      r0,r2,r0,LSL #4       ;4468
000934  7001              STRB     r1,[r0,#0]            ;4468
000936  9815              LDR      r0,[sp,#0x54]         ;4468
                  |L32.2360|
000938  e443              B        |L32.450|
                  |L32.2362|
00093a  9815              LDR      r0,[sp,#0x54]         ;4468
00093c  e441              B        |L32.450|
                  |L32.2366|
00093e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4468
000942  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4468
000946  9817              LDR      r0,[sp,#0x5c]         ;4468
000948  f1a00001          SUB      r0,r0,#1              ;4468
00094c  9017              STR      r0,[sp,#0x5c]         ;4468
                  |L32.2382|
00094e  9817              LDR      r0,[sp,#0x5c]         ;4468
000950  2800              CMP      r0,#0                 ;4468
000952  dc89              BGT      |L32.2152|
000954  e533              B        |L32.958|
                  |L32.2390|
000956  9832              LDR      r0,[sp,#0xc8]         ;4471
000958  f8d00628          LDR      r0,[r0,#0x628]        ;4471
00095c  f5b07f57          CMP      r0,#0x35c             ;4471
000960  d02f              BEQ      |L32.2498|
000962  9931              LDR      r1,[sp,#0xc4]         ;4471
000964  f50171d8          ADD      r1,r1,#0x1b0          ;4471
000968  c903              LDM      r1,{r0,r1}            ;4471
00096a  2200              MOVS     r2,#0                 ;4471
00096c  4be3              LDR      r3,|L32.3324|
00096e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4471
000972  f7fffffe          BL       __aeabi_cdcmpeq
000976  d124              BNE      |L32.2498|
000978  f04f0100          MOV      r1,#0                 ;4471
00097c  48dc              LDR      r0,|L32.3312|
00097e  f8c0114c          STR      r1,[r0,#0x14c]        ;4471
000982  f8d0214c          LDR      r2,[r0,#0x14c]        ;4471
000986  f8d0014c          LDR      r0,[r0,#0x14c]        ;4471
00098a  f1000001          ADD      r0,r0,#1              ;4471
00098e  49d8              LDR      r1,|L32.3312|
000990  f8c1014c          STR      r0,[r1,#0x14c]        ;4471
000994  eb020082          ADD      r0,r2,r2,LSL #2       ;4471
000998  49d7              LDR      r1,|L32.3320|
00099a  eb011000          ADD      r0,r1,r0,LSL #4       ;4471
00099e  49d5              LDR      r1,|L32.3316|
0009a0  9014              STR      r0,[sp,#0x50]         ;4471
0009a2  f7fffffe          BL       strcpy
0009a6  f04f0100          MOV      r1,#0                 ;4471
0009aa  48d1              LDR      r0,|L32.3312|
0009ac  f8d0014c          LDR      r0,[r0,#0x14c]        ;4471
0009b0  eb000080          ADD      r0,r0,r0,LSL #2       ;4471
0009b4  4ad0              LDR      r2,|L32.3320|
0009b6  eb021000          ADD      r0,r2,r0,LSL #4       ;4471
0009ba  7001              STRB     r1,[r0,#0]            ;4471
0009bc  f04f004a          MOV      r0,#0x4a              ;4471
                  |L32.2496|
0009c0  e42b              B        |L32.538|
                  |L32.2498|
0009c2  9931              LDR      r1,[sp,#0xc4]         ;4473
0009c4  f50171d8          ADD      r1,r1,#0x1b0          ;4473
0009c8  c903              LDM      r1,{r0,r1}            ;4473
0009ca  2200              MOVS     r2,#0                 ;4473
0009cc  4bcb              LDR      r3,|L32.3324|
0009ce  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4473
0009d2  f7fffffe          BL       __aeabi_cdcmpeq
0009d6  d104              BNE      |L32.2530|
0009d8  9932              LDR      r1,[sp,#0xc8]         ;4474
0009da  f5017178          ADD      r1,r1,#0x3e0          ;4474
0009de  c903              LDM      r1,{r0,r1}            ;4474
0009e0  e003              B        |L32.2538|
                  |L32.2530|
0009e2  9931              LDR      r1,[sp,#0xc4]         ;4474
0009e4  f50171d8          ADD      r1,r1,#0x1b0          ;4474
0009e8  c903              LDM      r1,{r0,r1}            ;4474
                  |L32.2538|
0009ea  9a31              LDR      r2,[sp,#0xc4]         ;4474
0009ec  f50272d8          ADD      r2,r2,#0x1b0          ;4474
0009f0  c203              STM      r2!,{r0,r1}           ;4474
0009f2  9831              LDR      r0,[sp,#0xc4]         ;4475
0009f4  f8d00178          LDR      r0,[r0,#0x178]        ;4475
0009f8  9017              STR      r0,[sp,#0x5c]         ;4475
0009fa  e07f              B        |L32.2812|
                  |L32.2556|
0009fc  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4475
000a00  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4475
000a04  f7fffffe          BL       __aeabi_dadd
000a08  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4475
000a0c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4475
000a10  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4475
000a14  f7fffffe          BL       __aeabi_dadd
000a18  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4475
000a1c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4475
000a20  e9cd0102          STRD     r0,r1,[sp,#8]         ;4475
000a24  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4475
000a28  e9cd0100          STRD     r0,r1,[sp,#0]         ;4475
000a2c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4475
000a30  981b              LDR      r0,[sp,#0x6c]         ;4475
000a32  f7fffffe          BL       cycle_traverse
000a36  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4475
000a3a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4475
000a3e  f7fffffe          BL       __aeabi_cdcmpeq
000a42  d00c              BEQ      |L32.2654|
000a44  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4475
000a48  e9cd0102          STRD     r0,r1,[sp,#8]         ;4475
000a4c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4475
000a50  e9cd0100          STRD     r0,r1,[sp,#0]         ;4475
000a54  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4475
000a58  981b              LDR      r0,[sp,#0x6c]         ;4475
000a5a  f7fffffe          BL       cycle_traverse
                  |L32.2654|
000a5e  9832              LDR      r0,[sp,#0xc8]         ;4475
000a60  f5004030          ADD      r0,r0,#0xb000         ;4475
000a64  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4475
000a68  9008              STR      r0,[sp,#0x20]         ;4475
000a6a  9831              LDR      r0,[sp,#0xc4]         ;4475
000a6c  f50070d8          ADD      r0,r0,#0x1b0          ;4475
000a70  c803              LDM      r0,{r0,r1}            ;4475
000a72  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4475
000a76  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4475
000a7a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4475
000a7e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4475
000a82  e9cd0102          STRD     r0,r1,[sp,#8]         ;4475
000a86  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4475
000a8a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4475
000a8e  2002              MOVS     r0,#2                 ;4475
000a90  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4475
000a94  f7fffffe          BL       convert_cycle_g86
000a98  9015              STR      r0,[sp,#0x54]         ;4475
000a9a  b338              CBZ      r0,|L32.2796|
000a9c  4894              LDR      r0,|L32.3312|
000a9e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4475
000aa2  2831              CMP      r0,#0x31              ;4475
000aa4  da20              BGE      |L32.2792|
000aa6  4892              LDR      r0,|L32.3312|
000aa8  f8d0214c          LDR      r2,[r0,#0x14c]        ;4475
000aac  f8d0014c          LDR      r0,[r0,#0x14c]        ;4475
000ab0  1c40              ADDS     r0,r0,#1              ;4475
000ab2  498f              LDR      r1,|L32.3312|
000ab4  e000              B        |L32.2744|
                  |L32.2742|
000ab6  e28a              B        |L32.4046|
                  |L32.2744|
000ab8  f8c1014c          STR      r0,[r1,#0x14c]        ;4475
000abc  eb020082          ADD      r0,r2,r2,LSL #2       ;4475
000ac0  498d              LDR      r1,|L32.3320|
000ac2  eb011000          ADD      r0,r1,r0,LSL #4       ;4475
000ac6  498b              LDR      r1,|L32.3316|
000ac8  9014              STR      r0,[sp,#0x50]         ;4475
000aca  f7fffffe          BL       strcpy
000ace  f04f0100          MOV      r1,#0                 ;4475
000ad2  4887              LDR      r0,|L32.3312|
000ad4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4475
000ad8  eb000080          ADD      r0,r0,r0,LSL #2       ;4475
000adc  4a86              LDR      r2,|L32.3320|
000ade  eb021000          ADD      r0,r2,r0,LSL #4       ;4475
000ae2  7001              STRB     r1,[r0,#0]            ;4475
000ae4  9815              LDR      r0,[sp,#0x54]         ;4475
                  |L32.2790|
000ae6  e45c              B        |L32.930|
                  |L32.2792|
000ae8  9815              LDR      r0,[sp,#0x54]         ;4475
000aea  e45a              B        |L32.930|
                  |L32.2796|
000aec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4475
000af0  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4475
000af4  9817              LDR      r0,[sp,#0x5c]         ;4475
000af6  f1a00001          SUB      r0,r0,#1              ;4475
000afa  9017              STR      r0,[sp,#0x5c]         ;4475
                  |L32.2812|
000afc  9817              LDR      r0,[sp,#0x5c]         ;4475
000afe  2800              CMP      r0,#0                 ;4475
000b00  f73faf7c          BGT      |L32.2556|
000b04  9831              LDR      r0,[sp,#0xc4]         ;4477
000b06  f50070d8          ADD      r0,r0,#0x1b0          ;4477
000b0a  c806              LDM      r0!,{r1,r2}           ;4477
000b0c  9832              LDR      r0,[sp,#0xc8]         ;4477
000b0e  f5007078          ADD      r0,r0,#0x3e0          ;4477
000b12  c006              STM      r0!,{r1,r2}           ;4477
                  |L32.2836|
000b14  e360              B        |L32.4568|
                  |L32.2838|
000b16  9832              LDR      r0,[sp,#0xc8]         ;4480
000b18  f8d01628          LDR      r1,[r0,#0x628]        ;4480
000b1c  f5a17040          SUB      r0,r1,#0x300          ;4480
000b20  3866              SUBS     r0,r0,#0x66           ;4480
000b22  d07d              BEQ      |L32.3104|
000b24  9831              LDR      r0,[sp,#0xc4]         ;4482
000b26  f8d0014c          LDR      r0,[r0,#0x14c]        ;4482
000b2a  bb30              CBNZ     r0,|L32.2938|
000b2c  f04f0100          MOV      r1,#0                 ;4482
000b30  486f              LDR      r0,|L32.3312|
000b32  f8c0114c          STR      r1,[r0,#0x14c]        ;4482
000b36  f8d0214c          LDR      r2,[r0,#0x14c]        ;4482
000b3a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4482
000b3e  f1000001          ADD      r0,r0,#1              ;4482
000b42  496b              LDR      r1,|L32.3312|
000b44  f8c1014c          STR      r0,[r1,#0x14c]        ;4482
000b48  eb020082          ADD      r0,r2,r2,LSL #2       ;4482
000b4c  496a              LDR      r1,|L32.3320|
000b4e  eb011000          ADD      r0,r1,r0,LSL #4       ;4482
000b52  4968              LDR      r1,|L32.3316|
000b54  9014              STR      r0,[sp,#0x50]         ;4482
000b56  f7fffffe          BL       strcpy
000b5a  f04f0100          MOV      r1,#0                 ;4482
000b5e  4864              LDR      r0,|L32.3312|
000b60  f8d0014c          LDR      r0,[r0,#0x14c]        ;4482
000b64  eb000080          ADD      r0,r0,r0,LSL #2       ;4482
000b68  4a63              LDR      r2,|L32.3320|
000b6a  eb021000          ADD      r0,r2,r0,LSL #4       ;4482
000b6e  7001              STRB     r1,[r0,#0]            ;4482
000b70  f04f0057          MOV      r0,#0x57              ;4482
000b74  e415              B        |L32.930|
                  |L32.2934|
000b76  e301              B        |L32.4476|
                  |L32.2936|
000b78  e14e              B        |L32.3608|
                  |L32.2938|
000b7a  9831              LDR      r0,[sp,#0xc4]         ;4483
000b7c  f8d00158          LDR      r0,[r0,#0x158]        ;4483
000b80  bb20              CBNZ     r0,|L32.3020|
000b82  f04f0100          MOV      r1,#0                 ;4483
000b86  485a              LDR      r0,|L32.3312|
000b88  f8c0114c          STR      r1,[r0,#0x14c]        ;4483
000b8c  f8d0214c          LDR      r2,[r0,#0x14c]        ;4483
000b90  f8d0014c          LDR      r0,[r0,#0x14c]        ;4483
000b94  f1000001          ADD      r0,r0,#1              ;4483
000b98  4955              LDR      r1,|L32.3312|
000b9a  f8c1014c          STR      r0,[r1,#0x14c]        ;4483
000b9e  eb020082          ADD      r0,r2,r2,LSL #2       ;4483
000ba2  4955              LDR      r1,|L32.3320|
000ba4  eb011000          ADD      r0,r1,r0,LSL #4       ;4483
000ba8  4952              LDR      r1,|L32.3316|
000baa  9014              STR      r0,[sp,#0x50]         ;4483
000bac  f7fffffe          BL       strcpy
000bb0  f04f0100          MOV      r1,#0                 ;4483
000bb4  484e              LDR      r0,|L32.3312|
000bb6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4483
000bba  eb000080          ADD      r0,r0,r0,LSL #2       ;4483
000bbe  4a4e              LDR      r2,|L32.3320|
000bc0  eb021000          ADD      r0,r2,r0,LSL #4       ;4483
000bc4  7001              STRB     r1,[r0,#0]            ;4483
000bc6  f04f005a          MOV      r0,#0x5a              ;4483
000bca  e437              B        |L32.1084|
                  |L32.3020|
000bcc  9831              LDR      r0,[sp,#0xc4]         ;4484
000bce  f8d00168          LDR      r0,[r0,#0x168]        ;4484
000bd2  bb20              CBNZ     r0,|L32.3102|
000bd4  f04f0100          MOV      r1,#0                 ;4484
000bd8  4845              LDR      r0,|L32.3312|
000bda  f8c0114c          STR      r1,[r0,#0x14c]        ;4484
000bde  f8d0214c          LDR      r2,[r0,#0x14c]        ;4484
000be2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4484
000be6  f1000001          ADD      r0,r0,#1              ;4484
000bea  4941              LDR      r1,|L32.3312|
000bec  f8c1014c          STR      r0,[r1,#0x14c]        ;4484
000bf0  eb020082          ADD      r0,r2,r2,LSL #2       ;4484
000bf4  4940              LDR      r1,|L32.3320|
000bf6  eb011000          ADD      r0,r1,r0,LSL #4       ;4484
000bfa  493e              LDR      r1,|L32.3316|
000bfc  9014              STR      r0,[sp,#0x50]         ;4484
000bfe  f7fffffe          BL       strcpy
000c02  f04f0100          MOV      r1,#0                 ;4484
000c06  483a              LDR      r0,|L32.3312|
000c08  f8d0014c          LDR      r0,[r0,#0x14c]        ;4484
000c0c  eb000080          ADD      r0,r0,r0,LSL #2       ;4484
000c10  4a39              LDR      r2,|L32.3320|
000c12  eb021000          ADD      r0,r2,r0,LSL #4       ;4484
000c16  7001              STRB     r1,[r0,#0]            ;4484
000c18  f04f005d          MOV      r0,#0x5d              ;4484
000c1c  e40e              B        |L32.1084|
                  |L32.3102|
000c1e  e7ff              B        |L32.3104|
                  |L32.3104|
000c20  9831              LDR      r0,[sp,#0xc4]         ;4486
000c22  f8d0014c          LDR      r0,[r0,#0x14c]        ;4486
000c26  2801              CMP      r0,#1                 ;4486
000c28  d104              BNE      |L32.3124|
000c2a  9931              LDR      r1,[sp,#0xc4]         ;4486
000c2c  f50171a8          ADD      r1,r1,#0x150          ;4486
000c30  c903              LDM      r1,{r0,r1}            ;4486
000c32  e003              B        |L32.3132|
                  |L32.3124|
000c34  9932              LDR      r1,[sp,#0xc8]         ;4486
000c36  f5017170          ADD      r1,r1,#0x3c0          ;4486
000c3a  c903              LDM      r1,{r0,r1}            ;4486
                  |L32.3132|
000c3c  e9cd0122          STRD     r0,r1,[sp,#0x88]      ;4486
000c40  9831              LDR      r0,[sp,#0xc4]         ;4487
000c42  f8d00158          LDR      r0,[r0,#0x158]        ;4487
000c46  2801              CMP      r0,#1                 ;4487
000c48  d104              BNE      |L32.3156|
000c4a  9931              LDR      r1,[sp,#0xc4]         ;4487
000c4c  f50171b0          ADD      r1,r1,#0x160          ;4487
000c50  c903              LDM      r1,{r0,r1}            ;4487
000c52  e003              B        |L32.3164|
                  |L32.3156|
000c54  9932              LDR      r1,[sp,#0xc8]         ;4487
000c56  f5017172          ADD      r1,r1,#0x3c8          ;4487
000c5a  c903              LDM      r1,{r0,r1}            ;4487
                  |L32.3164|
000c5c  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;4487
000c60  9831              LDR      r0,[sp,#0xc4]         ;4488
000c62  f8d00168          LDR      r0,[r0,#0x168]        ;4488
000c66  2801              CMP      r0,#1                 ;4488
000c68  d104              BNE      |L32.3188|
000c6a  9931              LDR      r1,[sp,#0xc4]         ;4488
000c6c  f50171b8          ADD      r1,r1,#0x170          ;4488
000c70  c903              LDM      r1,{r0,r1}            ;4488
000c72  e003              B        |L32.3196|
                  |L32.3188|
000c74  9932              LDR      r1,[sp,#0xc8]         ;4488
000c76  f5017174          ADD      r1,r1,#0x3d0          ;4488
000c7a  c903              LDM      r1,{r0,r1}            ;4488
                  |L32.3196|
000c7c  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;4488
000c80  9a32              LDR      r2,[sp,#0xc8]         ;4489
000c82  e9dd1022          LDRD     r1,r0,[sp,#0x88]      ;4489
000c86  f8c213c0          STR      r1,[r2,#0x3c0]        ;4489
000c8a  f8c203c4          STR      r0,[r2,#0x3c4]        ;4489
000c8e  9a32              LDR      r2,[sp,#0xc8]         ;4490
000c90  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;4490
000c94  f5027272          ADD      r2,r2,#0x3c8          ;4490
000c98  c203              STM      r2!,{r0,r1}           ;4490
000c9a  9a32              LDR      r2,[sp,#0xc8]         ;4491
000c9c  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;4491
000ca0  f5027274          ADD      r2,r2,#0x3d0          ;4491
000ca4  c203              STM      r2!,{r0,r1}           ;4491
000ca6  9832              LDR      r0,[sp,#0xc8]         ;4492
000ca8  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4492
000cac  2801              CMP      r0,#1                 ;4492
000cae  d107              BNE      |L32.3264|
000cb0  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;4494
000cb4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4494
000cb8  f7fffffe          BL       __aeabi_dadd
000cbc  e9cd0122          STRD     r0,r1,[sp,#0x88]      ;4494
                  |L32.3264|
000cc0  9831              LDR      r0,[sp,#0xc4]         ;4496
000cc2  f8d00178          LDR      r0,[r0,#0x178]        ;4496
000cc6  9017              STR      r0,[sp,#0x5c]         ;4496
000cc8  e0a1              B        |L32.3598|
                  |L32.3274|
000cca  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4496
000cce  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4496
000cd2  f7fffffe          BL       __aeabi_dadd
000cd6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4496
000cda  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4496
000cde  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4496
000ce2  f7fffffe          BL       __aeabi_dadd
000ce6  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4496
000cea  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4496
000cee  e007              B        |L32.3328|
                  |L32.3312|
                          DCD      _setup+0xc000
                  |L32.3316|
                          DCD      |symbol_number.459|
                  |L32.3320|
                          DCD      _setup+0xb1ac
                  |L32.3324|
                          DCD      0xbff00000
                  |L32.3328|
000d00  e9cd0102          STRD     r0,r1,[sp,#8]         ;4496
000d04  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4496
000d08  e9cd0100          STRD     r0,r1,[sp,#0]         ;4496
000d0c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4496
000d10  981b              LDR      r0,[sp,#0x6c]         ;4496
000d12  f7fffffe          BL       cycle_traverse
000d16  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4496
000d1a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4496
000d1e  f7fffffe          BL       __aeabi_cdcmpeq
000d22  d00c              BEQ      |L32.3390|
000d24  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4496
000d28  e9cd0102          STRD     r0,r1,[sp,#8]         ;4496
000d2c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4496
000d30  e9cd0100          STRD     r0,r1,[sp,#0]         ;4496
000d34  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4496
000d38  981b              LDR      r0,[sp,#0x6c]         ;4496
000d3a  f7fffffe          BL       cycle_traverse
                  |L32.3390|
000d3e  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;4496
000d42  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4496
000d46  f7fffffe          BL       __aeabi_dadd
000d4a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4496
000d4e  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;4496
000d52  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4496
000d56  f7fffffe          BL       __aeabi_dadd
000d5a  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;4496
000d5e  9832              LDR      r0,[sp,#0xc8]         ;4496
000d60  f5004030          ADD      r0,r0,#0xb000         ;4496
000d64  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4496
000d68  900e              STR      r0,[sp,#0x38]         ;4496
000d6a  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4496
000d6e  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;4496
000d72  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;4496
000d76  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;4496
000d7a  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4496
000d7e  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4496
000d82  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4496
000d86  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4496
000d8a  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;4496
000d8e  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4496
000d92  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4496
000d96  e9cd0102          STRD     r0,r1,[sp,#8]         ;4496
000d9a  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;4496
000d9e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4496
000da2  2002              MOVS     r0,#2                 ;4496
000da4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4496
000da8  f7fffffe          BL       convert_cycle_g87
000dac  9015              STR      r0,[sp,#0x54]         ;4496
000dae  b330              CBZ      r0,|L32.3582|
000db0  48ff              LDR      r0,|L32.4528|
000db2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4496
000db6  2831              CMP      r0,#0x31              ;4496
000db8  da1f              BGE      |L32.3578|
000dba  48fd              LDR      r0,|L32.4528|
000dbc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4496
000dc0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4496
000dc4  1c40              ADDS     r0,r0,#1              ;4496
000dc6  49fa              LDR      r1,|L32.4528|
000dc8  f8c1014c          STR      r0,[r1,#0x14c]        ;4496
000dcc  eb020082          ADD      r0,r2,r2,LSL #2       ;4496
000dd0  f6a16154          SUB      r1,r1,#0xe54          ;4496
000dd4  eb011000          ADD      r0,r1,r0,LSL #4       ;4496
000dd8  49f6              LDR      r1,|L32.4532|
000dda  9014              STR      r0,[sp,#0x50]         ;4496
000ddc  f7fffffe          BL       strcpy
000de0  f04f0100          MOV      r1,#0                 ;4496
000de4  48f2              LDR      r0,|L32.4528|
000de6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4496
000dea  eb000080          ADD      r0,r0,r0,LSL #2       ;4496
000dee  4af2              LDR      r2,|L32.4536|
000df0  eb021000          ADD      r0,r2,r0,LSL #4       ;4496
000df4  7001              STRB     r1,[r0,#0]            ;4496
000df6  9815              LDR      r0,[sp,#0x54]         ;4496
000df8  e487              B        |L32.1802|
                  |L32.3578|
000dfa  9815              LDR      r0,[sp,#0x54]         ;4496
000dfc  e485              B        |L32.1802|
                  |L32.3582|
000dfe  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4496
000e02  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4496
000e06  9817              LDR      r0,[sp,#0x5c]         ;4496
000e08  f1a00001          SUB      r0,r0,#1              ;4496
000e0c  9017              STR      r0,[sp,#0x5c]         ;4496
                  |L32.3598|
000e0e  9817              LDR      r0,[sp,#0x5c]         ;4496
000e10  2800              CMP      r0,#0                 ;4496
000e12  f73faf5a          BGT      |L32.3274|
000e16  e1df              B        |L32.4568|
                  |L32.3608|
000e18  9832              LDR      r0,[sp,#0xc8]         ;4500
000e1a  f8d00628          LDR      r0,[r0,#0x628]        ;4500
000e1e  f5b07f5c          CMP      r0,#0x370             ;4500
000e22  d02f              BEQ      |L32.3716|
000e24  9931              LDR      r1,[sp,#0xc4]         ;4500
000e26  f50171d8          ADD      r1,r1,#0x1b0          ;4500
000e2a  c903              LDM      r1,{r0,r1}            ;4500
000e2c  2200              MOVS     r2,#0                 ;4500
000e2e  4be3              LDR      r3,|L32.4540|
000e30  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4500
000e34  f7fffffe          BL       __aeabi_cdcmpeq
000e38  d124              BNE      |L32.3716|
000e3a  f04f0100          MOV      r1,#0                 ;4500
000e3e  48dc              LDR      r0,|L32.4528|
000e40  f8c0114c          STR      r1,[r0,#0x14c]        ;4500
000e44  f8d0214c          LDR      r2,[r0,#0x14c]        ;4500
000e48  f8d0014c          LDR      r0,[r0,#0x14c]        ;4500
000e4c  f1000001          ADD      r0,r0,#1              ;4500
000e50  49d7              LDR      r1,|L32.4528|
000e52  f8c1014c          STR      r0,[r1,#0x14c]        ;4500
000e56  eb020082          ADD      r0,r2,r2,LSL #2       ;4500
000e5a  49d7              LDR      r1,|L32.4536|
000e5c  eb011000          ADD      r0,r1,r0,LSL #4       ;4500
000e60  49d4              LDR      r1,|L32.4532|
000e62  9014              STR      r0,[sp,#0x50]         ;4500
000e64  f7fffffe          BL       strcpy
000e68  f04f0100          MOV      r1,#0                 ;4500
000e6c  48d0              LDR      r0,|L32.4528|
000e6e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4500
000e72  eb000080          ADD      r0,r0,r0,LSL #2       ;4500
000e76  4ad0              LDR      r2,|L32.4536|
000e78  eb021000          ADD      r0,r2,r0,LSL #4       ;4500
000e7c  7001              STRB     r1,[r0,#0]            ;4500
000e7e  f04f004b          MOV      r0,#0x4b              ;4500
000e82  e442              B        |L32.1802|
                  |L32.3716|
000e84  9931              LDR      r1,[sp,#0xc4]         ;4502
000e86  f50171d8          ADD      r1,r1,#0x1b0          ;4502
000e8a  c903              LDM      r1,{r0,r1}            ;4502
000e8c  2200              MOVS     r2,#0                 ;4502
000e8e  4bcb              LDR      r3,|L32.4540|
000e90  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4502
000e94  f7fffffe          BL       __aeabi_cdcmpeq
000e98  d104              BNE      |L32.3748|
000e9a  9932              LDR      r1,[sp,#0xc8]         ;4503
000e9c  f5017178          ADD      r1,r1,#0x3e0          ;4503
000ea0  c903              LDM      r1,{r0,r1}            ;4503
000ea2  e003              B        |L32.3756|
                  |L32.3748|
000ea4  9931              LDR      r1,[sp,#0xc4]         ;4503
000ea6  f50171d8          ADD      r1,r1,#0x1b0          ;4503
000eaa  c903              LDM      r1,{r0,r1}            ;4503
                  |L32.3756|
000eac  9a31              LDR      r2,[sp,#0xc4]         ;4503
000eae  f50272d8          ADD      r2,r2,#0x1b0          ;4503
000eb2  c203              STM      r2!,{r0,r1}           ;4503
000eb4  9831              LDR      r0,[sp,#0xc4]         ;4504
000eb6  f8d00178          LDR      r0,[r0,#0x178]        ;4504
000eba  9017              STR      r0,[sp,#0x5c]         ;4504
000ebc  e079              B        |L32.4018|
                  |L32.3774|
000ebe  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4504
000ec2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4504
000ec6  f7fffffe          BL       __aeabi_dadd
000eca  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4504
000ece  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4504
000ed2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4504
000ed6  f7fffffe          BL       __aeabi_dadd
000eda  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4504
000ede  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4504
000ee2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4504
000ee6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4504
000eea  e9cd0100          STRD     r0,r1,[sp,#0]         ;4504
000eee  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4504
000ef2  981b              LDR      r0,[sp,#0x6c]         ;4504
000ef4  f7fffffe          BL       cycle_traverse
000ef8  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4504
000efc  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4504
000f00  f7fffffe          BL       __aeabi_cdcmpeq
000f04  d00c              BEQ      |L32.3872|
000f06  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4504
000f0a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4504
000f0e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4504
000f12  e9cd0100          STRD     r0,r1,[sp,#0]         ;4504
000f16  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4504
000f1a  981b              LDR      r0,[sp,#0x6c]         ;4504
000f1c  f7fffffe          BL       cycle_traverse
                  |L32.3872|
000f20  9832              LDR      r0,[sp,#0xc8]         ;4504
000f22  f5004030          ADD      r0,r0,#0xb000         ;4504
000f26  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4504
000f2a  9006              STR      r0,[sp,#0x18]         ;4504
000f2c  9831              LDR      r0,[sp,#0xc4]         ;4504
000f2e  f50070d8          ADD      r0,r0,#0x1b0          ;4504
000f32  c803              LDM      r0,{r0,r1}            ;4504
000f34  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4504
000f38  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4504
000f3c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4504
000f40  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4504
000f44  e9cd0100          STRD     r0,r1,[sp,#0]         ;4504
000f48  2002              MOVS     r0,#2                 ;4504
000f4a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4504
000f4e  f7fffffe          BL       convert_cycle_g88
000f52  9015              STR      r0,[sp,#0x54]         ;4504
000f54  b328              CBZ      r0,|L32.4002|
000f56  4896              LDR      r0,|L32.4528|
000f58  f8d0014c          LDR      r0,[r0,#0x14c]        ;4504
000f5c  2831              CMP      r0,#0x31              ;4504
000f5e  da1e              BGE      |L32.3998|
000f60  4893              LDR      r0,|L32.4528|
000f62  f8d0214c          LDR      r2,[r0,#0x14c]        ;4504
000f66  f8d0014c          LDR      r0,[r0,#0x14c]        ;4504
000f6a  1c40              ADDS     r0,r0,#1              ;4504
000f6c  4990              LDR      r1,|L32.4528|
000f6e  f8c1014c          STR      r0,[r1,#0x14c]        ;4504
000f72  eb020082          ADD      r0,r2,r2,LSL #2       ;4504
000f76  4990              LDR      r1,|L32.4536|
000f78  eb011000          ADD      r0,r1,r0,LSL #4       ;4504
000f7c  498d              LDR      r1,|L32.4532|
000f7e  9014              STR      r0,[sp,#0x50]         ;4504
000f80  f7fffffe          BL       strcpy
000f84  f04f0100          MOV      r1,#0                 ;4504
000f88  4889              LDR      r0,|L32.4528|
000f8a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4504
000f8e  eb000080          ADD      r0,r0,r0,LSL #2       ;4504
000f92  4a89              LDR      r2,|L32.4536|
000f94  eb021000          ADD      r0,r2,r0,LSL #4       ;4504
000f98  7001              STRB     r1,[r0,#0]            ;4504
000f9a  9815              LDR      r0,[sp,#0x54]         ;4504
000f9c  e446              B        |L32.2092|
                  |L32.3998|
000f9e  9815              LDR      r0,[sp,#0x54]         ;4504
000fa0  e444              B        |L32.2092|
                  |L32.4002|
000fa2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4504
000fa6  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4504
000faa  9817              LDR      r0,[sp,#0x5c]         ;4504
000fac  f1a00001          SUB      r0,r0,#1              ;4504
000fb0  9017              STR      r0,[sp,#0x5c]         ;4504
                  |L32.4018|
000fb2  9817              LDR      r0,[sp,#0x5c]         ;4504
000fb4  2800              CMP      r0,#0                 ;4504
000fb6  dc82              BGT      |L32.3774|
000fb8  9831              LDR      r0,[sp,#0xc4]         ;4506
000fba  f8d021b0          LDR      r2,[r0,#0x1b0]        ;4506
000fbe  f8d011b4          LDR      r1,[r0,#0x1b4]        ;4506
000fc2  9832              LDR      r0,[sp,#0xc8]         ;4506
000fc4  f8c023e0          STR      r2,[r0,#0x3e0]        ;4506
000fc8  f8c013e4          STR      r1,[r0,#0x3e4]        ;4506
000fcc  e104              B        |L32.4568|
                  |L32.4046|
000fce  9832              LDR      r0,[sp,#0xc8]         ;4509
000fd0  f8d00628          LDR      r0,[r0,#0x628]        ;4509
000fd4  f5a07140          SUB      r1,r0,#0x300          ;4509
000fd8  397a              SUBS     r1,r1,#0x7a           ;4509
000fda  d02f              BEQ      |L32.4156|
000fdc  9931              LDR      r1,[sp,#0xc4]         ;4509
000fde  f50171d8          ADD      r1,r1,#0x1b0          ;4509
000fe2  c903              LDM      r1,{r0,r1}            ;4509
000fe4  2200              MOVS     r2,#0                 ;4509
000fe6  4b75              LDR      r3,|L32.4540|
000fe8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4509
000fec  f7fffffe          BL       __aeabi_cdcmpeq
000ff0  d124              BNE      |L32.4156|
000ff2  f04f0100          MOV      r1,#0                 ;4509
000ff6  486e              LDR      r0,|L32.4528|
000ff8  f8c0114c          STR      r1,[r0,#0x14c]        ;4509
000ffc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4509
001000  f8d0014c          LDR      r0,[r0,#0x14c]        ;4509
001004  f1000001          ADD      r0,r0,#1              ;4509
001008  4969              LDR      r1,|L32.4528|
00100a  f8c1014c          STR      r0,[r1,#0x14c]        ;4509
00100e  eb020082          ADD      r0,r2,r2,LSL #2       ;4509
001012  4969              LDR      r1,|L32.4536|
001014  eb011000          ADD      r0,r1,r0,LSL #4       ;4509
001018  4966              LDR      r1,|L32.4532|
00101a  9014              STR      r0,[sp,#0x50]         ;4509
00101c  f7fffffe          BL       strcpy
001020  f04f0100          MOV      r1,#0                 ;4509
001024  4862              LDR      r0,|L32.4528|
001026  f8d0014c          LDR      r0,[r0,#0x14c]        ;4509
00102a  eb000080          ADD      r0,r0,r0,LSL #2       ;4509
00102e  4a62              LDR      r2,|L32.4536|
001030  eb021000          ADD      r0,r2,r0,LSL #4       ;4509
001034  7001              STRB     r1,[r0,#0]            ;4509
001036  f04f004c          MOV      r0,#0x4c              ;4509
00103a  e47d              B        |L32.2360|
                  |L32.4156|
00103c  9931              LDR      r1,[sp,#0xc4]         ;4511
00103e  f50171d8          ADD      r1,r1,#0x1b0          ;4511
001042  c903              LDM      r1,{r0,r1}            ;4511
001044  2200              MOVS     r2,#0                 ;4511
001046  4b5d              LDR      r3,|L32.4540|
001048  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4511
00104c  f7fffffe          BL       __aeabi_cdcmpeq
001050  d104              BNE      |L32.4188|
001052  9932              LDR      r1,[sp,#0xc8]         ;4512
001054  f5017178          ADD      r1,r1,#0x3e0          ;4512
001058  c903              LDM      r1,{r0,r1}            ;4512
00105a  e003              B        |L32.4196|
                  |L32.4188|
00105c  9931              LDR      r1,[sp,#0xc4]         ;4512
00105e  f50171d8          ADD      r1,r1,#0x1b0          ;4512
001062  c903              LDM      r1,{r0,r1}            ;4512
                  |L32.4196|
001064  9a31              LDR      r2,[sp,#0xc4]         ;4512
001066  f50272d8          ADD      r2,r2,#0x1b0          ;4512
00106a  c203              STM      r2!,{r0,r1}           ;4512
00106c  9831              LDR      r0,[sp,#0xc4]         ;4513
00106e  f8d00178          LDR      r0,[r0,#0x178]        ;4513
001072  9017              STR      r0,[sp,#0x5c]         ;4513
001074  e076              B        |L32.4452|
                  |L32.4214|
001076  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4513
00107a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4513
00107e  f7fffffe          BL       __aeabi_dadd
001082  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4513
001086  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4513
00108a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4513
00108e  f7fffffe          BL       __aeabi_dadd
001092  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4513
001096  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4513
00109a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4513
00109e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4513
0010a2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4513
0010a6  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4513
0010aa  981b              LDR      r0,[sp,#0x6c]         ;4513
0010ac  f7fffffe          BL       cycle_traverse
0010b0  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4513
0010b4  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4513
0010b8  f7fffffe          BL       __aeabi_cdcmpeq
0010bc  d00c              BEQ      |L32.4312|
0010be  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4513
0010c2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4513
0010c6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4513
0010ca  e9cd0100          STRD     r0,r1,[sp,#0]         ;4513
0010ce  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4513
0010d2  981b              LDR      r0,[sp,#0x6c]         ;4513
0010d4  f7fffffe          BL       cycle_traverse
                  |L32.4312|
0010d8  9931              LDR      r1,[sp,#0xc4]         ;4513
0010da  f50171d8          ADD      r1,r1,#0x1b0          ;4513
0010de  c903              LDM      r1,{r0,r1}            ;4513
0010e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4513
0010e4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4513
0010e8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4513
0010ec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4513
0010f0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4513
0010f4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4513
0010f8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4513
0010fc  2002              MOVS     r0,#2                 ;4513
0010fe  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4513
001102  f7fffffe          BL       convert_cycle_g89
001106  9015              STR      r0,[sp,#0x54]         ;4513
001108  b320              CBZ      r0,|L32.4436|
00110a  4829              LDR      r0,|L32.4528|
00110c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4513
001110  2831              CMP      r0,#0x31              ;4513
001112  da1d              BGE      |L32.4432|
001114  4826              LDR      r0,|L32.4528|
001116  f8d0214c          LDR      r2,[r0,#0x14c]        ;4513
00111a  f8d0114c          LDR      r1,[r0,#0x14c]        ;4513
00111e  1c49              ADDS     r1,r1,#1              ;4513
001120  f8c0114c          STR      r1,[r0,#0x14c]        ;4513
001124  eb020082          ADD      r0,r2,r2,LSL #2       ;4513
001128  4923              LDR      r1,|L32.4536|
00112a  eb011000          ADD      r0,r1,r0,LSL #4       ;4513
00112e  4921              LDR      r1,|L32.4532|
001130  9014              STR      r0,[sp,#0x50]         ;4513
001132  f7fffffe          BL       strcpy
001136  f04f0100          MOV      r1,#0                 ;4513
00113a  481d              LDR      r0,|L32.4528|
00113c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4513
001140  eb000080          ADD      r0,r0,r0,LSL #2       ;4513
001144  4a1c              LDR      r2,|L32.4536|
001146  eb021000          ADD      r0,r2,r0,LSL #4       ;4513
00114a  7001              STRB     r1,[r0,#0]            ;4513
00114c  9815              LDR      r0,[sp,#0x54]         ;4513
00114e  e437              B        |L32.2496|
                  |L32.4432|
001150  9815              LDR      r0,[sp,#0x54]         ;4513
001152  e435              B        |L32.2496|
                  |L32.4436|
001154  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4513
001158  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4513
00115c  9817              LDR      r0,[sp,#0x5c]         ;4513
00115e  f1a00001          SUB      r0,r0,#1              ;4513
001162  9017              STR      r0,[sp,#0x5c]         ;4513
                  |L32.4452|
001164  9817              LDR      r0,[sp,#0x5c]         ;4513
001166  2800              CMP      r0,#0                 ;4513
001168  dc85              BGT      |L32.4214|
00116a  9831              LDR      r0,[sp,#0xc4]         ;4515
00116c  f50070d8          ADD      r0,r0,#0x1b0          ;4515
001170  c806              LDM      r0!,{r1,r2}           ;4515
001172  9832              LDR      r0,[sp,#0xc8]         ;4515
001174  f5007078          ADD      r0,r0,#0x3e0          ;4515
001178  c006              STM      r0!,{r1,r2}           ;4515
00117a  e02d              B        |L32.4568|
                  |L32.4476|
00117c  f04f0100          MOV      r1,#0                 ;4518
001180  480b              LDR      r0,|L32.4528|
001182  f8c0114c          STR      r1,[r0,#0x14c]        ;4518
001186  f8d0214c          LDR      r2,[r0,#0x14c]        ;4518
00118a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4518
00118e  f1000001          ADD      r0,r0,#1              ;4518
001192  4907              LDR      r1,|L32.4528|
001194  f8c1014c          STR      r0,[r1,#0x14c]        ;4518
001198  eb020082          ADD      r0,r2,r2,LSL #2       ;4518
00119c  4906              LDR      r1,|L32.4536|
00119e  eb011000          ADD      r0,r1,r0,LSL #4       ;4518
0011a2  4904              LDR      r1,|L32.4532|
0011a4  9014              STR      r0,[sp,#0x50]         ;4518
0011a6  f7fffffe          BL       strcpy
0011aa  f04f0100          MOV      r1,#0                 ;4518
0011ae  e007              B        |L32.4544|
                  |L32.4528|
                          DCD      _setup+0xc000
                  |L32.4532|
                          DCD      |symbol_number.459|
                  |L32.4536|
                          DCD      _setup+0xb1ac
                  |L32.4540|
                          DCD      0xbff00000
                  |L32.4544|
0011c0  4818              LDR      r0,|L32.4644|
0011c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4518
0011c6  eb000080          ADD      r0,r0,r0,LSL #2       ;4518
0011ca  4a17              LDR      r2,|L32.4648|
0011cc  eb021000          ADD      r0,r2,r0,LSL #4       ;4518
0011d0  7001              STRB     r1,[r0,#0]            ;4518
0011d2  f04f0020          MOV      r0,#0x20              ;4518
0011d6  e486              B        |L32.2790|
                  |L32.4568|
0011d8  bf00              NOP                            ;4444
0011da  9a32              LDR      r2,[sp,#0xc8]         ;4520
0011dc  e9dd102e          LDRD     r1,r0,[sp,#0xb8]      ;4520
0011e0  f8c21398          STR      r1,[r2,#0x398]        ;4520
0011e4  f8c2039c          STR      r0,[r2,#0x39c]        ;4520
0011e8  9a32              LDR      r2,[sp,#0xc8]         ;4521
0011ea  e9dd102a          LDRD     r1,r0,[sp,#0xa8]      ;4521
0011ee  f8c213a0          STR      r1,[r2,#0x3a0]        ;4521
0011f2  f8c203a4          STR      r0,[r2,#0x3a4]        ;4521
0011f6  9a32              LDR      r2,[sp,#0xc8]         ;4522
0011f8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4522
0011fc  f5027264          ADD      r2,r2,#0x390          ;4522
001200  c203              STM      r2!,{r0,r1}           ;4522
001202  9931              LDR      r1,[sp,#0xc4]         ;4523
001204  f50171f0          ADD      r1,r1,#0x1e0          ;4523
001208  c905              LDM      r1!,{r0,r2}           ;4523
00120a  9932              LDR      r1,[sp,#0xc8]         ;4523
00120c  f501716e          ADD      r1,r1,#0x3b8          ;4523
001210  c105              STM      r1!,{r0,r2}           ;4523
001212  9816              LDR      r0,[sp,#0x58]         ;4525
001214  2802              CMP      r0,#2                 ;4525
001216  d002              BEQ      |L32.4638|
001218  9816              LDR      r0,[sp,#0x58]         ;4526
00121a  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L32.4638|
00121e  2000              MOVS     r0,#0                 ;4528
001220  e461              B        |L32.2790|
;;;4530   
                          ENDP

001222  0000              DCW      0x0000
                  |L32.4644|
                          DCD      _setup+0xc000
                  |L32.4648|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_cycle_zx||, CODE, READONLY, ALIGN=2

                  convert_cycle_zx PROC
;;;4587   
;;;4588       static int convert_cycle_zx(                  /* ARGUMENTS                                 */
000000  b507              PUSH     {r0-r2,lr}
;;;4589       int motion,                                   /* a g-code between G_81 and G_89, a canned cycle */
;;;4590       block_pointer block,                          /* pointer to a block of RS274 instructions       */
;;;4591       setup_pointer settings)                       /* pointer to machine settings                    */
;;;4592       {
000002  b0b0              SUB      sp,sp,#0xc0
;;;4593           static char name[] SET_TO "convert_cycle_zx";
;;;4594           double aa;
;;;4595           double aa_increment;
;;;4596           double bb;
;;;4597           double bb_increment;
;;;4598           double cc;
;;;4599           double clear_cc;
;;;4600           double i;
;;;4601           double j;
;;;4602           double k;
;;;4603           double old_cc;
;;;4604           CANON_PLANE plane;
;;;4605           double r;
;;;4606           int repeat;
;;;4607           CANON_MOTION_MODE save_mode;
;;;4608           int status;
;;;4609   
;;;4610           plane SET_TO CANON_PLANE_XZ;
000004  f04f0003          MOV      r0,#3
000008  901b              STR      r0,[sp,#0x6c]
;;;4611           if (settings->motion_mode ISNT motion)
00000a  9832              LDR      r0,[sp,#0xc8]
00000c  f8d01628          LDR      r1,[r0,#0x628]
000010  9830              LDR      r0,[sp,#0xc0]
000012  4281              CMP      r1,r0
000014  d02a              BEQ      |L33.108|
;;;4612           {
;;;4613               CHK((block->y_flag IS OFF),
000016  9831              LDR      r0,[sp,#0xc4]
000018  f8d001e8          LDR      r0,[r0,#0x1e8]
00001c  bb30              CBNZ     r0,|L33.108|
00001e  f04f0100          MOV      r1,#0
000022  48ff              LDR      r0,|L33.1056|
000024  f8c0114c          STR      r1,[r0,#0x14c]
000028  f8d0214c          LDR      r2,[r0,#0x14c]
00002c  f8d0014c          LDR      r0,[r0,#0x14c]
000030  f1000001          ADD      r0,r0,#1
000034  49fa              LDR      r1,|L33.1056|
000036  f8c1014c          STR      r0,[r1,#0x14c]
00003a  eb020082          ADD      r0,r2,r2,LSL #2
00003e  f6a16154          SUB      r1,r1,#0xe54
000042  eb011000          ADD      r0,r1,r0,LSL #4
000046  49f7              LDR      r1,|L33.1060|
000048  9014              STR      r0,[sp,#0x50]
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  48f3              LDR      r0,|L33.1056|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4af2              LDR      r2,|L33.1064|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  f04f00c2          MOV      r0,#0xc2
                  |L33.104|
;;;4614                   NCE_Y_VALUE_UNSPECIFIED_IN_XZ_PLANE_CANNED_CYCLE);
;;;4615           }
;;;4616           block->y_number SET_TO
;;;4617               block->y_flag IS ON ? block->y_number : settings->cycle_cc;
;;;4618           old_cc SET_TO settings->current_y;
;;;4619   
;;;4620           if (settings->distance_mode IS MODE_ABSOLUTE)
;;;4621           {
;;;4622               aa_increment SET_TO 0.0;
;;;4623               bb_increment SET_TO 0.0;
;;;4624               r SET_TO block->r_number;
;;;4625               cc SET_TO block->y_number;
;;;4626               aa SET_TO block->z_flag IS ON ? block->z_number : settings->current_z;
;;;4627               bb SET_TO block->x_flag IS ON ? block->x_number : settings->current_x;
;;;4628           }
;;;4629           else if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4630           {
;;;4631               aa_increment SET_TO block->z_number;
;;;4632               bb_increment SET_TO block->x_number;
;;;4633               r SET_TO (block->r_number + old_cc);
;;;4634               cc SET_TO (r + block->y_number);      /* [NCMS, page 98] */
;;;4635               aa SET_TO settings->current_z;
;;;4636               bb SET_TO settings->current_x;
;;;4637           }
;;;4638           else
;;;4639               ERM(NCE_BUG_DISTANCE_MODE_NOT_G90_OR_G91);
;;;4640           CHK((r < cc), NCE_R_LESS_THAN_Y_IN_CYCLE_IN_XZ_PLANE);
;;;4641   
;;;4642           if (old_cc < r)
;;;4643           {
;;;4644               STRAIGHT_TRAVERSE(settings->current_x, r, settings->current_z
;;;4645       #ifdef AA
;;;4646                   ,           settings->AA_current
;;;4647       #else
;;;4648       #ifdef ALL_AXES
;;;4649                   , 0
;;;4650       #endif
;;;4651       #endif
;;;4652       #ifdef BB
;;;4653                   ,  settings->BB_current
;;;4654       #else
;;;4655       #ifdef ALL_AXES
;;;4656                   , 0
;;;4657       #endif
;;;4658       #endif
;;;4659       #ifdef CC
;;;4660                   ,  settings->CC_current
;;;4661       #else
;;;4662       #ifdef ALL_AXES
;;;4663                   , 0
;;;4664       #endif
;;;4665       #endif
;;;4666                   );
;;;4667               old_cc SET_TO r;
;;;4668           }
;;;4669           clear_cc SET_TO (settings->retract_mode IS R_PLANE) ? r : old_cc;
;;;4670   
;;;4671           save_mode = GET_EXTERNAL_MOTION_CONTROL_MODE();
;;;4672           if (save_mode ISNT CANON_EXACT_PATH)
;;;4673               SET_MOTION_CONTROL_MODE(CANON_EXACT_PATH);
;;;4674   
;;;4675           switch(motion)
;;;4676           {
;;;4677               case G_81:
;;;4678                   CYCLE_MACRO(convert_cycle_g81(CANON_PLANE_XZ, aa, bb, clear_cc, cc))
;;;4679                       break;
;;;4680               case G_82:
;;;4681                   CHK(((settings->motion_mode ISNT G_82) AND (block->p_number IS -1.0)),
;;;4682                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G82);
;;;4683                   block->p_number SET_TO
;;;4684                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4685                   CYCLE_MACRO(convert_cycle_g82 (CANON_PLANE_XZ, aa, bb, clear_cc, cc,
;;;4686                       block->p_number))
;;;4687                       settings->cycle_p SET_TO block->p_number;
;;;4688                   break;
;;;4689               case G_83:
;;;4690                   CHK(((settings->motion_mode ISNT G_83) AND (block->q_number IS -1.0)),
;;;4691                       NCE_Q_WORD_MISSING_WITH_G83);
;;;4692                   block->q_number SET_TO
;;;4693                       block->q_number IS -1.0 ? settings->cycle_q : block->q_number;
;;;4694                   CYCLE_MACRO(convert_cycle_g83 (CANON_PLANE_XZ, aa, bb, r, clear_cc, cc,
;;;4695                       block->q_number))
;;;4696                       settings->cycle_q SET_TO block->q_number;
;;;4697                   break;
;;;4698               case G_84:
;;;4699                   CYCLE_MACRO(convert_cycle_g84 (CANON_PLANE_XZ, aa, bb, clear_cc, cc,
;;;4700                       settings->spindle_turning, settings->speed_feed_mode))
;;;4701                       break;
;;;4702               case G_85:
;;;4703                   CYCLE_MACRO(convert_cycle_g85 (CANON_PLANE_XZ, aa, bb, clear_cc, cc))
;;;4704                       break;
;;;4705               case G_86:
;;;4706                   CHK(((settings->motion_mode ISNT G_86) AND (block->p_number IS -1.0)),
;;;4707                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G86);
;;;4708                   block->p_number SET_TO
;;;4709                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4710                   CYCLE_MACRO(convert_cycle_g86 (CANON_PLANE_XZ, aa, bb, clear_cc, cc,
;;;4711                       block->p_number, settings->spindle_turning))
;;;4712                       settings->cycle_p SET_TO block->p_number;
;;;4713                   break;
;;;4714               case G_87:
;;;4715                   if (settings->motion_mode ISNT G_87)
;;;4716                   {
;;;4717                       CHK((block->i_flag IS OFF), NCE_I_WORD_MISSING_WITH_G87);
;;;4718                       CHK((block->j_flag IS OFF), NCE_J_WORD_MISSING_WITH_G87);
;;;4719                       CHK((block->k_flag IS OFF), NCE_K_WORD_MISSING_WITH_G87);
;;;4720                   }
;;;4721                   i SET_TO block->i_flag IS ON ? block->i_number : settings->cycle_i;
;;;4722                   j SET_TO block->j_flag IS ON ? block->j_number : settings->cycle_j;
;;;4723                   k SET_TO block->k_flag IS ON ? block->k_number : settings->cycle_k;
;;;4724                   settings->cycle_i SET_TO i;
;;;4725                   settings->cycle_j SET_TO j;
;;;4726                   settings->cycle_k SET_TO k;
;;;4727                   if (settings->distance_mode IS MODE_INCREMENTAL)
;;;4728                   {
;;;4729                       j SET_TO (cc + j);            /* j always absolute in function call below */
;;;4730                   }
;;;4731                   CYCLE_MACRO(convert_cycle_g87 (CANON_PLANE_XZ, aa, (aa + k), bb,
;;;4732                       (bb + i), r, clear_cc, j, cc, settings->spindle_turning))
;;;4733                       break;
;;;4734               case G_88:
;;;4735                   CHK(((settings->motion_mode ISNT G_88) AND (block->p_number IS -1.0)),
;;;4736                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G88);
;;;4737                   block->p_number SET_TO
;;;4738                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4739                   CYCLE_MACRO(convert_cycle_g88 (CANON_PLANE_XZ, aa, bb, cc,
;;;4740                       block->p_number, settings->spindle_turning))
;;;4741                       settings->cycle_p SET_TO block->p_number;
;;;4742                   break;
;;;4743               case G_89:
;;;4744                   CHK(((settings->motion_mode ISNT G_89) AND (block->p_number IS -1.0)),
;;;4745                       NCE_DWELL_TIME_P_WORD_MISSING_WITH_G89);
;;;4746                   block->p_number SET_TO
;;;4747                       block->p_number IS -1.0 ? settings->cycle_p : block->p_number;
;;;4748                   CYCLE_MACRO(convert_cycle_g89 (CANON_PLANE_XZ, aa, bb, clear_cc, cc,
;;;4749                       block->p_number))
;;;4750                       settings->cycle_p SET_TO block->p_number;
;;;4751                   break;
;;;4752               default:
;;;4753                   ERM(NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
;;;4754           }
;;;4755           settings->current_z SET_TO aa;            /* CYCLE_MACRO updates aa and bb */
;;;4756           settings->current_x SET_TO bb;
;;;4757           settings->current_y SET_TO clear_cc;
;;;4758           settings->cycle_cc SET_TO block->y_number;
;;;4759   
;;;4760           if (save_mode ISNT CANON_EXACT_PATH)
;;;4761               SET_MOTION_CONTROL_MODE(save_mode);
;;;4762   
;;;4763           return RS274NGC_OK;
;;;4764       }
000068  b033              ADD      sp,sp,#0xcc
00006a  bd00              POP      {pc}
                  |L33.108|
00006c  9831              LDR      r0,[sp,#0xc4]         ;4616
00006e  f8d001e8          LDR      r0,[r0,#0x1e8]        ;4616
000072  2801              CMP      r0,#1                 ;4616
000074  d104              BNE      |L33.128|
000076  9931              LDR      r1,[sp,#0xc4]         ;4617
000078  f50171f8          ADD      r1,r1,#0x1f0          ;4617
00007c  c903              LDM      r1,{r0,r1}            ;4617
00007e  e003              B        |L33.136|
                  |L33.128|
000080  9932              LDR      r1,[sp,#0xc8]         ;4617
000082  f501716e          ADD      r1,r1,#0x3b8          ;4617
000086  c903              LDM      r1,{r0,r1}            ;4617
                  |L33.136|
000088  9a31              LDR      r2,[sp,#0xc4]         ;4617
00008a  f50272f8          ADD      r2,r2,#0x1f0          ;4617
00008e  c203              STM      r2!,{r0,r1}           ;4617
000090  9832              LDR      r0,[sp,#0xc8]         ;4618
000092  f5007066          ADD      r0,r0,#0x398          ;4618
000096  c803              LDM      r0,{r0,r1}            ;4618
000098  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4618
00009c  9832              LDR      r0,[sp,#0xc8]         ;4620
00009e  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4620
0000a2  bb98              CBNZ     r0,|L33.268|
0000a4  f04f0100          MOV      r1,#0                 ;4622
0000a8  912c              STR      r1,[sp,#0xb0]         ;4622
0000aa  912d              STR      r1,[sp,#0xb4]         ;4622
0000ac  4608              MOV      r0,r1                 ;4623
0000ae  9028              STR      r0,[sp,#0xa0]         ;4623
0000b0  9029              STR      r0,[sp,#0xa4]         ;4623
0000b2  9831              LDR      r0,[sp,#0xc4]         ;4624
0000b4  f50070e4          ADD      r0,r0,#0x1c8          ;4624
0000b8  c803              LDM      r0,{r0,r1}            ;4624
0000ba  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4624
0000be  9931              LDR      r1,[sp,#0xc4]         ;4625
0000c0  f50171f8          ADD      r1,r1,#0x1f0          ;4625
0000c4  c903              LDM      r1,{r0,r1}            ;4625
0000c6  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4625
0000ca  9831              LDR      r0,[sp,#0xc4]         ;4626
0000cc  f8d001f8          LDR      r0,[r0,#0x1f8]        ;4626
0000d0  2801              CMP      r0,#1                 ;4626
0000d2  d104              BNE      |L33.222|
0000d4  9931              LDR      r1,[sp,#0xc4]         ;4626
0000d6  f5017100          ADD      r1,r1,#0x200          ;4626
0000da  c903              LDM      r1,{r0,r1}            ;4626
0000dc  e003              B        |L33.230|
                  |L33.222|
0000de  9932              LDR      r1,[sp,#0xc8]         ;4626
0000e0  f5017168          ADD      r1,r1,#0x3a0          ;4626
0000e4  c903              LDM      r1,{r0,r1}            ;4626
                  |L33.230|
0000e6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4626
0000ea  9831              LDR      r0,[sp,#0xc4]         ;4627
0000ec  f8d001dc          LDR      r0,[r0,#0x1dc]        ;4627
0000f0  2801              CMP      r0,#1                 ;4627
0000f2  d104              BNE      |L33.254|
0000f4  9931              LDR      r1,[sp,#0xc4]         ;4627
0000f6  f50171f0          ADD      r1,r1,#0x1e0          ;4627
0000fa  c903              LDM      r1,{r0,r1}            ;4627
0000fc  e003              B        |L33.262|
                  |L33.254|
0000fe  9932              LDR      r1,[sp,#0xc8]         ;4627
000100  f5017164          ADD      r1,r1,#0x390          ;4627
000104  c903              LDM      r1,{r0,r1}            ;4627
                  |L33.262|
000106  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4627
00010a  e05b              B        |L33.452|
                  |L33.268|
00010c  e7ff              B        |L33.270|
                  |L33.270|
00010e  9832              LDR      r0,[sp,#0xc8]         ;4629
000110  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4629
000114  2801              CMP      r0,#1                 ;4629
000116  d130              BNE      |L33.378|
000118  9831              LDR      r0,[sp,#0xc4]         ;4631
00011a  f5007000          ADD      r0,r0,#0x200          ;4631
00011e  c803              LDM      r0,{r0,r1}            ;4631
000120  e9cd012c          STRD     r0,r1,[sp,#0xb0]      ;4631
000124  9831              LDR      r0,[sp,#0xc4]         ;4632
000126  f50070f0          ADD      r0,r0,#0x1e0          ;4632
00012a  c803              LDM      r0,{r0,r1}            ;4632
00012c  e9cd0128          STRD     r0,r1,[sp,#0xa0]      ;4632
000130  9931              LDR      r1,[sp,#0xc4]         ;4633
000132  f50171e4          ADD      r1,r1,#0x1c8          ;4633
000136  c903              LDM      r1,{r0,r1}            ;4633
000138  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4633
00013c  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;4633
000140  f7fffffe          BL       __aeabi_dadd
000144  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;4633
000148  9931              LDR      r1,[sp,#0xc4]         ;4634
00014a  f50171f8          ADD      r1,r1,#0x1f0          ;4634
00014e  c903              LDM      r1,{r0,r1}            ;4634
000150  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4634
000154  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4634
000158  f7fffffe          BL       __aeabi_dadd
00015c  e9cd0126          STRD     r0,r1,[sp,#0x98]      ;4634
000160  9932              LDR      r1,[sp,#0xc8]         ;4635
000162  f5017168          ADD      r1,r1,#0x3a0          ;4635
000166  c903              LDM      r1,{r0,r1}            ;4635
000168  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4635
00016c  9832              LDR      r0,[sp,#0xc8]         ;4636
00016e  f5007064          ADD      r0,r0,#0x390          ;4636
000172  c803              LDM      r0,{r0,r1}            ;4636
000174  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4636
000178  e024              B        |L33.452|
                  |L33.378|
00017a  f04f0100          MOV      r1,#0                 ;4639
00017e  48a8              LDR      r0,|L33.1056|
000180  f8c0114c          STR      r1,[r0,#0x14c]        ;4639
000184  f8d0214c          LDR      r2,[r0,#0x14c]        ;4639
000188  f8d0014c          LDR      r0,[r0,#0x14c]        ;4639
00018c  f1000001          ADD      r0,r0,#1              ;4639
000190  49a3              LDR      r1,|L33.1056|
000192  f8c1014c          STR      r0,[r1,#0x14c]        ;4639
000196  eb020182          ADD      r1,r2,r2,LSL #2       ;4639
00019a  48a3              LDR      r0,|L33.1064|
00019c  eb001001          ADD      r0,r0,r1,LSL #4       ;4639
0001a0  49a0              LDR      r1,|L33.1060|
0001a2  9014              STR      r0,[sp,#0x50]         ;4639
0001a4  f7fffffe          BL       strcpy
0001a8  f04f0100          MOV      r1,#0                 ;4639
0001ac  489c              LDR      r0,|L33.1056|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;4639
0001b2  eb000080          ADD      r0,r0,r0,LSL #2       ;4639
0001b6  4a9c              LDR      r2,|L33.1064|
0001b8  eb021000          ADD      r0,r2,r0,LSL #4       ;4639
0001bc  7001              STRB     r1,[r0,#0]            ;4639
0001be  f04f001f          MOV      r0,#0x1f              ;4639
                  |L33.450|
0001c2  e751              B        |L33.104|
                  |L33.452|
0001c4  e9dd2326          LDRD     r2,r3,[sp,#0x98]      ;4640
0001c8  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4640
0001cc  f7fffffe          BL       __aeabi_cdcmple
0001d0  d224              BCS      |L33.540|
0001d2  f04f0100          MOV      r1,#0                 ;4640
0001d6  4892              LDR      r0,|L33.1056|
0001d8  f8c0114c          STR      r1,[r0,#0x14c]        ;4640
0001dc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4640
0001e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4640
0001e4  f1000001          ADD      r0,r0,#1              ;4640
0001e8  498d              LDR      r1,|L33.1056|
0001ea  f8c1014c          STR      r0,[r1,#0x14c]        ;4640
0001ee  eb020082          ADD      r0,r2,r2,LSL #2       ;4640
0001f2  498d              LDR      r1,|L33.1064|
0001f4  eb011000          ADD      r0,r1,r0,LSL #4       ;4640
0001f8  498a              LDR      r1,|L33.1060|
0001fa  9014              STR      r0,[sp,#0x50]         ;4640
0001fc  f7fffffe          BL       strcpy
000200  f04f0100          MOV      r1,#0                 ;4640
000204  4886              LDR      r0,|L33.1056|
000206  f8d0014c          LDR      r0,[r0,#0x14c]        ;4640
00020a  eb000080          ADD      r0,r0,r0,LSL #2       ;4640
00020e  4a86              LDR      r2,|L33.1064|
000210  eb021000          ADD      r0,r2,r0,LSL #4       ;4640
000214  7001              STRB     r1,[r0,#0]            ;4640
000216  f04f0095          MOV      r0,#0x95              ;4640
                  |L33.538|
00021a  e725              B        |L33.104|
                  |L33.540|
00021c  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4642
000220  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4642
000224  f7fffffe          BL       __aeabi_cdcmple
000228  d213              BCS      |L33.594|
00022a  9832              LDR      r0,[sp,#0xc8]         ;4644
00022c  f5007068          ADD      r0,r0,#0x3a0          ;4644
000230  c803              LDM      r0,{r0,r1}            ;4644
000232  e9cd0100          STRD     r0,r1,[sp,#0]         ;4644
000236  9932              LDR      r1,[sp,#0xc8]         ;4644
000238  f5017164          ADD      r1,r1,#0x390          ;4644
00023c  c903              LDM      r1,{r0,r1}            ;4644
00023e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4644
000242  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4644
000246  f7fffffe          BL       STRAIGHT_TRAVERSE
00024a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4667
00024e  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4667
                  |L33.594|
000252  9832              LDR      r0,[sp,#0xc8]         ;4669
000254  f5004030          ADD      r0,r0,#0xb000         ;4669
000258  f8900188          LDRB     r0,[r0,#0x188]        ;4669
00025c  b910              CBNZ     r0,|L33.612|
00025e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4669
000262  e001              B        |L33.616|
                  |L33.612|
000264  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4669
                  |L33.616|
000268  e9cd0124          STRD     r0,r1,[sp,#0x90]      ;4669
00026c  f7fffffe          BL       GET_EXTERNAL_MOTION_CONTROL_MODE
000270  9016              STR      r0,[sp,#0x58]         ;4671
000272  9816              LDR      r0,[sp,#0x58]         ;4672
000274  2802              CMP      r0,#2                 ;4672
000276  d002              BEQ      |L33.638|
000278  2002              MOVS     r0,#2                 ;4673
00027a  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L33.638|
00027e  f2403252          MOV      r2,#0x352             ;4675
000282  9830              LDR      r0,[sp,#0xc0]         ;4675
000284  1a81              SUBS     r1,r0,r2              ;4675
000286  4290              CMP      r0,r2                 ;4675
000288  d07d              BEQ      |L33.902|
00028a  dc0a              BGT      |L33.674|
00028c  f5a07040          SUB      r0,r0,#0x300          ;4675
000290  382a              SUBS     r0,r0,#0x2a           ;4675
000292  d00f              BEQ      |L33.692|
000294  280a              CMP      r0,#0xa               ;4675
000296  d077              BEQ      |L33.904|
000298  2814              CMP      r0,#0x14              ;4675
00029a  d076              BEQ      |L33.906|
00029c  281e              CMP      r0,#0x1e              ;4675
                  |L33.670|
00029e  d175              BNE      |L33.908|
0002a0  e24c              B        |L33.1852|
                  |L33.674|
0002a2  290a              CMP      r1,#0xa               ;4675
0002a4  d073              BEQ      |L33.910|
0002a6  2914              CMP      r1,#0x14              ;4675
0002a8  d072              BEQ      |L33.912|
0002aa  291e              CMP      r1,#0x1e              ;4675
0002ac  d071              BEQ      |L33.914|
0002ae  2928              CMP      r1,#0x28              ;4675
0002b0  d1f5              BNE      |L33.670|
0002b2  e3fe              B        |L33.2738|
                  |L33.692|
0002b4  9831              LDR      r0,[sp,#0xc4]         ;4678
0002b6  f8d00178          LDR      r0,[r0,#0x178]        ;4678
0002ba  9017              STR      r0,[sp,#0x5c]         ;4678
0002bc  e07a              B        |L33.948|
                  |L33.702|
0002be  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4678
0002c2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4678
0002c6  f7fffffe          BL       __aeabi_dadd
0002ca  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4678
0002ce  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4678
0002d2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4678
0002d6  f7fffffe          BL       __aeabi_dadd
0002da  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4678
0002de  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4678
0002e2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4678
0002e6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4678
0002ea  e9cd0100          STRD     r0,r1,[sp,#0]         ;4678
0002ee  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4678
0002f2  981b              LDR      r0,[sp,#0x6c]         ;4678
0002f4  f7fffffe          BL       cycle_traverse
0002f8  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4678
0002fc  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4678
000300  f7fffffe          BL       __aeabi_cdcmpeq
000304  d00c              BEQ      |L33.800|
000306  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4678
00030a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4678
00030e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4678
000312  e9cd0100          STRD     r0,r1,[sp,#0]         ;4678
000316  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4678
00031a  981b              LDR      r0,[sp,#0x6c]         ;4678
00031c  f7fffffe          BL       cycle_traverse
                  |L33.800|
000320  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4678
000324  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4678
000328  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4678
00032c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4678
000330  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4678
000334  e9cd0100          STRD     r0,r1,[sp,#0]         ;4678
000338  2003              MOVS     r0,#3                 ;4678
00033a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4678
00033e  f7fffffe          BL       convert_cycle_g81
000342  9015              STR      r0,[sp,#0x54]         ;4678
000344  b330              CBZ      r0,|L33.916|
000346  4836              LDR      r0,|L33.1056|
000348  f8d0014c          LDR      r0,[r0,#0x14c]        ;4678
00034c  2831              CMP      r0,#0x31              ;4678
00034e  da27              BGE      |L33.928|
000350  4833              LDR      r0,|L33.1056|
000352  f8d0214c          LDR      r2,[r0,#0x14c]        ;4678
000356  f8d0014c          LDR      r0,[r0,#0x14c]        ;4678
00035a  1c40              ADDS     r0,r0,#1              ;4678
00035c  4930              LDR      r1,|L33.1056|
00035e  f8c1014c          STR      r0,[r1,#0x14c]        ;4678
000362  eb020182          ADD      r1,r2,r2,LSL #2       ;4678
000366  4830              LDR      r0,|L33.1064|
000368  eb001001          ADD      r0,r0,r1,LSL #4       ;4678
00036c  492d              LDR      r1,|L33.1060|
00036e  9014              STR      r0,[sp,#0x50]         ;4678
000370  f7fffffe          BL       strcpy
000374  f04f0100          MOV      r1,#0                 ;4678
000378  4829              LDR      r0,|L33.1056|
00037a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4678
00037e  eb000380          ADD      r3,r0,r0,LSL #2       ;4678
000382  4829              LDR      r0,|L33.1064|
000384  e007              B        |L33.918|
                  |L33.902|
000386  e26a              B        |L33.2142|
                  |L33.904|
000388  e018              B        |L33.956|
                  |L33.906|
00038a  e0f9              B        |L33.1408|
                  |L33.908|
00038c  e3f3              B        |L33.2934|
                  |L33.910|
00038e  e2e2              B        |L33.2390|
                  |L33.912|
000390  e3c1              B        |L33.2838|
                  |L33.914|
000392  e3f1              B        |L33.2936|
                  |L33.916|
000394  e006              B        |L33.932|
                  |L33.918|
000396  eb001003          ADD      r0,r0,r3,LSL #4       ;4678
00039a  7001              STRB     r1,[r0,#0]            ;4678
00039c  9815              LDR      r0,[sp,#0x54]         ;4678
                  |L33.926|
00039e  e663              B        |L33.104|
                  |L33.928|
0003a0  9815              LDR      r0,[sp,#0x54]         ;4678
0003a2  e661              B        |L33.104|
                  |L33.932|
0003a4  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4678
0003a8  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4678
0003ac  9817              LDR      r0,[sp,#0x5c]         ;4678
0003ae  f1a00001          SUB      r0,r0,#1              ;4678
0003b2  9017              STR      r0,[sp,#0x5c]         ;4678
                  |L33.948|
0003b4  9817              LDR      r0,[sp,#0x5c]         ;4678
0003b6  2800              CMP      r0,#0                 ;4678
0003b8  dc81              BGT      |L33.702|
                  |L33.954|
0003ba  e3ab              B        |L33.2836|
                  |L33.956|
0003bc  9832              LDR      r0,[sp,#0xc8]         ;4681
0003be  f8d00628          LDR      r0,[r0,#0x628]        ;4681
0003c2  f5b07f4d          CMP      r0,#0x334             ;4681
0003c6  d039              BEQ      |L33.1084|
0003c8  9931              LDR      r1,[sp,#0xc4]         ;4681
0003ca  f50171d8          ADD      r1,r1,#0x1b0          ;4681
0003ce  c903              LDM      r1,{r0,r1}            ;4681
0003d0  2200              MOVS     r2,#0                 ;4681
0003d2  4b16              LDR      r3,|L33.1068|
0003d4  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4681
0003d8  f7fffffe          BL       __aeabi_cdcmpeq
0003dc  d12e              BNE      |L33.1084|
0003de  f04f0100          MOV      r1,#0                 ;4681
0003e2  480f              LDR      r0,|L33.1056|
0003e4  f8c0114c          STR      r1,[r0,#0x14c]        ;4681
0003e8  f8d0214c          LDR      r2,[r0,#0x14c]        ;4681
0003ec  f8d0014c          LDR      r0,[r0,#0x14c]        ;4681
0003f0  f1000001          ADD      r0,r0,#1              ;4681
0003f4  490a              LDR      r1,|L33.1056|
0003f6  f8c1014c          STR      r0,[r1,#0x14c]        ;4681
0003fa  eb020082          ADD      r0,r2,r2,LSL #2       ;4681
0003fe  490a              LDR      r1,|L33.1064|
000400  eb011000          ADD      r0,r1,r0,LSL #4       ;4681
000404  4907              LDR      r1,|L33.1060|
000406  9014              STR      r0,[sp,#0x50]         ;4681
000408  f7fffffe          BL       strcpy
00040c  f04f0100          MOV      r1,#0                 ;4681
000410  4803              LDR      r0,|L33.1056|
000412  f8d0014c          LDR      r0,[r0,#0x14c]        ;4681
000416  eb000080          ADD      r0,r0,r0,LSL #2       ;4681
00041a  4a03              LDR      r2,|L33.1064|
00041c  e008              B        |L33.1072|
00041e  0000              DCW      0x0000
                  |L33.1056|
                          DCD      _setup+0xc000
                  |L33.1060|
                          DCD      |symbol_number.460|
                  |L33.1064|
                          DCD      _setup+0xb1ac
                  |L33.1068|
                          DCD      0xbff00000
                  |L33.1072|
000430  eb021000          ADD      r0,r2,r0,LSL #4       ;4681
000434  7001              STRB     r1,[r0,#0]            ;4681
000436  f04f0049          MOV      r0,#0x49              ;4681
                  |L33.1082|
00043a  e615              B        |L33.104|
                  |L33.1084|
00043c  9931              LDR      r1,[sp,#0xc4]         ;4683
00043e  f50171d8          ADD      r1,r1,#0x1b0          ;4683
000442  c903              LDM      r1,{r0,r1}            ;4683
000444  2200              MOVS     r2,#0                 ;4683
000446  4bfa              LDR      r3,|L33.2096|
000448  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4683
00044c  f7fffffe          BL       __aeabi_cdcmpeq
000450  d104              BNE      |L33.1116|
000452  9932              LDR      r1,[sp,#0xc8]         ;4684
000454  f5017178          ADD      r1,r1,#0x3e0          ;4684
000458  c903              LDM      r1,{r0,r1}            ;4684
00045a  e003              B        |L33.1124|
                  |L33.1116|
00045c  9931              LDR      r1,[sp,#0xc4]         ;4684
00045e  f50171d8          ADD      r1,r1,#0x1b0          ;4684
000462  c903              LDM      r1,{r0,r1}            ;4684
                  |L33.1124|
000464  9a31              LDR      r2,[sp,#0xc4]         ;4684
000466  f50272d8          ADD      r2,r2,#0x1b0          ;4684
00046a  c203              STM      r2!,{r0,r1}           ;4684
00046c  9831              LDR      r0,[sp,#0xc4]         ;4685
00046e  f8d00178          LDR      r0,[r0,#0x178]        ;4685
000472  9017              STR      r0,[sp,#0x5c]         ;4685
000474  e078              B        |L33.1384|
                  |L33.1142|
000476  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4685
00047a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4685
00047e  f7fffffe          BL       __aeabi_dadd
000482  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4685
000486  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4685
00048a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4685
00048e  f7fffffe          BL       __aeabi_dadd
000492  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4685
000496  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4685
00049a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4685
00049e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4685
0004a2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4685
0004a6  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4685
0004aa  981b              LDR      r0,[sp,#0x6c]         ;4685
0004ac  f7fffffe          BL       cycle_traverse
0004b0  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4685
0004b4  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4685
0004b8  f7fffffe          BL       __aeabi_cdcmpeq
0004bc  d00c              BEQ      |L33.1240|
0004be  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4685
0004c2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4685
0004c6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4685
0004ca  e9cd0100          STRD     r0,r1,[sp,#0]         ;4685
0004ce  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4685
0004d2  981b              LDR      r0,[sp,#0x6c]         ;4685
0004d4  f7fffffe          BL       cycle_traverse
                  |L33.1240|
0004d8  9831              LDR      r0,[sp,#0xc4]         ;4685
0004da  f50070d8          ADD      r0,r0,#0x1b0          ;4685
0004de  c803              LDM      r0,{r0,r1}            ;4685
0004e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4685
0004e4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4685
0004e8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4685
0004ec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4685
0004f0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4685
0004f4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4685
0004f8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4685
0004fc  2003              MOVS     r0,#3                 ;4685
0004fe  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4685
000502  f7fffffe          BL       convert_cycle_g82
000506  9015              STR      r0,[sp,#0x54]         ;4685
000508  b330              CBZ      r0,|L33.1368|
00050a  48ca              LDR      r0,|L33.2100|
00050c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4685
000510  2831              CMP      r0,#0x31              ;4685
000512  da1f              BGE      |L33.1364|
000514  48c7              LDR      r0,|L33.2100|
000516  f8d0214c          LDR      r2,[r0,#0x14c]        ;4685
00051a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4685
00051e  1c40              ADDS     r0,r0,#1              ;4685
000520  49c4              LDR      r1,|L33.2100|
000522  f8c1014c          STR      r0,[r1,#0x14c]        ;4685
000526  eb020082          ADD      r0,r2,r2,LSL #2       ;4685
00052a  f6a16154          SUB      r1,r1,#0xe54          ;4685
00052e  eb011000          ADD      r0,r1,r0,LSL #4       ;4685
000532  49c1              LDR      r1,|L33.2104|
000534  9014              STR      r0,[sp,#0x50]         ;4685
000536  f7fffffe          BL       strcpy
00053a  f04f0100          MOV      r1,#0                 ;4685
00053e  48bd              LDR      r0,|L33.2100|
000540  f8d0014c          LDR      r0,[r0,#0x14c]        ;4685
000544  eb000080          ADD      r0,r0,r0,LSL #2       ;4685
000548  4abc              LDR      r2,|L33.2108|
00054a  eb021000          ADD      r0,r2,r0,LSL #4       ;4685
00054e  7001              STRB     r1,[r0,#0]            ;4685
000550  9815              LDR      r0,[sp,#0x54]         ;4685
000552  e589              B        |L33.104|
                  |L33.1364|
000554  9815              LDR      r0,[sp,#0x54]         ;4685
000556  e587              B        |L33.104|
                  |L33.1368|
000558  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4685
00055c  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4685
000560  9817              LDR      r0,[sp,#0x5c]         ;4685
000562  f1a00001          SUB      r0,r0,#1              ;4685
000566  9017              STR      r0,[sp,#0x5c]         ;4685
                  |L33.1384|
000568  9817              LDR      r0,[sp,#0x5c]         ;4685
00056a  2800              CMP      r0,#0                 ;4685
00056c  dc83              BGT      |L33.1142|
00056e  9831              LDR      r0,[sp,#0xc4]         ;4687
000570  f50070d8          ADD      r0,r0,#0x1b0          ;4687
000574  c806              LDM      r0!,{r1,r2}           ;4687
000576  9832              LDR      r0,[sp,#0xc8]         ;4687
000578  f5007078          ADD      r0,r0,#0x3e0          ;4687
00057c  c006              STM      r0!,{r1,r2}           ;4687
00057e  e71c              B        |L33.954|
                  |L33.1408|
000580  9832              LDR      r0,[sp,#0xc8]         ;4690
000582  f8d00628          LDR      r0,[r0,#0x628]        ;4690
000586  f5a07140          SUB      r1,r0,#0x300          ;4690
00058a  393e              SUBS     r1,r1,#0x3e           ;4690
00058c  d02f              BEQ      |L33.1518|
00058e  9931              LDR      r1,[sp,#0xc4]         ;4690
000590  f50171dc          ADD      r1,r1,#0x1b8          ;4690
000594  c903              LDM      r1,{r0,r1}            ;4690
000596  2200              MOVS     r2,#0                 ;4690
000598  4ba5              LDR      r3,|L33.2096|
00059a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4690
00059e  f7fffffe          BL       __aeabi_cdcmpeq
0005a2  d124              BNE      |L33.1518|
0005a4  f04f0100          MOV      r1,#0                 ;4690
0005a8  48a2              LDR      r0,|L33.2100|
0005aa  f8c0114c          STR      r1,[r0,#0x14c]        ;4690
0005ae  f8d0214c          LDR      r2,[r0,#0x14c]        ;4690
0005b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4690
0005b6  f1000001          ADD      r0,r0,#1              ;4690
0005ba  499e              LDR      r1,|L33.2100|
0005bc  f8c1014c          STR      r0,[r1,#0x14c]        ;4690
0005c0  eb020082          ADD      r0,r2,r2,LSL #2       ;4690
0005c4  499d              LDR      r1,|L33.2108|
0005c6  eb011000          ADD      r0,r1,r0,LSL #4       ;4690
0005ca  499b              LDR      r1,|L33.2104|
0005cc  9014              STR      r0,[sp,#0x50]         ;4690
0005ce  f7fffffe          BL       strcpy
0005d2  f04f0100          MOV      r1,#0                 ;4690
0005d6  4897              LDR      r0,|L33.2100|
0005d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4690
0005dc  eb000080          ADD      r0,r0,r0,LSL #2       ;4690
0005e0  4a96              LDR      r2,|L33.2108|
0005e2  eb021000          ADD      r0,r2,r0,LSL #4       ;4690
0005e6  7001              STRB     r1,[r0,#0]            ;4690
0005e8  f04f008f          MOV      r0,#0x8f              ;4690
0005ec  e53c              B        |L33.104|
                  |L33.1518|
0005ee  9931              LDR      r1,[sp,#0xc4]         ;4692
0005f0  f50171dc          ADD      r1,r1,#0x1b8          ;4692
0005f4  c903              LDM      r1,{r0,r1}            ;4692
0005f6  2200              MOVS     r2,#0                 ;4692
0005f8  4b8d              LDR      r3,|L33.2096|
0005fa  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4692
0005fe  f7fffffe          BL       __aeabi_cdcmpeq
000602  d104              BNE      |L33.1550|
000604  9932              LDR      r1,[sp,#0xc8]         ;4693
000606  f501717a          ADD      r1,r1,#0x3e8          ;4693
00060a  c903              LDM      r1,{r0,r1}            ;4693
00060c  e003              B        |L33.1558|
                  |L33.1550|
00060e  9931              LDR      r1,[sp,#0xc4]         ;4693
000610  f50171dc          ADD      r1,r1,#0x1b8          ;4693
000614  c903              LDM      r1,{r0,r1}            ;4693
                  |L33.1558|
000616  9a31              LDR      r2,[sp,#0xc4]         ;4693
000618  f50272dc          ADD      r2,r2,#0x1b8          ;4693
00061c  c203              STM      r2!,{r0,r1}           ;4693
00061e  9831              LDR      r0,[sp,#0xc4]         ;4694
000620  f8d00178          LDR      r0,[r0,#0x178]        ;4694
000624  9017              STR      r0,[sp,#0x5c]         ;4694
000626  e07b              B        |L33.1824|
                  |L33.1576|
000628  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4694
00062c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4694
000630  f7fffffe          BL       __aeabi_dadd
000634  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4694
000638  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4694
00063c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4694
000640  f7fffffe          BL       __aeabi_dadd
000644  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4694
000648  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4694
00064c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4694
000650  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4694
000654  e9cd0100          STRD     r0,r1,[sp,#0]         ;4694
000658  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4694
00065c  981b              LDR      r0,[sp,#0x6c]         ;4694
00065e  f7fffffe          BL       cycle_traverse
000662  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4694
000666  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4694
00066a  f7fffffe          BL       __aeabi_cdcmpeq
00066e  d00c              BEQ      |L33.1674|
000670  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4694
000674  e9cd0102          STRD     r0,r1,[sp,#8]         ;4694
000678  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4694
00067c  e9cd0100          STRD     r0,r1,[sp,#0]         ;4694
000680  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4694
000684  981b              LDR      r0,[sp,#0x6c]         ;4694
000686  f7fffffe          BL       cycle_traverse
                  |L33.1674|
00068a  9931              LDR      r1,[sp,#0xc4]         ;4694
00068c  f50171dc          ADD      r1,r1,#0x1b8          ;4694
000690  c903              LDM      r1,{r0,r1}            ;4694
000692  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4694
000696  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4694
00069a  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4694
00069e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4694
0006a2  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4694
0006a6  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4694
0006aa  e9cd0102          STRD     r0,r1,[sp,#8]         ;4694
0006ae  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4694
0006b2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4694
0006b6  2003              MOVS     r0,#3                 ;4694
0006b8  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4694
0006bc  f7fffffe          BL       convert_cycle_g83
0006c0  9015              STR      r0,[sp,#0x54]         ;4694
0006c2  b328              CBZ      r0,|L33.1808|
0006c4  485b              LDR      r0,|L33.2100|
0006c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4694
0006ca  2831              CMP      r0,#0x31              ;4694
0006cc  da1e              BGE      |L33.1804|
0006ce  4859              LDR      r0,|L33.2100|
0006d0  f8d0214c          LDR      r2,[r0,#0x14c]        ;4694
0006d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4694
0006d8  1c40              ADDS     r0,r0,#1              ;4694
0006da  4956              LDR      r1,|L33.2100|
0006dc  f8c1014c          STR      r0,[r1,#0x14c]        ;4694
0006e0  eb020082          ADD      r0,r2,r2,LSL #2       ;4694
0006e4  4955              LDR      r1,|L33.2108|
0006e6  eb011000          ADD      r0,r1,r0,LSL #4       ;4694
0006ea  4953              LDR      r1,|L33.2104|
0006ec  9014              STR      r0,[sp,#0x50]         ;4694
0006ee  f7fffffe          BL       strcpy
0006f2  f04f0100          MOV      r1,#0                 ;4694
0006f6  484f              LDR      r0,|L33.2100|
0006f8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4694
0006fc  eb000080          ADD      r0,r0,r0,LSL #2       ;4694
000700  4a4e              LDR      r2,|L33.2108|
000702  eb021000          ADD      r0,r2,r0,LSL #4       ;4694
000706  7001              STRB     r1,[r0,#0]            ;4694
000708  9815              LDR      r0,[sp,#0x54]         ;4694
                  |L33.1802|
00070a  e4ad              B        |L33.104|
                  |L33.1804|
00070c  9815              LDR      r0,[sp,#0x54]         ;4694
00070e  e4ab              B        |L33.104|
                  |L33.1808|
000710  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4694
000714  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4694
000718  9817              LDR      r0,[sp,#0x5c]         ;4694
00071a  f1a00001          SUB      r0,r0,#1              ;4694
00071e  9017              STR      r0,[sp,#0x5c]         ;4694
                  |L33.1824|
000720  9817              LDR      r0,[sp,#0x5c]         ;4694
000722  2800              CMP      r0,#0                 ;4694
000724  dc80              BGT      |L33.1576|
000726  9831              LDR      r0,[sp,#0xc4]         ;4696
000728  f8d021b8          LDR      r2,[r0,#0x1b8]        ;4696
00072c  f8d011bc          LDR      r1,[r0,#0x1bc]        ;4696
000730  9832              LDR      r0,[sp,#0xc8]         ;4696
000732  f8c023e8          STR      r2,[r0,#0x3e8]        ;4696
000736  f8c013ec          STR      r1,[r0,#0x3ec]        ;4696
00073a  e63e              B        |L33.954|
                  |L33.1852|
00073c  9831              LDR      r0,[sp,#0xc4]         ;4699
00073e  f8d00178          LDR      r0,[r0,#0x178]        ;4699
000742  9017              STR      r0,[sp,#0x5c]         ;4699
000744  e086              B        |L33.2132|
                  |L33.1862|
000746  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4699
00074a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4699
00074e  f7fffffe          BL       __aeabi_dadd
000752  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4699
000756  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4699
00075a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4699
00075e  f7fffffe          BL       __aeabi_dadd
000762  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4699
000766  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4699
00076a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4699
00076e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4699
000772  e9cd0100          STRD     r0,r1,[sp,#0]         ;4699
000776  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4699
00077a  981b              LDR      r0,[sp,#0x6c]         ;4699
00077c  f7fffffe          BL       cycle_traverse
000780  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4699
000784  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4699
000788  f7fffffe          BL       __aeabi_cdcmpeq
00078c  d00c              BEQ      |L33.1960|
00078e  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4699
000792  e9cd0102          STRD     r0,r1,[sp,#8]         ;4699
000796  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4699
00079a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4699
00079e  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4699
0007a2  981b              LDR      r0,[sp,#0x6c]         ;4699
0007a4  f7fffffe          BL       cycle_traverse
                  |L33.1960|
0007a8  9832              LDR      r0,[sp,#0xc8]         ;4699
0007aa  f5004030          ADD      r0,r0,#0xb000         ;4699
0007ae  f8d011a0          LDR      r1,[r0,#0x1a0]        ;4699
0007b2  9832              LDR      r0,[sp,#0xc8]         ;4699
0007b4  f5004030          ADD      r0,r0,#0xb000         ;4699
0007b8  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4699
0007bc  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4699
0007c0  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4699
0007c4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4699
0007c8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4699
0007cc  e9cd0102          STRD     r0,r1,[sp,#8]         ;4699
0007d0  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4699
0007d4  e9cd0100          STRD     r0,r1,[sp,#0]         ;4699
0007d8  2003              MOVS     r0,#3                 ;4699
0007da  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4699
0007de  f7fffffe          BL       convert_cycle_g84
0007e2  9015              STR      r0,[sp,#0x54]         ;4699
0007e4  b318              CBZ      r0,|L33.2094|
0007e6  4813              LDR      r0,|L33.2100|
0007e8  f8d0014c          LDR      r0,[r0,#0x14c]        ;4699
0007ec  2831              CMP      r0,#0x31              ;4699
0007ee  da27              BGE      |L33.2112|
0007f0  4810              LDR      r0,|L33.2100|
0007f2  f8d0214c          LDR      r2,[r0,#0x14c]        ;4699
0007f6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4699
0007fa  1c40              ADDS     r0,r0,#1              ;4699
0007fc  490d              LDR      r1,|L33.2100|
0007fe  eb020282          ADD      r2,r2,r2,LSL #2       ;4699
000802  f8c1014c          STR      r0,[r1,#0x14c]        ;4699
000806  480d              LDR      r0,|L33.2108|
000808  eb001002          ADD      r0,r0,r2,LSL #4       ;4699
00080c  490a              LDR      r1,|L33.2104|
00080e  9014              STR      r0,[sp,#0x50]         ;4699
000810  f7fffffe          BL       strcpy
000814  f04f0100          MOV      r1,#0                 ;4699
000818  4806              LDR      r0,|L33.2100|
00081a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4699
00081e  eb000080          ADD      r0,r0,r0,LSL #2       ;4699
000822  4a06              LDR      r2,|L33.2108|
000824  eb021000          ADD      r0,r2,r0,LSL #4       ;4699
000828  7001              STRB     r1,[r0,#0]            ;4699
00082a  9815              LDR      r0,[sp,#0x54]         ;4699
                  |L33.2092|
00082c  e41c              B        |L33.104|
                  |L33.2094|
00082e  e009              B        |L33.2116|
                  |L33.2096|
                          DCD      0xbff00000
                  |L33.2100|
                          DCD      _setup+0xc000
                  |L33.2104|
                          DCD      |symbol_number.460|
                  |L33.2108|
                          DCD      _setup+0xb1ac
                  |L33.2112|
000840  9815              LDR      r0,[sp,#0x54]         ;4699
000842  e411              B        |L33.104|
                  |L33.2116|
000844  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4699
000848  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4699
00084c  9817              LDR      r0,[sp,#0x5c]         ;4699
00084e  f1a00001          SUB      r0,r0,#1              ;4699
000852  9017              STR      r0,[sp,#0x5c]         ;4699
                  |L33.2132|
000854  9817              LDR      r0,[sp,#0x5c]         ;4699
000856  2800              CMP      r0,#0                 ;4699
000858  f73faf75          BGT      |L33.1862|
00085c  e5ad              B        |L33.954|
                  |L33.2142|
00085e  9831              LDR      r0,[sp,#0xc4]         ;4703
000860  f8d00178          LDR      r0,[r0,#0x178]        ;4703
000864  9017              STR      r0,[sp,#0x5c]         ;4703
000866  e072              B        |L33.2382|
                  |L33.2152|
000868  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4703
00086c  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4703
000870  f7fffffe          BL       __aeabi_dadd
000874  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4703
000878  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4703
00087c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4703
000880  f7fffffe          BL       __aeabi_dadd
000884  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4703
000888  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4703
00088c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4703
000890  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4703
000894  e9cd0100          STRD     r0,r1,[sp,#0]         ;4703
000898  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4703
00089c  981b              LDR      r0,[sp,#0x6c]         ;4703
00089e  f7fffffe          BL       cycle_traverse
0008a2  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4703
0008a6  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4703
0008aa  f7fffffe          BL       __aeabi_cdcmpeq
0008ae  d00c              BEQ      |L33.2250|
0008b0  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4703
0008b4  e9cd0102          STRD     r0,r1,[sp,#8]         ;4703
0008b8  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4703
0008bc  e9cd0100          STRD     r0,r1,[sp,#0]         ;4703
0008c0  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4703
0008c4  981b              LDR      r0,[sp,#0x6c]         ;4703
0008c6  f7fffffe          BL       cycle_traverse
                  |L33.2250|
0008ca  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4703
0008ce  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4703
0008d2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4703
0008d6  e9cd0102          STRD     r0,r1,[sp,#8]         ;4703
0008da  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4703
0008de  e9cd0100          STRD     r0,r1,[sp,#0]         ;4703
0008e2  2003              MOVS     r0,#3                 ;4703
0008e4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4703
0008e8  f7fffffe          BL       convert_cycle_g85
0008ec  9015              STR      r0,[sp,#0x54]         ;4703
0008ee  b330              CBZ      r0,|L33.2366|
0008f0  48ff              LDR      r0,|L33.3312|
0008f2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4703
0008f6  2831              CMP      r0,#0x31              ;4703
0008f8  da1f              BGE      |L33.2362|
0008fa  48fd              LDR      r0,|L33.3312|
0008fc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4703
000900  f8d0014c          LDR      r0,[r0,#0x14c]        ;4703
000904  1c40              ADDS     r0,r0,#1              ;4703
000906  49fa              LDR      r1,|L33.3312|
000908  f8c1014c          STR      r0,[r1,#0x14c]        ;4703
00090c  eb020082          ADD      r0,r2,r2,LSL #2       ;4703
000910  f6a16154          SUB      r1,r1,#0xe54          ;4703
000914  eb011000          ADD      r0,r1,r0,LSL #4       ;4703
000918  49f6              LDR      r1,|L33.3316|
00091a  9014              STR      r0,[sp,#0x50]         ;4703
00091c  f7fffffe          BL       strcpy
000920  f04f0100          MOV      r1,#0                 ;4703
000924  48f2              LDR      r0,|L33.3312|
000926  f8d0014c          LDR      r0,[r0,#0x14c]        ;4703
00092a  eb000080          ADD      r0,r0,r0,LSL #2       ;4703
00092e  4af2              LDR      r2,|L33.3320|
000930  eb021000          ADD      r0,r2,r0,LSL #4       ;4703
000934  7001              STRB     r1,[r0,#0]            ;4703
000936  9815              LDR      r0,[sp,#0x54]         ;4703
                  |L33.2360|
000938  e443              B        |L33.450|
                  |L33.2362|
00093a  9815              LDR      r0,[sp,#0x54]         ;4703
00093c  e441              B        |L33.450|
                  |L33.2366|
00093e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4703
000942  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4703
000946  9817              LDR      r0,[sp,#0x5c]         ;4703
000948  f1a00001          SUB      r0,r0,#1              ;4703
00094c  9017              STR      r0,[sp,#0x5c]         ;4703
                  |L33.2382|
00094e  9817              LDR      r0,[sp,#0x5c]         ;4703
000950  2800              CMP      r0,#0                 ;4703
000952  dc89              BGT      |L33.2152|
000954  e531              B        |L33.954|
                  |L33.2390|
000956  9832              LDR      r0,[sp,#0xc8]         ;4706
000958  f8d00628          LDR      r0,[r0,#0x628]        ;4706
00095c  f5b07f57          CMP      r0,#0x35c             ;4706
000960  d02f              BEQ      |L33.2498|
000962  9931              LDR      r1,[sp,#0xc4]         ;4706
000964  f50171d8          ADD      r1,r1,#0x1b0          ;4706
000968  c903              LDM      r1,{r0,r1}            ;4706
00096a  2200              MOVS     r2,#0                 ;4706
00096c  4be3              LDR      r3,|L33.3324|
00096e  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4706
000972  f7fffffe          BL       __aeabi_cdcmpeq
000976  d124              BNE      |L33.2498|
000978  f04f0100          MOV      r1,#0                 ;4706
00097c  48dc              LDR      r0,|L33.3312|
00097e  f8c0114c          STR      r1,[r0,#0x14c]        ;4706
000982  f8d0214c          LDR      r2,[r0,#0x14c]        ;4706
000986  f8d0014c          LDR      r0,[r0,#0x14c]        ;4706
00098a  f1000001          ADD      r0,r0,#1              ;4706
00098e  49d8              LDR      r1,|L33.3312|
000990  f8c1014c          STR      r0,[r1,#0x14c]        ;4706
000994  eb020082          ADD      r0,r2,r2,LSL #2       ;4706
000998  49d7              LDR      r1,|L33.3320|
00099a  eb011000          ADD      r0,r1,r0,LSL #4       ;4706
00099e  49d5              LDR      r1,|L33.3316|
0009a0  9014              STR      r0,[sp,#0x50]         ;4706
0009a2  f7fffffe          BL       strcpy
0009a6  f04f0100          MOV      r1,#0                 ;4706
0009aa  48d1              LDR      r0,|L33.3312|
0009ac  f8d0014c          LDR      r0,[r0,#0x14c]        ;4706
0009b0  eb000080          ADD      r0,r0,r0,LSL #2       ;4706
0009b4  4ad0              LDR      r2,|L33.3320|
0009b6  eb021000          ADD      r0,r2,r0,LSL #4       ;4706
0009ba  7001              STRB     r1,[r0,#0]            ;4706
0009bc  f04f004a          MOV      r0,#0x4a              ;4706
                  |L33.2496|
0009c0  e42b              B        |L33.538|
                  |L33.2498|
0009c2  9931              LDR      r1,[sp,#0xc4]         ;4708
0009c4  f50171d8          ADD      r1,r1,#0x1b0          ;4708
0009c8  c903              LDM      r1,{r0,r1}            ;4708
0009ca  2200              MOVS     r2,#0                 ;4708
0009cc  4bcb              LDR      r3,|L33.3324|
0009ce  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4708
0009d2  f7fffffe          BL       __aeabi_cdcmpeq
0009d6  d104              BNE      |L33.2530|
0009d8  9932              LDR      r1,[sp,#0xc8]         ;4709
0009da  f5017178          ADD      r1,r1,#0x3e0          ;4709
0009de  c903              LDM      r1,{r0,r1}            ;4709
0009e0  e003              B        |L33.2538|
                  |L33.2530|
0009e2  9931              LDR      r1,[sp,#0xc4]         ;4709
0009e4  f50171d8          ADD      r1,r1,#0x1b0          ;4709
0009e8  c903              LDM      r1,{r0,r1}            ;4709
                  |L33.2538|
0009ea  9a31              LDR      r2,[sp,#0xc4]         ;4709
0009ec  f50272d8          ADD      r2,r2,#0x1b0          ;4709
0009f0  c203              STM      r2!,{r0,r1}           ;4709
0009f2  9831              LDR      r0,[sp,#0xc4]         ;4710
0009f4  f8d00178          LDR      r0,[r0,#0x178]        ;4710
0009f8  9017              STR      r0,[sp,#0x5c]         ;4710
0009fa  e07f              B        |L33.2812|
                  |L33.2556|
0009fc  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4710
000a00  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4710
000a04  f7fffffe          BL       __aeabi_dadd
000a08  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4710
000a0c  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4710
000a10  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4710
000a14  f7fffffe          BL       __aeabi_dadd
000a18  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4710
000a1c  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4710
000a20  e9cd0102          STRD     r0,r1,[sp,#8]         ;4710
000a24  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4710
000a28  e9cd0100          STRD     r0,r1,[sp,#0]         ;4710
000a2c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4710
000a30  981b              LDR      r0,[sp,#0x6c]         ;4710
000a32  f7fffffe          BL       cycle_traverse
000a36  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4710
000a3a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4710
000a3e  f7fffffe          BL       __aeabi_cdcmpeq
000a42  d00c              BEQ      |L33.2654|
000a44  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4710
000a48  e9cd0102          STRD     r0,r1,[sp,#8]         ;4710
000a4c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4710
000a50  e9cd0100          STRD     r0,r1,[sp,#0]         ;4710
000a54  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4710
000a58  981b              LDR      r0,[sp,#0x6c]         ;4710
000a5a  f7fffffe          BL       cycle_traverse
                  |L33.2654|
000a5e  9832              LDR      r0,[sp,#0xc8]         ;4710
000a60  f5004030          ADD      r0,r0,#0xb000         ;4710
000a64  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4710
000a68  9008              STR      r0,[sp,#0x20]         ;4710
000a6a  9831              LDR      r0,[sp,#0xc4]         ;4710
000a6c  f50070d8          ADD      r0,r0,#0x1b0          ;4710
000a70  c803              LDM      r0,{r0,r1}            ;4710
000a72  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4710
000a76  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4710
000a7a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4710
000a7e  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4710
000a82  e9cd0102          STRD     r0,r1,[sp,#8]         ;4710
000a86  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4710
000a8a  e9cd0100          STRD     r0,r1,[sp,#0]         ;4710
000a8e  2003              MOVS     r0,#3                 ;4710
000a90  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4710
000a94  f7fffffe          BL       convert_cycle_g86
000a98  9015              STR      r0,[sp,#0x54]         ;4710
000a9a  b338              CBZ      r0,|L33.2796|
000a9c  4894              LDR      r0,|L33.3312|
000a9e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4710
000aa2  2831              CMP      r0,#0x31              ;4710
000aa4  da20              BGE      |L33.2792|
000aa6  4892              LDR      r0,|L33.3312|
000aa8  f8d0214c          LDR      r2,[r0,#0x14c]        ;4710
000aac  f8d0014c          LDR      r0,[r0,#0x14c]        ;4710
000ab0  e000              B        |L33.2740|
                  |L33.2738|
000ab2  e28c              B        |L33.4046|
                  |L33.2740|
000ab4  1c40              ADDS     r0,r0,#1              ;4710
000ab6  498e              LDR      r1,|L33.3312|
000ab8  f8c1014c          STR      r0,[r1,#0x14c]        ;4710
000abc  eb020082          ADD      r0,r2,r2,LSL #2       ;4710
000ac0  498d              LDR      r1,|L33.3320|
000ac2  eb011000          ADD      r0,r1,r0,LSL #4       ;4710
000ac6  498b              LDR      r1,|L33.3316|
000ac8  9014              STR      r0,[sp,#0x50]         ;4710
000aca  f7fffffe          BL       strcpy
000ace  f04f0100          MOV      r1,#0                 ;4710
000ad2  4887              LDR      r0,|L33.3312|
000ad4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4710
000ad8  eb000080          ADD      r0,r0,r0,LSL #2       ;4710
000adc  4a86              LDR      r2,|L33.3320|
000ade  eb021000          ADD      r0,r2,r0,LSL #4       ;4710
000ae2  7001              STRB     r1,[r0,#0]            ;4710
000ae4  9815              LDR      r0,[sp,#0x54]         ;4710
                  |L33.2790|
000ae6  e45a              B        |L33.926|
                  |L33.2792|
000ae8  9815              LDR      r0,[sp,#0x54]         ;4710
000aea  e458              B        |L33.926|
                  |L33.2796|
000aec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4710
000af0  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4710
000af4  9817              LDR      r0,[sp,#0x5c]         ;4710
000af6  f1a00001          SUB      r0,r0,#1              ;4710
000afa  9017              STR      r0,[sp,#0x5c]         ;4710
                  |L33.2812|
000afc  9817              LDR      r0,[sp,#0x5c]         ;4710
000afe  2800              CMP      r0,#0                 ;4710
000b00  f73faf7c          BGT      |L33.2556|
000b04  9831              LDR      r0,[sp,#0xc4]         ;4712
000b06  f50070d8          ADD      r0,r0,#0x1b0          ;4712
000b0a  c806              LDM      r0!,{r1,r2}           ;4712
000b0c  9832              LDR      r0,[sp,#0xc8]         ;4712
000b0e  f5007078          ADD      r0,r0,#0x3e0          ;4712
000b12  c006              STM      r0!,{r1,r2}           ;4712
                  |L33.2836|
000b14  e360              B        |L33.4568|
                  |L33.2838|
000b16  9832              LDR      r0,[sp,#0xc8]         ;4715
000b18  f8d01628          LDR      r1,[r0,#0x628]        ;4715
000b1c  f5a17040          SUB      r0,r1,#0x300          ;4715
000b20  3866              SUBS     r0,r0,#0x66           ;4715
000b22  d07d              BEQ      |L33.3104|
000b24  9831              LDR      r0,[sp,#0xc4]         ;4717
000b26  f8d0014c          LDR      r0,[r0,#0x14c]        ;4717
000b2a  bb30              CBNZ     r0,|L33.2938|
000b2c  f04f0100          MOV      r1,#0                 ;4717
000b30  486f              LDR      r0,|L33.3312|
000b32  f8c0114c          STR      r1,[r0,#0x14c]        ;4717
000b36  f8d0214c          LDR      r2,[r0,#0x14c]        ;4717
000b3a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4717
000b3e  f1000001          ADD      r0,r0,#1              ;4717
000b42  496b              LDR      r1,|L33.3312|
000b44  f8c1014c          STR      r0,[r1,#0x14c]        ;4717
000b48  eb020082          ADD      r0,r2,r2,LSL #2       ;4717
000b4c  496a              LDR      r1,|L33.3320|
000b4e  eb011000          ADD      r0,r1,r0,LSL #4       ;4717
000b52  4968              LDR      r1,|L33.3316|
000b54  9014              STR      r0,[sp,#0x50]         ;4717
000b56  f7fffffe          BL       strcpy
000b5a  f04f0100          MOV      r1,#0                 ;4717
000b5e  4864              LDR      r0,|L33.3312|
000b60  f8d0014c          LDR      r0,[r0,#0x14c]        ;4717
000b64  eb000080          ADD      r0,r0,r0,LSL #2       ;4717
000b68  4a63              LDR      r2,|L33.3320|
000b6a  eb021000          ADD      r0,r2,r0,LSL #4       ;4717
000b6e  7001              STRB     r1,[r0,#0]            ;4717
000b70  f04f0057          MOV      r0,#0x57              ;4717
000b74  e413              B        |L33.926|
                  |L33.2934|
000b76  e301              B        |L33.4476|
                  |L33.2936|
000b78  e14e              B        |L33.3608|
                  |L33.2938|
000b7a  9831              LDR      r0,[sp,#0xc4]         ;4718
000b7c  f8d00158          LDR      r0,[r0,#0x158]        ;4718
000b80  bb20              CBNZ     r0,|L33.3020|
000b82  f04f0100          MOV      r1,#0                 ;4718
000b86  485a              LDR      r0,|L33.3312|
000b88  f8c0114c          STR      r1,[r0,#0x14c]        ;4718
000b8c  f8d0214c          LDR      r2,[r0,#0x14c]        ;4718
000b90  f8d0014c          LDR      r0,[r0,#0x14c]        ;4718
000b94  f1000001          ADD      r0,r0,#1              ;4718
000b98  4955              LDR      r1,|L33.3312|
000b9a  f8c1014c          STR      r0,[r1,#0x14c]        ;4718
000b9e  eb020082          ADD      r0,r2,r2,LSL #2       ;4718
000ba2  4955              LDR      r1,|L33.3320|
000ba4  eb011000          ADD      r0,r1,r0,LSL #4       ;4718
000ba8  4952              LDR      r1,|L33.3316|
000baa  9014              STR      r0,[sp,#0x50]         ;4718
000bac  f7fffffe          BL       strcpy
000bb0  f04f0100          MOV      r1,#0                 ;4718
000bb4  484e              LDR      r0,|L33.3312|
000bb6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4718
000bba  eb000080          ADD      r0,r0,r0,LSL #2       ;4718
000bbe  4a4e              LDR      r2,|L33.3320|
000bc0  eb021000          ADD      r0,r2,r0,LSL #4       ;4718
000bc4  7001              STRB     r1,[r0,#0]            ;4718
000bc6  f04f005a          MOV      r0,#0x5a              ;4718
000bca  e436              B        |L33.1082|
                  |L33.3020|
000bcc  9831              LDR      r0,[sp,#0xc4]         ;4719
000bce  f8d00168          LDR      r0,[r0,#0x168]        ;4719
000bd2  bb20              CBNZ     r0,|L33.3102|
000bd4  f04f0100          MOV      r1,#0                 ;4719
000bd8  4845              LDR      r0,|L33.3312|
000bda  f8c0114c          STR      r1,[r0,#0x14c]        ;4719
000bde  f8d0214c          LDR      r2,[r0,#0x14c]        ;4719
000be2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4719
000be6  f1000001          ADD      r0,r0,#1              ;4719
000bea  4941              LDR      r1,|L33.3312|
000bec  f8c1014c          STR      r0,[r1,#0x14c]        ;4719
000bf0  eb020082          ADD      r0,r2,r2,LSL #2       ;4719
000bf4  4940              LDR      r1,|L33.3320|
000bf6  eb011000          ADD      r0,r1,r0,LSL #4       ;4719
000bfa  493e              LDR      r1,|L33.3316|
000bfc  9014              STR      r0,[sp,#0x50]         ;4719
000bfe  f7fffffe          BL       strcpy
000c02  f04f0100          MOV      r1,#0                 ;4719
000c06  483a              LDR      r0,|L33.3312|
000c08  f8d0014c          LDR      r0,[r0,#0x14c]        ;4719
000c0c  eb000080          ADD      r0,r0,r0,LSL #2       ;4719
000c10  4a39              LDR      r2,|L33.3320|
000c12  eb021000          ADD      r0,r2,r0,LSL #4       ;4719
000c16  7001              STRB     r1,[r0,#0]            ;4719
000c18  f04f005d          MOV      r0,#0x5d              ;4719
000c1c  e40d              B        |L33.1082|
                  |L33.3102|
000c1e  e7ff              B        |L33.3104|
                  |L33.3104|
000c20  9831              LDR      r0,[sp,#0xc4]         ;4721
000c22  f8d0014c          LDR      r0,[r0,#0x14c]        ;4721
000c26  2801              CMP      r0,#1                 ;4721
000c28  d104              BNE      |L33.3124|
000c2a  9931              LDR      r1,[sp,#0xc4]         ;4721
000c2c  f50171a8          ADD      r1,r1,#0x150          ;4721
000c30  c903              LDM      r1,{r0,r1}            ;4721
000c32  e003              B        |L33.3132|
                  |L33.3124|
000c34  9932              LDR      r1,[sp,#0xc8]         ;4721
000c36  f5017170          ADD      r1,r1,#0x3c0          ;4721
000c3a  c903              LDM      r1,{r0,r1}            ;4721
                  |L33.3132|
000c3c  e9cd0122          STRD     r0,r1,[sp,#0x88]      ;4721
000c40  9831              LDR      r0,[sp,#0xc4]         ;4722
000c42  f8d00158          LDR      r0,[r0,#0x158]        ;4722
000c46  2801              CMP      r0,#1                 ;4722
000c48  d104              BNE      |L33.3156|
000c4a  9931              LDR      r1,[sp,#0xc4]         ;4722
000c4c  f50171b0          ADD      r1,r1,#0x160          ;4722
000c50  c903              LDM      r1,{r0,r1}            ;4722
000c52  e003              B        |L33.3164|
                  |L33.3156|
000c54  9932              LDR      r1,[sp,#0xc8]         ;4722
000c56  f5017172          ADD      r1,r1,#0x3c8          ;4722
000c5a  c903              LDM      r1,{r0,r1}            ;4722
                  |L33.3164|
000c5c  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;4722
000c60  9831              LDR      r0,[sp,#0xc4]         ;4723
000c62  f8d00168          LDR      r0,[r0,#0x168]        ;4723
000c66  2801              CMP      r0,#1                 ;4723
000c68  d104              BNE      |L33.3188|
000c6a  9931              LDR      r1,[sp,#0xc4]         ;4723
000c6c  f50171b8          ADD      r1,r1,#0x170          ;4723
000c70  c903              LDM      r1,{r0,r1}            ;4723
000c72  e003              B        |L33.3196|
                  |L33.3188|
000c74  9932              LDR      r1,[sp,#0xc8]         ;4723
000c76  f5017174          ADD      r1,r1,#0x3d0          ;4723
000c7a  c903              LDM      r1,{r0,r1}            ;4723
                  |L33.3196|
000c7c  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;4723
000c80  9a32              LDR      r2,[sp,#0xc8]         ;4724
000c82  e9dd1022          LDRD     r1,r0,[sp,#0x88]      ;4724
000c86  f8c213c0          STR      r1,[r2,#0x3c0]        ;4724
000c8a  f8c203c4          STR      r0,[r2,#0x3c4]        ;4724
000c8e  9a32              LDR      r2,[sp,#0xc8]         ;4725
000c90  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;4725
000c94  f5027272          ADD      r2,r2,#0x3c8          ;4725
000c98  c203              STM      r2!,{r0,r1}           ;4725
000c9a  9a32              LDR      r2,[sp,#0xc8]         ;4726
000c9c  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;4726
000ca0  f5027274          ADD      r2,r2,#0x3d0          ;4726
000ca4  c203              STM      r2!,{r0,r1}           ;4726
000ca6  9832              LDR      r0,[sp,#0xc8]         ;4727
000ca8  f89003f8          LDRB     r0,[r0,#0x3f8]        ;4727
000cac  2801              CMP      r0,#1                 ;4727
000cae  d107              BNE      |L33.3264|
000cb0  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;4729
000cb4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4729
000cb8  f7fffffe          BL       __aeabi_dadd
000cbc  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;4729
                  |L33.3264|
000cc0  9831              LDR      r0,[sp,#0xc4]         ;4731
000cc2  f8d00178          LDR      r0,[r0,#0x178]        ;4731
000cc6  9017              STR      r0,[sp,#0x5c]         ;4731
000cc8  e0a1              B        |L33.3598|
                  |L33.3274|
000cca  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4731
000cce  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4731
000cd2  f7fffffe          BL       __aeabi_dadd
000cd6  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4731
000cda  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4731
000cde  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4731
000ce2  f7fffffe          BL       __aeabi_dadd
000ce6  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4731
000cea  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4731
000cee  e007              B        |L33.3328|
                  |L33.3312|
                          DCD      _setup+0xc000
                  |L33.3316|
                          DCD      |symbol_number.460|
                  |L33.3320|
                          DCD      _setup+0xb1ac
                  |L33.3324|
                          DCD      0xbff00000
                  |L33.3328|
000d00  e9cd0102          STRD     r0,r1,[sp,#8]         ;4731
000d04  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4731
000d08  e9cd0100          STRD     r0,r1,[sp,#0]         ;4731
000d0c  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4731
000d10  981b              LDR      r0,[sp,#0x6c]         ;4731
000d12  f7fffffe          BL       cycle_traverse
000d16  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4731
000d1a  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4731
000d1e  f7fffffe          BL       __aeabi_cdcmpeq
000d22  d00c              BEQ      |L33.3390|
000d24  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4731
000d28  e9cd0102          STRD     r0,r1,[sp,#8]         ;4731
000d2c  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4731
000d30  e9cd0100          STRD     r0,r1,[sp,#0]         ;4731
000d34  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4731
000d38  981b              LDR      r0,[sp,#0x6c]         ;4731
000d3a  f7fffffe          BL       cycle_traverse
                  |L33.3390|
000d3e  e9dd2322          LDRD     r2,r3,[sp,#0x88]      ;4731
000d42  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4731
000d46  f7fffffe          BL       __aeabi_dadd
000d4a  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4731
000d4e  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;4731
000d52  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4731
000d56  f7fffffe          BL       __aeabi_dadd
000d5a  e9cd0110          STRD     r0,r1,[sp,#0x40]      ;4731
000d5e  9832              LDR      r0,[sp,#0xc8]         ;4731
000d60  f5004030          ADD      r0,r0,#0xb000         ;4731
000d64  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4731
000d68  900e              STR      r0,[sp,#0x38]         ;4731
000d6a  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4731
000d6e  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;4731
000d72  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;4731
000d76  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;4731
000d7a  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4731
000d7e  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;4731
000d82  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4731
000d86  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4731
000d8a  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;4731
000d8e  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4731
000d92  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4731
000d96  e9cd0102          STRD     r0,r1,[sp,#8]         ;4731
000d9a  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;4731
000d9e  e9cd0100          STRD     r0,r1,[sp,#0]         ;4731
000da2  2003              MOVS     r0,#3                 ;4731
000da4  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4731
000da8  f7fffffe          BL       convert_cycle_g87
000dac  9015              STR      r0,[sp,#0x54]         ;4731
000dae  b330              CBZ      r0,|L33.3582|
000db0  48ff              LDR      r0,|L33.4528|
000db2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4731
000db6  2831              CMP      r0,#0x31              ;4731
000db8  da1f              BGE      |L33.3578|
000dba  48fd              LDR      r0,|L33.4528|
000dbc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4731
000dc0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4731
000dc4  1c40              ADDS     r0,r0,#1              ;4731
000dc6  49fa              LDR      r1,|L33.4528|
000dc8  f8c1014c          STR      r0,[r1,#0x14c]        ;4731
000dcc  eb020082          ADD      r0,r2,r2,LSL #2       ;4731
000dd0  f6a16154          SUB      r1,r1,#0xe54          ;4731
000dd4  eb011000          ADD      r0,r1,r0,LSL #4       ;4731
000dd8  49f6              LDR      r1,|L33.4532|
000dda  9014              STR      r0,[sp,#0x50]         ;4731
000ddc  f7fffffe          BL       strcpy
000de0  f04f0100          MOV      r1,#0                 ;4731
000de4  48f2              LDR      r0,|L33.4528|
000de6  f8d0014c          LDR      r0,[r0,#0x14c]        ;4731
000dea  eb000080          ADD      r0,r0,r0,LSL #2       ;4731
000dee  4af2              LDR      r2,|L33.4536|
000df0  eb021000          ADD      r0,r2,r0,LSL #4       ;4731
000df4  7001              STRB     r1,[r0,#0]            ;4731
000df6  9815              LDR      r0,[sp,#0x54]         ;4731
000df8  e487              B        |L33.1802|
                  |L33.3578|
000dfa  9815              LDR      r0,[sp,#0x54]         ;4731
000dfc  e485              B        |L33.1802|
                  |L33.3582|
000dfe  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4731
000e02  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4731
000e06  9817              LDR      r0,[sp,#0x5c]         ;4731
000e08  f1a00001          SUB      r0,r0,#1              ;4731
000e0c  9017              STR      r0,[sp,#0x5c]         ;4731
                  |L33.3598|
000e0e  9817              LDR      r0,[sp,#0x5c]         ;4731
000e10  2800              CMP      r0,#0                 ;4731
000e12  f73faf5a          BGT      |L33.3274|
000e16  e1df              B        |L33.4568|
                  |L33.3608|
000e18  9832              LDR      r0,[sp,#0xc8]         ;4735
000e1a  f8d00628          LDR      r0,[r0,#0x628]        ;4735
000e1e  f5b07f5c          CMP      r0,#0x370             ;4735
000e22  d02f              BEQ      |L33.3716|
000e24  9931              LDR      r1,[sp,#0xc4]         ;4735
000e26  f50171d8          ADD      r1,r1,#0x1b0          ;4735
000e2a  c903              LDM      r1,{r0,r1}            ;4735
000e2c  2200              MOVS     r2,#0                 ;4735
000e2e  4be3              LDR      r3,|L33.4540|
000e30  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4735
000e34  f7fffffe          BL       __aeabi_cdcmpeq
000e38  d124              BNE      |L33.3716|
000e3a  f04f0100          MOV      r1,#0                 ;4735
000e3e  48dc              LDR      r0,|L33.4528|
000e40  f8c0114c          STR      r1,[r0,#0x14c]        ;4735
000e44  f8d0214c          LDR      r2,[r0,#0x14c]        ;4735
000e48  f8d0014c          LDR      r0,[r0,#0x14c]        ;4735
000e4c  f1000001          ADD      r0,r0,#1              ;4735
000e50  49d7              LDR      r1,|L33.4528|
000e52  f8c1014c          STR      r0,[r1,#0x14c]        ;4735
000e56  eb020082          ADD      r0,r2,r2,LSL #2       ;4735
000e5a  49d7              LDR      r1,|L33.4536|
000e5c  eb011000          ADD      r0,r1,r0,LSL #4       ;4735
000e60  49d4              LDR      r1,|L33.4532|
000e62  9014              STR      r0,[sp,#0x50]         ;4735
000e64  f7fffffe          BL       strcpy
000e68  f04f0100          MOV      r1,#0                 ;4735
000e6c  48d0              LDR      r0,|L33.4528|
000e6e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4735
000e72  eb000080          ADD      r0,r0,r0,LSL #2       ;4735
000e76  4ad0              LDR      r2,|L33.4536|
000e78  eb021000          ADD      r0,r2,r0,LSL #4       ;4735
000e7c  7001              STRB     r1,[r0,#0]            ;4735
000e7e  f04f004b          MOV      r0,#0x4b              ;4735
000e82  e442              B        |L33.1802|
                  |L33.3716|
000e84  9931              LDR      r1,[sp,#0xc4]         ;4737
000e86  f50171d8          ADD      r1,r1,#0x1b0          ;4737
000e8a  c903              LDM      r1,{r0,r1}            ;4737
000e8c  2200              MOVS     r2,#0                 ;4737
000e8e  4bcb              LDR      r3,|L33.4540|
000e90  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4737
000e94  f7fffffe          BL       __aeabi_cdcmpeq
000e98  d104              BNE      |L33.3748|
000e9a  9932              LDR      r1,[sp,#0xc8]         ;4738
000e9c  f5017178          ADD      r1,r1,#0x3e0          ;4738
000ea0  c903              LDM      r1,{r0,r1}            ;4738
000ea2  e003              B        |L33.3756|
                  |L33.3748|
000ea4  9931              LDR      r1,[sp,#0xc4]         ;4738
000ea6  f50171d8          ADD      r1,r1,#0x1b0          ;4738
000eaa  c903              LDM      r1,{r0,r1}            ;4738
                  |L33.3756|
000eac  9a31              LDR      r2,[sp,#0xc4]         ;4738
000eae  f50272d8          ADD      r2,r2,#0x1b0          ;4738
000eb2  c203              STM      r2!,{r0,r1}           ;4738
000eb4  9831              LDR      r0,[sp,#0xc4]         ;4739
000eb6  f8d00178          LDR      r0,[r0,#0x178]        ;4739
000eba  9017              STR      r0,[sp,#0x5c]         ;4739
000ebc  e079              B        |L33.4018|
                  |L33.3774|
000ebe  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4739
000ec2  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4739
000ec6  f7fffffe          BL       __aeabi_dadd
000eca  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4739
000ece  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4739
000ed2  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4739
000ed6  f7fffffe          BL       __aeabi_dadd
000eda  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4739
000ede  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4739
000ee2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4739
000ee6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4739
000eea  e9cd0100          STRD     r0,r1,[sp,#0]         ;4739
000eee  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4739
000ef2  981b              LDR      r0,[sp,#0x6c]         ;4739
000ef4  f7fffffe          BL       cycle_traverse
000ef8  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4739
000efc  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4739
000f00  f7fffffe          BL       __aeabi_cdcmpeq
000f04  d00c              BEQ      |L33.3872|
000f06  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4739
000f0a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4739
000f0e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4739
000f12  e9cd0100          STRD     r0,r1,[sp,#0]         ;4739
000f16  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4739
000f1a  981b              LDR      r0,[sp,#0x6c]         ;4739
000f1c  f7fffffe          BL       cycle_traverse
                  |L33.3872|
000f20  9832              LDR      r0,[sp,#0xc8]         ;4739
000f22  f5004030          ADD      r0,r0,#0xb000         ;4739
000f26  f8d001a8          LDR      r0,[r0,#0x1a8]        ;4739
000f2a  9006              STR      r0,[sp,#0x18]         ;4739
000f2c  9831              LDR      r0,[sp,#0xc4]         ;4739
000f2e  f50070d8          ADD      r0,r0,#0x1b0          ;4739
000f32  c803              LDM      r0,{r0,r1}            ;4739
000f34  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4739
000f38  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4739
000f3c  e9cd0102          STRD     r0,r1,[sp,#8]         ;4739
000f40  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4739
000f44  e9cd0100          STRD     r0,r1,[sp,#0]         ;4739
000f48  2003              MOVS     r0,#3                 ;4739
000f4a  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4739
000f4e  f7fffffe          BL       convert_cycle_g88
000f52  9015              STR      r0,[sp,#0x54]         ;4739
000f54  b328              CBZ      r0,|L33.4002|
000f56  4896              LDR      r0,|L33.4528|
000f58  f8d0014c          LDR      r0,[r0,#0x14c]        ;4739
000f5c  2831              CMP      r0,#0x31              ;4739
000f5e  da1e              BGE      |L33.3998|
000f60  4893              LDR      r0,|L33.4528|
000f62  f8d0214c          LDR      r2,[r0,#0x14c]        ;4739
000f66  f8d0014c          LDR      r0,[r0,#0x14c]        ;4739
000f6a  1c40              ADDS     r0,r0,#1              ;4739
000f6c  4990              LDR      r1,|L33.4528|
000f6e  f8c1014c          STR      r0,[r1,#0x14c]        ;4739
000f72  eb020082          ADD      r0,r2,r2,LSL #2       ;4739
000f76  4990              LDR      r1,|L33.4536|
000f78  eb011000          ADD      r0,r1,r0,LSL #4       ;4739
000f7c  498d              LDR      r1,|L33.4532|
000f7e  9014              STR      r0,[sp,#0x50]         ;4739
000f80  f7fffffe          BL       strcpy
000f84  f04f0100          MOV      r1,#0                 ;4739
000f88  4889              LDR      r0,|L33.4528|
000f8a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4739
000f8e  eb000080          ADD      r0,r0,r0,LSL #2       ;4739
000f92  4a89              LDR      r2,|L33.4536|
000f94  eb021000          ADD      r0,r2,r0,LSL #4       ;4739
000f98  7001              STRB     r1,[r0,#0]            ;4739
000f9a  9815              LDR      r0,[sp,#0x54]         ;4739
000f9c  e446              B        |L33.2092|
                  |L33.3998|
000f9e  9815              LDR      r0,[sp,#0x54]         ;4739
000fa0  e444              B        |L33.2092|
                  |L33.4002|
000fa2  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4739
000fa6  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4739
000faa  9817              LDR      r0,[sp,#0x5c]         ;4739
000fac  f1a00001          SUB      r0,r0,#1              ;4739
000fb0  9017              STR      r0,[sp,#0x5c]         ;4739
                  |L33.4018|
000fb2  9817              LDR      r0,[sp,#0x5c]         ;4739
000fb4  2800              CMP      r0,#0                 ;4739
000fb6  dc82              BGT      |L33.3774|
000fb8  9831              LDR      r0,[sp,#0xc4]         ;4741
000fba  f8d021b0          LDR      r2,[r0,#0x1b0]        ;4741
000fbe  f8d011b4          LDR      r1,[r0,#0x1b4]        ;4741
000fc2  9832              LDR      r0,[sp,#0xc8]         ;4741
000fc4  f8c023e0          STR      r2,[r0,#0x3e0]        ;4741
000fc8  f8c013e4          STR      r1,[r0,#0x3e4]        ;4741
000fcc  e104              B        |L33.4568|
                  |L33.4046|
000fce  9832              LDR      r0,[sp,#0xc8]         ;4744
000fd0  f8d00628          LDR      r0,[r0,#0x628]        ;4744
000fd4  f5a07140          SUB      r1,r0,#0x300          ;4744
000fd8  397a              SUBS     r1,r1,#0x7a           ;4744
000fda  d02f              BEQ      |L33.4156|
000fdc  9931              LDR      r1,[sp,#0xc4]         ;4744
000fde  f50171d8          ADD      r1,r1,#0x1b0          ;4744
000fe2  c903              LDM      r1,{r0,r1}            ;4744
000fe4  2200              MOVS     r2,#0                 ;4744
000fe6  4b75              LDR      r3,|L33.4540|
000fe8  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4744
000fec  f7fffffe          BL       __aeabi_cdcmpeq
000ff0  d124              BNE      |L33.4156|
000ff2  f04f0100          MOV      r1,#0                 ;4744
000ff6  486e              LDR      r0,|L33.4528|
000ff8  f8c0114c          STR      r1,[r0,#0x14c]        ;4744
000ffc  f8d0214c          LDR      r2,[r0,#0x14c]        ;4744
001000  f8d0014c          LDR      r0,[r0,#0x14c]        ;4744
001004  f1000001          ADD      r0,r0,#1              ;4744
001008  4969              LDR      r1,|L33.4528|
00100a  f8c1014c          STR      r0,[r1,#0x14c]        ;4744
00100e  eb020082          ADD      r0,r2,r2,LSL #2       ;4744
001012  4969              LDR      r1,|L33.4536|
001014  eb011000          ADD      r0,r1,r0,LSL #4       ;4744
001018  4966              LDR      r1,|L33.4532|
00101a  9014              STR      r0,[sp,#0x50]         ;4744
00101c  f7fffffe          BL       strcpy
001020  f04f0100          MOV      r1,#0                 ;4744
001024  4862              LDR      r0,|L33.4528|
001026  f8d0014c          LDR      r0,[r0,#0x14c]        ;4744
00102a  eb000080          ADD      r0,r0,r0,LSL #2       ;4744
00102e  4a62              LDR      r2,|L33.4536|
001030  eb021000          ADD      r0,r2,r0,LSL #4       ;4744
001034  7001              STRB     r1,[r0,#0]            ;4744
001036  f04f004c          MOV      r0,#0x4c              ;4744
00103a  e47d              B        |L33.2360|
                  |L33.4156|
00103c  9931              LDR      r1,[sp,#0xc4]         ;4746
00103e  f50171d8          ADD      r1,r1,#0x1b0          ;4746
001042  c903              LDM      r1,{r0,r1}            ;4746
001044  2200              MOVS     r2,#0                 ;4746
001046  4b5d              LDR      r3,|L33.4540|
001048  e9cd0112          STRD     r0,r1,[sp,#0x48]      ;4746
00104c  f7fffffe          BL       __aeabi_cdcmpeq
001050  d104              BNE      |L33.4188|
001052  9932              LDR      r1,[sp,#0xc8]         ;4747
001054  f5017178          ADD      r1,r1,#0x3e0          ;4747
001058  c903              LDM      r1,{r0,r1}            ;4747
00105a  e003              B        |L33.4196|
                  |L33.4188|
00105c  9931              LDR      r1,[sp,#0xc4]         ;4747
00105e  f50171d8          ADD      r1,r1,#0x1b0          ;4747
001062  c903              LDM      r1,{r0,r1}            ;4747
                  |L33.4196|
001064  9a31              LDR      r2,[sp,#0xc4]         ;4747
001066  f50272d8          ADD      r2,r2,#0x1b0          ;4747
00106a  c203              STM      r2!,{r0,r1}           ;4747
00106c  9831              LDR      r0,[sp,#0xc4]         ;4748
00106e  f8d00178          LDR      r0,[r0,#0x178]        ;4748
001072  9017              STR      r0,[sp,#0x5c]         ;4748
001074  e076              B        |L33.4452|
                  |L33.4214|
001076  e9dd232c          LDRD     r2,r3,[sp,#0xb0]      ;4748
00107a  e9dd012e          LDRD     r0,r1,[sp,#0xb8]      ;4748
00107e  f7fffffe          BL       __aeabi_dadd
001082  e9cd012e          STRD     r0,r1,[sp,#0xb8]      ;4748
001086  e9dd2328          LDRD     r2,r3,[sp,#0xa0]      ;4748
00108a  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4748
00108e  f7fffffe          BL       __aeabi_dadd
001092  e9cd012a          STRD     r0,r1,[sp,#0xa8]      ;4748
001096  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4748
00109a  e9cd0102          STRD     r0,r1,[sp,#8]         ;4748
00109e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4748
0010a2  e9cd0100          STRD     r0,r1,[sp,#0]         ;4748
0010a6  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4748
0010aa  981b              LDR      r0,[sp,#0x6c]         ;4748
0010ac  f7fffffe          BL       cycle_traverse
0010b0  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;4748
0010b4  e9dd011c          LDRD     r0,r1,[sp,#0x70]      ;4748
0010b8  f7fffffe          BL       __aeabi_cdcmpeq
0010bc  d00c              BEQ      |L33.4312|
0010be  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;4748
0010c2  e9cd0102          STRD     r0,r1,[sp,#8]         ;4748
0010c6  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4748
0010ca  e9cd0100          STRD     r0,r1,[sp,#0]         ;4748
0010ce  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4748
0010d2  981b              LDR      r0,[sp,#0x6c]         ;4748
0010d4  f7fffffe          BL       cycle_traverse
                  |L33.4312|
0010d8  9931              LDR      r1,[sp,#0xc4]         ;4748
0010da  f50171d8          ADD      r1,r1,#0x1b0          ;4748
0010de  c903              LDM      r1,{r0,r1}            ;4748
0010e0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;4748
0010e4  e9dd0126          LDRD     r0,r1,[sp,#0x98]      ;4748
0010e8  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;4748
0010ec  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4748
0010f0  e9cd0102          STRD     r0,r1,[sp,#8]         ;4748
0010f4  e9dd012a          LDRD     r0,r1,[sp,#0xa8]      ;4748
0010f8  e9cd0100          STRD     r0,r1,[sp,#0]         ;4748
0010fc  2003              MOVS     r0,#3                 ;4748
0010fe  e9dd232e          LDRD     r2,r3,[sp,#0xb8]      ;4748
001102  f7fffffe          BL       convert_cycle_g89
001106  9015              STR      r0,[sp,#0x54]         ;4748
001108  b320              CBZ      r0,|L33.4436|
00110a  4829              LDR      r0,|L33.4528|
00110c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4748
001110  2831              CMP      r0,#0x31              ;4748
001112  da1d              BGE      |L33.4432|
001114  4826              LDR      r0,|L33.4528|
001116  f8d0214c          LDR      r2,[r0,#0x14c]        ;4748
00111a  f8d0114c          LDR      r1,[r0,#0x14c]        ;4748
00111e  1c49              ADDS     r1,r1,#1              ;4748
001120  f8c0114c          STR      r1,[r0,#0x14c]        ;4748
001124  eb020082          ADD      r0,r2,r2,LSL #2       ;4748
001128  4923              LDR      r1,|L33.4536|
00112a  eb011000          ADD      r0,r1,r0,LSL #4       ;4748
00112e  4921              LDR      r1,|L33.4532|
001130  9014              STR      r0,[sp,#0x50]         ;4748
001132  f7fffffe          BL       strcpy
001136  f04f0100          MOV      r1,#0                 ;4748
00113a  481d              LDR      r0,|L33.4528|
00113c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4748
001140  eb000080          ADD      r0,r0,r0,LSL #2       ;4748
001144  4a1c              LDR      r2,|L33.4536|
001146  eb021000          ADD      r0,r2,r0,LSL #4       ;4748
00114a  7001              STRB     r1,[r0,#0]            ;4748
00114c  9815              LDR      r0,[sp,#0x54]         ;4748
00114e  e437              B        |L33.2496|
                  |L33.4432|
001150  9815              LDR      r0,[sp,#0x54]         ;4748
001152  e435              B        |L33.2496|
                  |L33.4436|
001154  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4748
001158  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;4748
00115c  9817              LDR      r0,[sp,#0x5c]         ;4748
00115e  f1a00001          SUB      r0,r0,#1              ;4748
001162  9017              STR      r0,[sp,#0x5c]         ;4748
                  |L33.4452|
001164  9817              LDR      r0,[sp,#0x5c]         ;4748
001166  2800              CMP      r0,#0                 ;4748
001168  dc85              BGT      |L33.4214|
00116a  9831              LDR      r0,[sp,#0xc4]         ;4750
00116c  f50070d8          ADD      r0,r0,#0x1b0          ;4750
001170  c806              LDM      r0!,{r1,r2}           ;4750
001172  9832              LDR      r0,[sp,#0xc8]         ;4750
001174  f5007078          ADD      r0,r0,#0x3e0          ;4750
001178  c006              STM      r0!,{r1,r2}           ;4750
00117a  e02d              B        |L33.4568|
                  |L33.4476|
00117c  f04f0100          MOV      r1,#0                 ;4753
001180  480b              LDR      r0,|L33.4528|
001182  f8c0114c          STR      r1,[r0,#0x14c]        ;4753
001186  f8d0214c          LDR      r2,[r0,#0x14c]        ;4753
00118a  f8d0014c          LDR      r0,[r0,#0x14c]        ;4753
00118e  f1000001          ADD      r0,r0,#1              ;4753
001192  4907              LDR      r1,|L33.4528|
001194  f8c1014c          STR      r0,[r1,#0x14c]        ;4753
001198  eb020082          ADD      r0,r2,r2,LSL #2       ;4753
00119c  4906              LDR      r1,|L33.4536|
00119e  eb011000          ADD      r0,r1,r0,LSL #4       ;4753
0011a2  4904              LDR      r1,|L33.4532|
0011a4  9014              STR      r0,[sp,#0x50]         ;4753
0011a6  f7fffffe          BL       strcpy
0011aa  f04f0100          MOV      r1,#0                 ;4753
0011ae  e007              B        |L33.4544|
                  |L33.4528|
                          DCD      _setup+0xc000
                  |L33.4532|
                          DCD      |symbol_number.460|
                  |L33.4536|
                          DCD      _setup+0xb1ac
                  |L33.4540|
                          DCD      0xbff00000
                  |L33.4544|
0011c0  4818              LDR      r0,|L33.4644|
0011c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4753
0011c6  eb000080          ADD      r0,r0,r0,LSL #2       ;4753
0011ca  4a17              LDR      r2,|L33.4648|
0011cc  eb021000          ADD      r0,r2,r0,LSL #4       ;4753
0011d0  7001              STRB     r1,[r0,#0]            ;4753
0011d2  f04f0020          MOV      r0,#0x20              ;4753
0011d6  e486              B        |L33.2790|
                  |L33.4568|
0011d8  bf00              NOP                            ;4679
0011da  9a32              LDR      r2,[sp,#0xc8]         ;4755
0011dc  e9dd102e          LDRD     r1,r0,[sp,#0xb8]      ;4755
0011e0  f8c213a0          STR      r1,[r2,#0x3a0]        ;4755
0011e4  f8c203a4          STR      r0,[r2,#0x3a4]        ;4755
0011e8  9a32              LDR      r2,[sp,#0xc8]         ;4756
0011ea  e9dd102a          LDRD     r1,r0,[sp,#0xa8]      ;4756
0011ee  f8c21390          STR      r1,[r2,#0x390]        ;4756
0011f2  f8c20394          STR      r0,[r2,#0x394]        ;4756
0011f6  9a32              LDR      r2,[sp,#0xc8]         ;4757
0011f8  e9dd0124          LDRD     r0,r1,[sp,#0x90]      ;4757
0011fc  f5027266          ADD      r2,r2,#0x398          ;4757
001200  c203              STM      r2!,{r0,r1}           ;4757
001202  9931              LDR      r1,[sp,#0xc4]         ;4758
001204  f50171f8          ADD      r1,r1,#0x1f0          ;4758
001208  c905              LDM      r1!,{r0,r2}           ;4758
00120a  9932              LDR      r1,[sp,#0xc8]         ;4758
00120c  f501716e          ADD      r1,r1,#0x3b8          ;4758
001210  c105              STM      r1!,{r0,r2}           ;4758
001212  9816              LDR      r0,[sp,#0x58]         ;4760
001214  2802              CMP      r0,#2                 ;4760
001216  d002              BEQ      |L33.4638|
001218  9816              LDR      r0,[sp,#0x58]         ;4761
00121a  f7fffffe          BL       SET_MOTION_CONTROL_MODE
                  |L33.4638|
00121e  2000              MOVS     r0,#0                 ;4763
001220  e461              B        |L33.2790|
;;;4765   
                          ENDP

001222  0000              DCW      0x0000
                  |L33.4644|
                          DCD      _setup+0xc000
                  |L33.4648|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_dwell||, CODE, READONLY, ALIGN=1

                  convert_dwell PROC
;;;4779   
;;;4780       static int convert_dwell(                     /* ARGUMENTS                 */
000000  b570              PUSH     {r4-r6,lr}
;;;4781       double time)                                  /* time in seconds to dwell  */
;;;4782       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;4783           DWELL(time);
000006  4620              MOV      r0,r4
000008  4629              MOV      r1,r5
00000a  f7fffffe          BL       DWELL
;;;4784           return RS274NGC_OK;
00000e  2000              MOVS     r0,#0
;;;4785       }
000010  bd70              POP      {r4-r6,pc}
;;;4786   
                          ENDP


                          AREA ||i.convert_feed_mode||, CODE, READONLY, ALIGN=2

                  convert_feed_mode PROC
;;;4808   
;;;4809       static int convert_feed_mode(                 /* ARGUMENTS                                 */
000000  b570              PUSH     {r4-r6,lr}
;;;4810       int g_code,                                   /* g_code being executed (must be G_93 or G_94) */
;;;4811       setup_pointer settings)                       /* pointer to machine settings                  */
;;;4812       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;4813           static char name[] SET_TO "convert_feed_mode";
;;;4814           if (g_code IS G_93)
000006  f5a47040          SUB      r0,r4,#0x300
00000a  38a2              SUBS     r0,r0,#0xa2
00000c  d107              BNE      |L35.30|
;;;4815           {
;;;4816   #ifdef DEBUG_EMC
;;;4817               COMMENT("interpreter: feed mode set to inverse time");
00000e  a024              ADR      r0,|L35.160|
000010  f7fffffe          BL       COMMENT
;;;4818   #endif
;;;4819               settings->feed_mode SET_TO INVERSE_TIME;
000014  f04f0001          MOV      r0,#1
000018  f8c503fc          STR      r0,[r5,#0x3fc]
00001c  e03d              B        |L35.154|
                  |L35.30|
;;;4820           }
;;;4821           else if (g_code IS G_98)
00001e  f5b47f75          CMP      r4,#0x3d4
000022  d107              BNE      |L35.52|
;;;4822           {
;;;4823   #ifdef DEBUG_EMC
;;;4824               COMMENT("interpreter: feed mode set to units per minute");
000024  a029              ADR      r0,|L35.204|
000026  f7fffffe          BL       COMMENT
;;;4825   #endif
;;;4826               settings->feed_mode SET_TO UNITS_PER_MINUTE;
00002a  f04f0000          MOV      r0,#0
00002e  f8c503fc          STR      r0,[r5,#0x3fc]
000032  e032              B        |L35.154|
                  |L35.52|
;;;4827           }
;;;4828   		else if (g_code IS G_99)
000034  f5a47040          SUB      r0,r4,#0x300
000038  38de              SUBS     r0,r0,#0xde
00003a  d107              BNE      |L35.76|
;;;4829           {
;;;4830   #ifdef DEBUG_EMC
;;;4831               COMMENT("interpreter: feed mode set to units per revolution");
00003c  a02f              ADR      r0,|L35.252|
00003e  f7fffffe          BL       COMMENT
;;;4832   #endif
;;;4833               settings->feed_mode SET_TO UNITS_PER_REVOLUTION;
000042  f04f0002          MOV      r0,#2
000046  f8c503fc          STR      r0,[r5,#0x3fc]
00004a  e026              B        |L35.154|
                  |L35.76|
;;;4834           }
;;;4835   
;;;4836           else
;;;4837               ERM(NCE_BUG_CODE_NOT_G93_OR_G98);
00004c  f04f0100          MOV      r1,#0
000050  4837              LDR      r0,|L35.304|
000052  f8c0114c          STR      r1,[r0,#0x14c]
000056  4601              MOV      r1,r0
000058  f8d1314c          LDR      r3,[r1,#0x14c]
00005c  f8d1114c          LDR      r1,[r1,#0x14c]
000060  f1010101          ADD      r1,r1,#1
000064  4602              MOV      r2,r0
000066  f8c2114c          STR      r1,[r2,#0x14c]
00006a  eb030183          ADD      r1,r3,r3,LSL #2
00006e  f6a06254          SUB      r2,r0,#0xe54
000072  eb021101          ADD      r1,r2,r1,LSL #4
000076  4608              MOV      r0,r1
000078  492e              LDR      r1,|L35.308|
00007a  f7fffffe          BL       strcpy
00007e  f04f0100          MOV      r1,#0
000082  482b              LDR      r0,|L35.304|
000084  f8d0014c          LDR      r0,[r0,#0x14c]
000088  eb000080          ADD      r0,r0,r0,LSL #2
00008c  4a2a              LDR      r2,|L35.312|
00008e  eb021000          ADD      r0,r2,r0,LSL #4
000092  7001              STRB     r1,[r0,#0]
000094  f04f001a          MOV      r0,#0x1a
                  |L35.152|
;;;4838           return RS274NGC_OK;
;;;4839       }
000098  bd70              POP      {r4-r6,pc}
                  |L35.154|
00009a  2000              MOVS     r0,#0                 ;4838
00009c  e7fc              B        |L35.152|
;;;4840   
                          ENDP

00009e  0000              DCW      0x0000
                  |L35.160|
0000a0  696e7465          DCB      "interpreter: feed mode set to inverse time",0
0000a4  72707265
0000a8  7465723a
0000ac  20666565
0000b0  64206d6f
0000b4  64652073
0000b8  65742074
0000bc  6f20696e
0000c0  76657273
0000c4  65207469
0000c8  6d6500  
0000cb  00                DCB      0
                  |L35.204|
0000cc  696e7465          DCB      "interpreter: feed mode set to units per minute",0
0000d0  72707265
0000d4  7465723a
0000d8  20666565
0000dc  64206d6f
0000e0  64652073
0000e4  65742074
0000e8  6f20756e
0000ec  69747320
0000f0  70657220
0000f4  6d696e75
0000f8  746500  
0000fb  00                DCB      0
                  |L35.252|
0000fc  696e7465          DCB      "interpreter: feed mode set to units per revolution",0
000100  72707265
000104  7465723a
000108  20666565
00010c  64206d6f
000110  64652073
000114  65742074
000118  6f20756e
00011c  69747320
000120  70657220
000124  7265766f
000128  6c757469
00012c  6f6e00  
00012f  00                DCB      0
                  |L35.304|
                          DCD      _setup+0xc000
                  |L35.308|
                          DCD      |symbol_number.461|
                  |L35.312|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_feed_rate||, CODE, READONLY, ALIGN=1

                  convert_feed_rate PROC
;;;4857   
;;;4858       static int convert_feed_rate(                 /* ARGUMENTS                                */
000000  b570              PUSH     {r4-r6,lr}
;;;4859       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;4860       setup_pointer settings)                       /* pointer to machine settings              */
;;;4861       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;4862           SET_FEED_RATE(block->f_number);
000006  f8d41108          LDR      r1,[r4,#0x108]
00000a  460a              MOV      r2,r1
00000c  f8d4010c          LDR      r0,[r4,#0x10c]
000010  4603              MOV      r3,r0
000012  4610              MOV      r0,r2
000014  4619              MOV      r1,r3
000016  f7fffffe          BL       SET_FEED_RATE
;;;4863           settings->feed_rate SET_TO block->f_number;
00001a  f5047084          ADD      r0,r4,#0x108
00001e  c803              LDM      r0,{r0,r1}
000020  f5056281          ADD      r2,r5,#0x408
000024  c203              STM      r2!,{r0,r1}
;;;4864           return RS274NGC_OK;
000026  2000              MOVS     r0,#0
;;;4865       }
000028  bd70              POP      {r4-r6,pc}
;;;4866   
                          ENDP


                          AREA ||i.convert_g||, CODE, READONLY, ALIGN=2

                  convert_g PROC
;;;4922   
;;;4923       static int convert_g(                         /* ARGUMENTS                                    */
000000  b570              PUSH     {r4-r6,lr}
;;;4924       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;4925       setup_pointer settings)                       /* pointer to machine settings                  */
;;;4926       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;4927           static char name[] SET_TO "convert_g";
;;;4928           int status;
;;;4929   
;;;4930           if (block->g_modes[0] IS G_4)
000006  f8d40110          LDR      r0,[r4,#0x110]
00000a  2828              CMP      r0,#0x28
00000c  d132              BNE      |L37.116|
;;;4931           {
;;;4932               CHP(convert_dwell(block->p_number));
00000e  f8d411b0          LDR      r1,[r4,#0x1b0]
000012  460a              MOV      r2,r1
000014  f8d401b4          LDR      r0,[r4,#0x1b4]
000018  4603              MOV      r3,r0
00001a  4610              MOV      r0,r2
00001c  4619              MOV      r1,r3
00001e  f7fffffe          BL       convert_dwell
000022  0006              MOVS     r6,r0
000024  d026              BEQ      |L37.116|
000026  48fc              LDR      r0,|L37.1048|
000028  f8d0014c          LDR      r0,[r0,#0x14c]
00002c  2831              CMP      r0,#0x31
00002e  da1f              BGE      |L37.112|
000030  49f9              LDR      r1,|L37.1048|
000032  f8d1314c          LDR      r3,[r1,#0x14c]
000036  f8d1114c          LDR      r1,[r1,#0x14c]
00003a  1c49              ADDS     r1,r1,#1
00003c  4af6              LDR      r2,|L37.1048|
00003e  f8c2114c          STR      r1,[r2,#0x14c]
000042  eb030183          ADD      r1,r3,r3,LSL #2
000046  f6a26254          SUB      r2,r2,#0xe54
00004a  eb021101          ADD      r1,r2,r1,LSL #4
00004e  4608              MOV      r0,r1
000050  49f2              LDR      r1,|L37.1052|
000052  f7fffffe          BL       strcpy
000056  f04f0100          MOV      r1,#0
00005a  48ef              LDR      r0,|L37.1048|
00005c  f8d0014c          LDR      r0,[r0,#0x14c]
000060  eb000080          ADD      r0,r0,r0,LSL #2
000064  4aee              LDR      r2,|L37.1056|
000066  eb021000          ADD      r0,r2,r0,LSL #4
00006a  7001              STRB     r1,[r0,#0]
00006c  4630              MOV      r0,r6
                  |L37.110|
;;;4933           }
;;;4934           if (block->g_modes[2] ISNT -1)
;;;4935           {
;;;4936               CHP(convert_set_plane(block->g_modes[2], settings));
;;;4937           }
;;;4938           if (block->g_modes[6] ISNT -1)
;;;4939           {
;;;4940               CHP(convert_length_units(block->g_modes[6], settings));
;;;4941           }
;;;4942           if (block->g_modes[7] ISNT -1)
;;;4943           {
;;;4944               CHP(convert_cutter_compensation(block->g_modes[7], block, settings));
;;;4945           }
;;;4946           if (block->g_modes[8] ISNT -1)
;;;4947           {
;;;4948               CHP(convert_tool_length_offset(block->g_modes[8], block, settings));
;;;4949           }
;;;4950           if (block->g_modes[12] ISNT -1)
;;;4951           {
;;;4952               CHP(convert_coordinate_system(block->g_modes[12], settings));
;;;4953           }
;;;4954           if (block->g_modes[13] ISNT -1)
;;;4955           {
;;;4956               CHP(convert_control_mode(block->g_modes[13], settings));
;;;4957           }
;;;4958           if (block->g_modes[10] ISNT -1)
;;;4959           {
;;;4960               CHP(convert_retract_mode(block->g_modes[10], settings));
;;;4961           }
;;;4962           if (block->g_modes[0] ISNT -1)
;;;4963           {
;;;4964               CHP(convert_modal_0(block->g_modes[0], block, settings));
;;;4965           }
;;;4966           if (block->motion_to_be ISNT -1)
;;;4967           {
;;;4968               CHP(convert_motion(block->motion_to_be, block, settings));
;;;4969           }
;;;4970           return RS274NGC_OK;
;;;4971       }
00006e  bd70              POP      {r4-r6,pc}
                  |L37.112|
000070  4630              MOV      r0,r6                 ;4932
000072  e7fc              B        |L37.110|
                  |L37.116|
000074  f44f708c          MOV      r0,#0x118             ;4934
000078  5900              LDR      r0,[r0,r4]            ;4934
00007a  1c40              ADDS     r0,r0,#1              ;4934
00007c  d02e              BEQ      |L37.220|
00007e  f44f718c          MOV      r1,#0x118             ;4936
000082  5909              LDR      r1,[r1,r4]            ;4936
000084  4608              MOV      r0,r1                 ;4936
000086  4629              MOV      r1,r5                 ;4936
000088  f7fffffe          BL       convert_set_plane
00008c  0006              MOVS     r6,r0                 ;4936
00008e  d025              BEQ      |L37.220|
000090  48e1              LDR      r0,|L37.1048|
000092  f8d0014c          LDR      r0,[r0,#0x14c]        ;4936
000096  2831              CMP      r0,#0x31              ;4936
000098  da1e              BGE      |L37.216|
00009a  49df              LDR      r1,|L37.1048|
00009c  f8d1314c          LDR      r3,[r1,#0x14c]        ;4936
0000a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;4936
0000a4  1c49              ADDS     r1,r1,#1              ;4936
0000a6  4adc              LDR      r2,|L37.1048|
0000a8  f8c2114c          STR      r1,[r2,#0x14c]        ;4936
0000ac  eb030183          ADD      r1,r3,r3,LSL #2       ;4936
0000b0  4adb              LDR      r2,|L37.1056|
0000b2  eb021101          ADD      r1,r2,r1,LSL #4       ;4936
0000b6  4608              MOV      r0,r1                 ;4936
0000b8  49d8              LDR      r1,|L37.1052|
0000ba  f7fffffe          BL       strcpy
0000be  f04f0100          MOV      r1,#0                 ;4936
0000c2  48d5              LDR      r0,|L37.1048|
0000c4  f8d0014c          LDR      r0,[r0,#0x14c]        ;4936
0000c8  eb000080          ADD      r0,r0,r0,LSL #2       ;4936
0000cc  4ad4              LDR      r2,|L37.1056|
0000ce  eb021000          ADD      r0,r2,r0,LSL #4       ;4936
0000d2  7001              STRB     r1,[r0,#0]            ;4936
0000d4  4630              MOV      r0,r6                 ;4936
0000d6  e7ca              B        |L37.110|
                  |L37.216|
0000d8  4630              MOV      r0,r6                 ;4936
0000da  e7c8              B        |L37.110|
                  |L37.220|
0000dc  f44f7094          MOV      r0,#0x128             ;4938
0000e0  5900              LDR      r0,[r0,r4]            ;4938
0000e2  1c40              ADDS     r0,r0,#1              ;4938
0000e4  d02e              BEQ      |L37.324|
0000e6  f44f7194          MOV      r1,#0x128             ;4940
0000ea  5909              LDR      r1,[r1,r4]            ;4940
0000ec  4608              MOV      r0,r1                 ;4940
0000ee  4629              MOV      r1,r5                 ;4940
0000f0  f7fffffe          BL       convert_length_units
0000f4  0006              MOVS     r6,r0                 ;4940
0000f6  d025              BEQ      |L37.324|
0000f8  48c7              LDR      r0,|L37.1048|
0000fa  f8d0014c          LDR      r0,[r0,#0x14c]        ;4940
0000fe  2831              CMP      r0,#0x31              ;4940
000100  da1e              BGE      |L37.320|
000102  49c5              LDR      r1,|L37.1048|
000104  f8d1314c          LDR      r3,[r1,#0x14c]        ;4940
000108  f8d1114c          LDR      r1,[r1,#0x14c]        ;4940
00010c  1c49              ADDS     r1,r1,#1              ;4940
00010e  4ac2              LDR      r2,|L37.1048|
000110  f8c2114c          STR      r1,[r2,#0x14c]        ;4940
000114  eb030183          ADD      r1,r3,r3,LSL #2       ;4940
000118  4ac1              LDR      r2,|L37.1056|
00011a  eb021101          ADD      r1,r2,r1,LSL #4       ;4940
00011e  4608              MOV      r0,r1                 ;4940
000120  49be              LDR      r1,|L37.1052|
000122  f7fffffe          BL       strcpy
000126  f04f0100          MOV      r1,#0                 ;4940
00012a  48bb              LDR      r0,|L37.1048|
00012c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4940
000130  eb000080          ADD      r0,r0,r0,LSL #2       ;4940
000134  4aba              LDR      r2,|L37.1056|
000136  eb021000          ADD      r0,r2,r0,LSL #4       ;4940
00013a  7001              STRB     r1,[r0,#0]            ;4940
00013c  4630              MOV      r0,r6                 ;4940
00013e  e796              B        |L37.110|
                  |L37.320|
000140  4630              MOV      r0,r6                 ;4940
000142  e794              B        |L37.110|
                  |L37.324|
000144  f44f7096          MOV      r0,#0x12c             ;4942
000148  5900              LDR      r0,[r0,r4]            ;4942
00014a  1c40              ADDS     r0,r0,#1              ;4942
00014c  d02f              BEQ      |L37.430|
00014e  f44f7196          MOV      r1,#0x12c             ;4944
000152  5909              LDR      r1,[r1,r4]            ;4944
000154  4608              MOV      r0,r1                 ;4944
000156  462a              MOV      r2,r5                 ;4944
000158  4621              MOV      r1,r4                 ;4944
00015a  f7fffffe          BL       convert_cutter_compensation
00015e  0006              MOVS     r6,r0                 ;4944
000160  d025              BEQ      |L37.430|
000162  48ad              LDR      r0,|L37.1048|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;4944
000168  2831              CMP      r0,#0x31              ;4944
00016a  da1e              BGE      |L37.426|
00016c  49aa              LDR      r1,|L37.1048|
00016e  f8d1314c          LDR      r3,[r1,#0x14c]        ;4944
000172  f8d1114c          LDR      r1,[r1,#0x14c]        ;4944
000176  1c49              ADDS     r1,r1,#1              ;4944
000178  4aa7              LDR      r2,|L37.1048|
00017a  f8c2114c          STR      r1,[r2,#0x14c]        ;4944
00017e  eb030183          ADD      r1,r3,r3,LSL #2       ;4944
000182  4aa7              LDR      r2,|L37.1056|
000184  eb021101          ADD      r1,r2,r1,LSL #4       ;4944
000188  4608              MOV      r0,r1                 ;4944
00018a  49a4              LDR      r1,|L37.1052|
00018c  f7fffffe          BL       strcpy
000190  f04f0100          MOV      r1,#0                 ;4944
000194  48a0              LDR      r0,|L37.1048|
000196  f8d0014c          LDR      r0,[r0,#0x14c]        ;4944
00019a  eb000080          ADD      r0,r0,r0,LSL #2       ;4944
00019e  4aa0              LDR      r2,|L37.1056|
0001a0  eb021000          ADD      r0,r2,r0,LSL #4       ;4944
0001a4  7001              STRB     r1,[r0,#0]            ;4944
0001a6  4630              MOV      r0,r6                 ;4944
0001a8  e761              B        |L37.110|
                  |L37.426|
0001aa  4630              MOV      r0,r6                 ;4944
0001ac  e75f              B        |L37.110|
                  |L37.430|
0001ae  f44f7098          MOV      r0,#0x130             ;4946
0001b2  5900              LDR      r0,[r0,r4]            ;4946
0001b4  1c40              ADDS     r0,r0,#1              ;4946
0001b6  d02f              BEQ      |L37.536|
0001b8  f44f7198          MOV      r1,#0x130             ;4948
0001bc  5909              LDR      r1,[r1,r4]            ;4948
0001be  4608              MOV      r0,r1                 ;4948
0001c0  462a              MOV      r2,r5                 ;4948
0001c2  4621              MOV      r1,r4                 ;4948
0001c4  f7fffffe          BL       convert_tool_length_offset
0001c8  0006              MOVS     r6,r0                 ;4948
0001ca  d025              BEQ      |L37.536|
0001cc  4892              LDR      r0,|L37.1048|
0001ce  f8d0014c          LDR      r0,[r0,#0x14c]        ;4948
0001d2  2831              CMP      r0,#0x31              ;4948
0001d4  da1e              BGE      |L37.532|
0001d6  4990              LDR      r1,|L37.1048|
0001d8  f8d1314c          LDR      r3,[r1,#0x14c]        ;4948
0001dc  f8d1114c          LDR      r1,[r1,#0x14c]        ;4948
0001e0  1c49              ADDS     r1,r1,#1              ;4948
0001e2  4a8d              LDR      r2,|L37.1048|
0001e4  f8c2114c          STR      r1,[r2,#0x14c]        ;4948
0001e8  eb030183          ADD      r1,r3,r3,LSL #2       ;4948
0001ec  4a8c              LDR      r2,|L37.1056|
0001ee  eb021101          ADD      r1,r2,r1,LSL #4       ;4948
0001f2  4608              MOV      r0,r1                 ;4948
0001f4  4989              LDR      r1,|L37.1052|
0001f6  f7fffffe          BL       strcpy
0001fa  f04f0100          MOV      r1,#0                 ;4948
0001fe  4886              LDR      r0,|L37.1048|
000200  f8d0014c          LDR      r0,[r0,#0x14c]        ;4948
000204  eb000080          ADD      r0,r0,r0,LSL #2       ;4948
000208  4a85              LDR      r2,|L37.1056|
00020a  eb021000          ADD      r0,r2,r0,LSL #4       ;4948
00020e  7001              STRB     r1,[r0,#0]            ;4948
000210  4630              MOV      r0,r6                 ;4948
000212  e72c              B        |L37.110|
                  |L37.532|
000214  4630              MOV      r0,r6                 ;4948
000216  e72a              B        |L37.110|
                  |L37.536|
000218  f44f70a0          MOV      r0,#0x140             ;4950
00021c  5900              LDR      r0,[r0,r4]            ;4950
00021e  1c40              ADDS     r0,r0,#1              ;4950
000220  d02e              BEQ      |L37.640|
000222  f44f71a0          MOV      r1,#0x140             ;4952
000226  5909              LDR      r1,[r1,r4]            ;4952
000228  4608              MOV      r0,r1                 ;4952
00022a  4629              MOV      r1,r5                 ;4952
00022c  f7fffffe          BL       convert_coordinate_system
000230  0006              MOVS     r6,r0                 ;4952
000232  d025              BEQ      |L37.640|
000234  4878              LDR      r0,|L37.1048|
000236  f8d0014c          LDR      r0,[r0,#0x14c]        ;4952
00023a  2831              CMP      r0,#0x31              ;4952
00023c  da1e              BGE      |L37.636|
00023e  4976              LDR      r1,|L37.1048|
000240  f8d1314c          LDR      r3,[r1,#0x14c]        ;4952
000244  f8d1114c          LDR      r1,[r1,#0x14c]        ;4952
000248  1c49              ADDS     r1,r1,#1              ;4952
00024a  4a73              LDR      r2,|L37.1048|
00024c  f8c2114c          STR      r1,[r2,#0x14c]        ;4952
000250  eb030183          ADD      r1,r3,r3,LSL #2       ;4952
000254  4a72              LDR      r2,|L37.1056|
000256  eb021101          ADD      r1,r2,r1,LSL #4       ;4952
00025a  4608              MOV      r0,r1                 ;4952
00025c  496f              LDR      r1,|L37.1052|
00025e  f7fffffe          BL       strcpy
000262  f04f0100          MOV      r1,#0                 ;4952
000266  486c              LDR      r0,|L37.1048|
000268  f8d0014c          LDR      r0,[r0,#0x14c]        ;4952
00026c  eb000080          ADD      r0,r0,r0,LSL #2       ;4952
000270  4a6b              LDR      r2,|L37.1056|
000272  eb021000          ADD      r0,r2,r0,LSL #4       ;4952
000276  7001              STRB     r1,[r0,#0]            ;4952
000278  4630              MOV      r0,r6                 ;4952
00027a  e6f8              B        |L37.110|
                  |L37.636|
00027c  4630              MOV      r0,r6                 ;4952
00027e  e6f6              B        |L37.110|
                  |L37.640|
000280  f44f70a2          MOV      r0,#0x144             ;4954
000284  5900              LDR      r0,[r0,r4]            ;4954
000286  1c40              ADDS     r0,r0,#1              ;4954
000288  d02e              BEQ      |L37.744|
00028a  f44f71a2          MOV      r1,#0x144             ;4956
00028e  5909              LDR      r1,[r1,r4]            ;4956
000290  4608              MOV      r0,r1                 ;4956
000292  4629              MOV      r1,r5                 ;4956
000294  f7fffffe          BL       convert_control_mode
000298  0006              MOVS     r6,r0                 ;4956
00029a  d025              BEQ      |L37.744|
00029c  485e              LDR      r0,|L37.1048|
00029e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4956
0002a2  2831              CMP      r0,#0x31              ;4956
0002a4  da1e              BGE      |L37.740|
0002a6  495c              LDR      r1,|L37.1048|
0002a8  f8d1314c          LDR      r3,[r1,#0x14c]        ;4956
0002ac  f8d1114c          LDR      r1,[r1,#0x14c]        ;4956
0002b0  1c49              ADDS     r1,r1,#1              ;4956
0002b2  4a59              LDR      r2,|L37.1048|
0002b4  f8c2114c          STR      r1,[r2,#0x14c]        ;4956
0002b8  eb030183          ADD      r1,r3,r3,LSL #2       ;4956
0002bc  4a58              LDR      r2,|L37.1056|
0002be  eb021101          ADD      r1,r2,r1,LSL #4       ;4956
0002c2  4608              MOV      r0,r1                 ;4956
0002c4  4955              LDR      r1,|L37.1052|
0002c6  f7fffffe          BL       strcpy
0002ca  f04f0100          MOV      r1,#0                 ;4956
0002ce  4852              LDR      r0,|L37.1048|
0002d0  f8d0014c          LDR      r0,[r0,#0x14c]        ;4956
0002d4  eb000080          ADD      r0,r0,r0,LSL #2       ;4956
0002d8  4a51              LDR      r2,|L37.1056|
0002da  eb021000          ADD      r0,r2,r0,LSL #4       ;4956
0002de  7001              STRB     r1,[r0,#0]            ;4956
0002e0  4630              MOV      r0,r6                 ;4956
0002e2  e6c4              B        |L37.110|
                  |L37.740|
0002e4  4630              MOV      r0,r6                 ;4956
0002e6  e6c2              B        |L37.110|
                  |L37.744|
0002e8  f44f709c          MOV      r0,#0x138             ;4958
0002ec  5900              LDR      r0,[r0,r4]            ;4958
0002ee  1c40              ADDS     r0,r0,#1              ;4958
0002f0  d02e              BEQ      |L37.848|
0002f2  f44f719c          MOV      r1,#0x138             ;4960
0002f6  5909              LDR      r1,[r1,r4]            ;4960
0002f8  4608              MOV      r0,r1                 ;4960
0002fa  4629              MOV      r1,r5                 ;4960
0002fc  f7fffffe          BL       convert_retract_mode
000300  0006              MOVS     r6,r0                 ;4960
000302  d025              BEQ      |L37.848|
000304  4844              LDR      r0,|L37.1048|
000306  f8d0014c          LDR      r0,[r0,#0x14c]        ;4960
00030a  2831              CMP      r0,#0x31              ;4960
00030c  da1e              BGE      |L37.844|
00030e  4942              LDR      r1,|L37.1048|
000310  f8d1314c          LDR      r3,[r1,#0x14c]        ;4960
000314  f8d1114c          LDR      r1,[r1,#0x14c]        ;4960
000318  1c49              ADDS     r1,r1,#1              ;4960
00031a  4a3f              LDR      r2,|L37.1048|
00031c  f8c2114c          STR      r1,[r2,#0x14c]        ;4960
000320  eb030183          ADD      r1,r3,r3,LSL #2       ;4960
000324  4a3e              LDR      r2,|L37.1056|
000326  eb021101          ADD      r1,r2,r1,LSL #4       ;4960
00032a  4608              MOV      r0,r1                 ;4960
00032c  493b              LDR      r1,|L37.1052|
00032e  f7fffffe          BL       strcpy
000332  f04f0100          MOV      r1,#0                 ;4960
000336  4838              LDR      r0,|L37.1048|
000338  f8d0014c          LDR      r0,[r0,#0x14c]        ;4960
00033c  eb000080          ADD      r0,r0,r0,LSL #2       ;4960
000340  4a37              LDR      r2,|L37.1056|
000342  eb021000          ADD      r0,r2,r0,LSL #4       ;4960
000346  7001              STRB     r1,[r0,#0]            ;4960
000348  4630              MOV      r0,r6                 ;4960
00034a  e690              B        |L37.110|
                  |L37.844|
00034c  4630              MOV      r0,r6                 ;4960
00034e  e68e              B        |L37.110|
                  |L37.848|
000350  f8d40110          LDR      r0,[r4,#0x110]        ;4962
000354  1c40              ADDS     r0,r0,#1              ;4962
000356  d02e              BEQ      |L37.950|
000358  f8d41110          LDR      r1,[r4,#0x110]        ;4964
00035c  4608              MOV      r0,r1                 ;4964
00035e  462a              MOV      r2,r5                 ;4964
000360  4621              MOV      r1,r4                 ;4964
000362  f7fffffe          BL       convert_modal_0
000366  0006              MOVS     r6,r0                 ;4964
000368  d025              BEQ      |L37.950|
00036a  482b              LDR      r0,|L37.1048|
00036c  f8d0014c          LDR      r0,[r0,#0x14c]        ;4964
000370  2831              CMP      r0,#0x31              ;4964
000372  da1e              BGE      |L37.946|
000374  4928              LDR      r1,|L37.1048|
000376  f8d1314c          LDR      r3,[r1,#0x14c]        ;4964
00037a  f8d1114c          LDR      r1,[r1,#0x14c]        ;4964
00037e  1c49              ADDS     r1,r1,#1              ;4964
000380  4a25              LDR      r2,|L37.1048|
000382  f8c2114c          STR      r1,[r2,#0x14c]        ;4964
000386  eb030183          ADD      r1,r3,r3,LSL #2       ;4964
00038a  4a25              LDR      r2,|L37.1056|
00038c  eb021101          ADD      r1,r2,r1,LSL #4       ;4964
000390  4608              MOV      r0,r1                 ;4964
000392  4922              LDR      r1,|L37.1052|
000394  f7fffffe          BL       strcpy
000398  f04f0100          MOV      r1,#0                 ;4964
00039c  481e              LDR      r0,|L37.1048|
00039e  f8d0014c          LDR      r0,[r0,#0x14c]        ;4964
0003a2  eb000080          ADD      r0,r0,r0,LSL #2       ;4964
0003a6  4a1e              LDR      r2,|L37.1056|
0003a8  eb021000          ADD      r0,r2,r0,LSL #4       ;4964
0003ac  7001              STRB     r1,[r0,#0]            ;4964
0003ae  4630              MOV      r0,r6                 ;4964
0003b0  e65d              B        |L37.110|
                  |L37.946|
0003b2  4630              MOV      r0,r6                 ;4964
0003b4  e65b              B        |L37.110|
                  |L37.950|
0003b6  f8d40180          LDR      r0,[r4,#0x180]        ;4966
0003ba  1c40              ADDS     r0,r0,#1              ;4966
0003bc  d034              BEQ      |L37.1064|
0003be  f8d41180          LDR      r1,[r4,#0x180]        ;4968
0003c2  4608              MOV      r0,r1                 ;4968
0003c4  462a              MOV      r2,r5                 ;4968
0003c6  4621              MOV      r1,r4                 ;4968
0003c8  f7fffffe          BL       convert_motion
0003cc  0006              MOVS     r6,r0                 ;4968
0003ce  d02b              BEQ      |L37.1064|
0003d0  4811              LDR      r0,|L37.1048|
0003d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;4968
0003d6  2831              CMP      r0,#0x31              ;4968
0003d8  da24              BGE      |L37.1060|
0003da  490f              LDR      r1,|L37.1048|
0003dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;4968
0003e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;4968
0003e4  1c49              ADDS     r1,r1,#1              ;4968
0003e6  4a0c              LDR      r2,|L37.1048|
0003e8  f8c2114c          STR      r1,[r2,#0x14c]        ;4968
0003ec  eb030183          ADD      r1,r3,r3,LSL #2       ;4968
0003f0  4a0b              LDR      r2,|L37.1056|
0003f2  eb021101          ADD      r1,r2,r1,LSL #4       ;4968
0003f6  4608              MOV      r0,r1                 ;4968
0003f8  4908              LDR      r1,|L37.1052|
0003fa  f7fffffe          BL       strcpy
0003fe  f04f0100          MOV      r1,#0                 ;4968
000402  4805              LDR      r0,|L37.1048|
000404  f8d0014c          LDR      r0,[r0,#0x14c]        ;4968
000408  eb000080          ADD      r0,r0,r0,LSL #2       ;4968
00040c  4a04              LDR      r2,|L37.1056|
00040e  eb021000          ADD      r0,r2,r0,LSL #4       ;4968
000412  7001              STRB     r1,[r0,#0]            ;4968
000414  4630              MOV      r0,r6                 ;4968
000416  e62a              B        |L37.110|
                  |L37.1048|
                          DCD      _setup+0xc000
                  |L37.1052|
                          DCD      |symbol_number.462|
                  |L37.1056|
                          DCD      _setup+0xb1ac
                  |L37.1060|
000424  4630              MOV      r0,r6                 ;4968
000426  e622              B        |L37.110|
                  |L37.1064|
000428  2000              MOVS     r0,#0                 ;4970
00042a  e620              B        |L37.110|
;;;4972   
                          ENDP


                          AREA ||i.convert_home||, CODE, READONLY, ALIGN=2

                  convert_home PROC
;;;5002   
;;;5003       static int convert_home(                      /* ARGUMENTS                                */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;5004       int move,                                     /* G code, must be G_28 or G_30             */
;;;5005       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;5006       setup_pointer settings)                       /* pointer to machine settings              */
;;;5007       {
000004  b08d              SUB      sp,sp,#0x34
000006  4682              MOV      r10,r0
000008  468b              MOV      r11,r1
00000a  4690              MOV      r8,r2
;;;5008           static char name[] SET_TO "convert_home";
;;;5009           double end_x;
;;;5010           double end_y;
;;;5011           double end_z;
;;;5012   #ifdef AA
;;;5013           double AA_end;                            /*AA*/
;;;5014   #endif
;;;5015   #ifdef AA
;;;5016           double AA_end2;                           /*AA*/
;;;5017   #endif
;;;5018   #ifdef BB
;;;5019           double BB_end;                            /*BB*/
;;;5020   #endif
;;;5021   #ifdef BB
;;;5022           double BB_end2;                           /*BB*/
;;;5023   #endif
;;;5024   #ifdef CC
;;;5025           double CC_end;                            /*CC*/
;;;5026   #endif
;;;5027   #ifdef CC
;;;5028           double CC_end2;                           /*CC*/
;;;5029   #endif
;;;5030           double * parameters;
;;;5031   
;;;5032           parameters SET_TO settings->parameters;
00000c  f50860c9          ADD      r0,r8,#0x648
000010  4681              MOV      r9,r0
;;;5033           find_ends(block, settings, &end_x, &end_y,
000012  a806              ADD      r0,sp,#0x18
000014  ab08              ADD      r3,sp,#0x20
000016  aa0a              ADD      r2,sp,#0x28
000018  4641              MOV      r1,r8
00001a  9000              STR      r0,[sp,#0]
00001c  4658              MOV      r0,r11
00001e  f7fffffe          BL       find_ends
;;;5034               &end_z
;;;5035       #ifdef AA
;;;5036               , &AA_end
;;;5037       #endif
;;;5038   
;;;5039       #ifdef BB
;;;5040               , &BB_end
;;;5041       #endif
;;;5042   
;;;5043       #ifdef CC
;;;5044               , &CC_end
;;;5045       #endif
;;;5046               );
;;;5047   
;;;5048           CHK((settings->cutter_comp_side ISNT OFF),
000022  f8d803b0          LDR      r0,[r8,#0x3b0]
000026  b340              CBZ      r0,|L38.122|
000028  f04f0100          MOV      r1,#0
00002c  485c              LDR      r0,|L38.416|
00002e  f8c0114c          STR      r1,[r0,#0x14c]
000032  4601              MOV      r1,r0
000034  f8d1314c          LDR      r3,[r1,#0x14c]
000038  f8d1114c          LDR      r1,[r1,#0x14c]
00003c  f1010101          ADD      r1,r1,#1
000040  4602              MOV      r2,r0
000042  f8c2114c          STR      r1,[r2,#0x14c]
000046  eb030183          ADD      r1,r3,r3,LSL #2
00004a  f6a06254          SUB      r2,r0,#0xe54
00004e  eb021101          ADD      r1,r2,r1,LSL #4
000052  4608              MOV      r0,r1
000054  4953              LDR      r1,|L38.420|
000056  f7fffffe          BL       strcpy
00005a  f04f0100          MOV      r1,#0
00005e  4850              LDR      r0,|L38.416|
000060  f8d0014c          LDR      r0,[r0,#0x14c]
000064  eb000080          ADD      r0,r0,r0,LSL #2
000068  4a4f              LDR      r2,|L38.424|
00006a  eb021000          ADD      r0,r2,r0,LSL #4
00006e  7001              STRB     r1,[r0,#0]
000070  f04f003c          MOV      r0,#0x3c
                  |L38.116|
;;;5049               NCE_CANNOT_USE_G28_OR_G30_WITH_CUTTER_RADIUS_COMP);
;;;5050           STRAIGHT_TRAVERSE(end_x, end_y, end_z
;;;5051       #ifdef AA
;;;5052               ,           AA_end
;;;5053       #else
;;;5054       #ifdef ALL_AXES
;;;5055               , 0
;;;5056       #endif
;;;5057       #endif
;;;5058       #ifdef BB
;;;5059               ,  BB_end
;;;5060       #else
;;;5061       #ifdef ALL_AXES
;;;5062               , 0
;;;5063       #endif
;;;5064       #endif
;;;5065       #ifdef CC
;;;5066               ,  CC_end
;;;5067       #else
;;;5068       #ifdef ALL_AXES
;;;5069               , 0
;;;5070       #endif
;;;5071       #endif
;;;5072               );
;;;5073           if (move IS G_28)
;;;5074           {
;;;5075               find_relative
;;;5076                   (parameters[5161], parameters[5162], parameters[5163],
;;;5077       #ifdef AA
;;;5078                   parameters[5164],                 /*AA*/
;;;5079       #endif
;;;5080       #ifdef BB
;;;5081                   parameters[5165],                 /*BB*/
;;;5082       #endif
;;;5083       #ifdef CC
;;;5084                   parameters[5166],                 /*CC*/
;;;5085       #endif
;;;5086                   &end_x, &end_y, &end_z
;;;5087       #ifdef AA
;;;5088                   , &AA_end2
;;;5089       #endif
;;;5090   
;;;5091       #ifdef BB
;;;5092                   , &BB_end2
;;;5093       #endif
;;;5094   
;;;5095       #ifdef CC
;;;5096                   , &CC_end2
;;;5097       #endif
;;;5098                   , settings);
;;;5099           }
;;;5100           else if (move IS G_30)
;;;5101           {
;;;5102               find_relative
;;;5103                   (parameters[5181], parameters[5182], parameters[5183],
;;;5104       #ifdef AA
;;;5105                   parameters[5184],                 /*AA*/
;;;5106       #endif
;;;5107       #ifdef BB
;;;5108                   parameters[5185],                 /*BB*/
;;;5109       #endif
;;;5110       #ifdef CC
;;;5111                   parameters[5186],                 /*CC*/
;;;5112       #endif
;;;5113                   &end_x, &end_y, &end_z
;;;5114       #ifdef AA
;;;5115                   , &AA_end2
;;;5116       #endif
;;;5117   
;;;5118       #ifdef BB
;;;5119                   , &BB_end2
;;;5120       #endif
;;;5121   
;;;5122       #ifdef CC
;;;5123                   , &CC_end2
;;;5124       #endif
;;;5125                   , settings);
;;;5126           }
;;;5127           else
;;;5128               ERM(NCE_BUG_CODE_NOT_G28_OR_G30);
;;;5129           STRAIGHT_TRAVERSE(end_x, end_y, end_z
;;;5130       #ifdef AA
;;;5131               ,           AA_end
;;;5132       #else
;;;5133       #ifdef ALL_AXES
;;;5134               , 0
;;;5135       #endif
;;;5136       #endif
;;;5137       #ifdef BB
;;;5138               ,  BB_end
;;;5139       #else
;;;5140       #ifdef ALL_AXES
;;;5141               , 0
;;;5142       #endif
;;;5143       #endif
;;;5144       #ifdef CC
;;;5145               ,  CC_end
;;;5146       #else
;;;5147       #ifdef ALL_AXES
;;;5148               , 0
;;;5149       #endif
;;;5150       #endif
;;;5151               );
;;;5152           settings->current_x SET_TO end_x;
;;;5153           settings->current_y SET_TO end_y;
;;;5154           settings->current_z SET_TO end_z;
;;;5155   #ifdef AA
;;;5156           settings->AA_current SET_TO AA_end2;      /*AA*/
;;;5157   #endif
;;;5158   #ifdef BB
;;;5159           settings->BB_current SET_TO BB_end2;      /*BB*/
;;;5160   #endif
;;;5161   #ifdef CC
;;;5162           settings->CC_current SET_TO CC_end2;      /*CC*/
;;;5163   #endif
;;;5164           return RS274NGC_OK;
;;;5165       }
000074  b00d              ADD      sp,sp,#0x34
000076  e8bd8ff0          POP      {r4-r11,pc}
                  |L38.122|
00007a  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;5050
00007e  e9cd0100          STRD     r0,r1,[sp,#0]         ;5050
000082  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;5050
000086  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;5050
00008a  f7fffffe          BL       STRAIGHT_TRAVERSE
00008e  f5ba7f8c          CMP      r10,#0x118            ;5073
000092  d11f              BNE      |L38.212|
000094  a806              ADD      r0,sp,#0x18           ;5075
000096  a908              ADD      r1,sp,#0x20           ;5075
000098  aa0a              ADD      r2,sp,#0x28           ;5075
00009a  e9cd0804          STRD     r0,r8,[sp,#0x10]      ;5075
00009e  e9cd2102          STRD     r2,r1,[sp,#8]         ;5075
0000a2  f5094020          ADD      r0,r9,#0xa000         ;5075
0000a6  f50070ac          ADD      r0,r0,#0x158          ;5075
0000aa  c803              LDM      r0,{r0,r1}            ;5075
0000ac  e9cd0100          STRD     r0,r1,[sp,#0]         ;5075
0000b0  f5094120          ADD      r1,r9,#0xa000         ;5075
0000b4  f50171a8          ADD      r1,r1,#0x150          ;5075
0000b8  c903              LDM      r1,{r0,r1}            ;5075
0000ba  4604              MOV      r4,r0                 ;5075
0000bc  460d              MOV      r5,r1                 ;5075
0000be  f5094120          ADD      r1,r9,#0xa000         ;5075
0000c2  f50171a4          ADD      r1,r1,#0x148          ;5075
0000c6  c903              LDM      r1,{r0,r1}            ;5075
0000c8  4606              MOV      r6,r0                 ;5075
0000ca  4622              MOV      r2,r4                 ;5075
0000cc  462b              MOV      r3,r5                 ;5075
0000ce  f7fffffe          BL       find_relative
0000d2  e049              B        |L38.360|
                  |L38.212|
0000d4  f5ba7f96          CMP      r10,#0x12c            ;5100
0000d8  d120              BNE      |L38.284|
0000da  a806              ADD      r0,sp,#0x18           ;5102
0000dc  a908              ADD      r1,sp,#0x20           ;5102
0000de  aa0a              ADD      r2,sp,#0x28           ;5102
0000e0  e9cd0804          STRD     r0,r8,[sp,#0x10]      ;5102
0000e4  e9cd2102          STRD     r2,r1,[sp,#8]         ;5102
0000e8  f5094120          ADD      r1,r9,#0xa000         ;5102
0000ec  f50171fc          ADD      r1,r1,#0x1f8          ;5102
0000f0  c903              LDM      r1,{r0,r1}            ;5102
0000f2  e9cd0100          STRD     r0,r1,[sp,#0]         ;5102
0000f6  f5094020          ADD      r0,r9,#0xa000         ;5102
0000fa  f8d011f0          LDR      r1,[r0,#0x1f0]        ;5102
0000fe  f8d001f4          LDR      r0,[r0,#0x1f4]        ;5102
000102  460c              MOV      r4,r1                 ;5102
000104  4605              MOV      r5,r0                 ;5102
000106  f5094120          ADD      r1,r9,#0xa000         ;5102
00010a  f50171f4          ADD      r1,r1,#0x1e8          ;5102
00010e  c903              LDM      r1,{r0,r1}            ;5102
000110  4606              MOV      r6,r0                 ;5102
000112  4622              MOV      r2,r4                 ;5102
000114  462b              MOV      r3,r5                 ;5102
000116  f7fffffe          BL       find_relative
00011a  e025              B        |L38.360|
                  |L38.284|
00011c  f04f0100          MOV      r1,#0                 ;5128
000120  481f              LDR      r0,|L38.416|
000122  f8c0114c          STR      r1,[r0,#0x14c]        ;5128
000126  4601              MOV      r1,r0                 ;5128
000128  f8d1314c          LDR      r3,[r1,#0x14c]        ;5128
00012c  f8d1114c          LDR      r1,[r1,#0x14c]        ;5128
000130  f1010101          ADD      r1,r1,#1              ;5128
000134  4602              MOV      r2,r0                 ;5128
000136  f8c2114c          STR      r1,[r2,#0x14c]        ;5128
00013a  eb030183          ADD      r1,r3,r3,LSL #2       ;5128
00013e  4a1a              LDR      r2,|L38.424|
000140  eb021101          ADD      r1,r2,r1,LSL #4       ;5128
000144  4608              MOV      r0,r1                 ;5128
000146  4917              LDR      r1,|L38.420|
000148  f7fffffe          BL       strcpy
00014c  f04f0100          MOV      r1,#0                 ;5128
000150  4813              LDR      r0,|L38.416|
000152  f8d0014c          LDR      r0,[r0,#0x14c]        ;5128
000156  eb000080          ADD      r0,r0,r0,LSL #2       ;5128
00015a  4a13              LDR      r2,|L38.424|
00015c  eb021000          ADD      r0,r2,r0,LSL #4       ;5128
000160  7001              STRB     r1,[r0,#0]            ;5128
000162  f04f0013          MOV      r0,#0x13              ;5128
000166  e785              B        |L38.116|
                  |L38.360|
000168  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;5129
00016c  e9cd0100          STRD     r0,r1,[sp,#0]         ;5129
000170  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;5129
000174  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;5129
000178  f7fffffe          BL       STRAIGHT_TRAVERSE
00017c  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;5152
000180  f5087264          ADD      r2,r8,#0x390          ;5152
000184  c203              STM      r2!,{r0,r1}           ;5152
000186  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;5153
00018a  f5087266          ADD      r2,r8,#0x398          ;5153
00018e  c203              STM      r2!,{r0,r1}           ;5153
000190  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;5154
000194  f5087268          ADD      r2,r8,#0x3a0          ;5154
000198  c203              STM      r2!,{r0,r1}           ;5154
00019a  2000              MOVS     r0,#0                 ;5164
00019c  e76a              B        |L38.116|
;;;5166   
                          ENDP

00019e  0000              DCW      0x0000
                  |L38.416|
                          DCD      _setup+0xc000
                  |L38.420|
                          DCD      |symbol_number.463|
                  |L38.424|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_length_units||, CODE, READONLY, ALIGN=2

                  convert_length_units PROC
;;;5208   
;;;5209       static int convert_length_units(              /* ARGUMENTS                             */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;5210       int g_code,                                   /* g_code being executed (must be G_20 or G_21) */
;;;5211       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5212       {
000004  4607              MOV      r7,r0
000006  460c              MOV      r4,r1
;;;5213           static char name[] SET_TO "convert_length_units";
;;;5214           CHK((settings->cutter_comp_side ISNT OFF),
000008  f8d403b0          LDR      r0,[r4,#0x3b0]
00000c  b338              CBZ      r0,|L39.94|
00000e  f04f0100          MOV      r1,#0
000012  48b2              LDR      r0,|L39.732|
000014  f8c0114c          STR      r1,[r0,#0x14c]
000018  4601              MOV      r1,r0
00001a  f8d1314c          LDR      r3,[r1,#0x14c]
00001e  f8d1114c          LDR      r1,[r1,#0x14c]
000022  f1010101          ADD      r1,r1,#1
000026  4602              MOV      r2,r0
000028  f8c2114c          STR      r1,[r2,#0x14c]
00002c  eb030183          ADD      r1,r3,r3,LSL #2
000030  f6a06254          SUB      r2,r0,#0xe54
000034  eb021101          ADD      r1,r2,r1,LSL #4
000038  4608              MOV      r0,r1
00003a  49a9              LDR      r1,|L39.736|
00003c  f7fffffe          BL       strcpy
000040  f04f0100          MOV      r1,#0
000044  48a5              LDR      r0,|L39.732|
000046  f8d0014c          LDR      r0,[r0,#0x14c]
00004a  eb000080          ADD      r0,r0,r0,LSL #2
00004e  4aa5              LDR      r2,|L39.740|
000050  eb021000          ADD      r0,r2,r0,LSL #4
000054  7001              STRB     r1,[r0,#0]
000056  f04f0027          MOV      r0,#0x27
                  |L39.90|
;;;5215               NCE_CANNOT_CHANGE_UNITS_WITH_CUTTER_RADIUS_COMP);
;;;5216           if (g_code IS G_20)
;;;5217           {
;;;5218               USE_LENGTH_UNITS(CANON_UNITS_INCHES);
;;;5219               if (settings->length_units ISNT CANON_UNITS_INCHES)
;;;5220               {
;;;5221                   settings->length_units SET_TO CANON_UNITS_INCHES;
;;;5222                   settings->current_x SET_TO (settings->current_x * INCH_PER_MM);
;;;5223                   settings->current_y SET_TO (settings->current_y * INCH_PER_MM);
;;;5224                   settings->current_z SET_TO (settings->current_z * INCH_PER_MM);
;;;5225                   settings->axis_offset_x SET_TO
;;;5226                       (settings->axis_offset_x * INCH_PER_MM);
;;;5227                   settings->axis_offset_y SET_TO
;;;5228                       (settings->axis_offset_y * INCH_PER_MM);
;;;5229                   settings->axis_offset_z SET_TO
;;;5230                       (settings->axis_offset_z * INCH_PER_MM);
;;;5231                   settings->origin_offset_x SET_TO
;;;5232                       (settings->origin_offset_x * INCH_PER_MM);
;;;5233                   settings->origin_offset_y SET_TO
;;;5234                       (settings->origin_offset_y * INCH_PER_MM);
;;;5235                   settings->origin_offset_z SET_TO
;;;5236                       (settings->origin_offset_z * INCH_PER_MM);
;;;5237               }
;;;5238           }
;;;5239           else if (g_code IS G_21)
;;;5240           {
;;;5241               USE_LENGTH_UNITS(CANON_UNITS_MM);
;;;5242               if (settings->length_units ISNT CANON_UNITS_MM)
;;;5243               {
;;;5244                   settings->length_units SET_TO CANON_UNITS_MM;
;;;5245                   settings->current_x SET_TO (settings->current_x * MM_PER_INCH);
;;;5246                   settings->current_y SET_TO (settings->current_y * MM_PER_INCH);
;;;5247                   settings->current_z SET_TO (settings->current_z * MM_PER_INCH);
;;;5248                   settings->axis_offset_x SET_TO
;;;5249                       (settings->axis_offset_x * MM_PER_INCH);
;;;5250                   settings->axis_offset_y SET_TO
;;;5251                       (settings->axis_offset_y * MM_PER_INCH);
;;;5252                   settings->axis_offset_z SET_TO
;;;5253                       (settings->axis_offset_z * MM_PER_INCH);
;;;5254                   settings->origin_offset_x SET_TO
;;;5255                       (settings->origin_offset_x * MM_PER_INCH);
;;;5256                   settings->origin_offset_y SET_TO
;;;5257                       (settings->origin_offset_y * MM_PER_INCH);
;;;5258                   settings->origin_offset_z SET_TO
;;;5259                       (settings->origin_offset_z * MM_PER_INCH);
;;;5260               }
;;;5261           }
;;;5262           else
;;;5263               ERM(NCE_BUG_CODE_NOT_G20_OR_G21);
;;;5264           return RS274NGC_OK;
;;;5265       }
00005a  e8bd81f0          POP      {r4-r8,pc}
                  |L39.94|
00005e  2fc8              CMP      r7,#0xc8              ;5216
000060  d17e              BNE      |L39.352|
000062  2001              MOVS     r0,#1                 ;5218
000064  f7fffffe          BL       USE_LENGTH_UNITS
000068  f8d4051c          LDR      r0,[r4,#0x51c]        ;5219
00006c  2801              CMP      r0,#1                 ;5219
00006e  d078              BEQ      |L39.354|
000070  f04f0001          MOV      r0,#1                 ;5221
000074  f8c4051c          STR      r0,[r4,#0x51c]        ;5221
000078  f8d41390          LDR      r1,[r4,#0x390]        ;5222
00007c  460d              MOV      r5,r1                 ;5222
00007e  f8d40394          LDR      r0,[r4,#0x394]        ;5222
000082  4606              MOV      r6,r0                 ;5222
000084  4a98              LDR      r2,|L39.744|
000086  4b99              LDR      r3,|L39.748|
000088  4628              MOV      r0,r5                 ;5222
00008a  4631              MOV      r1,r6                 ;5222
00008c  f7fffffe          BL       __aeabi_dmul
000090  f5047264          ADD      r2,r4,#0x390          ;5222
000094  c203              STM      r2!,{r0,r1}           ;5222
000096  f8d41398          LDR      r1,[r4,#0x398]        ;5223
00009a  460d              MOV      r5,r1                 ;5223
00009c  f8d4039c          LDR      r0,[r4,#0x39c]        ;5223
0000a0  4606              MOV      r6,r0                 ;5223
0000a2  4a91              LDR      r2,|L39.744|
0000a4  4b91              LDR      r3,|L39.748|
0000a6  4628              MOV      r0,r5                 ;5223
0000a8  4631              MOV      r1,r6                 ;5223
0000aa  f7fffffe          BL       __aeabi_dmul
0000ae  f5047266          ADD      r2,r4,#0x398          ;5223
0000b2  c203              STM      r2!,{r0,r1}           ;5223
0000b4  f5047068          ADD      r0,r4,#0x3a0          ;5224
0000b8  c803              LDM      r0,{r0,r1}            ;5224
0000ba  4605              MOV      r5,r0                 ;5224
0000bc  4a8a              LDR      r2,|L39.744|
0000be  4b8b              LDR      r3,|L39.748|
0000c0  f7fffffe          BL       __aeabi_dmul
0000c4  f5047268          ADD      r2,r4,#0x3a0          ;5224
0000c8  c203              STM      r2!,{r0,r1}           ;5224
0000ca  e9d4101a          LDRD     r1,r0,[r4,#0x68]      ;5225
0000ce  460d              MOV      r5,r1                 ;5225
0000d0  4606              MOV      r6,r0                 ;5225
0000d2  4a85              LDR      r2,|L39.744|
0000d4  4b85              LDR      r3,|L39.748|
0000d6  4628              MOV      r0,r5                 ;5225
0000d8  4631              MOV      r1,r6                 ;5225
0000da  f7fffffe          BL       __aeabi_dmul
0000de  e9c4011a          STRD     r0,r1,[r4,#0x68]      ;5225
0000e2  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;5227
0000e6  460d              MOV      r5,r1                 ;5227
0000e8  4606              MOV      r6,r0                 ;5227
0000ea  4a7f              LDR      r2,|L39.744|
0000ec  4b7f              LDR      r3,|L39.748|
0000ee  4628              MOV      r0,r5                 ;5227
0000f0  4631              MOV      r1,r6                 ;5227
0000f2  f7fffffe          BL       __aeabi_dmul
0000f6  e9c4011c          STRD     r0,r1,[r4,#0x70]      ;5227
0000fa  e9d4101e          LDRD     r1,r0,[r4,#0x78]      ;5229
0000fe  460d              MOV      r5,r1                 ;5229
000100  4606              MOV      r6,r0                 ;5229
000102  4a79              LDR      r2,|L39.744|
000104  4b79              LDR      r3,|L39.748|
000106  4628              MOV      r0,r5                 ;5229
000108  4631              MOV      r1,r6                 ;5229
00010a  f7fffffe          BL       __aeabi_dmul
00010e  e9c4011e          STRD     r0,r1,[r4,#0x78]      ;5229
000112  f50460c6          ADD      r0,r4,#0x630          ;5231
000116  c803              LDM      r0,{r0,r1}            ;5231
000118  4605              MOV      r5,r0                 ;5231
00011a  4a73              LDR      r2,|L39.744|
00011c  4b73              LDR      r3,|L39.748|
00011e  f7fffffe          BL       __aeabi_dmul
000122  f50462c6          ADD      r2,r4,#0x630          ;5231
000126  c203              STM      r2!,{r0,r1}           ;5231
000128  f8d41638          LDR      r1,[r4,#0x638]        ;5233
00012c  460d              MOV      r5,r1                 ;5233
00012e  f8d4063c          LDR      r0,[r4,#0x63c]        ;5233
000132  4606              MOV      r6,r0                 ;5233
000134  4a6c              LDR      r2,|L39.744|
000136  4b6d              LDR      r3,|L39.748|
000138  4628              MOV      r0,r5                 ;5233
00013a  4631              MOV      r1,r6                 ;5233
00013c  f7fffffe          BL       __aeabi_dmul
000140  f50462c7          ADD      r2,r4,#0x638          ;5233
000144  c203              STM      r2!,{r0,r1}           ;5233
000146  f8d41640          LDR      r1,[r4,#0x640]        ;5235
00014a  460d              MOV      r5,r1                 ;5235
00014c  f8d40644          LDR      r0,[r4,#0x644]        ;5235
000150  4606              MOV      r6,r0                 ;5235
000152  4a65              LDR      r2,|L39.744|
000154  4b65              LDR      r3,|L39.748|
000156  4628              MOV      r0,r5                 ;5235
000158  4631              MOV      r1,r6                 ;5235
00015a  f7fffffe          BL       __aeabi_dmul
00015e  e001              B        |L39.356|
                  |L39.352|
000160  e004              B        |L39.364|
                  |L39.354|
000162  e0b9              B        |L39.728|
                  |L39.356|
000164  f50462c8          ADD      r2,r4,#0x640          ;5235
000168  c203              STM      r2!,{r0,r1}           ;5235
                  |L39.362|
00016a  e0b5              B        |L39.728|
                  |L39.364|
00016c  2fd2              CMP      r7,#0xd2              ;5239
00016e  d17e              BNE      |L39.622|
000170  2002              MOVS     r0,#2                 ;5241
000172  f7fffffe          BL       USE_LENGTH_UNITS
000176  f8d4051c          LDR      r0,[r4,#0x51c]        ;5242
00017a  2802              CMP      r0,#2                 ;5242
00017c  d0f5              BEQ      |L39.362|
00017e  f04f0002          MOV      r0,#2                 ;5244
000182  f8c4051c          STR      r0,[r4,#0x51c]        ;5244
000186  f8d41390          LDR      r1,[r4,#0x390]        ;5245
00018a  460d              MOV      r5,r1                 ;5245
00018c  f8d40394          LDR      r0,[r4,#0x394]        ;5245
000190  4606              MOV      r6,r0                 ;5245
000192  f04f3266          MOV      r2,#0x66666666        ;5245
000196  4b56              LDR      r3,|L39.752|
000198  4628              MOV      r0,r5                 ;5245
00019a  4631              MOV      r1,r6                 ;5245
00019c  f7fffffe          BL       __aeabi_dmul
0001a0  f5047264          ADD      r2,r4,#0x390          ;5245
0001a4  c203              STM      r2!,{r0,r1}           ;5245
0001a6  f8d41398          LDR      r1,[r4,#0x398]        ;5246
0001aa  460d              MOV      r5,r1                 ;5246
0001ac  f8d4039c          LDR      r0,[r4,#0x39c]        ;5246
0001b0  4606              MOV      r6,r0                 ;5246
0001b2  f04f3266          MOV      r2,#0x66666666        ;5246
0001b6  4b4e              LDR      r3,|L39.752|
0001b8  4628              MOV      r0,r5                 ;5246
0001ba  4631              MOV      r1,r6                 ;5246
0001bc  f7fffffe          BL       __aeabi_dmul
0001c0  f5047266          ADD      r2,r4,#0x398          ;5246
0001c4  c203              STM      r2!,{r0,r1}           ;5246
0001c6  f5047068          ADD      r0,r4,#0x3a0          ;5247
0001ca  c803              LDM      r0,{r0,r1}            ;5247
0001cc  4605              MOV      r5,r0                 ;5247
0001ce  f04f3266          MOV      r2,#0x66666666        ;5247
0001d2  4b47              LDR      r3,|L39.752|
0001d4  f7fffffe          BL       __aeabi_dmul
0001d8  f5047268          ADD      r2,r4,#0x3a0          ;5247
0001dc  c203              STM      r2!,{r0,r1}           ;5247
0001de  e9d4011a          LDRD     r0,r1,[r4,#0x68]      ;5248
0001e2  4605              MOV      r5,r0                 ;5248
0001e4  f04f3266          MOV      r2,#0x66666666        ;5248
0001e8  4b41              LDR      r3,|L39.752|
0001ea  f7fffffe          BL       __aeabi_dmul
0001ee  e9c4011a          STRD     r0,r1,[r4,#0x68]      ;5248
0001f2  e9d4101c          LDRD     r1,r0,[r4,#0x70]      ;5250
0001f6  460d              MOV      r5,r1                 ;5250
0001f8  4606              MOV      r6,r0                 ;5250
0001fa  f04f3266          MOV      r2,#0x66666666        ;5250
0001fe  4b3c              LDR      r3,|L39.752|
000200  4628              MOV      r0,r5                 ;5250
000202  4631              MOV      r1,r6                 ;5250
000204  f7fffffe          BL       __aeabi_dmul
000208  e9c4011c          STRD     r0,r1,[r4,#0x70]      ;5250
00020c  e9d4101e          LDRD     r1,r0,[r4,#0x78]      ;5252
000210  460d              MOV      r5,r1                 ;5252
000212  4606              MOV      r6,r0                 ;5252
000214  f04f3266          MOV      r2,#0x66666666        ;5252
000218  4b35              LDR      r3,|L39.752|
00021a  4628              MOV      r0,r5                 ;5252
00021c  4631              MOV      r1,r6                 ;5252
00021e  f7fffffe          BL       __aeabi_dmul
000222  e9c4011e          STRD     r0,r1,[r4,#0x78]      ;5252
000226  f8d41630          LDR      r1,[r4,#0x630]        ;5254
00022a  460d              MOV      r5,r1                 ;5254
00022c  f8d40634          LDR      r0,[r4,#0x634]        ;5254
000230  4606              MOV      r6,r0                 ;5254
000232  f04f3266          MOV      r2,#0x66666666        ;5254
000236  4b2e              LDR      r3,|L39.752|
000238  4628              MOV      r0,r5                 ;5254
00023a  4631              MOV      r1,r6                 ;5254
00023c  f7fffffe          BL       __aeabi_dmul
000240  f50462c6          ADD      r2,r4,#0x630          ;5254
000244  c203              STM      r2!,{r0,r1}           ;5254
000246  f8d41638          LDR      r1,[r4,#0x638]        ;5256
00024a  460d              MOV      r5,r1                 ;5256
00024c  f8d4063c          LDR      r0,[r4,#0x63c]        ;5256
000250  4606              MOV      r6,r0                 ;5256
000252  f04f3266          MOV      r2,#0x66666666        ;5256
000256  4b26              LDR      r3,|L39.752|
000258  4628              MOV      r0,r5                 ;5256
00025a  4631              MOV      r1,r6                 ;5256
00025c  f7fffffe          BL       __aeabi_dmul
000260  f50462c7          ADD      r2,r4,#0x638          ;5256
000264  c203              STM      r2!,{r0,r1}           ;5256
000266  f8d41640          LDR      r1,[r4,#0x640]        ;5258
00026a  460d              MOV      r5,r1                 ;5258
00026c  e000              B        |L39.624|
                  |L39.622|
00026e  e00d              B        |L39.652|
                  |L39.624|
000270  f8d40644          LDR      r0,[r4,#0x644]        ;5258
000274  4606              MOV      r6,r0                 ;5258
000276  f04f3266          MOV      r2,#0x66666666        ;5258
00027a  4b1d              LDR      r3,|L39.752|
00027c  4628              MOV      r0,r5                 ;5258
00027e  4631              MOV      r1,r6                 ;5258
000280  f7fffffe          BL       __aeabi_dmul
000284  f50462c8          ADD      r2,r4,#0x640          ;5258
000288  c203              STM      r2!,{r0,r1}           ;5258
00028a  e025              B        |L39.728|
                  |L39.652|
00028c  f04f0100          MOV      r1,#0                 ;5263
000290  4812              LDR      r0,|L39.732|
000292  f8c0114c          STR      r1,[r0,#0x14c]        ;5263
000296  4601              MOV      r1,r0                 ;5263
000298  f8d1314c          LDR      r3,[r1,#0x14c]        ;5263
00029c  f8d1114c          LDR      r1,[r1,#0x14c]        ;5263
0002a0  f1010101          ADD      r1,r1,#1              ;5263
0002a4  4602              MOV      r2,r0                 ;5263
0002a6  f8c2114c          STR      r1,[r2,#0x14c]        ;5263
0002aa  eb030183          ADD      r1,r3,r3,LSL #2       ;5263
0002ae  4a0d              LDR      r2,|L39.740|
0002b0  eb021101          ADD      r1,r2,r1,LSL #4       ;5263
0002b4  4608              MOV      r0,r1                 ;5263
0002b6  490a              LDR      r1,|L39.736|
0002b8  f7fffffe          BL       strcpy
0002bc  f04f0100          MOV      r1,#0                 ;5263
0002c0  4806              LDR      r0,|L39.732|
0002c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;5263
0002c6  eb000080          ADD      r0,r0,r0,LSL #2       ;5263
0002ca  4a06              LDR      r2,|L39.740|
0002cc  eb021000          ADD      r0,r2,r0,LSL #4       ;5263
0002d0  7001              STRB     r1,[r0,#0]            ;5263
0002d2  f04f0012          MOV      r0,#0x12              ;5263
0002d6  e6c0              B        |L39.90|
                  |L39.728|
0002d8  2000              MOVS     r0,#0                 ;5264
0002da  e6be              B        |L39.90|
;;;5266   
                          ENDP

                  |L39.732|
                          DCD      _setup+0xc000
                  |L39.736|
                          DCD      |symbol_number.464|
                  |L39.740|
                          DCD      _setup+0xb1ac
                  |L39.744|
                          DCD      0xa142850a
                  |L39.748|
                          DCD      0x3fa42850
                  |L39.752|
                          DCD      0x40396666

                          AREA ||i.convert_m||, CODE, READONLY, ALIGN=2

                  convert_m PROC
;;;5294   
;;;5295       static int convert_m(                         /* ARGUMENTS                                    */
000000  b570              PUSH     {r4-r6,lr}
;;;5296       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;5297       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5298       {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;5299           static char name[] SET_TO "convert_m";
;;;5300           int status;
;;;5301   
;;;5302           if (block->m_modes[6] ISNT -1)
000006  f44f70d0          MOV      r0,#0x1a0
00000a  5940              LDR      r0,[r0,r5]
00000c  1c40              ADDS     r0,r0,#1
00000e  d02b              BEQ      |L40.104|
;;;5303           {
;;;5304               CHP(convert_tool_change(settings));
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       convert_tool_change
000016  0006              MOVS     r6,r0
000018  d026              BEQ      |L40.104|
00001a  484d              LDR      r0,|L40.336|
00001c  f8d0014c          LDR      r0,[r0,#0x14c]
000020  2831              CMP      r0,#0x31
000022  da1f              BGE      |L40.100|
000024  494a              LDR      r1,|L40.336|
000026  f8d1314c          LDR      r3,[r1,#0x14c]
00002a  f8d1114c          LDR      r1,[r1,#0x14c]
00002e  1c49              ADDS     r1,r1,#1
000030  4a47              LDR      r2,|L40.336|
000032  f8c2114c          STR      r1,[r2,#0x14c]
000036  eb030183          ADD      r1,r3,r3,LSL #2
00003a  f6a26254          SUB      r2,r2,#0xe54
00003e  eb021101          ADD      r1,r2,r1,LSL #4
000042  4608              MOV      r0,r1
000044  4943              LDR      r1,|L40.340|
000046  f7fffffe          BL       strcpy
00004a  f04f0100          MOV      r1,#0
00004e  4840              LDR      r0,|L40.336|
000050  f8d0014c          LDR      r0,[r0,#0x14c]
000054  eb000080          ADD      r0,r0,r0,LSL #2
000058  4a3f              LDR      r2,|L40.344|
00005a  eb021000          ADD      r0,r2,r0,LSL #4
00005e  7001              STRB     r1,[r0,#0]
000060  4630              MOV      r0,r6
                  |L40.98|
;;;5305           }
;;;5306   
;;;5307           if (block->m_modes[7] IS 3)
;;;5308           {
;;;5309               START_SPINDLE_CLOCKWISE();
;;;5310               settings->spindle_turning SET_TO CANON_CLOCKWISE;
;;;5311           }
;;;5312           else if (block->m_modes[7] IS 4)
;;;5313           {
;;;5314               START_SPINDLE_COUNTERCLOCKWISE();
;;;5315               settings->spindle_turning SET_TO CANON_COUNTERCLOCKWISE;
;;;5316           }
;;;5317           else if (block->m_modes[7] IS 5)
;;;5318           {
;;;5319               STOP_SPINDLE_TURNING();
;;;5320               settings->spindle_turning SET_TO CANON_STOPPED;
;;;5321           }
;;;5322   
;;;5323           if (block->m_modes[8] IS 7)
;;;5324           {
;;;5325               MIST_ON();
;;;5326               settings->mist SET_TO ON;
;;;5327           }
;;;5328           else if (block->m_modes[8] IS 8)
;;;5329           {
;;;5330               FLOOD_ON();
;;;5331               settings->flood SET_TO ON;
;;;5332           }
;;;5333           else if (block->m_modes[8] IS 9)
;;;5334           {
;;;5335               MIST_OFF();
;;;5336               settings->mist SET_TO OFF;
;;;5337               FLOOD_OFF();
;;;5338               settings->flood SET_TO OFF;
;;;5339           }
;;;5340   
;;;5341      /* No axis clamps in this version
;;;5342        if (block->m_modes[2] IS 26)
;;;5343          {
;;;5344      #ifdef DEBUG_EMC
;;;5345      COMMENT("interpreter: automatic A-axis clamping turned on");
;;;5346      #endif
;;;5347      settings->a_axis_clamping SET_TO ON;
;;;5348      }
;;;5349      else if (block->m_modes[2] IS 27)
;;;5350      {
;;;5351      #ifdef DEBUG_EMC
;;;5352      COMMENT("interpreter: automatic A-axis clamping turned off");
;;;5353      #endif
;;;5354      settings->a_axis_clamping SET_TO OFF;
;;;5355      }
;;;5356      */
;;;5357   
;;;5358           if (block->m_modes[9] IS 48)
;;;5359           {
;;;5360               ENABLE_FEED_OVERRIDE();
;;;5361               ENABLE_SPEED_OVERRIDE();
;;;5362               settings->feed_override SET_TO ON;
;;;5363               settings->speed_override SET_TO ON;
;;;5364           }
;;;5365           else if (block->m_modes[9] IS 49)
;;;5366           {
;;;5367               DISABLE_FEED_OVERRIDE();
;;;5368               DISABLE_SPEED_OVERRIDE();
;;;5369               settings->feed_override SET_TO OFF;
;;;5370               settings->speed_override SET_TO OFF;
;;;5371           }
;;;5372   
;;;5373           return RS274NGC_OK;
;;;5374       }
000062  bd70              POP      {r4-r6,pc}
                  |L40.100|
000064  4630              MOV      r0,r6                 ;5304
000066  e7fc              B        |L40.98|
                  |L40.104|
000068  f44f70d2          MOV      r0,#0x1a4             ;5307
00006c  5940              LDR      r0,[r0,r5]            ;5307
00006e  2803              CMP      r0,#3                 ;5307
000070  d107              BNE      |L40.130|
000072  f7fffffe          BL       START_SPINDLE_CLOCKWISE
000076  f04f0102          MOV      r1,#2                 ;5310
00007a  f24b10a8          MOV      r0,#0xb1a8            ;5310
00007e  5101              STR      r1,[r0,r4]            ;5310
000080  e018              B        |L40.180|
                  |L40.130|
000082  f44f70d2          MOV      r0,#0x1a4             ;5312
000086  5940              LDR      r0,[r0,r5]            ;5312
000088  2804              CMP      r0,#4                 ;5312
00008a  d107              BNE      |L40.156|
00008c  f7fffffe          BL       START_SPINDLE_COUNTERCLOCKWISE
000090  f04f0103          MOV      r1,#3                 ;5315
000094  f24b10a8          MOV      r0,#0xb1a8            ;5315
000098  5101              STR      r1,[r0,r4]            ;5315
00009a  e00b              B        |L40.180|
                  |L40.156|
00009c  f44f70d2          MOV      r0,#0x1a4             ;5317
0000a0  5940              LDR      r0,[r0,r5]            ;5317
0000a2  2805              CMP      r0,#5                 ;5317
0000a4  d106              BNE      |L40.180|
0000a6  f7fffffe          BL       STOP_SPINDLE_TURNING
0000aa  f04f0101          MOV      r1,#1                 ;5320
0000ae  f24b10a8          MOV      r0,#0xb1a8            ;5320
0000b2  5101              STR      r1,[r0,r4]            ;5320
                  |L40.180|
0000b4  f44f70d4          MOV      r0,#0x1a8             ;5323
0000b8  5940              LDR      r0,[r0,r5]            ;5323
0000ba  2807              CMP      r0,#7                 ;5323
0000bc  d106              BNE      |L40.204|
0000be  f7fffffe          BL       MIST_ON
0000c2  f04f0001          MOV      r0,#1                 ;5326
0000c6  f8c40624          STR      r0,[r4,#0x624]        ;5326
0000ca  e01c              B        |L40.262|
                  |L40.204|
0000cc  f44f70d4          MOV      r0,#0x1a8             ;5328
0000d0  5940              LDR      r0,[r0,r5]            ;5328
0000d2  2808              CMP      r0,#8                 ;5328
0000d4  d106              BNE      |L40.228|
0000d6  f7fffffe          BL       FLOOD_ON
0000da  f04f0001          MOV      r0,#1                 ;5331
0000de  f8c40514          STR      r0,[r4,#0x514]        ;5331
0000e2  e010              B        |L40.262|
                  |L40.228|
0000e4  f44f70d4          MOV      r0,#0x1a8             ;5333
0000e8  5940              LDR      r0,[r0,r5]            ;5333
0000ea  2809              CMP      r0,#9                 ;5333
0000ec  d10b              BNE      |L40.262|
0000ee  f7fffffe          BL       MIST_OFF
0000f2  f04f0000          MOV      r0,#0                 ;5336
0000f6  f8c40624          STR      r0,[r4,#0x624]        ;5336
0000fa  f7fffffe          BL       FLOOD_OFF
0000fe  f04f0000          MOV      r0,#0                 ;5338
000102  f8c40514          STR      r0,[r4,#0x514]        ;5338
                  |L40.262|
000106  f44f70d6          MOV      r0,#0x1ac             ;5358
00010a  5940              LDR      r0,[r0,r5]            ;5358
00010c  2830              CMP      r0,#0x30              ;5358
00010e  d10c              BNE      |L40.298|
000110  f7fffffe          BL       ENABLE_FEED_OVERRIDE
000114  f7fffffe          BL       ENABLE_SPEED_OVERRIDE
000118  f04f0001          MOV      r0,#1                 ;5362
00011c  f8c40400          STR      r0,[r4,#0x400]        ;5362
000120  4601              MOV      r1,r0                 ;5363
000122  f24b10a4          MOV      r0,#0xb1a4            ;5363
000126  5101              STR      r1,[r0,r4]            ;5363
000128  e010              B        |L40.332|
                  |L40.298|
00012a  f44f70d6          MOV      r0,#0x1ac             ;5365
00012e  5940              LDR      r0,[r0,r5]            ;5365
000130  2831              CMP      r0,#0x31              ;5365
000132  d10b              BNE      |L40.332|
000134  f7fffffe          BL       DISABLE_FEED_OVERRIDE
000138  f7fffffe          BL       DISABLE_SPEED_OVERRIDE
00013c  f04f0000          MOV      r0,#0                 ;5369
000140  f8c40400          STR      r0,[r4,#0x400]        ;5369
000144  4601              MOV      r1,r0                 ;5370
000146  f24b10a4          MOV      r0,#0xb1a4            ;5370
00014a  5101              STR      r1,[r0,r4]            ;5370
                  |L40.332|
00014c  2000              MOVS     r0,#0                 ;5373
00014e  e788              B        |L40.98|
;;;5375   
                          ENDP

                  |L40.336|
                          DCD      _setup+0xc000
                  |L40.340|
                          DCD      |symbol_number.465|
                  |L40.344|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_modal_0||, CODE, READONLY, ALIGN=2

                  convert_modal_0 PROC
;;;5400   
;;;5401       static int convert_modal_0(                   /* ARGUMENTS                                    */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;5402       int code,                                     /* G code, must be from group 0                 */
;;;5403       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;5404       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5405       {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;5406           static char name[] SET_TO "convert_modal_0";
;;;5407           int status;
;;;5408   		
;;;5409           if (code IS G_50)
00000a  f5b47ffa          CMP      r4,#0x1f4
00000e  d12d              BNE      |L41.108|
;;;5410           {
;;;5411               CHP(convert_setup(block, settings));
000010  4639              MOV      r1,r7
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       convert_setup
000018  0005              MOVS     r5,r0
                  |L41.26|
00001a  d07e              BEQ      |L41.282|
00001c  4861              LDR      r0,|L41.420|
00001e  f8d0014c          LDR      r0,[r0,#0x14c]
000022  2831              CMP      r0,#0x31
000024  da20              BGE      |L41.104|
000026  495f              LDR      r1,|L41.420|
000028  f8d1314c          LDR      r3,[r1,#0x14c]
00002c  f8d1114c          LDR      r1,[r1,#0x14c]
000030  1c49              ADDS     r1,r1,#1
000032  4a5c              LDR      r2,|L41.420|
000034  f8c2114c          STR      r1,[r2,#0x14c]
000038  eb030183          ADD      r1,r3,r3,LSL #2
00003c  f6a26254          SUB      r2,r2,#0xe54
000040  eb021101          ADD      r1,r2,r1,LSL #4
000044  4608              MOV      r0,r1
000046  4958              LDR      r1,|L41.424|
000048  f7fffffe          BL       strcpy
00004c  f04f0100          MOV      r1,#0
000050  4854              LDR      r0,|L41.420|
000052  f8d0014c          LDR      r0,[r0,#0x14c]
000056  eb000080          ADD      r0,r0,r0,LSL #2
00005a  4a54              LDR      r2,|L41.428|
00005c  eb021000          ADD      r0,r2,r0,LSL #4
000060  7001              STRB     r1,[r0,#0]
000062  4628              MOV      r0,r5
                  |L41.100|
;;;5412           }
;;;5413           else if ((code IS G_28) OR (code IS G_30))
;;;5414           {
;;;5415               CHP(convert_home(code, block, settings));
;;;5416           }
;;;5417           else if ((code IS G_92)   OR (code IS G_92_1) OR
;;;5418               (code IS G_92_2) OR (code IS G_92_3))
;;;5419           {
;;;5420               CHP(convert_axis_offsets(code, block, settings));
;;;5421           }
;;;5422           else if ((code IS G_4) OR (code IS G_53));/* handled elsewhere */
;;;5423           else
;;;5424               ERM(NCE_BUG_CODE_NOT_G4_G50_G28_G30_G53_OR_G92_SERIES);
;;;5425           return RS274NGC_OK;
;;;5426       }
000064  e8bd81f0          POP      {r4-r8,pc}
                  |L41.104|
000068  4628              MOV      r0,r5                 ;5411
00006a  e7fb              B        |L41.100|
                  |L41.108|
00006c  f5b47f8c          CMP      r4,#0x118             ;5413
000070  d002              BEQ      |L41.120|
000072  f5b47f96          CMP      r4,#0x12c             ;5413
000076  d12c              BNE      |L41.210|
                  |L41.120|
000078  463a              MOV      r2,r7                 ;5415
00007a  4631              MOV      r1,r6                 ;5415
00007c  4620              MOV      r0,r4                 ;5415
00007e  f7fffffe          BL       convert_home
000082  0005              MOVS     r5,r0                 ;5415
000084  d0c9              BEQ      |L41.26|
000086  4847              LDR      r0,|L41.420|
000088  f8d0014c          LDR      r0,[r0,#0x14c]        ;5415
00008c  2831              CMP      r0,#0x31              ;5415
00008e  da1e              BGE      |L41.206|
000090  4944              LDR      r1,|L41.420|
000092  f8d1314c          LDR      r3,[r1,#0x14c]        ;5415
000096  f8d1114c          LDR      r1,[r1,#0x14c]        ;5415
00009a  1c49              ADDS     r1,r1,#1              ;5415
00009c  4a41              LDR      r2,|L41.420|
00009e  f8c2114c          STR      r1,[r2,#0x14c]        ;5415
0000a2  eb030183          ADD      r1,r3,r3,LSL #2       ;5415
0000a6  4a41              LDR      r2,|L41.428|
0000a8  eb021101          ADD      r1,r2,r1,LSL #4       ;5415
0000ac  4608              MOV      r0,r1                 ;5415
0000ae  493e              LDR      r1,|L41.424|
0000b0  f7fffffe          BL       strcpy
0000b4  f04f0100          MOV      r1,#0                 ;5415
0000b8  483a              LDR      r0,|L41.420|
0000ba  f8d0014c          LDR      r0,[r0,#0x14c]        ;5415
0000be  eb000080          ADD      r0,r0,r0,LSL #2       ;5415
0000c2  4a3a              LDR      r2,|L41.428|
0000c4  eb021000          ADD      r0,r2,r0,LSL #4       ;5415
0000c8  7001              STRB     r1,[r0,#0]            ;5415
0000ca  4628              MOV      r0,r5                 ;5415
0000cc  e7ca              B        |L41.100|
                  |L41.206|
0000ce  4628              MOV      r0,r5                 ;5415
0000d0  e7c8              B        |L41.100|
                  |L41.210|
0000d2  f5b47f66          CMP      r4,#0x398             ;5417
0000d6  d007              BEQ      |L41.232|
0000d8  f5a47040          SUB      r0,r4,#0x300          ;5417
0000dc  3899              SUBS     r0,r0,#0x99           ;5417
0000de  d003              BEQ      |L41.232|
0000e0  1e40              SUBS     r0,r0,#1              ;5418
0000e2  d001              BEQ      |L41.232|
0000e4  1e40              SUBS     r0,r0,#1              ;5418
0000e6  d12e              BNE      |L41.326|
                  |L41.232|
0000e8  463a              MOV      r2,r7                 ;5420
0000ea  4631              MOV      r1,r6                 ;5420
0000ec  4620              MOV      r0,r4                 ;5420
0000ee  f7fffffe          BL       convert_axis_offsets
0000f2  0005              MOVS     r5,r0                 ;5420
0000f4  d053              BEQ      |L41.414|
0000f6  482b              LDR      r0,|L41.420|
0000f8  f8d0014c          LDR      r0,[r0,#0x14c]        ;5420
0000fc  2831              CMP      r0,#0x31              ;5420
0000fe  da20              BGE      |L41.322|
000100  4928              LDR      r1,|L41.420|
000102  f8d1314c          LDR      r3,[r1,#0x14c]        ;5420
000106  f8d1114c          LDR      r1,[r1,#0x14c]        ;5420
00010a  1c49              ADDS     r1,r1,#1              ;5420
00010c  4a25              LDR      r2,|L41.420|
00010e  f8c2114c          STR      r1,[r2,#0x14c]        ;5420
000112  eb030183          ADD      r1,r3,r3,LSL #2       ;5420
000116  4a25              LDR      r2,|L41.428|
000118  e000              B        |L41.284|
                  |L41.282|
00011a  e040              B        |L41.414|
                  |L41.284|
00011c  eb021101          ADD      r1,r2,r1,LSL #4       ;5420
000120  4608              MOV      r0,r1                 ;5420
000122  4921              LDR      r1,|L41.424|
000124  f7fffffe          BL       strcpy
000128  f04f0100          MOV      r1,#0                 ;5420
00012c  481d              LDR      r0,|L41.420|
00012e  f8d0014c          LDR      r0,[r0,#0x14c]        ;5420
000132  eb000080          ADD      r0,r0,r0,LSL #2       ;5420
000136  4a1d              LDR      r2,|L41.428|
000138  eb021000          ADD      r0,r2,r0,LSL #4       ;5420
00013c  7001              STRB     r1,[r0,#0]            ;5420
00013e  4628              MOV      r0,r5                 ;5420
000140  e790              B        |L41.100|
                  |L41.322|
000142  4628              MOV      r0,r5                 ;5420
000144  e78e              B        |L41.100|
                  |L41.326|
000146  2c28              CMP      r4,#0x28              ;5422
000148  d029              BEQ      |L41.414|
00014a  f5a47000          SUB      r0,r4,#0x200          ;5422
00014e  3812              SUBS     r0,r0,#0x12           ;5422
000150  d025              BEQ      |L41.414|
000152  f04f0100          MOV      r1,#0                 ;5424
000156  4813              LDR      r0,|L41.420|
000158  f8c0114c          STR      r1,[r0,#0x14c]        ;5424
00015c  4601              MOV      r1,r0                 ;5424
00015e  f8d1314c          LDR      r3,[r1,#0x14c]        ;5424
000162  f8d1114c          LDR      r1,[r1,#0x14c]        ;5424
000166  f1010101          ADD      r1,r1,#1              ;5424
00016a  4602              MOV      r2,r0                 ;5424
00016c  f8c2114c          STR      r1,[r2,#0x14c]        ;5424
000170  eb030183          ADD      r1,r3,r3,LSL #2       ;5424
000174  4a0d              LDR      r2,|L41.428|
000176  eb021101          ADD      r1,r2,r1,LSL #4       ;5424
00017a  4608              MOV      r0,r1                 ;5424
00017c  490a              LDR      r1,|L41.424|
00017e  f7fffffe          BL       strcpy
000182  f04f0100          MOV      r1,#0                 ;5424
000186  4807              LDR      r0,|L41.420|
000188  f8d0014c          LDR      r0,[r0,#0x14c]        ;5424
00018c  eb000080          ADD      r0,r0,r0,LSL #2       ;5424
000190  4a06              LDR      r2,|L41.428|
000192  eb021000          ADD      r0,r2,r0,LSL #4       ;5424
000196  7001              STRB     r1,[r0,#0]            ;5424
000198  f04f0017          MOV      r0,#0x17              ;5424
00019c  e762              B        |L41.100|
                  |L41.414|
00019e  2000              MOVS     r0,#0                 ;5425
0001a0  e760              B        |L41.100|
;;;5427   
                          ENDP

0001a2  0000              DCW      0x0000
                  |L41.420|
                          DCD      _setup+0xc000
                  |L41.424|
                          DCD      |symbol_number.466|
                  |L41.428|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_motion||, CODE, READONLY, ALIGN=2

                  convert_motion PROC
;;;5450   
;;;5451       static int convert_motion(                    /* ARGUMENTS                                 */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;5452       int motion,                                   /* g_code for a line, arc, canned cycle      */
;;;5453       block_pointer block,                          /* pointer to a block of RS274 instructions  */
;;;5454       setup_pointer settings)                       /* pointer to machine settings               */
;;;5455       {
000004  4604              MOV      r4,r0
000006  460f              MOV      r7,r1
000008  4616              MOV      r6,r2
;;;5456           static char name[] SET_TO "convert_motion";
;;;5457           int status;
;;;5458   
;;;5459           if ((motion IS G_0) OR (motion IS G_1))
00000a  b10c              CBZ      r4,|L42.16|
00000c  2c0a              CMP      r4,#0xa
00000e  d12e              BNE      |L42.110|
                  |L42.16|
;;;5460           {
;;;5461               CHP(convert_straight(motion, block, settings));
000010  4632              MOV      r2,r6
000012  4639              MOV      r1,r7
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       convert_straight
00001a  0005              MOVS     r5,r0
                  |L42.28|
00001c  d07e              BEQ      |L42.284|
00001e  4878              LDR      r0,|L42.512|
000020  f8d0014c          LDR      r0,[r0,#0x14c]
000024  2831              CMP      r0,#0x31
000026  da20              BGE      |L42.106|
000028  4975              LDR      r1,|L42.512|
00002a  f8d1314c          LDR      r3,[r1,#0x14c]
00002e  f8d1114c          LDR      r1,[r1,#0x14c]
000032  1c49              ADDS     r1,r1,#1
000034  4a72              LDR      r2,|L42.512|
000036  f8c2114c          STR      r1,[r2,#0x14c]
00003a  eb030183          ADD      r1,r3,r3,LSL #2
00003e  f6a26254          SUB      r2,r2,#0xe54
000042  eb021101          ADD      r1,r2,r1,LSL #4
000046  4608              MOV      r0,r1
000048  496e              LDR      r1,|L42.516|
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  486b              LDR      r0,|L42.512|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4a6a              LDR      r2,|L42.520|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  4628              MOV      r0,r5
                  |L42.102|
;;;5462           }
;;;5463           else if ((motion IS G_3) OR (motion IS G_2))
;;;5464           {
;;;5465               CHP(convert_arc(motion, block, settings));
;;;5466           }
;;;5467           else if (motion IS G_38_2)
;;;5468           {
;;;5469               CHP(convert_probe(block, settings));
;;;5470           }
;;;5471           else if (motion IS G_80)
;;;5472           {
;;;5473   #ifdef DEBUG_EMC
;;;5474               COMMENT("interpreter: motion mode set to none");
;;;5475   #endif
;;;5476               settings->motion_mode SET_TO G_80;
;;;5477           }
;;;5478           else if ((motion > G_80) AND (motion < G_90))
;;;5479           {
;;;5480               CHP(convert_cycle(motion, block, settings));
;;;5481           }
;;;5482           else
;;;5483               ERM(NCE_BUG_UNKNOWN_MOTION_CODE);
;;;5484   
;;;5485           return RS274NGC_OK;
;;;5486       }
000066  e8bd81f0          POP      {r4-r8,pc}
                  |L42.106|
00006a  4628              MOV      r0,r5                 ;5461
00006c  e7fb              B        |L42.102|
                  |L42.110|
00006e  2c1e              CMP      r4,#0x1e              ;5463
000070  d001              BEQ      |L42.118|
000072  2c14              CMP      r4,#0x14              ;5463
000074  d12c              BNE      |L42.208|
                  |L42.118|
000076  4632              MOV      r2,r6                 ;5465
000078  4639              MOV      r1,r7                 ;5465
00007a  4620              MOV      r0,r4                 ;5465
00007c  f7fffffe          BL       convert_arc
000080  0005              MOVS     r5,r0                 ;5465
000082  d0cb              BEQ      |L42.28|
000084  485e              LDR      r0,|L42.512|
000086  f8d0014c          LDR      r0,[r0,#0x14c]        ;5465
00008a  2831              CMP      r0,#0x31              ;5465
00008c  da1e              BGE      |L42.204|
00008e  495c              LDR      r1,|L42.512|
000090  f8d1314c          LDR      r3,[r1,#0x14c]        ;5465
000094  f8d1114c          LDR      r1,[r1,#0x14c]        ;5465
000098  1c49              ADDS     r1,r1,#1              ;5465
00009a  4a59              LDR      r2,|L42.512|
00009c  f8c2114c          STR      r1,[r2,#0x14c]        ;5465
0000a0  eb030183          ADD      r1,r3,r3,LSL #2       ;5465
0000a4  4a58              LDR      r2,|L42.520|
0000a6  eb021101          ADD      r1,r2,r1,LSL #4       ;5465
0000aa  4608              MOV      r0,r1                 ;5465
0000ac  4955              LDR      r1,|L42.516|
0000ae  f7fffffe          BL       strcpy
0000b2  f04f0100          MOV      r1,#0                 ;5465
0000b6  4852              LDR      r0,|L42.512|
0000b8  f8d0014c          LDR      r0,[r0,#0x14c]        ;5465
0000bc  eb000080          ADD      r0,r0,r0,LSL #2       ;5465
0000c0  4a51              LDR      r2,|L42.520|
0000c2  eb021000          ADD      r0,r2,r0,LSL #4       ;5465
0000c6  7001              STRB     r1,[r0,#0]            ;5465
0000c8  4628              MOV      r0,r5                 ;5465
0000ca  e7cc              B        |L42.102|
                  |L42.204|
0000cc  4628              MOV      r0,r5                 ;5465
0000ce  e7ca              B        |L42.102|
                  |L42.208|
0000d0  f5b47fbf          CMP      r4,#0x17e             ;5467
0000d4  d12d              BNE      |L42.306|
0000d6  4631              MOV      r1,r6                 ;5469
0000d8  4638              MOV      r0,r7                 ;5469
0000da  f7fffffe          BL       convert_probe
0000de  0005              MOVS     r5,r0                 ;5469
0000e0  d09c              BEQ      |L42.28|
0000e2  4847              LDR      r0,|L42.512|
0000e4  f8d0014c          LDR      r0,[r0,#0x14c]        ;5469
0000e8  2831              CMP      r0,#0x31              ;5469
0000ea  da20              BGE      |L42.302|
0000ec  4944              LDR      r1,|L42.512|
0000ee  f8d1314c          LDR      r3,[r1,#0x14c]        ;5469
0000f2  f8d1114c          LDR      r1,[r1,#0x14c]        ;5469
0000f6  1c49              ADDS     r1,r1,#1              ;5469
0000f8  4a41              LDR      r2,|L42.512|
0000fa  f8c2114c          STR      r1,[r2,#0x14c]        ;5469
0000fe  eb030183          ADD      r1,r3,r3,LSL #2       ;5469
000102  4a41              LDR      r2,|L42.520|
000104  eb021101          ADD      r1,r2,r1,LSL #4       ;5469
000108  4608              MOV      r0,r1                 ;5469
00010a  493e              LDR      r1,|L42.516|
00010c  f7fffffe          BL       strcpy
000110  f04f0100          MOV      r1,#0                 ;5469
000114  483a              LDR      r0,|L42.512|
000116  f8d0014c          LDR      r0,[r0,#0x14c]        ;5469
00011a  e000              B        |L42.286|
                  |L42.284|
00011c  e06d              B        |L42.506|
                  |L42.286|
00011e  eb000080          ADD      r0,r0,r0,LSL #2       ;5469
000122  4a39              LDR      r2,|L42.520|
000124  eb021000          ADD      r0,r2,r0,LSL #4       ;5469
000128  7001              STRB     r1,[r0,#0]            ;5469
00012a  4628              MOV      r0,r5                 ;5469
00012c  e79b              B        |L42.102|
                  |L42.302|
00012e  4628              MOV      r0,r5                 ;5469
000130  e799              B        |L42.102|
                  |L42.306|
000132  f5b47f48          CMP      r4,#0x320             ;5471
000136  d107              BNE      |L42.328|
000138  a034              ADR      r0,|L42.524|
00013a  f7fffffe          BL       COMMENT
00013e  f44f7048          MOV      r0,#0x320             ;5476
000142  f8c60628          STR      r0,[r6,#0x628]        ;5476
000146  e058              B        |L42.506|
                  |L42.328|
000148  f5b47f48          CMP      r4,#0x320             ;5478
00014c  dd2f              BLE      |L42.430|
00014e  f5b47f61          CMP      r4,#0x384             ;5478
000152  da2c              BGE      |L42.430|
000154  4632              MOV      r2,r6                 ;5480
000156  4639              MOV      r1,r7                 ;5480
000158  4620              MOV      r0,r4                 ;5480
00015a  f7fffffe          BL       convert_cycle
00015e  0005              MOVS     r5,r0                 ;5480
000160  d04b              BEQ      |L42.506|
000162  4827              LDR      r0,|L42.512|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;5480
000168  2831              CMP      r0,#0x31              ;5480
00016a  da1e              BGE      |L42.426|
00016c  4924              LDR      r1,|L42.512|
00016e  f8d1314c          LDR      r3,[r1,#0x14c]        ;5480
000172  f8d1114c          LDR      r1,[r1,#0x14c]        ;5480
000176  1c49              ADDS     r1,r1,#1              ;5480
000178  4a21              LDR      r2,|L42.512|
00017a  f8c2114c          STR      r1,[r2,#0x14c]        ;5480
00017e  eb030183          ADD      r1,r3,r3,LSL #2       ;5480
000182  4a21              LDR      r2,|L42.520|
000184  eb021101          ADD      r1,r2,r1,LSL #4       ;5480
000188  4608              MOV      r0,r1                 ;5480
00018a  491e              LDR      r1,|L42.516|
00018c  f7fffffe          BL       strcpy
000190  f04f0100          MOV      r1,#0                 ;5480
000194  481a              LDR      r0,|L42.512|
000196  f8d0014c          LDR      r0,[r0,#0x14c]        ;5480
00019a  eb000080          ADD      r0,r0,r0,LSL #2       ;5480
00019e  4a1a              LDR      r2,|L42.520|
0001a0  eb021000          ADD      r0,r2,r0,LSL #4       ;5480
0001a4  7001              STRB     r1,[r0,#0]            ;5480
0001a6  4628              MOV      r0,r5                 ;5480
0001a8  e75d              B        |L42.102|
                  |L42.426|
0001aa  4628              MOV      r0,r5                 ;5480
0001ac  e75b              B        |L42.102|
                  |L42.430|
0001ae  f04f0100          MOV      r1,#0                 ;5483
0001b2  4813              LDR      r0,|L42.512|
0001b4  f8c0114c          STR      r1,[r0,#0x14c]        ;5483
0001b8  4601              MOV      r1,r0                 ;5483
0001ba  f8d1314c          LDR      r3,[r1,#0x14c]        ;5483
0001be  f8d1114c          LDR      r1,[r1,#0x14c]        ;5483
0001c2  f1010101          ADD      r1,r1,#1              ;5483
0001c6  4602              MOV      r2,r0                 ;5483
0001c8  f8c2114c          STR      r1,[r2,#0x14c]        ;5483
0001cc  eb030183          ADD      r1,r3,r3,LSL #2       ;5483
0001d0  4a0d              LDR      r2,|L42.520|
0001d2  eb021101          ADD      r1,r2,r1,LSL #4       ;5483
0001d6  4608              MOV      r0,r1                 ;5483
0001d8  490a              LDR      r1,|L42.516|
0001da  f7fffffe          BL       strcpy
0001de  f04f0100          MOV      r1,#0                 ;5483
0001e2  4807              LDR      r0,|L42.512|
0001e4  f8d0014c          LDR      r0,[r0,#0x14c]        ;5483
0001e8  eb000080          ADD      r0,r0,r0,LSL #2       ;5483
0001ec  4a06              LDR      r2,|L42.520|
0001ee  eb021000          ADD      r0,r2,r0,LSL #4       ;5483
0001f2  7001              STRB     r1,[r0,#0]            ;5483
0001f4  f04f0024          MOV      r0,#0x24              ;5483
0001f8  e735              B        |L42.102|
                  |L42.506|
0001fa  2000              MOVS     r0,#0                 ;5485
0001fc  e733              B        |L42.102|
;;;5487   
                          ENDP

0001fe  0000              DCW      0x0000
                  |L42.512|
                          DCD      _setup+0xc000
                  |L42.516|
                          DCD      |symbol_number.467|
                  |L42.520|
                          DCD      _setup+0xb1ac
                  |L42.524|
00020c  696e7465          DCB      "interpreter: motion mode set to none",0
000210  72707265
000214  7465723a
000218  206d6f74
00021c  696f6e20
000220  6d6f6465
000224  20736574
000228  20746f20
00022c  6e6f6e65
000230  00      
000231  00                DCB      0
000232  00                DCB      0
000233  00                DCB      0

                          AREA ||i.convert_probe||, CODE, READONLY, ALIGN=2

                  convert_probe PROC
;;;5524   
;;;5525       static int convert_probe(                     /* ARGUMENTS                                */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;5526       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;5527       setup_pointer settings)                       /* pointer to machine settings              */
;;;5528       {
000004  b091              SUB      sp,sp,#0x44
000006  4681              MOV      r9,r0
000008  4688              MOV      r8,r1
;;;5529           static char name[] SET_TO "convert_probe";
;;;5530           double distance;
;;;5531           double end_x;
;;;5532           double end_y;
;;;5533           double end_z;
;;;5534   #ifdef AA
;;;5535           double AA_end;                            /*AA*/
;;;5536   #endif
;;;5537   #ifdef BB
;;;5538           double BB_end;                            /*BB*/
;;;5539   #endif
;;;5540   #ifdef CC
;;;5541           double CC_end;                            /*CC*/
;;;5542   #endif
;;;5543   
;;;5544           CHK((((block->x_flag IS OFF) AND (block->y_flag IS OFF)) AND
00000a  f8d901dc          LDR      r0,[r9,#0x1dc]
00000e  bb70              CBNZ     r0,|L43.110|
000010  f8d901e8          LDR      r0,[r9,#0x1e8]
000014  bb58              CBNZ     r0,|L43.110|
000016  f8d901f8          LDR      r0,[r9,#0x1f8]
00001a  bb40              CBNZ     r0,|L43.110|
00001c  f04f0100          MOV      r1,#0
000020  48a9              LDR      r0,|L43.712|
000022  f8c0114c          STR      r1,[r0,#0x14c]
000026  4601              MOV      r1,r0
000028  f8d1314c          LDR      r3,[r1,#0x14c]
00002c  f8d1114c          LDR      r1,[r1,#0x14c]
000030  f1010101          ADD      r1,r1,#1
000034  4602              MOV      r2,r0
000036  f8c2114c          STR      r1,[r2,#0x14c]
00003a  eb030183          ADD      r1,r3,r3,LSL #2
00003e  f6a06254          SUB      r2,r0,#0xe54
000042  eb021101          ADD      r1,r2,r1,LSL #4
000046  4608              MOV      r0,r1
000048  49a0              LDR      r1,|L43.716|
00004a  f7fffffe          BL       strcpy
00004e  f04f0100          MOV      r1,#0
000052  489d              LDR      r0,|L43.712|
000054  f8d0014c          LDR      r0,[r0,#0x14c]
000058  eb000080          ADD      r0,r0,r0,LSL #2
00005c  4a9c              LDR      r2,|L43.720|
00005e  eb021000          ADD      r0,r2,r0,LSL #4
000062  7001              STRB     r1,[r0,#0]
000064  f04f00c0          MOV      r0,#0xc0
                  |L43.104|
;;;5545               (block->z_flag IS OFF)), NCE_X_Y_AND_Z_WORDS_ALL_MISSING_WITH_G38_2);
;;;5546           CHK((settings->feed_mode IS INVERSE_TIME),
;;;5547               NCE_CANNOT_PROBE_IN_INVERSE_TIME_FEED_MODE);
;;;5548           CHK((settings->cutter_comp_side ISNT OFF),
;;;5549               NCE_CANNOT_PROBE_WITH_CUTTER_RADIUS_COMP_ON);
;;;5550           CHK((settings->feed_rate IS 0.0), NCE_CANNOT_PROBE_WITH_ZERO_FEED_RATE);
;;;5551           find_ends(block, settings, &end_x, &end_y,
;;;5552               &end_z
;;;5553       #ifdef AA
;;;5554               , &AA_end
;;;5555       #endif
;;;5556   
;;;5557       #ifdef BB
;;;5558               , &BB_end
;;;5559       #endif
;;;5560   
;;;5561       #ifdef CC
;;;5562               , &CC_end
;;;5563       #endif
;;;5564               );
;;;5565           if (0
;;;5566       #ifdef AA
;;;5567               OR (AA_end ISNT settings->AA_current) /*AA*/
;;;5568       #endif
;;;5569       #ifdef BB
;;;5570               OR (BB_end ISNT settings->BB_current) /*BB*/
;;;5571       #endif
;;;5572       #ifdef CC
;;;5573               OR (CC_end ISNT settings->CC_current) /*CC*/
;;;5574       #endif
;;;5575               )
;;;5576               ERM(NCE_CANNOT_MOVE_ROTARY_AXES_DURING_PROBING);
;;;5577           distance SET_TO sqrt(pow((settings->current_x - end_x), 2) +
;;;5578               pow((settings->current_y - end_y), 2) +
;;;5579               pow((settings->current_z - end_z), 2));
;;;5580           CHK((distance < ((settings->length_units IS CANON_UNITS_MM) ? 0.254 : 0.01)),
;;;5581               NCE_START_POINT_TOO_CLOSE_TO_PROBE_POINT);
;;;5582           TURN_PROBE_ON();
;;;5583           STRAIGHT_PROBE(end_x, end_y, end_z
;;;5584       #ifdef AA
;;;5585               ,        AA_end
;;;5586       #else
;;;5587       #ifdef ALL_AXES
;;;5588               , 0
;;;5589       #endif
;;;5590       #endif
;;;5591       #ifdef BB
;;;5592               ,  BB_end
;;;5593       #else
;;;5594       #ifdef ALL_AXES
;;;5595               , 0
;;;5596       #endif
;;;5597       #endif
;;;5598       #ifdef CC
;;;5599               ,  CC_end
;;;5600       #else
;;;5601       #ifdef ALL_AXES
;;;5602               , 0
;;;5603       #endif
;;;5604       #endif
;;;5605               );
;;;5606           TURN_PROBE_OFF();
;;;5607           settings->motion_mode SET_TO G_38_2;
;;;5608           settings->probe_flag SET_TO ON;
;;;5609           return RS274NGC_OK;
;;;5610       }
000068  b011              ADD      sp,sp,#0x44
00006a  e8bd8ff0          POP      {r4-r11,pc}
                  |L43.110|
00006e  f8d803fc          LDR      r0,[r8,#0x3fc]        ;5546
000072  2801              CMP      r0,#1                 ;5546
000074  d125              BNE      |L43.194|
000076  f04f0100          MOV      r1,#0                 ;5546
00007a  4893              LDR      r0,|L43.712|
00007c  f8c0114c          STR      r1,[r0,#0x14c]        ;5546
000080  4601              MOV      r1,r0                 ;5546
000082  f8d1314c          LDR      r3,[r1,#0x14c]        ;5546
000086  f8d1114c          LDR      r1,[r1,#0x14c]        ;5546
00008a  f1010101          ADD      r1,r1,#1              ;5546
00008e  4602              MOV      r2,r0                 ;5546
000090  f8c2114c          STR      r1,[r2,#0x14c]        ;5546
000094  eb030183          ADD      r1,r3,r3,LSL #2       ;5546
000098  4a8d              LDR      r2,|L43.720|
00009a  eb021101          ADD      r1,r2,r1,LSL #4       ;5546
00009e  4608              MOV      r0,r1                 ;5546
0000a0  498a              LDR      r1,|L43.716|
0000a2  f7fffffe          BL       strcpy
0000a6  f04f0100          MOV      r1,#0                 ;5546
0000aa  4887              LDR      r0,|L43.712|
0000ac  f8d0014c          LDR      r0,[r0,#0x14c]        ;5546
0000b0  eb000080          ADD      r0,r0,r0,LSL #2       ;5546
0000b4  4a86              LDR      r2,|L43.720|
0000b6  eb021000          ADD      r0,r2,r0,LSL #4       ;5546
0000ba  7001              STRB     r1,[r0,#0]            ;5546
0000bc  f04f002f          MOV      r0,#0x2f              ;5546
0000c0  e7d2              B        |L43.104|
                  |L43.194|
0000c2  f8d803b0          LDR      r0,[r8,#0x3b0]        ;5548
0000c6  b328              CBZ      r0,|L43.276|
0000c8  f04f0100          MOV      r1,#0                 ;5548
0000cc  487e              LDR      r0,|L43.712|
0000ce  f8c0114c          STR      r1,[r0,#0x14c]        ;5548
0000d2  4601              MOV      r1,r0                 ;5548
0000d4  f8d1314c          LDR      r3,[r1,#0x14c]        ;5548
0000d8  f8d1114c          LDR      r1,[r1,#0x14c]        ;5548
0000dc  f1010101          ADD      r1,r1,#1              ;5548
0000e0  4602              MOV      r2,r0                 ;5548
0000e2  f8c2114c          STR      r1,[r2,#0x14c]        ;5548
0000e6  eb030183          ADD      r1,r3,r3,LSL #2       ;5548
0000ea  4a79              LDR      r2,|L43.720|
0000ec  eb021101          ADD      r1,r2,r1,LSL #4       ;5548
0000f0  4608              MOV      r0,r1                 ;5548
0000f2  4976              LDR      r1,|L43.716|
0000f4  f7fffffe          BL       strcpy
0000f8  f04f0100          MOV      r1,#0                 ;5548
0000fc  4872              LDR      r0,|L43.712|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]        ;5548
000102  eb000080          ADD      r0,r0,r0,LSL #2       ;5548
000106  4a72              LDR      r2,|L43.720|
000108  eb021000          ADD      r0,r2,r0,LSL #4       ;5548
00010c  7001              STRB     r1,[r0,#0]            ;5548
00010e  f04f0030          MOV      r0,#0x30              ;5548
000112  e7a9              B        |L43.104|
                  |L43.276|
000114  f8d81408          LDR      r1,[r8,#0x408]        ;5550
000118  460e              MOV      r6,r1                 ;5550
00011a  f8d8040c          LDR      r0,[r8,#0x40c]        ;5550
00011e  4607              MOV      r7,r0                 ;5550
000120  2200              MOVS     r2,#0                 ;5550
000122  4613              MOV      r3,r2                 ;5550
000124  4630              MOV      r0,r6                 ;5550
000126  4639              MOV      r1,r7                 ;5550
000128  f7fffffe          BL       __aeabi_cdcmpeq
00012c  d125              BNE      |L43.378|
00012e  f04f0100          MOV      r1,#0                 ;5550
000132  4865              LDR      r0,|L43.712|
000134  f8c0114c          STR      r1,[r0,#0x14c]        ;5550
000138  4601              MOV      r1,r0                 ;5550
00013a  f8d1314c          LDR      r3,[r1,#0x14c]        ;5550
00013e  f8d1114c          LDR      r1,[r1,#0x14c]        ;5550
000142  f1010101          ADD      r1,r1,#1              ;5550
000146  4602              MOV      r2,r0                 ;5550
000148  f8c2114c          STR      r1,[r2,#0x14c]        ;5550
00014c  eb030183          ADD      r1,r3,r3,LSL #2       ;5550
000150  4a5f              LDR      r2,|L43.720|
000152  eb021101          ADD      r1,r2,r1,LSL #4       ;5550
000156  4608              MOV      r0,r1                 ;5550
000158  495c              LDR      r1,|L43.716|
00015a  f7fffffe          BL       strcpy
00015e  f04f0100          MOV      r1,#0                 ;5550
000162  4859              LDR      r0,|L43.712|
000164  f8d0014c          LDR      r0,[r0,#0x14c]        ;5550
000168  eb000080          ADD      r0,r0,r0,LSL #2       ;5550
00016c  4a58              LDR      r2,|L43.720|
00016e  eb021000          ADD      r0,r2,r0,LSL #4       ;5550
000172  7001              STRB     r1,[r0,#0]            ;5550
000174  f04f0031          MOV      r0,#0x31              ;5550
000178  e776              B        |L43.104|
                  |L43.378|
00017a  a80a              ADD      r0,sp,#0x28           ;5551
00017c  ab0c              ADD      r3,sp,#0x30           ;5551
00017e  aa0e              ADD      r2,sp,#0x38           ;5551
000180  4641              MOV      r1,r8                 ;5551
000182  9000              STR      r0,[sp,#0]            ;5551
000184  4648              MOV      r0,r9                 ;5551
000186  f7fffffe          BL       find_ends
00018a  f8d813a0          LDR      r1,[r8,#0x3a0]        ;5577
00018e  460e              MOV      r6,r1                 ;5577
000190  f8d803a4          LDR      r0,[r8,#0x3a4]        ;5577
000194  4607              MOV      r7,r0                 ;5577
000196  4630              MOV      r0,r6                 ;5577
000198  4639              MOV      r1,r7                 ;5577
00019a  e9dd230a          LDRD     r2,r3,[sp,#0x28]      ;5577
00019e  f7fffffe          BL       __aeabi_dsub
0001a2  4682              MOV      r10,r0                ;5577
0001a4  2200              MOVS     r2,#0                 ;5577
0001a6  f04f4380          MOV      r3,#0x40000000        ;5577
0001aa  f7fffffe          BL       pow
0001ae  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;5577
0001b2  f8d81398          LDR      r1,[r8,#0x398]        ;5577
0001b6  460e              MOV      r6,r1                 ;5577
0001b8  f8d8039c          LDR      r0,[r8,#0x39c]        ;5577
0001bc  4607              MOV      r7,r0                 ;5577
0001be  4630              MOV      r0,r6                 ;5577
0001c0  4639              MOV      r1,r7                 ;5577
0001c2  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;5577
0001c6  f7fffffe          BL       __aeabi_dsub
0001ca  4682              MOV      r10,r0                ;5577
0001cc  2200              MOVS     r2,#0                 ;5577
0001ce  f04f4380          MOV      r3,#0x40000000        ;5577
0001d2  f7fffffe          BL       pow
0001d6  e9cd0102          STRD     r0,r1,[sp,#8]         ;5577
0001da  f8d81390          LDR      r1,[r8,#0x390]        ;5577
0001de  460e              MOV      r6,r1                 ;5577
0001e0  f8d80394          LDR      r0,[r8,#0x394]        ;5577
0001e4  4607              MOV      r7,r0                 ;5577
0001e6  4630              MOV      r0,r6                 ;5577
0001e8  4639              MOV      r1,r7                 ;5577
0001ea  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;5577
0001ee  f7fffffe          BL       __aeabi_dsub
0001f2  4682              MOV      r10,r0                ;5577
0001f4  2200              MOVS     r2,#0                 ;5577
0001f6  f04f4380          MOV      r3,#0x40000000        ;5577
0001fa  f7fffffe          BL       pow
0001fe  e9cd0100          STRD     r0,r1,[sp,#0]         ;5577
000202  e9dd2302          LDRD     r2,r3,[sp,#8]         ;5577
000206  f7fffffe          BL       __aeabi_dadd
00020a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;5577
00020e  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;5577
000212  f7fffffe          BL       __aeabi_dadd
000216  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;5577
00021a  f7fffffe          BL       sqrt
00021e  4604              MOV      r4,r0                 ;5577
000220  460d              MOV      r5,r1                 ;5577
000222  f8d8051c          LDR      r0,[r8,#0x51c]        ;5580
000226  2802              CMP      r0,#2                 ;5580
000228  d102              BNE      |L43.560|
00022a  492a              LDR      r1,|L43.724|
00022c  482a              LDR      r0,|L43.728|
00022e  e001              B        |L43.564|
                  |L43.560|
000230  492a              LDR      r1,|L43.732|
000232  482b              LDR      r0,|L43.736|
                  |L43.564|
000234  460e              MOV      r6,r1                 ;5580
000236  4632              MOV      r2,r6                 ;5580
000238  4603              MOV      r3,r0                 ;5580
00023a  4620              MOV      r0,r4                 ;5580
00023c  4629              MOV      r1,r5                 ;5580
00023e  f7fffffe          BL       __aeabi_cdcmple
000242  d225              BCS      |L43.656|
000244  f04f0100          MOV      r1,#0                 ;5580
000248  481f              LDR      r0,|L43.712|
00024a  f8c0114c          STR      r1,[r0,#0x14c]        ;5580
00024e  4601              MOV      r1,r0                 ;5580
000250  f8d1314c          LDR      r3,[r1,#0x14c]        ;5580
000254  f8d1114c          LDR      r1,[r1,#0x14c]        ;5580
000258  f1010101          ADD      r1,r1,#1              ;5580
00025c  4602              MOV      r2,r0                 ;5580
00025e  f8c2114c          STR      r1,[r2,#0x14c]        ;5580
000262  eb030183          ADD      r1,r3,r3,LSL #2       ;5580
000266  4a1a              LDR      r2,|L43.720|
000268  eb021101          ADD      r1,r2,r1,LSL #4       ;5580
00026c  4608              MOV      r0,r1                 ;5580
00026e  4917              LDR      r1,|L43.716|
000270  f7fffffe          BL       strcpy
000274  f04f0100          MOV      r1,#0                 ;5580
000278  4813              LDR      r0,|L43.712|
00027a  f8d0014c          LDR      r0,[r0,#0x14c]        ;5580
00027e  eb000080          ADD      r0,r0,r0,LSL #2       ;5580
000282  4a13              LDR      r2,|L43.720|
000284  eb021000          ADD      r0,r2,r0,LSL #4       ;5580
000288  7001              STRB     r1,[r0,#0]            ;5580
00028a  f04f00a2          MOV      r0,#0xa2              ;5580
00028e  e6eb              B        |L43.104|
                  |L43.656|
000290  f7fffffe          BL       TURN_PROBE_ON
000294  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;5583
000298  e9cd0100          STRD     r0,r1,[sp,#0]         ;5583
00029c  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;5583
0002a0  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;5583
0002a4  f7fffffe          BL       STRAIGHT_PROBE
0002a8  f7fffffe          BL       TURN_PROBE_OFF
0002ac  f44f70bf          MOV      r0,#0x17e             ;5607
0002b0  f8c80628          STR      r0,[r8,#0x628]        ;5607
0002b4  f04f0101          MOV      r1,#1                 ;5608
0002b8  f24b1070          MOV      r0,#0xb170            ;5608
0002bc  f8401008          STR      r1,[r0,r8]            ;5608
0002c0  f04f0000          MOV      r0,#0                 ;5609
0002c4  e6d0              B        |L43.104|
;;;5611   
                          ENDP

0002c6  0000              DCW      0x0000
                  |L43.712|
                          DCD      _setup+0xc000
                  |L43.716|
                          DCD      |symbol_number.468|
                  |L43.720|
                          DCD      _setup+0xb1ac
                  |L43.724|
                          DCD      0x374bc6a8
                  |L43.728|
                          DCD      0x3fd04189
                  |L43.732|
                          DCD      0x47ae147b
                  |L43.736|
                          DCD      0x3f847ae1

                          AREA ||i.convert_retract_mode||, CODE, READONLY, ALIGN=1

                  convert_retract_mode PROC
;;;5632   
;;;5633       static int convert_retract_mode(              /* ARGUMENTS                             */
000000  4602              MOV      r2,r0
;;;5634       int g_code,                                   /* g_code being executed (must be G_98 or G_99) */
;;;5635       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5636       {
;;;5637   //        static char name[] SET_TO "convert_retract_mode";
;;;5638   //        if (g_code IS G_98)
;;;5639   //        {
;;;5640   //#ifdef DEBUG_EMC
;;;5641   //            COMMENT("interpreter: retract mode set to old_z");
;;;5642   //#endif
;;;5643   //            settings->retract_mode SET_TO OLD_Z;
;;;5644   //        }
;;;5645   //        else if (g_code IS G_99)
;;;5646   //        {
;;;5647   //#ifdef DEBUG_EMC
;;;5648   //            COMMENT("interpreter: retract mode set to r_plane");
;;;5649   //#endif
;;;5650   //            settings->retract_mode SET_TO R_PLANE;
;;;5651   //        }
;;;5652   //        else
;;;5653   //            ERM(NCE_BUG_CODE_NOT_G98_OR_G99);
;;;5654           return RS274NGC_OK;
000002  f04f0000          MOV      r0,#0
;;;5655       }
000006  4770              BX       lr
;;;5656   
                          ENDP


                          AREA ||i.convert_set_plane||, CODE, READONLY, ALIGN=2

                  convert_set_plane PROC
;;;5875   
;;;5876       static int convert_set_plane(                 /* ARGUMENTS                    */
000000  b570              PUSH     {r4-r6,lr}
;;;5877       int g_code,                                   /* must be G_17, G_18, or G_19  */
;;;5878       setup_pointer settings)                       /* pointer to machine settings  */
;;;5879       {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;5880           static char name[] SET_TO "convert_set_plane";
;;;5881           if (g_code IS G_17)
000006  2daa              CMP      r5,#0xaa
000008  d108              BNE      |L45.28|
;;;5882           {
;;;5883               SELECT_PLANE(CANON_PLANE_XY);
00000a  2001              MOVS     r0,#1
00000c  f7fffffe          BL       SELECT_PLANE
;;;5884               settings->plane SET_TO CANON_PLANE_XY;
000010  f04f0101          MOV      r1,#1
000014  f24b106c          MOV      r0,#0xb16c
000018  5101              STR      r1,[r0,r4]
00001a  e08e              B        |L45.314|
                  |L45.28|
;;;5885           }
;;;5886           else if (g_code IS G_18)
00001c  2db4              CMP      r5,#0xb4
00001e  d132              BNE      |L45.134|
;;;5887           {
;;;5888               CHK((settings->cutter_comp_side ISNT OFF),
000020  f8d403b0          LDR      r0,[r4,#0x3b0]
000024  b330              CBZ      r0,|L45.116|
000026  f04f0100          MOV      r1,#0
00002a  4845              LDR      r0,|L45.320|
00002c  f8c0114c          STR      r1,[r0,#0x14c]
000030  4601              MOV      r1,r0
000032  f8d1314c          LDR      r3,[r1,#0x14c]
000036  f8d1114c          LDR      r1,[r1,#0x14c]
00003a  f1010101          ADD      r1,r1,#1
00003e  4602              MOV      r2,r0
000040  f8c2114c          STR      r1,[r2,#0x14c]
000044  eb030183          ADD      r1,r3,r3,LSL #2
000048  f6a06254          SUB      r2,r0,#0xe54
00004c  eb021101          ADD      r1,r2,r1,LSL #4
000050  4608              MOV      r0,r1
000052  493c              LDR      r1,|L45.324|
000054  f7fffffe          BL       strcpy
000058  f04f0100          MOV      r1,#0
00005c  4838              LDR      r0,|L45.320|
00005e  f8d0014c          LDR      r0,[r0,#0x14c]
000062  eb000080          ADD      r0,r0,r0,LSL #2
000066  4a38              LDR      r2,|L45.328|
000068  eb021000          ADD      r0,r2,r0,LSL #4
00006c  7001              STRB     r1,[r0,#0]
00006e  f04f0040          MOV      r0,#0x40
                  |L45.114|
;;;5889                   NCE_CANNOT_USE_XZ_PLANE_WITH_CUTTER_RADIUS_COMP);
;;;5890               SELECT_PLANE(CANON_PLANE_XZ);
;;;5891               settings->plane SET_TO CANON_PLANE_XZ;
;;;5892           }
;;;5893           else if (g_code IS G_19)
;;;5894           {
;;;5895               CHK((settings->cutter_comp_side ISNT OFF),
;;;5896                   NCE_CANNOT_USE_YZ_PLANE_WITH_CUTTER_RADIUS_COMP);
;;;5897               SELECT_PLANE(CANON_PLANE_YZ);
;;;5898               settings->plane SET_TO CANON_PLANE_YZ;
;;;5899           }
;;;5900           else
;;;5901               ERM(NCE_BUG_CODE_NOT_G17_G18_OR_G19);
;;;5902           return RS274NGC_OK;
;;;5903       }
000072  bd70              POP      {r4-r6,pc}
                  |L45.116|
000074  2003              MOVS     r0,#3                 ;5890
000076  f7fffffe          BL       SELECT_PLANE
00007a  f04f0103          MOV      r1,#3                 ;5891
00007e  f24b106c          MOV      r0,#0xb16c            ;5891
000082  5101              STR      r1,[r0,r4]            ;5891
000084  e059              B        |L45.314|
                  |L45.134|
000086  2dbe              CMP      r5,#0xbe              ;5893
000088  d131              BNE      |L45.238|
00008a  f8d403b0          LDR      r0,[r4,#0x3b0]        ;5895
00008e  b328              CBZ      r0,|L45.220|
000090  f04f0100          MOV      r1,#0                 ;5895
000094  482a              LDR      r0,|L45.320|
000096  f8c0114c          STR      r1,[r0,#0x14c]        ;5895
00009a  4601              MOV      r1,r0                 ;5895
00009c  f8d1314c          LDR      r3,[r1,#0x14c]        ;5895
0000a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;5895
0000a4  f1010101          ADD      r1,r1,#1              ;5895
0000a8  4602              MOV      r2,r0                 ;5895
0000aa  f8c2114c          STR      r1,[r2,#0x14c]        ;5895
0000ae  eb030183          ADD      r1,r3,r3,LSL #2       ;5895
0000b2  4a25              LDR      r2,|L45.328|
0000b4  eb021101          ADD      r1,r2,r1,LSL #4       ;5895
0000b8  4608              MOV      r0,r1                 ;5895
0000ba  4922              LDR      r1,|L45.324|
0000bc  f7fffffe          BL       strcpy
0000c0  f04f0100          MOV      r1,#0                 ;5895
0000c4  481e              LDR      r0,|L45.320|
0000c6  f8d0014c          LDR      r0,[r0,#0x14c]        ;5895
0000ca  eb000080          ADD      r0,r0,r0,LSL #2       ;5895
0000ce  4a1e              LDR      r2,|L45.328|
0000d0  eb021000          ADD      r0,r2,r0,LSL #4       ;5895
0000d4  7001              STRB     r1,[r0,#0]            ;5895
0000d6  f04f0041          MOV      r0,#0x41              ;5895
0000da  e7ca              B        |L45.114|
                  |L45.220|
0000dc  2002              MOVS     r0,#2                 ;5897
0000de  f7fffffe          BL       SELECT_PLANE
0000e2  f04f0102          MOV      r1,#2                 ;5898
0000e6  f24b106c          MOV      r0,#0xb16c            ;5898
0000ea  5101              STR      r1,[r0,r4]            ;5898
0000ec  e025              B        |L45.314|
                  |L45.238|
0000ee  f04f0100          MOV      r1,#0                 ;5901
0000f2  4813              LDR      r0,|L45.320|
0000f4  f8c0114c          STR      r1,[r0,#0x14c]        ;5901
0000f8  4601              MOV      r1,r0                 ;5901
0000fa  f8d1314c          LDR      r3,[r1,#0x14c]        ;5901
0000fe  f8d1114c          LDR      r1,[r1,#0x14c]        ;5901
000102  f1010101          ADD      r1,r1,#1              ;5901
000106  4602              MOV      r2,r0                 ;5901
000108  f8c2114c          STR      r1,[r2,#0x14c]        ;5901
00010c  eb030183          ADD      r1,r3,r3,LSL #2       ;5901
000110  4a0d              LDR      r2,|L45.328|
000112  eb021101          ADD      r1,r2,r1,LSL #4       ;5901
000116  4608              MOV      r0,r1                 ;5901
000118  490a              LDR      r1,|L45.324|
00011a  f7fffffe          BL       strcpy
00011e  f04f0100          MOV      r1,#0                 ;5901
000122  4807              LDR      r0,|L45.320|
000124  f8d0014c          LDR      r0,[r0,#0x14c]        ;5901
000128  eb000080          ADD      r0,r0,r0,LSL #2       ;5901
00012c  4a06              LDR      r2,|L45.328|
00012e  eb021000          ADD      r0,r2,r0,LSL #4       ;5901
000132  7001              STRB     r1,[r0,#0]            ;5901
000134  f04f0011          MOV      r0,#0x11              ;5901
000138  e79b              B        |L45.114|
                  |L45.314|
00013a  2000              MOVS     r0,#0                 ;5902
00013c  e799              B        |L45.114|
;;;5904   
                          ENDP

00013e  0000              DCW      0x0000
                  |L45.320|
                          DCD      _setup+0xc000
                  |L45.324|
                          DCD      |symbol_number.469|
                  |L45.328|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_setup||, CODE, READONLY, ALIGN=2

                  convert_setup PROC
;;;5684   	
;;;5685       static int convert_setup(                     /* ARGUMENTS                                    */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;5686       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;5687       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5688       {
000004  b08b              SUB      sp,sp,#0x2c
000006  4683              MOV      r11,r0
000008  468a              MOV      r10,r1
;;;5689   //        static char name[] SET_TO "convert_setup";
;;;5690           double x;
;;;5691           double y;
;;;5692           double z;
;;;5693   #ifdef AA
;;;5694           double a;                                 /*AA*/
;;;5695   #endif
;;;5696   #ifdef BB
;;;5697           double b;                                 /*BB*/
;;;5698   #endif
;;;5699   #ifdef CC
;;;5700           double c;                                 /*CC*/
;;;5701   #endif
;;;5702           double * parameters;
;;;5703           int p_int;
;;;5704   
;;;5705           parameters SET_TO settings->parameters;
00000a  f50a60c9          ADD      r0,r10,#0x648
00000e  9009              STR      r0,[sp,#0x24]
;;;5706           p_int SET_TO (int)(block->p_number + 0.0001);
000010  f50b70d8          ADD      r0,r11,#0x1b0
000014  c803              LDM      r0,{r0,r1}
000016  4a7f              LDR      r2,|L46.532|
000018  4b7f              LDR      r3,|L46.536|
00001a  e9cd0104          STRD     r0,r1,[sp,#0x10]
00001e  f7fffffe          BL       __aeabi_dadd
000022  e9cd0106          STRD     r0,r1,[sp,#0x18]
000026  f7fffffe          BL       __aeabi_d2iz
00002a  9008              STR      r0,[sp,#0x20]
;;;5707   
;;;5708           if (block->x_flag IS ON)
00002c  f8db01dc          LDR      r0,[r11,#0x1dc]
000030  2801              CMP      r0,#1
000032  d10e              BNE      |L46.82|
;;;5709           {
;;;5710               x SET_TO block->x_number;
000034  f50b74f0          ADD      r4,r11,#0x1e0
000038  cc30              LDM      r4,{r4,r5}
;;;5711               parameters[5201 + (p_int * 20)] SET_TO x;
00003a  9808              LDR      r0,[sp,#0x20]
00003c  eb000080          ADD      r0,r0,r0,LSL #2
000040  f2414151          MOV      r1,#0x1451
000044  eb010180          ADD      r1,r1,r0,LSL #2
000048  9809              LDR      r0,[sp,#0x24]
00004a  eb0000c1          ADD      r0,r0,r1,LSL #3
00004e  c030              STM      r0!,{r4,r5}
000050  e00a              B        |L46.104|
                  |L46.82|
;;;5712           }
;;;5713           else
;;;5714               x SET_TO parameters[5201 + (p_int * 20)];
000052  9808              LDR      r0,[sp,#0x20]
000054  eb000080          ADD      r0,r0,r0,LSL #2
000058  f2414151          MOV      r1,#0x1451
00005c  eb010180          ADD      r1,r1,r0,LSL #2
000060  9809              LDR      r0,[sp,#0x24]
000062  eb0000c1          ADD      r0,r0,r1,LSL #3
000066  c830              LDM      r0!,{r4,r5}
                  |L46.104|
;;;5715   
;;;5716           if (block->y_flag IS ON)
000068  f8db01e8          LDR      r0,[r11,#0x1e8]
00006c  2801              CMP      r0,#1
00006e  d10e              BNE      |L46.142|
;;;5717           {
;;;5718               y SET_TO block->y_number;
000070  f50b76f8          ADD      r6,r11,#0x1f0
000074  cec0              LDM      r6,{r6,r7}
;;;5719               parameters[5202 + (p_int * 20)] SET_TO y;
000076  9808              LDR      r0,[sp,#0x20]
000078  eb000080          ADD      r0,r0,r0,LSL #2
00007c  f2414152          MOV      r1,#0x1452
000080  eb010180          ADD      r1,r1,r0,LSL #2
000084  9809              LDR      r0,[sp,#0x24]
000086  eb0000c1          ADD      r0,r0,r1,LSL #3
00008a  c0c0              STM      r0!,{r6,r7}
00008c  e00a              B        |L46.164|
                  |L46.142|
;;;5720           }
;;;5721           else
;;;5722               y SET_TO parameters[5202 + (p_int * 20)];
00008e  9808              LDR      r0,[sp,#0x20]
000090  eb000080          ADD      r0,r0,r0,LSL #2
000094  f2414152          MOV      r1,#0x1452
000098  eb010180          ADD      r1,r1,r0,LSL #2
00009c  9809              LDR      r0,[sp,#0x24]
00009e  eb0000c1          ADD      r0,r0,r1,LSL #3
0000a2  c8c0              LDM      r0!,{r6,r7}
                  |L46.164|
;;;5723           if (block->z_flag IS ON)
0000a4  f8db01f8          LDR      r0,[r11,#0x1f8]
0000a8  2801              CMP      r0,#1
0000aa  d110              BNE      |L46.206|
;;;5724           {
;;;5725               z SET_TO block->z_number;
0000ac  f8db9204          LDR      r9,[r11,#0x204]
0000b0  f8db8200          LDR      r8,[r11,#0x200]
;;;5726               parameters[5203 + (p_int * 20)] SET_TO z;
0000b4  9808              LDR      r0,[sp,#0x20]
0000b6  eb000080          ADD      r0,r0,r0,LSL #2
0000ba  f2414153          MOV      r1,#0x1453
0000be  eb010180          ADD      r1,r1,r0,LSL #2
0000c2  9809              LDR      r0,[sp,#0x24]
0000c4  eb0000c1          ADD      r0,r0,r1,LSL #3
0000c8  e9c08900          STRD     r8,r9,[r0,#0]
0000cc  e00b              B        |L46.230|
                  |L46.206|
;;;5727           }
;;;5728           else
;;;5729               z SET_TO parameters[5203 + (p_int * 20)];
0000ce  9808              LDR      r0,[sp,#0x20]
0000d0  eb000080          ADD      r0,r0,r0,LSL #2
0000d4  f2414153          MOV      r1,#0x1453
0000d8  eb010180          ADD      r1,r1,r0,LSL #2
0000dc  9809              LDR      r0,[sp,#0x24]
0000de  eb0000c1          ADD      r0,r0,r1,LSL #3
0000e2  e9d08900          LDRD     r8,r9,[r0,#0]
                  |L46.230|
;;;5730   
;;;5731   #ifdef AA
;;;5732           if (block->a_flag IS ON)
;;;5733           {
;;;5734               a SET_TO block->a_number;
;;;5735               parameters[5204 + (p_int * 20)] SET_TO a;
;;;5736           }
;;;5737           else
;;;5738               a SET_TO parameters[5204 + (p_int * 20)];
;;;5739   #endif
;;;5740   
;;;5741   #ifdef BB
;;;5742           if (block->b_flag IS ON)
;;;5743           {
;;;5744               b SET_TO block->b_number;
;;;5745               parameters[5205 + (p_int * 20)] SET_TO b;
;;;5746           }
;;;5747           else
;;;5748               b SET_TO parameters[5205 + (p_int * 20)];
;;;5749   #endif
;;;5750   
;;;5751   #ifdef CC
;;;5752           if (block->c_flag IS ON)
;;;5753           {
;;;5754               c SET_TO block->c_number;
;;;5755               parameters[5206 + (p_int * 20)] SET_TO c;
;;;5756           }
;;;5757           else
;;;5758               c SET_TO parameters[5206 + (p_int * 20)];
;;;5759   #endif
;;;5760   
;;;5761      /* axis offsets could be included in the two sets of calculations for
;;;5762         current_x, current_y, etc., but do not need to be because the results
;;;5763         would be the same. They would be added in then subtracted out. */
;;;5764           if (p_int IS settings->origin_index)      /* system is currently used */
0000e6  f8da162c          LDR      r1,[r10,#0x62c]
0000ea  9808              LDR      r0,[sp,#0x20]
0000ec  4281              CMP      r1,r0
0000ee  d17d              BNE      |L46.492|
;;;5765           {
;;;5766               settings->current_x SET_TO
0000f0  f50a60c6          ADD      r0,r10,#0x630
0000f4  c803              LDM      r0,{r0,r1}
0000f6  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000fa  f50a7064          ADD      r0,r10,#0x390
0000fe  c803              LDM      r0,{r0,r1}
000100  e9cd0104          STRD     r0,r1,[sp,#0x10]
000104  e9dd2306          LDRD     r2,r3,[sp,#0x18]
000108  f7fffffe          BL       __aeabi_dadd
00010c  f50a7264          ADD      r2,r10,#0x390
000110  c203              STM      r2!,{r0,r1}
;;;5767                   (settings->current_x + settings->origin_offset_x);
;;;5768               settings->current_y SET_TO
000112  f50a60c7          ADD      r0,r10,#0x638
000116  c803              LDM      r0,{r0,r1}
000118  e9cd0106          STRD     r0,r1,[sp,#0x18]
00011c  f50a7066          ADD      r0,r10,#0x398
000120  c803              LDM      r0,{r0,r1}
000122  e9cd0104          STRD     r0,r1,[sp,#0x10]
000126  e9dd2306          LDRD     r2,r3,[sp,#0x18]
00012a  f7fffffe          BL       __aeabi_dadd
00012e  f50a7266          ADD      r2,r10,#0x398
000132  c203              STM      r2!,{r0,r1}
;;;5769                   (settings->current_y + settings->origin_offset_y);
;;;5770               settings->current_z SET_TO
000134  f50a60c8          ADD      r0,r10,#0x640
000138  c803              LDM      r0,{r0,r1}
00013a  e9cd0106          STRD     r0,r1,[sp,#0x18]
00013e  f50a7068          ADD      r0,r10,#0x3a0
000142  c803              LDM      r0,{r0,r1}
000144  e9cd0104          STRD     r0,r1,[sp,#0x10]
000148  e9dd2306          LDRD     r2,r3,[sp,#0x18]
00014c  f7fffffe          BL       __aeabi_dadd
000150  f50a7268          ADD      r2,r10,#0x3a0
000154  c203              STM      r2!,{r0,r1}
;;;5771                   (settings->current_z + settings->origin_offset_z);
;;;5772   #ifdef AA
;;;5773               settings->AA_current SET_TO           /*AA*/
;;;5774       #endif
;;;5775       #ifdef AA
;;;5776      /*AA*/
;;;5777                   (settings->AA_current + settings->AA_origin_offset);
;;;5778   #endif
;;;5779   #ifdef BB
;;;5780               settings->BB_current SET_TO           /*BB*/
;;;5781       #endif
;;;5782       #ifdef BB
;;;5783      /*BB*/
;;;5784                   (settings->BB_current + settings->BB_origin_offset);
;;;5785   #endif
;;;5786   #ifdef CC
;;;5787               settings->CC_current SET_TO           /*CC*/
;;;5788       #endif
;;;5789       #ifdef CC
;;;5790      /*CC*/
;;;5791                   (settings->CC_current + settings->CC_origin_offset);
;;;5792   #endif
;;;5793   
;;;5794               settings->origin_offset_x SET_TO x;
000156  f50a60c6          ADD      r0,r10,#0x630
00015a  c030              STM      r0!,{r4,r5}
;;;5795               settings->origin_offset_y SET_TO y;
00015c  f50a60c7          ADD      r0,r10,#0x638
000160  c0c0              STM      r0!,{r6,r7}
;;;5796               settings->origin_offset_z SET_TO z;
000162  f8ca9644          STR      r9,[r10,#0x644]
000166  f8ca8640          STR      r8,[r10,#0x640]
;;;5797   #ifdef AA
;;;5798               settings->AA_origin_offset SET_TO a;  /*AA*/
;;;5799   #endif
;;;5800   #ifdef BB
;;;5801               settings->BB_origin_offset SET_TO b;  /*BB*/
;;;5802   #endif
;;;5803   #ifdef CC
;;;5804               settings->CC_origin_offset SET_TO c;  /*CC*/
;;;5805   #endif
;;;5806   
;;;5807               settings->current_x SET_TO (settings->current_x - x);
00016a  f50a7064          ADD      r0,r10,#0x390
00016e  c803              LDM      r0,{r0,r1}
000170  4622              MOV      r2,r4
000172  462b              MOV      r3,r5
000174  e9cd0106          STRD     r0,r1,[sp,#0x18]
000178  f7fffffe          BL       __aeabi_dsub
00017c  f50a7264          ADD      r2,r10,#0x390
000180  c203              STM      r2!,{r0,r1}
;;;5808               settings->current_y SET_TO (settings->current_y - y);
000182  f50a7066          ADD      r0,r10,#0x398
000186  c803              LDM      r0,{r0,r1}
000188  4632              MOV      r2,r6
00018a  463b              MOV      r3,r7
00018c  e9cd0106          STRD     r0,r1,[sp,#0x18]
000190  f7fffffe          BL       __aeabi_dsub
000194  f50a7266          ADD      r2,r10,#0x398
000198  c203              STM      r2!,{r0,r1}
;;;5809               settings->current_z SET_TO (settings->current_z - z);
00019a  f50a7068          ADD      r0,r10,#0x3a0
00019e  c803              LDM      r0,{r0,r1}
0001a0  4642              MOV      r2,r8
0001a2  464b              MOV      r3,r9
0001a4  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001a8  f7fffffe          BL       __aeabi_dsub
0001ac  f50a7268          ADD      r2,r10,#0x3a0
0001b0  c203              STM      r2!,{r0,r1}
;;;5810   #ifdef AA
;;;5811      /*AA*/
;;;5812               settings->AA_current SET_TO (settings->AA_current - a);
;;;5813   #endif
;;;5814   #ifdef BB
;;;5815      /*BB*/
;;;5816               settings->BB_current SET_TO (settings->BB_current - b);
;;;5817   #endif
;;;5818   #ifdef CC
;;;5819      /*CC*/
;;;5820               settings->CC_current SET_TO (settings->CC_current - c);
;;;5821   #endif
;;;5822   
;;;5823               SET_ORIGIN_OFFSETS(x + settings->axis_offset_x,
0001b2  e9da011e          LDRD     r0,r1,[r10,#0x78]
0001b6  4642              MOV      r2,r8
0001b8  464b              MOV      r3,r9
0001ba  e9cd0100          STRD     r0,r1,[sp,#0]
0001be  f7fffffe          BL       __aeabi_dadd
0001c2  e9cd0106          STRD     r0,r1,[sp,#0x18]
0001c6  e9da011c          LDRD     r0,r1,[r10,#0x70]
0001ca  4632              MOV      r2,r6
0001cc  463b              MOV      r3,r7
0001ce  e9cd0100          STRD     r0,r1,[sp,#0]
0001d2  f7fffffe          BL       __aeabi_dadd
0001d6  e9cd0104          STRD     r0,r1,[sp,#0x10]
0001da  e9da011a          LDRD     r0,r1,[r10,#0x68]
0001de  4622              MOV      r2,r4
0001e0  462b              MOV      r3,r5
0001e2  e9cd0100          STRD     r0,r1,[sp,#0]
0001e6  f7fffffe          BL       __aeabi_dadd
0001ea  e000              B        |L46.494|
                  |L46.492|
0001ec  e00a              B        |L46.516|
                  |L46.494|
0001ee  e9cd0102          STRD     r0,r1,[sp,#8]
0001f2  e9dd0106          LDRD     r0,r1,[sp,#0x18]
0001f6  e9cd0100          STRD     r0,r1,[sp,#0]
0001fa  a802              ADD      r0,sp,#8
0001fc  c80f              LDM      r0,{r0-r3}
0001fe  f7fffffe          BL       SET_ORIGIN_OFFSETS
000202  e002              B        |L46.522|
                  |L46.516|
;;;5824                   y + settings->axis_offset_y,
;;;5825                   z + settings->axis_offset_z
;;;5826       #ifdef AA
;;;5827                   ,            a + settings->AA_axis_offset
;;;5828       #else
;;;5829       #ifdef ALL_AXES
;;;5830                   , 0
;;;5831       #endif
;;;5832       #endif
;;;5833       #ifdef BB
;;;5834                   ,            b + settings->BB_axis_offset
;;;5835       #else
;;;5836       #ifdef ALL_AXES
;;;5837                   , 0
;;;5838       #endif
;;;5839       #endif
;;;5840       #ifdef CC
;;;5841                   ,            c + settings->CC_axis_offset
;;;5842       #else
;;;5843       #ifdef ALL_AXES
;;;5844                   , 0
;;;5845       #endif
;;;5846       #endif
;;;5847                   );
;;;5848           }
;;;5849   #ifdef DEBUG_EMC
;;;5850           else
;;;5851               COMMENT("interpreter: setting coordinate system origin");
000204  a005              ADR      r0,|L46.540|
000206  f7fffffe          BL       COMMENT
                  |L46.522|
;;;5852   #endif
;;;5853           return RS274NGC_OK;
00020a  2000              MOVS     r0,#0
;;;5854       }
00020c  b00b              ADD      sp,sp,#0x2c
00020e  e8bd8ff0          POP      {r4-r11,pc}
;;;5855   
                          ENDP

000212  0000              DCW      0x0000
                  |L46.532|
                          DCD      0xeb1c432d
                  |L46.536|
                          DCD      0x3f1a36e2
                  |L46.540|
00021c  696e7465          DCB      "interpreter: setting coordinate system origin",0
000220  72707265
000224  7465723a
000228  20736574
00022c  74696e67
000230  20636f6f
000234  7264696e
000238  61746520
00023c  73797374
000240  656d206f
000244  72696769
000248  6e00    
00024a  00                DCB      0
00024b  00                DCB      0

                          AREA ||i.convert_speed||, CODE, READONLY, ALIGN=1

                  convert_speed PROC
;;;5919   
;;;5920       static int convert_speed(                     /* ARGUMENTS                                */
000000  b570              PUSH     {r4-r6,lr}
;;;5921       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;5922       setup_pointer settings)                       /* pointer to machine settings              */
;;;5923       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;5924           SET_SPINDLE_SPEED(block->s_number);
000006  f8d411d0          LDR      r1,[r4,#0x1d0]
00000a  460a              MOV      r2,r1
00000c  f8d401d4          LDR      r0,[r4,#0x1d4]
000010  4603              MOV      r3,r0
000012  4610              MOV      r0,r2
000014  4619              MOV      r1,r3
000016  f7fffffe          BL       SET_SPINDLE_SPEED
;;;5925           settings->speed SET_TO block->s_number;
00001a  f5054030          ADD      r0,r5,#0xb000
00001e  f8d421d0          LDR      r2,[r4,#0x1d0]
000022  f8d411d4          LDR      r1,[r4,#0x1d4]
000026  f8c02198          STR      r2,[r0,#0x198]
00002a  f8c0119c          STR      r1,[r0,#0x19c]
;;;5926           return RS274NGC_OK;
00002e  f04f0000          MOV      r0,#0
;;;5927       }
000032  bd70              POP      {r4-r6,pc}
;;;5928   
                          ENDP


                          AREA ||i.convert_stop||, CODE, READONLY, ALIGN=2

                  convert_stop PROC
;;;5991   
;;;5992       static int convert_stop(                      /* ARGUMENTS                                    */
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;5993       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;5994       setup_pointer settings)                       /* pointer to machine settings                  */
;;;5995       {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
;;;5996           static char name[] SET_TO "convert_stop";
;;;5997           int index;
;;;5998           char * line;
;;;5999           int length;
;;;6000   
;;;6001           if (block->m_modes[4] IS 0)
000008  f44f70cc          MOV      r0,#0x198
00000c  f8500008          LDR      r0,[r0,r8]
000010  b910              CBNZ     r0,|L48.24|
;;;6002           {
;;;6003               PROGRAM_STOP();
000012  f7fffffe          BL       PROGRAM_STOP
000016  e201              B        |L48.1052|
                  |L48.24|
;;;6004           }
;;;6005           else if (block->m_modes[4] IS 60)
000018  f44f70cc          MOV      r0,#0x198
00001c  f8500008          LDR      r0,[r0,r8]
000020  283c              CMP      r0,#0x3c
000022  d104              BNE      |L48.46|
;;;6006           {
;;;6007               PALLET_SHUTTLE();
000024  f7fffffe          BL       PALLET_SHUTTLE
;;;6008               PROGRAM_STOP();
000028  f7fffffe          BL       PROGRAM_STOP
00002c  e1f6              B        |L48.1052|
                  |L48.46|
;;;6009           }
;;;6010           else if (block->m_modes[4] IS 1)
00002e  f44f70cc          MOV      r0,#0x198
000032  f8500008          LDR      r0,[r0,r8]
000036  2801              CMP      r0,#1
000038  d102              BNE      |L48.64|
;;;6011           {
;;;6012               OPTIONAL_PROGRAM_STOP();
00003a  f7fffffe          BL       OPTIONAL_PROGRAM_STOP
00003e  e1ed              B        |L48.1052|
                  |L48.64|
;;;6013           }
;;;6014           else if ((block->m_modes[4] IS 2) OR (block->m_modes[4] IS 30))
000040  f44f70cc          MOV      r0,#0x198
000044  f8500008          LDR      r0,[r0,r8]
000048  2802              CMP      r0,#2
00004a  d005              BEQ      |L48.88|
00004c  f44f70cc          MOV      r0,#0x198
000050  f8500008          LDR      r0,[r0,r8]
000054  281e              CMP      r0,#0x1e
000056  d17d              BNE      |L48.340|
                  |L48.88|
;;;6015           {                                         /* reset stuff here */
;;;6016      /*1*/
;;;6017               settings->current_x SET_TO settings->current_x
000058  f8d41630          LDR      r1,[r4,#0x630]
00005c  460e              MOV      r6,r1
00005e  f8d40634          LDR      r0,[r4,#0x634]
000062  4607              MOV      r7,r0
000064  f5047064          ADD      r0,r4,#0x390
000068  c803              LDM      r0,{r0,r1}
00006a  4683              MOV      r11,r0
00006c  4632              MOV      r2,r6
00006e  463b              MOV      r3,r7
000070  f7fffffe          BL       __aeabi_dadd
000074  e9cd0100          STRD     r0,r1,[sp,#0]
000078  e9d4101a          LDRD     r1,r0,[r4,#0x68]
00007c  460e              MOV      r6,r1
00007e  4632              MOV      r2,r6
000080  4603              MOV      r3,r0
000082  e9dd0100          LDRD     r0,r1,[sp,#0]
000086  f7fffffe          BL       __aeabi_dadd
00008a  f5047264          ADD      r2,r4,#0x390
00008e  c203              STM      r2!,{r0,r1}
;;;6018                   + settings->origin_offset_x + settings->axis_offset_x;
;;;6019               settings->current_y SET_TO settings->current_y
000090  f8d41638          LDR      r1,[r4,#0x638]
000094  460e              MOV      r6,r1
000096  f8d4063c          LDR      r0,[r4,#0x63c]
00009a  4607              MOV      r7,r0
00009c  f8d41398          LDR      r1,[r4,#0x398]
0000a0  468b              MOV      r11,r1
0000a2  f8d4039c          LDR      r0,[r4,#0x39c]
0000a6  4684              MOV      r12,r0
0000a8  4632              MOV      r2,r6
0000aa  463b              MOV      r3,r7
0000ac  4658              MOV      r0,r11
0000ae  4661              MOV      r1,r12
0000b0  f7fffffe          BL       __aeabi_dadd
0000b4  e9cd0100          STRD     r0,r1,[sp,#0]
0000b8  e9d4011c          LDRD     r0,r1,[r4,#0x70]
0000bc  4606              MOV      r6,r0
0000be  4632              MOV      r2,r6
0000c0  460b              MOV      r3,r1
0000c2  e9dd0100          LDRD     r0,r1,[sp,#0]
0000c6  f7fffffe          BL       __aeabi_dadd
0000ca  f5047266          ADD      r2,r4,#0x398
0000ce  c203              STM      r2!,{r0,r1}
;;;6020                   + settings->origin_offset_y + settings->axis_offset_y;
;;;6021               settings->current_z SET_TO settings->current_z
0000d0  f8d41640          LDR      r1,[r4,#0x640]
0000d4  468b              MOV      r11,r1
0000d6  f8d40644          LDR      r0,[r4,#0x644]
0000da  4684              MOV      r12,r0
0000dc  f5047068          ADD      r0,r4,#0x3a0
0000e0  c803              LDM      r0,{r0,r1}
0000e2  4606              MOV      r6,r0
0000e4  465a              MOV      r2,r11
0000e6  4663              MOV      r3,r12
0000e8  f7fffffe          BL       __aeabi_dadd
0000ec  e9cd0100          STRD     r0,r1,[sp,#0]
0000f0  e9d4101e          LDRD     r1,r0,[r4,#0x78]
0000f4  460e              MOV      r6,r1
0000f6  4632              MOV      r2,r6
0000f8  4603              MOV      r3,r0
0000fa  e9dd0100          LDRD     r0,r1,[sp,#0]
0000fe  f7fffffe          BL       __aeabi_dadd
000102  f5047268          ADD      r2,r4,#0x3a0
000106  c203              STM      r2!,{r0,r1}
;;;6022                   + settings->origin_offset_z + settings->axis_offset_z;
;;;6023   #ifdef AA
;;;6024      /*AA*/
;;;6025               settings->AA_current SET_TO settings->AA_current
;;;6026       #endif
;;;6027       #ifdef AA
;;;6028      /*AA*/
;;;6029                   + settings->AA_origin_offset + settings->AA_axis_offset;
;;;6030   #endif
;;;6031   #ifdef BB
;;;6032      /*BB*/
;;;6033               settings->BB_current SET_TO settings->BB_current
;;;6034       #endif
;;;6035       #ifdef BB
;;;6036      /*BB*/
;;;6037                   + settings->BB_origin_offset + settings->BB_axis_offset;
;;;6038   #endif
;;;6039   #ifdef CC
;;;6040      /*CC*/
;;;6041               settings->CC_current SET_TO settings->CC_current
;;;6042       #endif
;;;6043       #ifdef CC
;;;6044      /*CC*/
;;;6045                   + settings->CC_origin_offset + settings->CC_axis_offset;
;;;6046   #endif
;;;6047   
;;;6048               settings->origin_index SET_TO 1;
000108  f04f0001          MOV      r0,#1
00010c  f8c4062c          STR      r0,[r4,#0x62c]
;;;6049               settings->parameters[5220] SET_TO 1.0;
000110  f04f0200          MOV      r2,#0
000114  49c2              LDR      r1,|L48.1056|
000116  f50460c9          ADD      r0,r4,#0x648
00011a  f5004020          ADD      r0,r0,#0xa000
00011e  f8c02320          STR      r2,[r0,#0x320]
000122  f8c01324          STR      r1,[r0,#0x324]
;;;6050               settings->origin_offset_x SET_TO settings->parameters[5221];
000126  f50460c9          ADD      r0,r4,#0x648
00012a  f5004020          ADD      r0,r0,#0xa000
00012e  f500704a          ADD      r0,r0,#0x328
000132  c803              LDM      r0,{r0,r1}
000134  f50462c6          ADD      r2,r4,#0x630
000138  c203              STM      r2!,{r0,r1}
;;;6051               settings->origin_offset_y SET_TO settings->parameters[5222];
00013a  f50460c9          ADD      r0,r4,#0x648
00013e  f5004020          ADD      r0,r0,#0xa000
000142  f500704c          ADD      r0,r0,#0x330
000146  c803              LDM      r0,{r0,r1}
000148  f50462c7          ADD      r2,r4,#0x638
00014c  c203              STM      r2!,{r0,r1}
;;;6052               settings->origin_offset_z SET_TO settings->parameters[5223];
00014e  f50460c9          ADD      r0,r4,#0x648
000152  e000              B        |L48.342|
                  |L48.340|
000154  e13c              B        |L48.976|
                  |L48.342|
000156  f5004020          ADD      r0,r0,#0xa000
00015a  f500704e          ADD      r0,r0,#0x338
00015e  c803              LDM      r0,{r0,r1}
000160  f50462c8          ADD      r2,r4,#0x640
000164  c203              STM      r2!,{r0,r1}
;;;6053   #ifdef AA
;;;6054      /*AA*/
;;;6055               settings->AA_origin_offset SET_TO settings->parameters[5224];
;;;6056   #endif
;;;6057   #ifdef BB
;;;6058      /*BB*/
;;;6059               settings->BB_origin_offset SET_TO settings->parameters[5225];
;;;6060   #endif
;;;6061   #ifdef CC
;;;6062      /*CC*/
;;;6063               settings->CC_origin_offset SET_TO settings->parameters[5226];
;;;6064   #endif
;;;6065   
;;;6066               settings->axis_offset_x SET_TO 0;
000166  f04f0100          MOV      r1,#0
00016a  66a1              STR      r1,[r4,#0x68]
00016c  66e1              STR      r1,[r4,#0x6c]
;;;6067               settings->axis_offset_x SET_TO 0;
00016e  66a1              STR      r1,[r4,#0x68]
000170  66e1              STR      r1,[r4,#0x6c]
;;;6068               settings->axis_offset_x SET_TO 0;
000172  66a1              STR      r1,[r4,#0x68]
000174  66e1              STR      r1,[r4,#0x6c]
;;;6069   #ifdef AA
;;;6070               settings->AA_axis_offset SET_TO 0;    /*AA*/
;;;6071   #endif
;;;6072   #ifdef BB
;;;6073               settings->BB_axis_offset SET_TO 0;    /*BB*/
;;;6074   #endif
;;;6075   #ifdef CC
;;;6076               settings->CC_axis_offset SET_TO 0;    /*CC*/
;;;6077   #endif
;;;6078   
;;;6079               settings->current_x SET_TO settings->current_x -
000176  f8d41630          LDR      r1,[r4,#0x630]
00017a  468b              MOV      r11,r1
00017c  f8d40634          LDR      r0,[r4,#0x634]
000180  4684              MOV      r12,r0
000182  f8d41390          LDR      r1,[r4,#0x390]
000186  460e              MOV      r6,r1
000188  f8d40394          LDR      r0,[r4,#0x394]
00018c  4607              MOV      r7,r0
00018e  465a              MOV      r2,r11
000190  4663              MOV      r3,r12
000192  4630              MOV      r0,r6
000194  4639              MOV      r1,r7
000196  f7fffffe          BL       __aeabi_dsub
00019a  f5047264          ADD      r2,r4,#0x390
00019e  c203              STM      r2!,{r0,r1}
;;;6080                   settings->origin_offset_x;
;;;6081               settings->current_y SET_TO settings->current_y -
0001a0  f50460c7          ADD      r0,r4,#0x638
0001a4  c803              LDM      r0,{r0,r1}
0001a6  4683              MOV      r11,r0
0001a8  468c              MOV      r12,r1
0001aa  f5047066          ADD      r0,r4,#0x398
0001ae  c803              LDM      r0,{r0,r1}
0001b0  4606              MOV      r6,r0
0001b2  465a              MOV      r2,r11
0001b4  4663              MOV      r3,r12
0001b6  f7fffffe          BL       __aeabi_dsub
0001ba  f5047266          ADD      r2,r4,#0x398
0001be  c203              STM      r2!,{r0,r1}
;;;6082                   settings->origin_offset_y;
;;;6083               settings->current_z SET_TO settings->current_z -
0001c0  f8d41640          LDR      r1,[r4,#0x640]
0001c4  468b              MOV      r11,r1
0001c6  f8d40644          LDR      r0,[r4,#0x644]
0001ca  4684              MOV      r12,r0
0001cc  f8d413a0          LDR      r1,[r4,#0x3a0]
0001d0  460e              MOV      r6,r1
0001d2  f8d403a4          LDR      r0,[r4,#0x3a4]
0001d6  4607              MOV      r7,r0
0001d8  465a              MOV      r2,r11
0001da  4663              MOV      r3,r12
0001dc  4630              MOV      r0,r6
0001de  4639              MOV      r1,r7
0001e0  f7fffffe          BL       __aeabi_dsub
0001e4  f5047268          ADD      r2,r4,#0x3a0
0001e8  c203              STM      r2!,{r0,r1}
;;;6084                   settings->origin_offset_z;
;;;6085   #ifdef AA
;;;6086      /*AA*/
;;;6087               settings->AA_current SET_TO settings->AA_current -
;;;6088       #endif
;;;6089       #ifdef AA
;;;6090                   settings->AA_origin_offset;       /*AA*/
;;;6091   #endif
;;;6092   #ifdef BB
;;;6093      /*BB*/
;;;6094               settings->BB_current SET_TO settings->BB_current -
;;;6095       #endif
;;;6096       #ifdef BB
;;;6097                   settings->BB_origin_offset;       /*BB*/
;;;6098   #endif
;;;6099   #ifdef CC
;;;6100      /*CC*/
;;;6101               settings->CC_current SET_TO settings->CC_current -
;;;6102       #endif
;;;6103       #ifdef CC
;;;6104                   settings->CC_origin_offset;       /*CC*/
;;;6105   #endif
;;;6106   
;;;6107               SET_ORIGIN_OFFSETS(settings->origin_offset_x,
0001ea  f50460c8          ADD      r0,r4,#0x640
0001ee  c803              LDM      r0,{r0,r1}
0001f0  e9cd0100          STRD     r0,r1,[sp,#0]
0001f4  f8d41638          LDR      r1,[r4,#0x638]
0001f8  468b              MOV      r11,r1
0001fa  f8d4063c          LDR      r0,[r4,#0x63c]
0001fe  4684              MOV      r12,r0
000200  f50460c6          ADD      r0,r4,#0x630
000204  c803              LDM      r0,{r0,r1}
000206  4606              MOV      r6,r0
000208  465a              MOV      r2,r11
00020a  4663              MOV      r3,r12
00020c  f7fffffe          BL       SET_ORIGIN_OFFSETS
;;;6108                   settings->origin_offset_y,
;;;6109                   settings->origin_offset_z
;;;6110       #ifdef AA
;;;6111                   ,            settings->AA_origin_offset
;;;6112       #else
;;;6113       #ifdef ALL_AXES
;;;6114                   , 0
;;;6115       #endif
;;;6116       #endif
;;;6117       #ifdef BB
;;;6118                   ,            settings->BB_origin_offset
;;;6119       #else
;;;6120       #ifdef ALL_AXES
;;;6121                   , 0
;;;6122       #endif
;;;6123       #endif
;;;6124       #ifdef CC
;;;6125                   ,            settings->CC_origin_offset
;;;6126       #else
;;;6127       #ifdef ALL_AXES
;;;6128                   , 0
;;;6129       #endif
;;;6130       #endif
;;;6131                   );
;;;6132   
;;;6133               /*2*/ if (settings->plane ISNT CANON_PLANE_XY)
000210  f24b106c          MOV      r0,#0xb16c
000214  5900              LDR      r0,[r0,r4]
000216  2801              CMP      r0,#1
000218  d007              BEQ      |L48.554|
;;;6134               {
;;;6135                   SELECT_PLANE(CANON_PLANE_XY);
00021a  2001              MOVS     r0,#1
00021c  f7fffffe          BL       SELECT_PLANE
;;;6136                   settings->plane SET_TO CANON_PLANE_XY;
000220  f04f0101          MOV      r1,#1
000224  f24b106c          MOV      r0,#0xb16c
000228  5101              STR      r1,[r0,r4]
                  |L48.554|
;;;6137               }
;;;6138   
;;;6139               /*3*/ settings->distance_mode SET_TO MODE_ABSOLUTE;
00022a  f04f0000          MOV      r0,#0
00022e  f88403f8          STRB     r0,[r4,#0x3f8]
;;;6140   
;;;6141               /*4*/ settings->feed_mode SET_TO UNITS_PER_MINUTE;
000232  f8c403fc          STR      r0,[r4,#0x3fc]
;;;6142   
;;;6143               /*5*/ if (settings->feed_override ISNT ON)
000236  f8d40400          LDR      r0,[r4,#0x400]
00023a  2801              CMP      r0,#1
00023c  d005              BEQ      |L48.586|
;;;6144               {
;;;6145                   ENABLE_FEED_OVERRIDE();
00023e  f7fffffe          BL       ENABLE_FEED_OVERRIDE
;;;6146                   settings->feed_override SET_TO ON;
000242  f04f0001          MOV      r0,#1
000246  f8c40400          STR      r0,[r4,#0x400]
                  |L48.586|
;;;6147               }
;;;6148               if (settings->speed_override ISNT ON)
00024a  f24b10a4          MOV      r0,#0xb1a4
00024e  5900              LDR      r0,[r0,r4]
000250  2801              CMP      r0,#1
000252  d006              BEQ      |L48.610|
;;;6149               {
;;;6150                   ENABLE_SPEED_OVERRIDE();
000254  f7fffffe          BL       ENABLE_SPEED_OVERRIDE
;;;6151                   settings->speed_override SET_TO ON;
000258  f04f0101          MOV      r1,#1
00025c  f24b10a4          MOV      r0,#0xb1a4
000260  5101              STR      r1,[r0,r4]
                  |L48.610|
;;;6152               }
;;;6153   
;;;6154               /*6*/ settings->cutter_comp_side SET_TO OFF;
000262  f04f0000          MOV      r0,#0
000266  f8c403b0          STR      r0,[r4,#0x3b0]
;;;6155               settings->program_x SET_TO UNKNOWN;
00026a  486e              LDR      r0,|L48.1060|
00026c  496e              LDR      r1,|L48.1064|
00026e  f5044230          ADD      r2,r4,#0xb000
000272  f50272bc          ADD      r2,r2,#0x178
000276  c203              STM      r2!,{r0,r1}
;;;6156   
;;;6157               /*7*/ STOP_SPINDLE_TURNING();
000278  f7fffffe          BL       STOP_SPINDLE_TURNING
;;;6158               settings->spindle_turning SET_TO CANON_STOPPED;
00027c  f04f0101          MOV      r1,#1
000280  f24b10a8          MOV      r0,#0xb1a8
000284  5101              STR      r1,[r0,r4]
;;;6159   
;;;6160               /*8*/ settings->motion_mode SET_TO G_1;
000286  f04f000a          MOV      r0,#0xa
00028a  f8c40628          STR      r0,[r4,#0x628]
;;;6161   
;;;6162               /*9*/ if (settings->mist IS ON)
00028e  f8d40624          LDR      r0,[r4,#0x624]
000292  2801              CMP      r0,#1
000294  d105              BNE      |L48.674|
;;;6163               {
;;;6164                   MIST_OFF();
000296  f7fffffe          BL       MIST_OFF
;;;6165                   settings->mist SET_TO OFF;
00029a  f04f0000          MOV      r0,#0
00029e  f8c40624          STR      r0,[r4,#0x624]
                  |L48.674|
;;;6166               }
;;;6167               if (settings->flood IS ON)
0002a2  f8d40514          LDR      r0,[r4,#0x514]
0002a6  2801              CMP      r0,#1
0002a8  d105              BNE      |L48.694|
;;;6168               {
;;;6169                   FLOOD_OFF();
0002aa  f7fffffe          BL       FLOOD_OFF
;;;6170                   settings->flood SET_TO OFF;
0002ae  f04f0000          MOV      r0,#0
0002b2  f8c40514          STR      r0,[r4,#0x514]
                  |L48.694|
;;;6171               }
;;;6172   
;;;6173               if (block->m_modes[4] IS 30)
0002b6  f44f70cc          MOV      r0,#0x198
0002ba  f8500008          LDR      r0,[r0,r8]
0002be  281e              CMP      r0,#0x1e
0002c0  d101              BNE      |L48.710|
;;;6174                   PALLET_SHUTTLE();
0002c2  f7fffffe          BL       PALLET_SHUTTLE
                  |L48.710|
;;;6175               PROGRAM_END();
0002c6  f7fffffe          BL       PROGRAM_END
;;;6176               if (_setup.percent_flag IS ON)
0002ca  4858              LDR      r0,|L48.1068|
0002cc  f8d00168          LDR      r0,[r0,#0x168]
0002d0  2801              CMP      r0,#1
0002d2  d17b              BNE      |L48.972|
;;;6177               {
;;;6178                   CHK((_setup.file_pointer IS NULL), NCE_UNABLE_TO_OPEN_FILE);
0002d4  4856              LDR      r0,|L48.1072|
0002d6  f8d00510          LDR      r0,[r0,#0x510]  ; _setup
0002da  bb38              CBNZ     r0,|L48.812|
0002dc  f04f0100          MOV      r1,#0
0002e0  4854              LDR      r0,|L48.1076|
0002e2  f8c0114c          STR      r1,[r0,#0x14c]
0002e6  4601              MOV      r1,r0
0002e8  f8d1314c          LDR      r3,[r1,#0x14c]
0002ec  f8d1114c          LDR      r1,[r1,#0x14c]
0002f0  f1010101          ADD      r1,r1,#1
0002f4  4602              MOV      r2,r0
0002f6  f8c2114c          STR      r1,[r2,#0x14c]
0002fa  eb030183          ADD      r1,r3,r3,LSL #2
0002fe  f6a06254          SUB      r2,r0,#0xe54
000302  eb021101          ADD      r1,r2,r1,LSL #4
000306  4608              MOV      r0,r1
000308  494b              LDR      r1,|L48.1080|
00030a  f7fffffe          BL       strcpy
00030e  f04f0100          MOV      r1,#0
000312  4848              LDR      r0,|L48.1076|
000314  f8d0014c          LDR      r0,[r0,#0x14c]
000318  eb000080          ADD      r0,r0,r0,LSL #2
00031c  4a47              LDR      r2,|L48.1084|
00031e  eb021000          ADD      r0,r2,r0,LSL #4
000322  7001              STRB     r1,[r0,#0]
000324  f04f00aa          MOV      r0,#0xaa
                  |L48.808|
;;;6179                   line SET_TO _setup.linetext;
;;;6180                   for(; ;)                          /* check for ending percent sign and comment if missing */
;;;6181                   {
;;;6182                       if (fgets(line, RS274NGC_TEXT_SIZE, _setup.file_pointer) IS NULL)
;;;6183                       {
;;;6184                           COMMENT
;;;6185                               ("interpreter: percent sign missing from end of file");
;;;6186                           break;
;;;6187                       }
;;;6188                       length SET_TO strlen(line);
;;;6189                       if (length IS (RS274NGC_TEXT_SIZE - 1))
;;;6190                       {                             // line is too long. need to finish reading the line
;;;6191                           for(;fgetc(_setup.file_pointer) ISNT '\n';);
;;;6192                           continue;
;;;6193                       }
;;;6194                       for(index SET_TO (length -1); // index set on last char
;;;6195                           (index >= 0) AND (isspace(line[index]));
;;;6196                           index--);
;;;6197                       if (line[index] IS '%')       // found line with % at end
;;;6198                       {
;;;6199                           for(index--; (index >= 0)AND(isspace(line[index])); index--);
;;;6200                           if (index IS -1)          // found line with only percent sign
;;;6201                               break;
;;;6202                       }
;;;6203                   }
;;;6204               }
;;;6205               return RS274NGC_EXIT;
;;;6206           }
;;;6207           else
;;;6208               ERM(NCE_BUG_CODE_NOT_M0_M1_M2_M30_M60);
;;;6209           return RS274NGC_OK;
;;;6210       }
000328  e8bd9ffc          POP      {r2-r12,pc}
                  |L48.812|
00032c  f8df9110          LDR      r9,|L48.1088|
000330  bf00              NOP                            ;6180
                  |L48.818|
000332  483f              LDR      r0,|L48.1072|
000334  f8d00510          LDR      r0,[r0,#0x510]        ;6182  ; _setup
000338  4602              MOV      r2,r0                 ;6182
00033a  f44f7180          MOV      r1,#0x100             ;6182
00033e  4648              MOV      r0,r9                 ;6182
000340  f7fffffe          BL       fgets
000344  b918              CBNZ     r0,|L48.846|
000346  a03f              ADR      r0,|L48.1092|
000348  f7fffffe          BL       COMMENT
00034c  e03d              B        |L48.970|
                  |L48.846|
00034e  4648              MOV      r0,r9                 ;6188
000350  f7fffffe          BL       strlen
000354  4682              MOV      r10,r0                ;6188
000356  f1ba0fff          CMP      r10,#0xff             ;6189
00035a  d109              BNE      |L48.880|
00035c  bf00              NOP                            ;6191
                  |L48.862|
00035e  4934              LDR      r1,|L48.1072|
000360  f8d11510          LDR      r1,[r1,#0x510]        ;6191  ; _setup
000364  4608              MOV      r0,r1                 ;6191
000366  f7fffffe          BL       fgetc
00036a  280a              CMP      r0,#0xa               ;6191
00036c  d1f7              BNE      |L48.862|
00036e  e7e0              B        |L48.818|
                  |L48.880|
000370  f1aa0001          SUB      r0,r10,#1             ;6194
000374  4605              MOV      r5,r0                 ;6194
000376  e002              B        |L48.894|
                  |L48.888|
000378  f1a50001          SUB      r0,r5,#1              ;6196
00037c  4605              MOV      r5,r0                 ;6196
                  |L48.894|
00037e  2d00              CMP      r5,#0                 ;6195
000380  db08              BLT      |L48.916|
000382  f7fffffe          BL       __rt_ctype_table
000386  6800              LDR      r0,[r0,#0]            ;6195
000388  f8191005          LDRB     r1,[r9,r5]            ;6195
00038c  5c40              LDRB     r0,[r0,r1]            ;6195
00038e  f0100f01          TST      r0,#1                 ;6195
000392  d1f1              BNE      |L48.888|
                  |L48.916|
000394  f8190005          LDRB     r0,[r9,r5]            ;6197
000398  2825              CMP      r0,#0x25              ;6197
00039a  d115              BNE      |L48.968|
00039c  f1a50001          SUB      r0,r5,#1              ;6199
0003a0  4605              MOV      r5,r0                 ;6199
0003a2  e002              B        |L48.938|
                  |L48.932|
0003a4  f1a50001          SUB      r0,r5,#1              ;6199
0003a8  4605              MOV      r5,r0                 ;6199
                  |L48.938|
0003aa  2d00              CMP      r5,#0                 ;6199
0003ac  db08              BLT      |L48.960|
0003ae  f7fffffe          BL       __rt_ctype_table
0003b2  6800              LDR      r0,[r0,#0]            ;6199
0003b4  f8191005          LDRB     r1,[r9,r5]            ;6199
0003b8  5c40              LDRB     r0,[r0,r1]            ;6199
0003ba  f0100f01          TST      r0,#1                 ;6199
0003be  d1f1              BNE      |L48.932|
                  |L48.960|
0003c0  1c68              ADDS     r0,r5,#1              ;6200
0003c2  d101              BNE      |L48.968|
0003c4  e001              B        |L48.970|
0003c6  e001              B        |L48.972|
                  |L48.968|
0003c8  e7b3              B        |L48.818|
                  |L48.970|
0003ca  bf00              NOP                            ;6186
                  |L48.972|
0003cc  2001              MOVS     r0,#1                 ;6205
0003ce  e7ab              B        |L48.808|
                  |L48.976|
0003d0  f04f0100          MOV      r1,#0                 ;6208
0003d4  4817              LDR      r0,|L48.1076|
0003d6  f8c0114c          STR      r1,[r0,#0x14c]        ;6208
0003da  4601              MOV      r1,r0                 ;6208
0003dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;6208
0003e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;6208
0003e4  f1010101          ADD      r1,r1,#1              ;6208
0003e8  4602              MOV      r2,r0                 ;6208
0003ea  f8c2114c          STR      r1,[r2,#0x14c]        ;6208
0003ee  eb030183          ADD      r1,r3,r3,LSL #2       ;6208
0003f2  4a12              LDR      r2,|L48.1084|
0003f4  eb021101          ADD      r1,r2,r1,LSL #4       ;6208
0003f8  4608              MOV      r0,r1                 ;6208
0003fa  490f              LDR      r1,|L48.1080|
0003fc  f7fffffe          BL       strcpy
000400  f04f0100          MOV      r1,#0                 ;6208
000404  480b              LDR      r0,|L48.1076|
000406  f8d0014c          LDR      r0,[r0,#0x14c]        ;6208
00040a  eb000080          ADD      r0,r0,r0,LSL #2       ;6208
00040e  4a0b              LDR      r2,|L48.1084|
000410  eb021000          ADD      r0,r2,r0,LSL #4       ;6208
000414  7001              STRB     r1,[r0,#0]            ;6208
000416  f04f001e          MOV      r0,#0x1e              ;6208
00041a  e785              B        |L48.808|
                  |L48.1052|
00041c  2000              MOVS     r0,#0                 ;6209
00041e  e783              B        |L48.808|
;;;6211   
                          ENDP

                  |L48.1056|
                          DCD      0x3ff00000
                  |L48.1060|
                          DCD      0x0c924223
                  |L48.1064|
                          DCD      0x3bc79ca1
                  |L48.1068|
                          DCD      _setup+0xb000
                  |L48.1072|
                          DCD      _setup
                  |L48.1076|
                          DCD      _setup+0xc000
                  |L48.1080|
                          DCD      |symbol_number.470|
                  |L48.1084|
                          DCD      _setup+0xb1ac
                  |L48.1088|
                          DCD      _setup+0x524
                  |L48.1092|
000444  696e7465          DCB      "interpreter: percent sign missing from end of file",0
000448  72707265
00044c  7465723a
000450  20706572
000454  63656e74
000458  20736967
00045c  6e206d69
000460  7373696e
000464  67206672
000468  6f6d2065
00046c  6e64206f
000470  66206669
000474  6c6500  
000477  00                DCB      0

                          AREA ||i.convert_straight||, CODE, READONLY, ALIGN=2

                  convert_straight PROC
;;;6253   
;;;6254       static int convert_straight(                  /* ARGUMENTS                                */
000000  e92d43f0          PUSH     {r4-r9,lr}
;;;6255       int move,                                     /* either G_0 or G_1                        */
;;;6256       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;6257       setup_pointer settings)                       /* pointer to machine settings              */
;;;6258       {
000004  b08d              SUB      sp,sp,#0x34
000006  4605              MOV      r5,r0
000008  4688              MOV      r8,r1
00000a  4614              MOV      r4,r2
;;;6259           static char name[] SET_TO "convert_straight";
;;;6260           double end_x;
;;;6261           double end_y;
;;;6262           double end_z;
;;;6263   #ifdef AA
;;;6264           double AA_end;                            /*AA*/
;;;6265   #endif
;;;6266   #ifdef BB
;;;6267           double BB_end;                            /*BB*/
;;;6268   #endif
;;;6269   #ifdef CC
;;;6270           double CC_end;                            /*CC*/
;;;6271   #endif
;;;6272           int status;
;;;6273   
;;;6274           if (move IS G_1)
00000c  2d0a              CMP      r5,#0xa
00000e  d171              BNE      |L49.244|
;;;6275           {
;;;6276               if (settings->feed_mode IS UNITS_PER_MINUTE)
000010  f8d403fc          LDR      r0,[r4,#0x3fc]
000014  bba8              CBNZ     r0,|L49.130|
;;;6277               {
;;;6278                   CHK((settings->feed_rate IS 0.0),
000016  f8d41408          LDR      r1,[r4,#0x408]
00001a  460e              MOV      r6,r1
00001c  f8d4040c          LDR      r0,[r4,#0x40c]
000020  4607              MOV      r7,r0
000022  2200              MOVS     r2,#0
000024  4613              MOV      r3,r2
000026  4630              MOV      r0,r6
000028  4639              MOV      r1,r7
00002a  f7fffffe          BL       __aeabi_cdcmpeq
00002e  d161              BNE      |L49.244|
000030  f04f0100          MOV      r1,#0
000034  48c8              LDR      r0,|L49.856|
000036  f8c0114c          STR      r1,[r0,#0x14c]
00003a  4601              MOV      r1,r0
00003c  f8d1314c          LDR      r3,[r1,#0x14c]
000040  f8d1114c          LDR      r1,[r1,#0x14c]
000044  f1010101          ADD      r1,r1,#1
000048  4602              MOV      r2,r0
00004a  f8c2114c          STR      r1,[r2,#0x14c]
00004e  eb030183          ADD      r1,r3,r3,LSL #2
000052  f6a06254          SUB      r2,r0,#0xe54
000056  eb021101          ADD      r1,r2,r1,LSL #4
00005a  4608              MOV      r0,r1
00005c  49bf              LDR      r1,|L49.860|
00005e  f7fffffe          BL       strcpy
000062  f04f0100          MOV      r1,#0
000066  48bc              LDR      r0,|L49.856|
000068  f8d0014c          LDR      r0,[r0,#0x14c]
00006c  eb000080          ADD      r0,r0,r0,LSL #2
000070  4abb              LDR      r2,|L49.864|
000072  eb021000          ADD      r0,r2,r0,LSL #4
000076  7001              STRB     r1,[r0,#0]
000078  f04f0029          MOV      r0,#0x29
                  |L49.124|
;;;6279                       NCE_CANNOT_DO_G1_WITH_ZERO_FEED_RATE);
;;;6280               }
;;;6281               else if (settings->feed_mode IS INVERSE_TIME)
;;;6282               {
;;;6283                   CHK((block->f_number IS -1.0),
;;;6284                       NCE_F_WORD_MISSING_WITH_INVERSE_TIME_G1_MOVE);
;;;6285               }
;;;6286           }
;;;6287   
;;;6288           settings->motion_mode SET_TO move;
;;;6289           find_ends(block, settings, &end_x, &end_y,
;;;6290               &end_z
;;;6291       #ifdef AA
;;;6292               , &AA_end
;;;6293       #endif
;;;6294   
;;;6295       #ifdef BB
;;;6296               , &BB_end
;;;6297       #endif
;;;6298   
;;;6299       #ifdef CC
;;;6300               , &CC_end
;;;6301       #endif
;;;6302               );
;;;6303      /* NOT "IS ON" */
;;;6304           if ((settings->cutter_comp_side ISNT OFF) AND
;;;6305               (settings->cutter_comp_radius > 0.0)) /* radius always is >= 0 */
;;;6306           {
;;;6307               CHK((block->g_modes[0] IS G_53),
;;;6308                   NCE_CANNOT_USE_G53_WITH_CUTTER_RADIUS_COMP);
;;;6309               if (settings->program_x IS UNKNOWN)
;;;6310               {
;;;6311                   status SET_TO
;;;6312                       convert_straight_comp1(move, block, settings, end_x, end_y,
;;;6313                       end_z
;;;6314       #ifdef AA
;;;6315                       , AA_end
;;;6316       #endif
;;;6317   
;;;6318       #ifdef BB
;;;6319                       , BB_end
;;;6320       #endif
;;;6321   
;;;6322       #ifdef CC
;;;6323                       , CC_end
;;;6324       #endif
;;;6325                       );
;;;6326                   CHP(status);
;;;6327               }
;;;6328               else
;;;6329               {
;;;6330                   status SET_TO
;;;6331                       convert_straight_comp2 (move, block, settings, end_x, end_y,
;;;6332                       end_z
;;;6333       #ifdef AA
;;;6334                       , AA_end
;;;6335       #endif
;;;6336   
;;;6337       #ifdef BB
;;;6338                       , BB_end
;;;6339       #endif
;;;6340   
;;;6341       #ifdef CC
;;;6342                       , CC_end
;;;6343       #endif
;;;6344                       );
;;;6345                   CHP(status);
;;;6346               }
;;;6347           }
;;;6348           else if (move IS G_0)
;;;6349           {
;;;6350               STRAIGHT_TRAVERSE(end_x, end_y, end_z
;;;6351       #ifdef AA
;;;6352                   ,           AA_end
;;;6353       #else
;;;6354       #ifdef ALL_AXES
;;;6355                   , 0
;;;6356       #endif
;;;6357       #endif
;;;6358       #ifdef BB
;;;6359                   ,  BB_end
;;;6360       #else
;;;6361       #ifdef ALL_AXES
;;;6362                   , 0
;;;6363       #endif
;;;6364       #endif
;;;6365       #ifdef CC
;;;6366                   ,  CC_end
;;;6367       #else
;;;6368       #ifdef ALL_AXES
;;;6369                   , 0
;;;6370       #endif
;;;6371       #endif
;;;6372                   );
;;;6373               settings->current_x SET_TO end_x;
;;;6374               settings->current_y SET_TO end_y;
;;;6375           }
;;;6376           else if (move IS G_1)
;;;6377           {
;;;6378               if (settings->feed_mode IS INVERSE_TIME)
;;;6379                   inverse_time_rate_straight
;;;6380                       (end_x, end_y, end_z
;;;6381           #ifdef AA
;;;6382                       , AA_end
;;;6383           #endif
;;;6384   
;;;6385           #ifdef BB
;;;6386                       , BB_end
;;;6387           #endif
;;;6388   
;;;6389           #ifdef CC
;;;6390                       , CC_end
;;;6391           #endif
;;;6392                       , block, settings);
;;;6393               STRAIGHT_FEED(end_x, end_y, end_z
;;;6394       #ifdef AA
;;;6395                   ,           AA_end
;;;6396       #else
;;;6397       #ifdef ALL_AXES
;;;6398                   , 0
;;;6399       #endif
;;;6400       #endif
;;;6401       #ifdef BB
;;;6402                   ,  BB_end
;;;6403       #else
;;;6404       #ifdef ALL_AXES
;;;6405                   , 0
;;;6406       #endif
;;;6407       #endif
;;;6408       #ifdef CC
;;;6409                   ,  CC_end
;;;6410       #else
;;;6411       #ifdef ALL_AXES
;;;6412                   , 0
;;;6413       #endif
;;;6414       #endif
;;;6415                   );
;;;6416               settings->current_x SET_TO end_x;
;;;6417               settings->current_y SET_TO end_y;
;;;6418           }
;;;6419           else
;;;6420               ERM(NCE_BUG_CODE_NOT_G0_OR_G1);
;;;6421   
;;;6422           settings->current_z SET_TO end_z;
;;;6423   #ifdef AA
;;;6424           settings->AA_current SET_TO AA_end;       /*AA*/
;;;6425   #endif
;;;6426   #ifdef BB
;;;6427           settings->BB_current SET_TO BB_end;       /*BB*/
;;;6428   #endif
;;;6429   #ifdef CC
;;;6430           settings->CC_current SET_TO CC_end;       /*CC*/
;;;6431   #endif
;;;6432           return RS274NGC_OK;
;;;6433       }
00007c  b00d              ADD      sp,sp,#0x34
00007e  e8bd83f0          POP      {r4-r9,pc}
                  |L49.130|
000082  e7ff              B        |L49.132|
                  |L49.132|
000084  f8d403fc          LDR      r0,[r4,#0x3fc]        ;6281
000088  2801              CMP      r0,#1                 ;6281
00008a  d133              BNE      |L49.244|
00008c  f8d81108          LDR      r1,[r8,#0x108]        ;6283
000090  460e              MOV      r6,r1                 ;6283
000092  f8d8010c          LDR      r0,[r8,#0x10c]        ;6283
000096  4607              MOV      r7,r0                 ;6283
000098  2200              MOVS     r2,#0                 ;6283
00009a  4bb2              LDR      r3,|L49.868|
00009c  4630              MOV      r0,r6                 ;6283
00009e  4639              MOV      r1,r7                 ;6283
0000a0  f7fffffe          BL       __aeabi_cdcmpeq
0000a4  d126              BNE      |L49.244|
0000a6  f04f0100          MOV      r1,#0                 ;6283
0000aa  48ab              LDR      r0,|L49.856|
0000ac  f8c0114c          STR      r1,[r0,#0x14c]        ;6283
0000b0  4601              MOV      r1,r0                 ;6283
0000b2  f8d1314c          LDR      r3,[r1,#0x14c]        ;6283
0000b6  f8d1114c          LDR      r1,[r1,#0x14c]        ;6283
0000ba  f1010101          ADD      r1,r1,#1              ;6283
0000be  4602              MOV      r2,r0                 ;6283
0000c0  f8c2114c          STR      r1,[r2,#0x14c]        ;6283
0000c4  eb030183          ADD      r1,r3,r3,LSL #2       ;6283
0000c8  4aa5              LDR      r2,|L49.864|
0000ca  eb021101          ADD      r1,r2,r1,LSL #4       ;6283
0000ce  4608              MOV      r0,r1                 ;6283
0000d0  49a2              LDR      r1,|L49.860|
0000d2  f7fffffe          BL       strcpy
0000d6  f04f0100          MOV      r1,#0                 ;6283
0000da  489f              LDR      r0,|L49.856|
0000dc  f8d0014c          LDR      r0,[r0,#0x14c]        ;6283
0000e0  eb000080          ADD      r0,r0,r0,LSL #2       ;6283
0000e4  4a9e              LDR      r2,|L49.864|
0000e6  eb021000          ADD      r0,r2,r0,LSL #4       ;6283
0000ea  7001              STRB     r1,[r0,#0]            ;6283
0000ec  f04f004f          MOV      r0,#0x4f              ;6283
0000f0  e7c4              B        |L49.124|
0000f2  e7ff              B        |L49.244|
                  |L49.244|
0000f4  f8c45628          STR      r5,[r4,#0x628]        ;6288
0000f8  a806              ADD      r0,sp,#0x18           ;6289
0000fa  ab08              ADD      r3,sp,#0x20           ;6289
0000fc  aa0a              ADD      r2,sp,#0x28           ;6289
0000fe  4621              MOV      r1,r4                 ;6289
000100  9000              STR      r0,[sp,#0]            ;6289
000102  4640              MOV      r0,r8                 ;6289
000104  f7fffffe          BL       find_ends
000108  f8d403b0          LDR      r0,[r4,#0x3b0]        ;6304
00010c  2800              CMP      r0,#0                 ;6304
00010e  d07a              BEQ      |L49.518|
000110  f504706a          ADD      r0,r4,#0x3a8          ;6305
000114  c803              LDM      r0,{r0,r1}            ;6305
000116  4606              MOV      r6,r0                 ;6305
000118  2200              MOVS     r2,#0                 ;6305
00011a  4613              MOV      r3,r2                 ;6305
00011c  f7fffffe          BL       __aeabi_cdrcmple
000120  d271              BCS      |L49.518|
000122  f8d80110          LDR      r0,[r8,#0x110]        ;6307
000126  f5a07100          SUB      r1,r0,#0x200          ;6307
00012a  3912              SUBS     r1,r1,#0x12           ;6307
00012c  d123              BNE      |L49.374|
00012e  488a              LDR      r0,|L49.856|
000130  f8c0114c          STR      r1,[r0,#0x14c]        ;6307
000134  4601              MOV      r1,r0                 ;6307
000136  f8d1314c          LDR      r3,[r1,#0x14c]        ;6307
00013a  f8d1114c          LDR      r1,[r1,#0x14c]        ;6307
00013e  f1010101          ADD      r1,r1,#1              ;6307
000142  4602              MOV      r2,r0                 ;6307
000144  f8c2114c          STR      r1,[r2,#0x14c]        ;6307
000148  eb030183          ADD      r1,r3,r3,LSL #2       ;6307
00014c  4a84              LDR      r2,|L49.864|
00014e  eb021101          ADD      r1,r2,r1,LSL #4       ;6307
000152  4608              MOV      r0,r1                 ;6307
000154  4981              LDR      r1,|L49.860|
000156  f7fffffe          BL       strcpy
00015a  f04f0100          MOV      r1,#0                 ;6307
00015e  487e              LDR      r0,|L49.856|
000160  f8d0014c          LDR      r0,[r0,#0x14c]        ;6307
000164  eb000080          ADD      r0,r0,r0,LSL #2       ;6307
000168  4a7d              LDR      r2,|L49.864|
00016a  eb021000          ADD      r0,r2,r0,LSL #4       ;6307
00016e  7001              STRB     r1,[r0,#0]            ;6307
000170  f04f003e          MOV      r0,#0x3e              ;6307
000174  e782              B        |L49.124|
                  |L49.374|
000176  f5044030          ADD      r0,r4,#0xb000         ;6309
00017a  f8d01178          LDR      r1,[r0,#0x178]        ;6309
00017e  f8d0017c          LDR      r0,[r0,#0x17c]        ;6309
000182  460e              MOV      r6,r1                 ;6309
000184  4607              MOV      r7,r0                 ;6309
000186  4a78              LDR      r2,|L49.872|
000188  4b78              LDR      r3,|L49.876|
00018a  4630              MOV      r0,r6                 ;6309
00018c  4639              MOV      r1,r7                 ;6309
00018e  f7fffffe          BL       __aeabi_cdcmpeq
000192  d13b              BNE      |L49.524|
000194  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6311
000198  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6311
00019c  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;6311
0001a0  e9cd0102          STRD     r0,r1,[sp,#8]         ;6311
0001a4  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6311
0001a8  4622              MOV      r2,r4                 ;6311
0001aa  e9cd0100          STRD     r0,r1,[sp,#0]         ;6311
0001ae  4641              MOV      r1,r8                 ;6311
0001b0  4628              MOV      r0,r5                 ;6311
0001b2  f7fffffe          BL       convert_straight_comp1
0001b6  4681              MOV      r9,r0                 ;6311
0001b8  f1b90f00          CMP      r9,#0                 ;6326
0001bc  d076              BEQ      |L49.684|
0001be  4866              LDR      r0,|L49.856|
0001c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;6326
0001c4  2831              CMP      r0,#0x31              ;6326
0001c6  da1f              BGE      |L49.520|
0001c8  4963              LDR      r1,|L49.856|
0001ca  f8d1314c          LDR      r3,[r1,#0x14c]        ;6326
0001ce  f8d1114c          LDR      r1,[r1,#0x14c]        ;6326
0001d2  1c49              ADDS     r1,r1,#1              ;6326
0001d4  4a60              LDR      r2,|L49.856|
0001d6  f8c2114c          STR      r1,[r2,#0x14c]        ;6326
0001da  eb030183          ADD      r1,r3,r3,LSL #2       ;6326
0001de  4a60              LDR      r2,|L49.864|
0001e0  eb021101          ADD      r1,r2,r1,LSL #4       ;6326
0001e4  4608              MOV      r0,r1                 ;6326
0001e6  495d              LDR      r1,|L49.860|
0001e8  f7fffffe          BL       strcpy
0001ec  f04f0100          MOV      r1,#0                 ;6326
0001f0  4859              LDR      r0,|L49.856|
0001f2  f8d0014c          LDR      r0,[r0,#0x14c]        ;6326
0001f6  eb000080          ADD      r0,r0,r0,LSL #2       ;6326
0001fa  4a59              LDR      r2,|L49.864|
0001fc  eb021000          ADD      r0,r2,r0,LSL #4       ;6326
000200  7001              STRB     r1,[r0,#0]            ;6326
000202  4648              MOV      r0,r9                 ;6326
000204  e73a              B        |L49.124|
                  |L49.518|
000206  e03c              B        |L49.642|
                  |L49.520|
000208  4648              MOV      r0,r9                 ;6326
00020a  e737              B        |L49.124|
                  |L49.524|
00020c  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6330
000210  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6330
000214  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;6330
000218  e9cd0102          STRD     r0,r1,[sp,#8]         ;6330
00021c  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6330
000220  4622              MOV      r2,r4                 ;6330
000222  e9cd0100          STRD     r0,r1,[sp,#0]         ;6330
000226  4641              MOV      r1,r8                 ;6330
000228  4628              MOV      r0,r5                 ;6330
00022a  f7fffffe          BL       convert_straight_comp2
00022e  4681              MOV      r9,r0                 ;6330
000230  f1b90f00          CMP      r9,#0                 ;6345
000234  d03a              BEQ      |L49.684|
000236  4848              LDR      r0,|L49.856|
000238  f8d0014c          LDR      r0,[r0,#0x14c]        ;6345
00023c  2831              CMP      r0,#0x31              ;6345
00023e  da1e              BGE      |L49.638|
000240  4945              LDR      r1,|L49.856|
000242  f8d1314c          LDR      r3,[r1,#0x14c]        ;6345
000246  f8d1114c          LDR      r1,[r1,#0x14c]        ;6345
00024a  1c49              ADDS     r1,r1,#1              ;6345
00024c  4a42              LDR      r2,|L49.856|
00024e  f8c2114c          STR      r1,[r2,#0x14c]        ;6345
000252  eb030183          ADD      r1,r3,r3,LSL #2       ;6345
000256  4a42              LDR      r2,|L49.864|
000258  eb021101          ADD      r1,r2,r1,LSL #4       ;6345
00025c  4608              MOV      r0,r1                 ;6345
00025e  493f              LDR      r1,|L49.860|
000260  f7fffffe          BL       strcpy
000264  f04f0100          MOV      r1,#0                 ;6345
000268  483b              LDR      r0,|L49.856|
00026a  f8d0014c          LDR      r0,[r0,#0x14c]        ;6345
00026e  eb000080          ADD      r0,r0,r0,LSL #2       ;6345
000272  4a3b              LDR      r2,|L49.864|
000274  eb021000          ADD      r0,r2,r0,LSL #4       ;6345
000278  7001              STRB     r1,[r0,#0]            ;6345
00027a  4648              MOV      r0,r9                 ;6345
00027c  e6fe              B        |L49.124|
                  |L49.638|
00027e  4648              MOV      r0,r9                 ;6345
000280  e6fc              B        |L49.124|
                  |L49.642|
000282  b9a5              CBNZ     r5,|L49.686|
000284  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6350
000288  e9cd0100          STRD     r0,r1,[sp,#0]         ;6350
00028c  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6350
000290  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6350
000294  f7fffffe          BL       STRAIGHT_TRAVERSE
000298  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6373
00029c  f5047264          ADD      r2,r4,#0x390          ;6373
0002a0  c203              STM      r2!,{r0,r1}           ;6373
0002a2  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;6374
0002a6  f5047266          ADD      r2,r4,#0x398          ;6374
0002aa  c203              STM      r2!,{r0,r1}           ;6374
                  |L49.684|
0002ac  e04c              B        |L49.840|
                  |L49.686|
0002ae  2d0a              CMP      r5,#0xa               ;6376
0002b0  d124              BNE      |L49.764|
0002b2  f8d403fc          LDR      r0,[r4,#0x3fc]        ;6378
0002b6  2801              CMP      r0,#1                 ;6378
0002b8  d10b              BNE      |L49.722|
0002ba  e9cd8402          STRD     r8,r4,[sp,#8]         ;6379
0002be  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6379
0002c2  e9cd0100          STRD     r0,r1,[sp,#0]         ;6379
0002c6  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6379
0002ca  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6379
0002ce  f7fffffe          BL       inverse_time_rate_straight
                  |L49.722|
0002d2  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6393
0002d6  e9cd0100          STRD     r0,r1,[sp,#0]         ;6393
0002da  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6393
0002de  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6393
0002e2  f7fffffe          BL       STRAIGHT_FEED
0002e6  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6416
0002ea  f5047264          ADD      r2,r4,#0x390          ;6416
0002ee  c203              STM      r2!,{r0,r1}           ;6416
0002f0  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;6417
0002f4  f5047266          ADD      r2,r4,#0x398          ;6417
0002f8  c203              STM      r2!,{r0,r1}           ;6417
0002fa  e025              B        |L49.840|
                  |L49.764|
0002fc  f04f0100          MOV      r1,#0                 ;6420
000300  4815              LDR      r0,|L49.856|
000302  f8c0114c          STR      r1,[r0,#0x14c]        ;6420
000306  4601              MOV      r1,r0                 ;6420
000308  f8d1314c          LDR      r3,[r1,#0x14c]        ;6420
00030c  f8d1114c          LDR      r1,[r1,#0x14c]        ;6420
000310  f1010101          ADD      r1,r1,#1              ;6420
000314  4602              MOV      r2,r0                 ;6420
000316  f8c2114c          STR      r1,[r2,#0x14c]        ;6420
00031a  eb030183          ADD      r1,r3,r3,LSL #2       ;6420
00031e  4a10              LDR      r2,|L49.864|
000320  eb021101          ADD      r1,r2,r1,LSL #4       ;6420
000324  4608              MOV      r0,r1                 ;6420
000326  490d              LDR      r1,|L49.860|
000328  f7fffffe          BL       strcpy
00032c  f04f0100          MOV      r1,#0                 ;6420
000330  4809              LDR      r0,|L49.856|
000332  f8d0014c          LDR      r0,[r0,#0x14c]        ;6420
000336  eb000080          ADD      r0,r0,r0,LSL #2       ;6420
00033a  4a09              LDR      r2,|L49.864|
00033c  eb021000          ADD      r0,r2,r0,LSL #4       ;6420
000340  7001              STRB     r1,[r0,#0]            ;6420
000342  f04f0010          MOV      r0,#0x10              ;6420
000346  e699              B        |L49.124|
                  |L49.840|
000348  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;6422
00034c  f5047268          ADD      r2,r4,#0x3a0          ;6422
000350  c203              STM      r2!,{r0,r1}           ;6422
000352  2000              MOVS     r0,#0                 ;6432
000354  e692              B        |L49.124|
;;;6434   
                          ENDP

000356  0000              DCW      0x0000
                  |L49.856|
                          DCD      _setup+0xc000
                  |L49.860|
                          DCD      |symbol_number.471|
                  |L49.864|
                          DCD      _setup+0xb1ac
                  |L49.868|
                          DCD      0xbff00000
                  |L49.872|
                          DCD      0x0c924223
                  |L49.876|
                          DCD      0x3bc79ca1

                          AREA ||i.convert_straight_comp1||, CODE, READONLY, ALIGN=2

                  convert_straight_comp1 PROC
;;;6470   
;;;6471       static int convert_straight_comp1(            /* ARGUMENTS                       */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;6472       int move,                                     /* either G_0 or G_1                         */
;;;6473       block_pointer block,                          /* pointer to a block of RS274 instructions  */
;;;6474       setup_pointer settings,                       /* pointer to machine settings               */
;;;6475       double px,                                    /* X coordinate of end point                 */
;;;6476       double py,                                    /* Y coordinate of end point                 */
;;;6477       double end_z                                  /* Z coordinate of end point                 */
;;;6478   #ifdef AA
;;;6479       , double AA_end                               /* A coordinate of end point           *//*AA*/
;;;6480   #endif
;;;6481   #ifdef BB
;;;6482       , double BB_end                               /* B coordinate of end point           *//*BB*/
;;;6483   #endif
;;;6484   #ifdef CC
;;;6485       , double CC_end                               /* C coordinate of end point           *//*CC*/
;;;6486   #endif
;;;6487       )
;;;6488       {
000004  b08f              SUB      sp,sp,#0x3c
000006  4692              MOV      r10,r2
000008  e9dd891c          LDRD     r8,r9,[sp,#0x70]
;;;6489           static char name[] SET_TO "convert_straight_comp1";
;;;6490           double alpha;
;;;6491           double cx;                                /* first current point x then end point x */
;;;6492           double cy;                                /* first current point y then end point y */
;;;6493           double distance;
;;;6494           double radius;
;;;6495           int side;
;;;6496           double theta;
;;;6497   
;;;6498           side SET_TO settings->cutter_comp_side;
00000c  f8da03b0          LDR      r0,[r10,#0x3b0]
000010  4683              MOV      r11,r0
;;;6499           cx SET_TO settings->current_x;
000012  f8da1390          LDR      r1,[r10,#0x390]
000016  460e              MOV      r6,r1
000018  f8da0394          LDR      r0,[r10,#0x394]
00001c  4607              MOV      r7,r0
;;;6500           cy SET_TO settings->current_y;
00001e  f50a7066          ADD      r0,r10,#0x398
000022  c803              LDM      r0,{r0,r1}
000024  4604              MOV      r4,r0
000026  460d              MOV      r5,r1
;;;6501   
;;;6502      /* always will be positive */
;;;6503           radius SET_TO settings->cutter_comp_radius;
000028  f50a706a          ADD      r0,r10,#0x3a8
00002c  c803              LDM      r0,{r0,r1}
00002e  e9cd0108          STRD     r0,r1,[sp,#0x20]
;;;6504           distance SET_TO hypot((px - cx), (py -cy));
000032  4622              MOV      r2,r4
000034  462b              MOV      r3,r5
000036  e9dd011e          LDRD     r0,r1,[sp,#0x78]
00003a  f7fffffe          BL       __aeabi_dsub
00003e  4632              MOV      r2,r6
000040  463b              MOV      r3,r7
000042  e9cd0104          STRD     r0,r1,[sp,#0x10]
000046  4640              MOV      r0,r8
000048  4649              MOV      r1,r9
00004a  f7fffffe          BL       __aeabi_dsub
00004e  e9cd0102          STRD     r0,r1,[sp,#8]
000052  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000056  f7fffffe          BL       hypot
00005a  e9cd010a          STRD     r0,r1,[sp,#0x28]
;;;6505   
;;;6506           CHK(((side ISNT LEFT) AND (side ISNT RIGHT)),NCE_BUG_SIDE_NOT_RIGHT_OR_LEFT);
00005e  f1bb0f02          CMP      r11,#2
000062  d02b              BEQ      |L50.188|
000064  f1bb0f01          CMP      r11,#1
000068  d028              BEQ      |L50.188|
00006a  f04f0100          MOV      r1,#0
00006e  4892              LDR      r0,|L50.696|
000070  f8c0114c          STR      r1,[r0,#0x14c]
000074  4601              MOV      r1,r0
000076  f8d1314c          LDR      r3,[r1,#0x14c]
00007a  f8d1114c          LDR      r1,[r1,#0x14c]
00007e  f1010101          ADD      r1,r1,#1
000082  4602              MOV      r2,r0
000084  f8c2114c          STR      r1,[r2,#0x14c]
000088  eb030183          ADD      r1,r3,r3,LSL #2
00008c  f6a06254          SUB      r2,r0,#0xe54
000090  eb021101          ADD      r1,r2,r1,LSL #4
000094  4608              MOV      r0,r1
000096  4989              LDR      r1,|L50.700|
000098  f7fffffe          BL       strcpy
00009c  f04f0100          MOV      r1,#0
0000a0  4885              LDR      r0,|L50.696|
0000a2  f8d0014c          LDR      r0,[r0,#0x14c]
0000a6  eb000080          ADD      r0,r0,r0,LSL #2
0000aa  4a85              LDR      r2,|L50.704|
0000ac  eb021000          ADD      r0,r2,r0,LSL #4
0000b0  7001              STRB     r1,[r0,#0]
0000b2  f04f0023          MOV      r0,#0x23
                  |L50.182|
;;;6507           CHK((distance <= radius), NCE_CUTTER_GOUGING_WITH_CUTTER_RADIUS_COMP);
;;;6508   
;;;6509           theta SET_TO acos(radius/distance);
;;;6510           alpha SET_TO (side IS LEFT) ? (atan2((cy - py), (cx - px)) - theta) :
;;;6511           (atan2((cy - py), (cx - px)) + theta);
;;;6512           cx SET_TO (px + (radius * cos(alpha)));   /* reset to end location */
;;;6513           cy SET_TO (py + (radius * sin(alpha)));
;;;6514           if (move IS G_0)
;;;6515               STRAIGHT_TRAVERSE(cx, cy, end_z
;;;6516           #ifdef AA
;;;6517                   ,             AA_end
;;;6518           #else
;;;6519           #ifdef ALL_AXES
;;;6520                   , 0
;;;6521           #endif
;;;6522           #endif
;;;6523           #ifdef BB
;;;6524                   ,  BB_end
;;;6525           #else
;;;6526           #ifdef ALL_AXES
;;;6527                   , 0
;;;6528           #endif
;;;6529           #endif
;;;6530           #ifdef CC
;;;6531                   ,  CC_end
;;;6532           #else
;;;6533           #ifdef ALL_AXES
;;;6534                   , 0
;;;6535           #endif
;;;6536           #endif
;;;6537                   );
;;;6538           else if (move IS G_1)
;;;6539           {
;;;6540               if (settings->feed_mode IS INVERSE_TIME)
;;;6541                   inverse_time_rate_straight
;;;6542                       (cx, cy, end_z
;;;6543           #ifdef AA
;;;6544                       , AA_end
;;;6545           #endif
;;;6546   
;;;6547           #ifdef BB
;;;6548                       , BB_end
;;;6549           #endif
;;;6550   
;;;6551           #ifdef CC
;;;6552                       , CC_end
;;;6553           #endif
;;;6554                       , block, settings);
;;;6555               STRAIGHT_FEED(cx, cy, end_z
;;;6556       #ifdef AA
;;;6557                   ,           AA_end
;;;6558       #else
;;;6559       #ifdef ALL_AXES
;;;6560                   , 0
;;;6561       #endif
;;;6562       #endif
;;;6563       #ifdef BB
;;;6564                   ,  BB_end
;;;6565       #else
;;;6566       #ifdef ALL_AXES
;;;6567                   , 0
;;;6568       #endif
;;;6569       #endif
;;;6570       #ifdef CC
;;;6571                   ,  CC_end
;;;6572       #else
;;;6573       #ifdef ALL_AXES
;;;6574                   , 0
;;;6575       #endif
;;;6576       #endif
;;;6577                   );
;;;6578           }
;;;6579           else
;;;6580               ERM(NCE_BUG_CODE_NOT_G0_OR_G1);
;;;6581   
;;;6582           settings->current_x SET_TO cx;
;;;6583           settings->current_y SET_TO cy;
;;;6584           settings->program_x SET_TO px;
;;;6585           settings->program_y SET_TO py;
;;;6586           return RS274NGC_OK;
;;;6587       }
0000b6  b013              ADD      sp,sp,#0x4c
0000b8  e8bd8ff0          POP      {r4-r11,pc}
                  |L50.188|
0000bc  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6507
0000c0  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;6507
0000c4  f7fffffe          BL       __aeabi_cdcmple
0000c8  d824              BHI      |L50.276|
0000ca  f04f0100          MOV      r1,#0                 ;6507
0000ce  487a              LDR      r0,|L50.696|
0000d0  f8c0114c          STR      r1,[r0,#0x14c]        ;6507
0000d4  4601              MOV      r1,r0                 ;6507
0000d6  f8d1314c          LDR      r3,[r1,#0x14c]        ;6507
0000da  f8d1214c          LDR      r2,[r1,#0x14c]        ;6507
0000de  f1020201          ADD      r2,r2,#1              ;6507
0000e2  f8c1214c          STR      r2,[r1,#0x14c]        ;6507
0000e6  eb030183          ADD      r1,r3,r3,LSL #2       ;6507
0000ea  4a75              LDR      r2,|L50.704|
0000ec  eb021101          ADD      r1,r2,r1,LSL #4       ;6507
0000f0  4608              MOV      r0,r1                 ;6507
0000f2  4972              LDR      r1,|L50.700|
0000f4  f7fffffe          BL       strcpy
0000f8  f04f0100          MOV      r1,#0                 ;6507
0000fc  486e              LDR      r0,|L50.696|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]        ;6507
000102  eb000080          ADD      r0,r0,r0,LSL #2       ;6507
000106  4a6e              LDR      r2,|L50.704|
000108  eb021000          ADD      r0,r2,r0,LSL #4       ;6507
00010c  7001              STRB     r1,[r0,#0]            ;6507
00010e  f04f0046          MOV      r0,#0x46              ;6507
000112  e7d0              B        |L50.182|
                  |L50.276|
000114  a808              ADD      r0,sp,#0x20           ;6509
000116  c80f              LDM      r0,{r0-r3}            ;6509
000118  f7fffffe          BL       __aeabi_ddiv
00011c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6509
000120  f7fffffe          BL       acos
000124  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;6509
000128  f1bb0f02          CMP      r11,#2                ;6510
00012c  d11a              BNE      |L50.356|
00012e  4642              MOV      r2,r8                 ;6510
000130  464b              MOV      r3,r9                 ;6510
000132  4630              MOV      r0,r6                 ;6510
000134  4639              MOV      r1,r7                 ;6510
000136  f7fffffe          BL       __aeabi_dsub
00013a  e9cd0102          STRD     r0,r1,[sp,#8]         ;6510
00013e  4620              MOV      r0,r4                 ;6510
000140  4629              MOV      r1,r5                 ;6510
000142  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6510
000146  f7fffffe          BL       __aeabi_dsub
00014a  e9cd0100          STRD     r0,r1,[sp,#0]         ;6510
00014e  e9dd2302          LDRD     r2,r3,[sp,#8]         ;6510
000152  f7fffffe          BL       atan2
000156  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6510
00015a  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;6510
00015e  f7fffffe          BL       __aeabi_dsub
000162  e019              B        |L50.408|
                  |L50.356|
000164  4642              MOV      r2,r8                 ;6511
000166  464b              MOV      r3,r9                 ;6511
000168  4630              MOV      r0,r6                 ;6511
00016a  4639              MOV      r1,r7                 ;6511
00016c  f7fffffe          BL       __aeabi_dsub
000170  e9cd0102          STRD     r0,r1,[sp,#8]         ;6511
000174  4620              MOV      r0,r4                 ;6511
000176  4629              MOV      r1,r5                 ;6511
000178  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6511
00017c  f7fffffe          BL       __aeabi_dsub
000180  e9cd0100          STRD     r0,r1,[sp,#0]         ;6511
000184  e9dd2302          LDRD     r2,r3,[sp,#8]         ;6511
000188  f7fffffe          BL       atan2
00018c  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6511
000190  e9dd2306          LDRD     r2,r3,[sp,#0x18]      ;6511
000194  f7fffffe          BL       __aeabi_dadd
                  |L50.408|
000198  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6511
00019c  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;6512
0001a0  f7fffffe          BL       ||cos||
0001a4  e9cd0102          STRD     r0,r1,[sp,#8]         ;6512
0001a8  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6512
0001ac  f7fffffe          BL       __aeabi_dmul
0001b0  4642              MOV      r2,r8                 ;6512
0001b2  464b              MOV      r3,r9                 ;6512
0001b4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6512
0001b8  f7fffffe          BL       __aeabi_dadd
0001bc  4606              MOV      r6,r0                 ;6512
0001be  460f              MOV      r7,r1                 ;6512
0001c0  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;6513
0001c4  f7fffffe          BL       ||sin||
0001c8  e9cd0102          STRD     r0,r1,[sp,#8]         ;6513
0001cc  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;6513
0001d0  f7fffffe          BL       __aeabi_dmul
0001d4  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6513
0001d8  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6513
0001dc  f7fffffe          BL       __aeabi_dadd
0001e0  4604              MOV      r4,r0                 ;6513
0001e2  460d              MOV      r5,r1                 ;6513
0001e4  980f              LDR      r0,[sp,#0x3c]         ;6514
0001e6  b950              CBNZ     r0,|L50.510|
0001e8  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6515
0001ec  4622              MOV      r2,r4                 ;6515
0001ee  462b              MOV      r3,r5                 ;6515
0001f0  e9cd0100          STRD     r0,r1,[sp,#0]         ;6515
0001f4  4630              MOV      r0,r6                 ;6515
0001f6  4639              MOV      r1,r7                 ;6515
0001f8  f7fffffe          BL       STRAIGHT_TRAVERSE
0001fc  e044              B        |L50.648|
                  |L50.510|
0001fe  980f              LDR      r0,[sp,#0x3c]         ;6538
000200  280a              CMP      r0,#0xa               ;6538
000202  d11b              BNE      |L50.572|
000204  f8da03fc          LDR      r0,[r10,#0x3fc]       ;6540
000208  2801              CMP      r0,#1                 ;6540
00020a  d10c              BNE      |L50.550|
00020c  9810              LDR      r0,[sp,#0x40]         ;6541
00020e  e9cd0a02          STRD     r0,r10,[sp,#8]        ;6541
000212  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6541
000216  4622              MOV      r2,r4                 ;6541
000218  462b              MOV      r3,r5                 ;6541
00021a  e9cd0100          STRD     r0,r1,[sp,#0]         ;6541
00021e  4630              MOV      r0,r6                 ;6541
000220  4639              MOV      r1,r7                 ;6541
000222  f7fffffe          BL       inverse_time_rate_straight
                  |L50.550|
000226  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6555
00022a  4622              MOV      r2,r4                 ;6555
00022c  462b              MOV      r3,r5                 ;6555
00022e  e9cd0100          STRD     r0,r1,[sp,#0]         ;6555
000232  4630              MOV      r0,r6                 ;6555
000234  4639              MOV      r1,r7                 ;6555
000236  f7fffffe          BL       STRAIGHT_FEED
00023a  e025              B        |L50.648|
                  |L50.572|
00023c  f04f0100          MOV      r1,#0                 ;6580
000240  481d              LDR      r0,|L50.696|
000242  f8c0114c          STR      r1,[r0,#0x14c]        ;6580
000246  4601              MOV      r1,r0                 ;6580
000248  f8d1314c          LDR      r3,[r1,#0x14c]        ;6580
00024c  f8d1114c          LDR      r1,[r1,#0x14c]        ;6580
000250  f1010101          ADD      r1,r1,#1              ;6580
000254  4602              MOV      r2,r0                 ;6580
000256  f8c2114c          STR      r1,[r2,#0x14c]        ;6580
00025a  eb030183          ADD      r1,r3,r3,LSL #2       ;6580
00025e  4a18              LDR      r2,|L50.704|
000260  eb021101          ADD      r1,r2,r1,LSL #4       ;6580
000264  4608              MOV      r0,r1                 ;6580
000266  4915              LDR      r1,|L50.700|
000268  f7fffffe          BL       strcpy
00026c  f04f0100          MOV      r1,#0                 ;6580
000270  4811              LDR      r0,|L50.696|
000272  f8d0014c          LDR      r0,[r0,#0x14c]        ;6580
000276  eb000080          ADD      r0,r0,r0,LSL #2       ;6580
00027a  4a11              LDR      r2,|L50.704|
00027c  eb021000          ADD      r0,r2,r0,LSL #4       ;6580
000280  7001              STRB     r1,[r0,#0]            ;6580
000282  f04f0010          MOV      r0,#0x10              ;6580
000286  e716              B        |L50.182|
                  |L50.648|
000288  f50a7064          ADD      r0,r10,#0x390         ;6582
00028c  c0c0              STM      r0!,{r6,r7}           ;6582
00028e  f50a7066          ADD      r0,r10,#0x398         ;6583
000292  c030              STM      r0!,{r4,r5}           ;6583
000294  f50a4030          ADD      r0,r10,#0xb000        ;6584
000298  f8c0917c          STR      r9,[r0,#0x17c]        ;6584
00029c  f8c08178          STR      r8,[r0,#0x178]        ;6584
0002a0  f50a4230          ADD      r2,r10,#0xb000        ;6585
0002a4  e9dd101e          LDRD     r1,r0,[sp,#0x78]      ;6585
0002a8  f8c21180          STR      r1,[r2,#0x180]        ;6585
0002ac  f8c20184          STR      r0,[r2,#0x184]        ;6585
0002b0  f04f0000          MOV      r0,#0                 ;6586
0002b4  e6ff              B        |L50.182|
;;;6588   
                          ENDP

0002b6  0000              DCW      0x0000
                  |L50.696|
                          DCD      _setup+0xc000
                  |L50.700|
                          DCD      |symbol_number.472|
                  |L50.704|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_straight_comp2||, CODE, READONLY, ALIGN=2

                  convert_straight_comp2 PROC
;;;6660   
;;;6661       static int convert_straight_comp2(            /* ARGUMENTS                       */
000000  e92d4fff          PUSH     {r0-r11,lr}
;;;6662       int move,                                     /* either G_0 or G_1                         */
;;;6663       block_pointer block,                          /* pointer to a block of RS274 instructions  */
;;;6664       setup_pointer settings,                       /* pointer to machine settings               */
;;;6665       double px,                                    /* X coordinate of programmed end point      */
;;;6666       double py,                                    /* Y coordinate of programmed end point      */
;;;6667       double end_z                                  /* Z coordinate of end point                 */
;;;6668   #ifdef AA
;;;6669       , double AA_end                               /* A coordinate of end point           *//*AA*/
;;;6670   #endif
;;;6671   #ifdef BB
;;;6672       , double BB_end                               /* B coordinate of end point           *//*BB*/
;;;6673   #endif
;;;6674   #ifdef CC
;;;6675       , double CC_end                               /* C coordinate of end point           *//*CC*/
;;;6676   #endif
;;;6677       )
;;;6678       {
000004  b0a3              SUB      sp,sp,#0x8c
000006  4692              MOV      r10,r2
000008  e9dd4534          LDRD     r4,r5,[sp,#0xd0]
;;;6679           static char name[] SET_TO "convert_straight_comp2";
;;;6680           double alpha;
;;;6681           double beta;
;;;6682           double end_x;                             /* x-coordinate of actual end point */
;;;6683           double end_y;                             /* y-coordinate of actual end point */
;;;6684           double gamma;
;;;6685           double mid_x;                             /* x-coordinate of end of added arc, if needed */
;;;6686           double mid_y;                             /* y-coordinate of end of added arc, if needed */
;;;6687           double radius;
;;;6688           int side;
;;;6689      /* radians, testing corners */
;;;6690           double small SET_TO TOLERANCE_CONCAVE_CORNER;
00000c  49fe              LDR      r1,|L51.1032|
00000e  48ff              LDR      r0,|L51.1036|
000010  e9cd1014          STRD     r1,r0,[sp,#0x50]
;;;6691           double start_x, start_y;                  /* programmed beginning point */
;;;6692           double theta;
;;;6693   
;;;6694           start_x SET_TO settings->program_x;
000014  f50a4130          ADD      r1,r10,#0xb000
000018  f50171bc          ADD      r1,r1,#0x178
00001c  c903              LDM      r1,{r0,r1}
00001e  e9cd0112          STRD     r0,r1,[sp,#0x48]
;;;6695           start_y SET_TO settings->program_y;
000022  f50a4030          ADD      r0,r10,#0xb000
000026  f50070c0          ADD      r0,r0,#0x180
00002a  c803              LDM      r0,{r0,r1}
00002c  e9cd0110          STRD     r0,r1,[sp,#0x40]
;;;6696           if ((py IS start_y) AND (px IS start_x))  /* no XY motion */
000030  e9dd2310          LDRD     r2,r3,[sp,#0x40]
000034  e9dd0132          LDRD     r0,r1,[sp,#0xc8]
000038  f7fffffe          BL       __aeabi_cdcmpeq
00003c  d15c              BNE      |L51.248|
00003e  e9dd2312          LDRD     r2,r3,[sp,#0x48]
000042  e9dd0130          LDRD     r0,r1,[sp,#0xc0]
000046  f7fffffe          BL       __aeabi_cdcmpeq
00004a  d155              BNE      |L51.248|
;;;6697           {
;;;6698               end_x SET_TO settings->current_x;
00004c  f50a7664          ADD      r6,r10,#0x390
000050  cec0              LDM      r6,{r6,r7}
;;;6699               end_y SET_TO settings->current_y;
000052  f8da939c          LDR      r9,[r10,#0x39c]
000056  f8da8398          LDR      r8,[r10,#0x398]
;;;6700               if (move IS G_0)
00005a  9823              LDR      r0,[sp,#0x8c]
00005c  b940              CBNZ     r0,|L51.112|
;;;6701                   STRAIGHT_TRAVERSE(end_x, end_y, end_z
00005e  4642              MOV      r2,r8
000060  464b              MOV      r3,r9
000062  4630              MOV      r0,r6
000064  4639              MOV      r1,r7
000066  e9cd4500          STRD     r4,r5,[sp,#0]
00006a  f7fffffe          BL       STRAIGHT_TRAVERSE
00006e  e238              B        |L51.1250|
                  |L51.112|
;;;6702           #ifdef AA
;;;6703                       ,             AA_end
;;;6704           #else
;;;6705           #ifdef ALL_AXES
;;;6706                       , 0
;;;6707           #endif
;;;6708           #endif
;;;6709           #ifdef BB
;;;6710                       ,  BB_end
;;;6711           #else
;;;6712           #ifdef ALL_AXES
;;;6713                       , 0
;;;6714           #endif
;;;6715           #endif
;;;6716           #ifdef CC
;;;6717                       ,  CC_end
;;;6718           #else
;;;6719           #ifdef ALL_AXES
;;;6720                       , 0
;;;6721           #endif
;;;6722           #endif
;;;6723                       );
;;;6724               else if (move IS G_1)
000070  9823              LDR      r0,[sp,#0x8c]
000072  280a              CMP      r0,#0xa
000074  d117              BNE      |L51.166|
;;;6725               {
;;;6726                   if (settings->feed_mode IS INVERSE_TIME)
000076  f8da03fc          LDR      r0,[r10,#0x3fc]
00007a  2801              CMP      r0,#1
00007c  d10a              BNE      |L51.148|
;;;6727                       inverse_time_rate_straight
00007e  9824              LDR      r0,[sp,#0x90]
000080  4642              MOV      r2,r8
000082  464b              MOV      r3,r9
000084  e9cd0a02          STRD     r0,r10,[sp,#8]
000088  e9cd4500          STRD     r4,r5,[sp,#0]
00008c  4630              MOV      r0,r6
00008e  4639              MOV      r1,r7
000090  f7fffffe          BL       inverse_time_rate_straight
                  |L51.148|
;;;6728                           (end_x, end_y, end_z
;;;6729           #ifdef AA
;;;6730                           , AA_end
;;;6731           #endif
;;;6732   
;;;6733           #ifdef BB
;;;6734                           , BB_end
;;;6735           #endif
;;;6736   
;;;6737           #ifdef CC
;;;6738                           , CC_end
;;;6739           #endif
;;;6740                           , block, settings);
;;;6741                   STRAIGHT_FEED(end_x, end_y, end_z
000094  4642              MOV      r2,r8
000096  464b              MOV      r3,r9
000098  4630              MOV      r0,r6
00009a  4639              MOV      r1,r7
00009c  e9cd4500          STRD     r4,r5,[sp,#0]
0000a0  f7fffffe          BL       STRAIGHT_FEED
0000a4  e21d              B        |L51.1250|
                  |L51.166|
;;;6742       #ifdef AA
;;;6743                       ,           AA_end
;;;6744       #else
;;;6745       #ifdef ALL_AXES
;;;6746                       , 0
;;;6747       #endif
;;;6748       #endif
;;;6749       #ifdef BB
;;;6750                       ,  BB_end
;;;6751       #else
;;;6752       #ifdef ALL_AXES
;;;6753                       , 0
;;;6754       #endif
;;;6755       #endif
;;;6756       #ifdef CC
;;;6757                       ,  CC_end
;;;6758       #else
;;;6759       #ifdef ALL_AXES
;;;6760                       , 0
;;;6761       #endif
;;;6762       #endif
;;;6763                       );
;;;6764               }
;;;6765               else
;;;6766                   ERM(NCE_BUG_CODE_NOT_G0_OR_G1);
0000a6  f04f0100          MOV      r1,#0
0000aa  48d9              LDR      r0,|L51.1040|
0000ac  f8c0114c          STR      r1,[r0,#0x14c]
0000b0  4601              MOV      r1,r0
0000b2  f8d1314c          LDR      r3,[r1,#0x14c]
0000b6  f8d1114c          LDR      r1,[r1,#0x14c]
0000ba  f1010101          ADD      r1,r1,#1
0000be  4602              MOV      r2,r0
0000c0  f8c2114c          STR      r1,[r2,#0x14c]
0000c4  eb030183          ADD      r1,r3,r3,LSL #2
0000c8  f6a06254          SUB      r2,r0,#0xe54
0000cc  eb021101          ADD      r1,r2,r1,LSL #4
0000d0  4608              MOV      r0,r1
0000d2  49d0              LDR      r1,|L51.1044|
0000d4  f7fffffe          BL       strcpy
0000d8  f04f0100          MOV      r1,#0
0000dc  48cc              LDR      r0,|L51.1040|
0000de  f8d0014c          LDR      r0,[r0,#0x14c]
0000e2  eb000080          ADD      r0,r0,r0,LSL #2
0000e6  4acc              LDR      r2,|L51.1048|
0000e8  eb021000          ADD      r0,r2,r0,LSL #4
0000ec  7001              STRB     r1,[r0,#0]
0000ee  f04f0010          MOV      r0,#0x10
                  |L51.242|
;;;6767           }
;;;6768           else
;;;6769           {
;;;6770               side SET_TO settings->cutter_comp_side;
;;;6771      /* will always be positive */
;;;6772               radius SET_TO settings->cutter_comp_radius;
;;;6773               theta SET_TO atan2(settings->current_y - start_y,
;;;6774                   settings->current_x - start_x);
;;;6775               alpha SET_TO atan2(py - start_y, px - start_x);
;;;6776   
;;;6777               if (side IS LEFT)
;;;6778               {
;;;6779                   if (theta < alpha)
;;;6780                       theta SET_TO (theta + TWO_PI);
;;;6781                   beta SET_TO ((theta - alpha) - PI2);
;;;6782                   gamma SET_TO PI2;
;;;6783               }
;;;6784               else if (side IS RIGHT)
;;;6785               {
;;;6786                   if (alpha < theta)
;;;6787                       alpha SET_TO (alpha + TWO_PI);
;;;6788                   beta SET_TO ((alpha - theta) - PI2);
;;;6789                   gamma SET_TO -PI2;
;;;6790               }
;;;6791               else
;;;6792                   ERM(NCE_BUG_SIDE_NOT_RIGHT_OR_LEFT);
;;;6793               end_x SET_TO (px + (radius * cos(alpha + gamma)));
;;;6794               end_y SET_TO (py + (radius * sin(alpha + gamma)));
;;;6795               mid_x SET_TO (start_x + (radius * cos(alpha + gamma)));
;;;6796               mid_y SET_TO (start_y + (radius * sin(alpha + gamma)));
;;;6797   
;;;6798               CHK(((beta < -small) OR (beta > (PI + small))),
;;;6799                   NCE_CONCAVE_CORNER_WITH_CUTTER_RADIUS_COMP);
;;;6800               if (move IS G_0)
;;;6801                   STRAIGHT_TRAVERSE(end_x, end_y, end_z
;;;6802           #ifdef AA
;;;6803                       ,             AA_end
;;;6804           #else
;;;6805           #ifdef ALL_AXES
;;;6806                       , 0
;;;6807           #endif
;;;6808           #endif
;;;6809           #ifdef BB
;;;6810                       ,  BB_end
;;;6811           #else
;;;6812           #ifdef ALL_AXES
;;;6813                       , 0
;;;6814           #endif
;;;6815           #endif
;;;6816           #ifdef CC
;;;6817                       ,  CC_end
;;;6818           #else
;;;6819           #ifdef ALL_AXES
;;;6820                       , 0
;;;6821           #endif
;;;6822           #endif
;;;6823                       );
;;;6824               else if (move IS G_1)
;;;6825               {
;;;6826                   if (beta > small)                 /* ARC NEEDED */
;;;6827                   {
;;;6828                       if (settings->feed_mode IS INVERSE_TIME)
;;;6829                           inverse_time_rate_as(start_x, start_y, (side IS LEFT) ? -1 : 1,
;;;6830                           mid_x, mid_y, end_x, end_y,
;;;6831                           end_z
;;;6832       #ifdef AA
;;;6833                           , AA_end
;;;6834       #endif
;;;6835   
;;;6836       #ifdef BB
;;;6837                           , BB_end
;;;6838       #endif
;;;6839   
;;;6840       #ifdef CC
;;;6841                           , CC_end
;;;6842       #endif
;;;6843                           ,
;;;6844                           block, settings);
;;;6845                       ARC_FEED(mid_x,mid_y,start_x, start_y,((side IS LEFT) ? -1 : 1),
;;;6846                           settings->current_z
;;;6847       #ifdef AA
;;;6848                           , AA_end
;;;6849       #else
;;;6850       #ifdef ALL_AXES
;;;6851                           , 0
;;;6852       #endif
;;;6853       #endif
;;;6854       #ifdef BB
;;;6855                           , BB_end
;;;6856       #else
;;;6857       #ifdef ALL_AXES
;;;6858                           , 0
;;;6859       #endif
;;;6860       #endif
;;;6861       #ifdef CC
;;;6862                           , CC_end
;;;6863       #else
;;;6864       #ifdef ALL_AXES
;;;6865                           , 0
;;;6866       #endif
;;;6867       #endif
;;;6868                           );
;;;6869                       STRAIGHT_FEED(end_x, end_y, end_z
;;;6870       #ifdef AA
;;;6871                           ,               AA_end
;;;6872       #else
;;;6873       #ifdef ALL_AXES
;;;6874                           , 0
;;;6875       #endif
;;;6876       #endif
;;;6877       #ifdef BB
;;;6878                           ,  BB_end
;;;6879       #else
;;;6880       #ifdef ALL_AXES
;;;6881                           , 0
;;;6882       #endif
;;;6883       #endif
;;;6884       #ifdef CC
;;;6885                           ,  CC_end
;;;6886       #else
;;;6887       #ifdef ALL_AXES
;;;6888                           , 0
;;;6889       #endif
;;;6890       #endif
;;;6891                           );
;;;6892                   }
;;;6893                   else
;;;6894                   {
;;;6895                       if (settings->feed_mode IS INVERSE_TIME)
;;;6896                           inverse_time_rate_straight
;;;6897                               (end_x,end_y,end_z
;;;6898           #ifdef AA
;;;6899                               , AA_end
;;;6900           #endif
;;;6901   
;;;6902           #ifdef BB
;;;6903                               , BB_end
;;;6904           #endif
;;;6905   
;;;6906           #ifdef CC
;;;6907                               , CC_end
;;;6908           #endif
;;;6909                               , block, settings);
;;;6910                       STRAIGHT_FEED(end_x, end_y, end_z
;;;6911       #ifdef AA
;;;6912                           ,               AA_end
;;;6913       #else
;;;6914       #ifdef ALL_AXES
;;;6915                           , 0
;;;6916       #endif
;;;6917       #endif
;;;6918       #ifdef BB
;;;6919                           ,  BB_end
;;;6920       #else
;;;6921       #ifdef ALL_AXES
;;;6922                           , 0
;;;6923       #endif
;;;6924       #endif
;;;6925       #ifdef CC
;;;6926                           ,  CC_end
;;;6927       #else
;;;6928       #ifdef ALL_AXES
;;;6929                           , 0
;;;6930       #endif
;;;6931       #endif
;;;6932                           );
;;;6933                   }
;;;6934               }
;;;6935               else
;;;6936                   ERM(NCE_BUG_CODE_NOT_G0_OR_G1);
;;;6937           }
;;;6938   
;;;6939           settings->current_x SET_TO end_x;
;;;6940           settings->current_y SET_TO end_y;
;;;6941           settings->program_x SET_TO px;
;;;6942           settings->program_y SET_TO py;
;;;6943           return RS274NGC_OK;
;;;6944       }
0000f2  b027              ADD      sp,sp,#0x9c
0000f4  e8bd8ff0          POP      {r4-r11,pc}
                  |L51.248|
0000f8  f8dab3b0          LDR      r11,[r10,#0x3b0]      ;6770
0000fc  f50a706a          ADD      r0,r10,#0x3a8         ;6772
000100  c803              LDM      r0,{r0,r1}            ;6772
000102  e9cd0116          STRD     r0,r1,[sp,#0x58]      ;6772
000106  f50a7064          ADD      r0,r10,#0x390         ;6773
00010a  c803              LDM      r0,{r0,r1}            ;6773
00010c  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6773
000110  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;6773
000114  f7fffffe          BL       __aeabi_dsub
000118  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6773
00011c  f50a7066          ADD      r0,r10,#0x398         ;6773
000120  c803              LDM      r0,{r0,r1}            ;6773
000122  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6773
000126  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;6773
00012a  f7fffffe          BL       __aeabi_dsub
00012e  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6773
000132  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;6773
000136  f7fffffe          BL       atan2
00013a  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;6773
00013e  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;6775
000142  e9dd0130          LDRD     r0,r1,[sp,#0xc0]      ;6775
000146  f7fffffe          BL       __aeabi_dsub
00014a  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6775
00014e  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;6775
000152  e9dd0132          LDRD     r0,r1,[sp,#0xc8]      ;6775
000156  f7fffffe          BL       __aeabi_dsub
00015a  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6775
00015e  e9dd230c          LDRD     r2,r3,[sp,#0x30]      ;6775
000162  f7fffffe          BL       atan2
000166  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;6775
00016a  f1bb0f02          CMP      r11,#2                ;6777
00016e  d121              BNE      |L51.436|
000170  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;6779
000174  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;6779
000178  f7fffffe          BL       __aeabi_cdcmple
00017c  d207              BCS      |L51.398|
00017e  4aa7              LDR      r2,|L51.1052|
000180  4ba7              LDR      r3,|L51.1056|
000182  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;6780
000186  f7fffffe          BL       __aeabi_dadd
00018a  e9cd010e          STRD     r0,r1,[sp,#0x38]      ;6780
                  |L51.398|
00018e  e9dd2320          LDRD     r2,r3,[sp,#0x80]      ;6781
000192  e9dd010e          LDRD     r0,r1,[sp,#0x38]      ;6781
000196  f7fffffe          BL       __aeabi_dsub
00019a  4aa0              LDR      r2,|L51.1052|
00019c  4ba1              LDR      r3,|L51.1060|
00019e  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6781
0001a2  f7fffffe          BL       __aeabi_dsub
0001a6  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;6781
0001aa  489c              LDR      r0,|L51.1052|
0001ac  499d              LDR      r1,|L51.1060|
0001ae  e9cd011c          STRD     r0,r1,[sp,#0x70]      ;6782
0001b2  e049              B        |L51.584|
                  |L51.436|
0001b4  f1bb0f01          CMP      r11,#1                ;6784
0001b8  d121              BNE      |L51.510|
0001ba  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;6786
0001be  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6786
0001c2  f7fffffe          BL       __aeabi_cdcmple
0001c6  d207              BCS      |L51.472|
0001c8  4a94              LDR      r2,|L51.1052|
0001ca  4b95              LDR      r3,|L51.1056|
0001cc  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6787
0001d0  f7fffffe          BL       __aeabi_dadd
0001d4  e9cd0120          STRD     r0,r1,[sp,#0x80]      ;6787
                  |L51.472|
0001d8  e9dd230e          LDRD     r2,r3,[sp,#0x38]      ;6788
0001dc  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6788
0001e0  f7fffffe          BL       __aeabi_dsub
0001e4  4a8d              LDR      r2,|L51.1052|
0001e6  4b8f              LDR      r3,|L51.1060|
0001e8  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6788
0001ec  f7fffffe          BL       __aeabi_dsub
0001f0  e9cd011e          STRD     r0,r1,[sp,#0x78]      ;6788
0001f4  4989              LDR      r1,|L51.1052|
0001f6  488c              LDR      r0,|L51.1064|
0001f8  e9cd101c          STRD     r1,r0,[sp,#0x70]      ;6789
0001fc  e024              B        |L51.584|
                  |L51.510|
0001fe  f04f0100          MOV      r1,#0                 ;6792
000202  4883              LDR      r0,|L51.1040|
000204  f8c0114c          STR      r1,[r0,#0x14c]        ;6792
000208  4601              MOV      r1,r0                 ;6792
00020a  f8d1314c          LDR      r3,[r1,#0x14c]        ;6792
00020e  f8d1214c          LDR      r2,[r1,#0x14c]        ;6792
000212  f1020201          ADD      r2,r2,#1              ;6792
000216  f8c1214c          STR      r2,[r1,#0x14c]        ;6792
00021a  eb030183          ADD      r1,r3,r3,LSL #2       ;6792
00021e  4a7e              LDR      r2,|L51.1048|
000220  eb021101          ADD      r1,r2,r1,LSL #4       ;6792
000224  4608              MOV      r0,r1                 ;6792
000226  497b              LDR      r1,|L51.1044|
000228  f7fffffe          BL       strcpy
00022c  f04f0100          MOV      r1,#0                 ;6792
000230  4877              LDR      r0,|L51.1040|
000232  f8d0014c          LDR      r0,[r0,#0x14c]        ;6792
000236  eb000080          ADD      r0,r0,r0,LSL #2       ;6792
00023a  4a77              LDR      r2,|L51.1048|
00023c  eb021000          ADD      r0,r2,r0,LSL #4       ;6792
000240  7001              STRB     r1,[r0,#0]            ;6792
000242  f04f0023          MOV      r0,#0x23              ;6792
000246  e754              B        |L51.242|
                  |L51.584|
000248  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;6793
00024c  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6793
000250  f7fffffe          BL       __aeabi_dadd
000254  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6793
000258  f7fffffe          BL       ||cos||
00025c  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6793
000260  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;6793
000264  f7fffffe          BL       __aeabi_dmul
000268  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6793
00026c  e9dd2330          LDRD     r2,r3,[sp,#0xc0]      ;6793
000270  f7fffffe          BL       __aeabi_dadd
000274  4606              MOV      r6,r0                 ;6793
000276  460f              MOV      r7,r1                 ;6793
000278  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;6794
00027c  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6794
000280  f7fffffe          BL       __aeabi_dadd
000284  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6794
000288  f7fffffe          BL       ||sin||
00028c  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6794
000290  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;6794
000294  f7fffffe          BL       __aeabi_dmul
000298  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6794
00029c  e9dd2332          LDRD     r2,r3,[sp,#0xc8]      ;6794
0002a0  f7fffffe          BL       __aeabi_dadd
0002a4  4680              MOV      r8,r0                 ;6794
0002a6  4689              MOV      r9,r1                 ;6794
0002a8  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;6795
0002ac  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6795
0002b0  f7fffffe          BL       __aeabi_dadd
0002b4  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6795
0002b8  f7fffffe          BL       ||cos||
0002bc  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6795
0002c0  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;6795
0002c4  f7fffffe          BL       __aeabi_dmul
0002c8  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6795
0002cc  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;6795
0002d0  f7fffffe          BL       __aeabi_dadd
0002d4  e9cd011a          STRD     r0,r1,[sp,#0x68]      ;6795
0002d8  e9dd231c          LDRD     r2,r3,[sp,#0x70]      ;6796
0002dc  e9dd0120          LDRD     r0,r1,[sp,#0x80]      ;6796
0002e0  f7fffffe          BL       __aeabi_dadd
0002e4  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;6796
0002e8  f7fffffe          BL       ||sin||
0002ec  e9cd010a          STRD     r0,r1,[sp,#0x28]      ;6796
0002f0  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;6796
0002f4  f7fffffe          BL       __aeabi_dmul
0002f8  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6796
0002fc  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;6796
000300  f7fffffe          BL       __aeabi_dadd
000304  e9cd0118          STRD     r0,r1,[sp,#0x60]      ;6796
000308  e9dd0114          LDRD     r0,r1,[sp,#0x50]      ;6798
00030c  f0814100          EOR      r1,r1,#0x80000000     ;6798
000310  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6798
000314  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6798
000318  f7fffffe          BL       __aeabi_cdrcmple
00031c  d30c              BCC      |L51.824|
00031e  483f              LDR      r0,|L51.1052|
000320  4942              LDR      r1,|L51.1068|
000322  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;6798
000326  f7fffffe          BL       __aeabi_dadd
00032a  e9cd010c          STRD     r0,r1,[sp,#0x30]      ;6798
00032e  e9dd231e          LDRD     r2,r3,[sp,#0x78]      ;6798
000332  f7fffffe          BL       __aeabi_cdcmple
000336  d225              BCS      |L51.900|
                  |L51.824|
000338  f04f0100          MOV      r1,#0                 ;6798
00033c  4834              LDR      r0,|L51.1040|
00033e  f8c0114c          STR      r1,[r0,#0x14c]        ;6798
000342  4601              MOV      r1,r0                 ;6798
000344  f8d1314c          LDR      r3,[r1,#0x14c]        ;6798
000348  f8d1114c          LDR      r1,[r1,#0x14c]        ;6798
00034c  f1010101          ADD      r1,r1,#1              ;6798
000350  4602              MOV      r2,r0                 ;6798
000352  f8c2114c          STR      r1,[r2,#0x14c]        ;6798
000356  eb030183          ADD      r1,r3,r3,LSL #2       ;6798
00035a  4a2f              LDR      r2,|L51.1048|
00035c  eb021101          ADD      r1,r2,r1,LSL #4       ;6798
000360  4608              MOV      r0,r1                 ;6798
000362  492c              LDR      r1,|L51.1044|
000364  f7fffffe          BL       strcpy
000368  f04f0100          MOV      r1,#0                 ;6798
00036c  4828              LDR      r0,|L51.1040|
00036e  f8d0014c          LDR      r0,[r0,#0x14c]        ;6798
000372  eb000080          ADD      r0,r0,r0,LSL #2       ;6798
000376  4a28              LDR      r2,|L51.1048|
000378  eb021000          ADD      r0,r2,r0,LSL #4       ;6798
00037c  7001              STRB     r1,[r0,#0]            ;6798
00037e  f04f0043          MOV      r0,#0x43              ;6798
000382  e6b6              B        |L51.242|
                  |L51.900|
000384  9823              LDR      r0,[sp,#0x8c]         ;6800
000386  b940              CBNZ     r0,|L51.922|
000388  4642              MOV      r2,r8                 ;6801
00038a  464b              MOV      r3,r9                 ;6801
00038c  4630              MOV      r0,r6                 ;6801
00038e  4639              MOV      r1,r7                 ;6801
000390  e9cd4500          STRD     r4,r5,[sp,#0]         ;6801
000394  f7fffffe          BL       STRAIGHT_TRAVERSE
000398  e0a3              B        |L51.1250|
                  |L51.922|
00039a  9823              LDR      r0,[sp,#0x8c]         ;6824
00039c  280a              CMP      r0,#0xa               ;6824
00039e  d179              BNE      |L51.1172|
0003a0  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;6826
0003a4  e9dd011e          LDRD     r0,r1,[sp,#0x78]      ;6826
0003a8  f7fffffe          BL       __aeabi_cdrcmple
0003ac  d259              BCS      |L51.1122|
0003ae  f8da03fc          LDR      r0,[r10,#0x3fc]       ;6828
0003b2  2801              CMP      r0,#1                 ;6828
0003b4  d11d              BNE      |L51.1010|
0003b6  9824              LDR      r0,[sp,#0x90]         ;6829
0003b8  e9cd0a0c          STRD     r0,r10,[sp,#0x30]     ;6829
0003bc  a806              ADD      r0,sp,#0x18           ;6829
0003be  e8a003c0          STM      r0!,{r6-r9}           ;6829
0003c2  e9cd450a          STRD     r4,r5,[sp,#0x28]      ;6829
0003c6  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;6829
0003ca  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;6829
0003ce  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;6829
0003d2  e9cd0102          STRD     r0,r1,[sp,#8]         ;6829
0003d6  f1bb0f02          CMP      r11,#2                ;6829
0003da  d102              BNE      |L51.994|
0003dc  f04f30ff          MOV      r0,#0xffffffff        ;6829
0003e0  e000              B        |L51.996|
                  |L51.994|
0003e2  2001              MOVS     r0,#1                 ;6829
                  |L51.996|
0003e4  9000              STR      r0,[sp,#0]            ;6829
0003e6  e9dd2310          LDRD     r2,r3,[sp,#0x40]      ;6829
0003ea  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;6829
0003ee  f7fffffe          BL       inverse_time_rate_as
                  |L51.1010|
0003f2  f50a7068          ADD      r0,r10,#0x3a0         ;6845
0003f6  c803              LDM      r0,{r0,r1}            ;6845
0003f8  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;6845
0003fc  f1bb0f02          CMP      r11,#2                ;6845
000400  d116              BNE      |L51.1072|
000402  f04f30ff          MOV      r0,#0xffffffff        ;6845
000406  e014              B        |L51.1074|
                  |L51.1032|
                          DCD      0x47ae147b
                  |L51.1036|
                          DCD      0x3f847ae1
                  |L51.1040|
                          DCD      _setup+0xc000
                  |L51.1044|
                          DCD      |symbol_number.473|
                  |L51.1048|
                          DCD      _setup+0xb1ac
                  |L51.1052|
                          DCD      0x54442d18
                  |L51.1056|
                          DCD      0x401921fb
                  |L51.1060|
                          DCD      0x3ff921fb
                  |L51.1064|
                          DCD      0xbff921fb
                  |L51.1068|
                          DCD      0x400921fb
                  |L51.1072|
000430  2001              MOVS     r0,#1                 ;6845
                  |L51.1074|
000432  9004              STR      r0,[sp,#0x10]         ;6845
000434  e9dd0110          LDRD     r0,r1,[sp,#0x40]      ;6845
000438  e9cd0102          STRD     r0,r1,[sp,#8]         ;6845
00043c  e9dd0112          LDRD     r0,r1,[sp,#0x48]      ;6845
000440  e9cd0100          STRD     r0,r1,[sp,#0]         ;6845
000444  e9dd2318          LDRD     r2,r3,[sp,#0x60]      ;6845
000448  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;6845
00044c  f7fffffe          BL       ARC_FEED
000450  4642              MOV      r2,r8                 ;6869
000452  464b              MOV      r3,r9                 ;6869
000454  4630              MOV      r0,r6                 ;6869
000456  4639              MOV      r1,r7                 ;6869
000458  e9cd4500          STRD     r4,r5,[sp,#0]         ;6869
00045c  f7fffffe          BL       STRAIGHT_FEED
000460  e03f              B        |L51.1250|
                  |L51.1122|
000462  f8da03fc          LDR      r0,[r10,#0x3fc]       ;6895
000466  2801              CMP      r0,#1                 ;6895
000468  d10a              BNE      |L51.1152|
00046a  9824              LDR      r0,[sp,#0x90]         ;6896
00046c  4642              MOV      r2,r8                 ;6896
00046e  464b              MOV      r3,r9                 ;6896
000470  e9cd0a02          STRD     r0,r10,[sp,#8]        ;6896
000474  e9cd4500          STRD     r4,r5,[sp,#0]         ;6896
000478  4630              MOV      r0,r6                 ;6896
00047a  4639              MOV      r1,r7                 ;6896
00047c  f7fffffe          BL       inverse_time_rate_straight
                  |L51.1152|
000480  4642              MOV      r2,r8                 ;6910
000482  464b              MOV      r3,r9                 ;6910
000484  4630              MOV      r0,r6                 ;6910
000486  4639              MOV      r1,r7                 ;6910
000488  e9cd4500          STRD     r4,r5,[sp,#0]         ;6910
00048c  f7fffffe          BL       STRAIGHT_FEED
000490  e027              B        |L51.1250|
000492  e7ff              B        |L51.1172|
                  |L51.1172|
000494  f04f0100          MOV      r1,#0                 ;6936
000498  481e              LDR      r0,|L51.1300|
00049a  f8c0114c          STR      r1,[r0,#0x14c]        ;6936
00049e  4601              MOV      r1,r0                 ;6936
0004a0  f8d1314c          LDR      r3,[r1,#0x14c]        ;6936
0004a4  f8d1114c          LDR      r1,[r1,#0x14c]        ;6936
0004a8  f1010101          ADD      r1,r1,#1              ;6936
0004ac  4602              MOV      r2,r0                 ;6936
0004ae  f8c2114c          STR      r1,[r2,#0x14c]        ;6936
0004b2  eb030183          ADD      r1,r3,r3,LSL #2       ;6936
0004b6  f6a06254          SUB      r2,r0,#0xe54          ;6936
0004ba  eb021101          ADD      r1,r2,r1,LSL #4       ;6936
0004be  4608              MOV      r0,r1                 ;6936
0004c0  4915              LDR      r1,|L51.1304|
0004c2  f7fffffe          BL       strcpy
0004c6  f04f0100          MOV      r1,#0                 ;6936
0004ca  4812              LDR      r0,|L51.1300|
0004cc  f8d0014c          LDR      r0,[r0,#0x14c]        ;6936
0004d0  eb000080          ADD      r0,r0,r0,LSL #2       ;6936
0004d4  4a11              LDR      r2,|L51.1308|
0004d6  eb021000          ADD      r0,r2,r0,LSL #4       ;6936
0004da  7001              STRB     r1,[r0,#0]            ;6936
0004dc  f04f0010          MOV      r0,#0x10              ;6936
0004e0  e607              B        |L51.242|
                  |L51.1250|
0004e2  f50a7064          ADD      r0,r10,#0x390         ;6939
0004e6  c0c0              STM      r0!,{r6,r7}           ;6939
0004e8  f8ca939c          STR      r9,[r10,#0x39c]       ;6940
0004ec  f8ca8398          STR      r8,[r10,#0x398]       ;6940
0004f0  f50a4230          ADD      r2,r10,#0xb000        ;6941
0004f4  e9dd1030          LDRD     r1,r0,[sp,#0xc0]      ;6941
0004f8  f8c21178          STR      r1,[r2,#0x178]        ;6941
0004fc  f8c2017c          STR      r0,[r2,#0x17c]        ;6941
000500  e9dd1032          LDRD     r1,r0,[sp,#0xc8]      ;6942
000504  f8c21180          STR      r1,[r2,#0x180]        ;6942
000508  f8c20184          STR      r0,[r2,#0x184]        ;6942
00050c  f04f0000          MOV      r0,#0                 ;6943
000510  e5ef              B        |L51.242|
;;;6945   
                          ENDP

000512  0000              DCW      0x0000
                  |L51.1300|
                          DCD      _setup+0xc000
                  |L51.1304|
                          DCD      |symbol_number.473|
                  |L51.1308|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_tool_change||, CODE, READONLY, ALIGN=1

                  convert_tool_change PROC
;;;7004   
;;;7005       static int convert_tool_change(               /* ARGUMENTS                   */
000000  b510              PUSH     {r4,lr}
;;;7006       setup_pointer settings)                       /* pointer to machine settings */
;;;7007       {
000002  4604              MOV      r4,r0
;;;7008   //        static char name[] SET_TO "convert_tool_change";
;;;7009   
;;;7010           CHANGE_TOOL(settings->selected_tool_slot);
000004  f24b118c          MOV      r1,#0xb18c
000008  5909              LDR      r1,[r1,r4]
00000a  4608              MOV      r0,r1
00000c  f7fffffe          BL       CHANGE_TOOL
;;;7011           settings->current_slot SET_TO settings->selected_tool_slot;
000010  f24b108c          MOV      r0,#0xb18c
000014  5900              LDR      r0,[r0,r4]
000016  f8c4038c          STR      r0,[r4,#0x38c]
;;;7012           settings->spindle_turning SET_TO CANON_STOPPED;
00001a  f04f0101          MOV      r1,#1
00001e  f24b10a8          MOV      r0,#0xb1a8
000022  5101              STR      r1,[r0,r4]
;;;7013   
;;;7014           return RS274NGC_OK;
000024  f04f0000          MOV      r0,#0
;;;7015       }
000028  bd10              POP      {r4,pc}
;;;7016   
                          ENDP


                          AREA ||i.convert_tool_length_offset||, CODE, READONLY, ALIGN=2

                  convert_tool_length_offset PROC
;;;7047   
;;;7048       static int convert_tool_length_offset(        /* ARGUMENTS                      */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;7049       int g_code,                                   /* g_code being executed (must be G_43 or G_49) */
;;;7050       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;7051       setup_pointer settings)                       /* pointer to machine settings                  */
;;;7052       {
000004  4682              MOV      r10,r0
000006  468b              MOV      r11,r1
000008  4690              MOV      r8,r2
;;;7053           static char name[] SET_TO "convert_tool_length_offset";
;;;7054           int index;
;;;7055           double offset;
;;;7056   
;;;7057           if (g_code IS G_49)
00000a  f5ba7ff5          CMP      r10,#0x1ea
00000e  d122              BNE      |L53.86|
;;;7058           {
;;;7059               USE_TOOL_LENGTH_OFFSET(0.0);
000010  2000              MOVS     r0,#0
000012  4601              MOV      r1,r0
000014  f7fffffe          BL       USE_TOOL_LENGTH_OFFSET
;;;7060               settings->current_z SET_TO (settings->current_z +
000018  f5084140          ADD      r1,r8,#0xc000
00001c  f50171a8          ADD      r1,r1,#0x150
000020  c903              LDM      r1,{r0,r1}
000022  4606              MOV      r6,r0
000024  460f              MOV      r7,r1
000026  f5087068          ADD      r0,r8,#0x3a0
00002a  c803              LDM      r0,{r0,r1}
00002c  4632              MOV      r2,r6
00002e  463b              MOV      r3,r7
000030  e9cd0102          STRD     r0,r1,[sp,#8]
000034  f7fffffe          BL       __aeabi_dadd
000038  f5087268          ADD      r2,r8,#0x3a0
00003c  c203              STM      r2!,{r0,r1}
;;;7061                   settings->tool_length_offset);
;;;7062               settings->tool_length_offset SET_TO 0.0;
00003e  f04f0200          MOV      r2,#0
000042  f5084140          ADD      r1,r8,#0xc000
000046  f8c12150          STR      r2,[r1,#0x150]
00004a  f8c12154          STR      r2,[r1,#0x154]
;;;7063               settings->length_offset_index SET_TO 0;
00004e  4610              MOV      r0,r2
000050  f8c80518          STR      r0,[r8,#0x518]
000054  e084              B        |L53.352|
                  |L53.86|
;;;7064           }
;;;7065           else if (g_code IS G_43)
000056  f5ba7fd7          CMP      r10,#0x1ae
00005a  d15b              BNE      |L53.276|
;;;7066           {
;;;7067               index SET_TO block->h_number;
00005c  f8db9148          LDR      r9,[r11,#0x148]
;;;7068               CHK((index IS -1), NCE_OFFSET_INDEX_MISSING);
000060  f1190001          ADDS     r0,r9,#1
000064  d127              BNE      |L53.182|
000066  4601              MOV      r1,r0
000068  483e              LDR      r0,|L53.356|
00006a  f8c0114c          STR      r1,[r0,#0x14c]
00006e  4601              MOV      r1,r0
000070  f8d1314c          LDR      r3,[r1,#0x14c]
000074  f8d1114c          LDR      r1,[r1,#0x14c]
000078  f1010101          ADD      r1,r1,#1
00007c  4602              MOV      r2,r0
00007e  f8c2114c          STR      r1,[r2,#0x14c]
000082  eb030183          ADD      r1,r3,r3,LSL #2
000086  f6a06254          SUB      r2,r0,#0xe54
00008a  eb021101          ADD      r1,r2,r1,LSL #4
00008e  4608              MOV      r0,r1
000090  4935              LDR      r1,|L53.360|
000092  f7fffffe          BL       strcpy
000096  f04f0100          MOV      r1,#0
00009a  4832              LDR      r0,|L53.356|
00009c  f8d0014c          LDR      r0,[r0,#0x14c]
0000a0  eb000080          ADD      r0,r0,r0,LSL #2
0000a4  4a31              LDR      r2,|L53.364|
0000a6  eb021000          ADD      r0,r2,r0,LSL #4
0000aa  7001              STRB     r1,[r0,#0]
0000ac  f04f0089          MOV      r0,#0x89
                  |L53.176|
;;;7069               offset SET_TO settings->tool_table[index].length;
;;;7070               USE_TOOL_LENGTH_OFFSET(offset);
;;;7071               settings->current_z SET_TO
;;;7072                   (settings->current_z + settings->tool_length_offset - offset);
;;;7073               settings->tool_length_offset SET_TO offset;
;;;7074               settings->length_offset_index SET_TO index;
;;;7075           }
;;;7076           else
;;;7077               ERM(NCE_BUG_CODE_NOT_G43_OR_G49);
;;;7078           return RS274NGC_OK;
;;;7079       }
0000b0  b004              ADD      sp,sp,#0x10
0000b2  e8bd9ff0          POP      {r4-r12,pc}
                  |L53.182|
0000b6  eb090049          ADD      r0,r9,r9,LSL #1       ;7069
0000ba  f24c1160          MOV      r1,#0xc160            ;7069
0000be  4441              ADD      r1,r1,r8              ;7069
0000c0  eb0100c0          ADD      r0,r1,r0,LSL #3       ;7069
0000c4  e9d04502          LDRD     r4,r5,[r0,#8]         ;7069
0000c8  4620              MOV      r0,r4                 ;7070
0000ca  4629              MOV      r1,r5                 ;7070
0000cc  f7fffffe          BL       USE_TOOL_LENGTH_OFFSET
0000d0  f5084040          ADD      r0,r8,#0xc000         ;7071
0000d4  f8d01150          LDR      r1,[r0,#0x150]        ;7071
0000d8  f8d00154          LDR      r0,[r0,#0x154]        ;7071
0000dc  460e              MOV      r6,r1                 ;7071
0000de  4607              MOV      r7,r0                 ;7071
0000e0  f5087068          ADD      r0,r8,#0x3a0          ;7071
0000e4  c803              LDM      r0,{r0,r1}            ;7071
0000e6  4632              MOV      r2,r6                 ;7071
0000e8  463b              MOV      r3,r7                 ;7071
0000ea  e9cd0100          STRD     r0,r1,[sp,#0]         ;7071
0000ee  f7fffffe          BL       __aeabi_dadd
0000f2  4622              MOV      r2,r4                 ;7071
0000f4  462b              MOV      r3,r5                 ;7071
0000f6  e9cd0102          STRD     r0,r1,[sp,#8]         ;7071
0000fa  f7fffffe          BL       __aeabi_dsub
0000fe  f5087268          ADD      r2,r8,#0x3a0          ;7071
000102  c203              STM      r2!,{r0,r1}           ;7071
000104  f5084040          ADD      r0,r8,#0xc000         ;7073
000108  f50070a8          ADD      r0,r0,#0x150          ;7073
00010c  c030              STM      r0!,{r4,r5}           ;7073
00010e  f8c89518          STR      r9,[r8,#0x518]        ;7074
000112  e025              B        |L53.352|
                  |L53.276|
000114  f04f0100          MOV      r1,#0                 ;7077
000118  4812              LDR      r0,|L53.356|
00011a  f8c0114c          STR      r1,[r0,#0x14c]        ;7077
00011e  4601              MOV      r1,r0                 ;7077
000120  f8d1314c          LDR      r3,[r1,#0x14c]        ;7077
000124  f8d1114c          LDR      r1,[r1,#0x14c]        ;7077
000128  f1010101          ADD      r1,r1,#1              ;7077
00012c  4602              MOV      r2,r0                 ;7077
00012e  f8c2114c          STR      r1,[r2,#0x14c]        ;7077
000132  eb030183          ADD      r1,r3,r3,LSL #2       ;7077
000136  4a0d              LDR      r2,|L53.364|
000138  eb021101          ADD      r1,r2,r1,LSL #4       ;7077
00013c  4608              MOV      r0,r1                 ;7077
00013e  490a              LDR      r1,|L53.360|
000140  f7fffffe          BL       strcpy
000144  f04f0100          MOV      r1,#0                 ;7077
000148  4806              LDR      r0,|L53.356|
00014a  f8d0014c          LDR      r0,[r0,#0x14c]        ;7077
00014e  eb000080          ADD      r0,r0,r0,LSL #2       ;7077
000152  4a06              LDR      r2,|L53.364|
000154  eb021000          ADD      r0,r2,r0,LSL #4       ;7077
000158  7001              STRB     r1,[r0,#0]            ;7077
00015a  f04f0016          MOV      r0,#0x16              ;7077
00015e  e7a7              B        |L53.176|
                  |L53.352|
000160  2000              MOVS     r0,#0                 ;7078
000162  e7a5              B        |L53.176|
;;;7080   
                          ENDP

                  |L53.356|
                          DCD      _setup+0xc000
                  |L53.360|
                          DCD      |symbol_number.474|
                  |L53.364|
                          DCD      _setup+0xb1ac

                          AREA ||i.convert_tool_select||, CODE, READONLY, ALIGN=2

                  convert_tool_select PROC
;;;7106   
;;;7107       static int convert_tool_select(               /* ARGUMENTS                                */
000000  b570              PUSH     {r4-r6,lr}
;;;7108       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;7109       setup_pointer settings)                       /* pointer to machine settings              */
;;;7110       {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;7111           static char name[] SET_TO "convert_tool_select";
;;;7112   
;;;7113           CHK((block->t_number > settings->tool_max),
000006  f24c1058          MOV      r0,#0xc158
00000a  5940              LDR      r0,[r0,r5]
00000c  f8d411d8          LDR      r1,[r4,#0x1d8]
000010  4281              CMP      r1,r0
000012  dd26              BLE      |L54.98|
000014  f04f0100          MOV      r1,#0
000018  4818              LDR      r0,|L54.124|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  490f              LDR      r1,|L54.128|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  480c              LDR      r0,|L54.124|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a0b              LDR      r2,|L54.132|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f009b          MOV      r0,#0x9b
                  |L54.96|
;;;7114               NCE_SELECTED_TOOL_SLOT_NUMBER_TOO_LARGE);
;;;7115           SELECT_TOOL(block->t_number);
;;;7116           settings->selected_tool_slot SET_TO block->t_number;
;;;7117           return RS274NGC_OK;
;;;7118       }
000060  bd70              POP      {r4-r6,pc}
                  |L54.98|
000062  f8d411d8          LDR      r1,[r4,#0x1d8]        ;7115
000066  4608              MOV      r0,r1                 ;7115
000068  f7fffffe          BL       SELECT_TOOL
00006c  f24b108c          MOV      r0,#0xb18c            ;7116
000070  f8d411d8          LDR      r1,[r4,#0x1d8]        ;7116
000074  5141              STR      r1,[r0,r5]            ;7116
000076  f04f0000          MOV      r0,#0                 ;7117
00007a  e7f1              B        |L54.96|
;;;7119   
                          ENDP

                  |L54.124|
                          DCD      _setup+0xc000
                  |L54.128|
                          DCD      |symbol_number.475|
                  |L54.132|
                          DCD      _setup+0xb1ac

                          AREA ||i.cycle_feed||, CODE, READONLY, ALIGN=1

                  cycle_feed PROC
;;;7144   
;;;7145       static int cycle_feed(                        /* ARGUMENTS                  */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;7146       CANON_PLANE plane,                            /* currently selected plane   */
;;;7147       double end1,                                  /* first coordinate value     */
;;;7148       double end2,                                  /* second coordinate value    */
;;;7149       double end3)                                  /* third coordinate value     */
;;;7150       {
000004  4682              MOV      r10,r0
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
00000a  ae0a              ADD      r6,sp,#0x28
00000c  e89603c0          LDM      r6,{r6-r9}
;;;7151   //        static char name[] SET_TO "cycle_feed";
;;;7152   
;;;7153           if (plane IS CANON_PLANE_XY)
000010  f1ba0f01          CMP      r10,#1
000014  d108              BNE      |L55.40|
;;;7154               STRAIGHT_FEED(end1, end2, end3
000016  4632              MOV      r2,r6
000018  463b              MOV      r3,r7
00001a  4620              MOV      r0,r4
00001c  4629              MOV      r1,r5
00001e  e9cd8900          STRD     r8,r9,[sp,#0]
000022  f7fffffe          BL       STRAIGHT_FEED
000026  e013              B        |L55.80|
                  |L55.40|
;;;7155           #ifdef AA
;;;7156                   ,         _setup.AA_current
;;;7157           #else
;;;7158           #ifdef ALL_AXES
;;;7159                   , 0
;;;7160           #endif
;;;7161           #endif
;;;7162           #ifdef BB
;;;7163                   ,  _setup.BB_current
;;;7164           #else
;;;7165           #ifdef ALL_AXES
;;;7166                   , 0
;;;7167           #endif
;;;7168           #endif
;;;7169           #ifdef CC
;;;7170                   ,  _setup.CC_current
;;;7171           #else
;;;7172           #ifdef ALL_AXES
;;;7173                   , 0
;;;7174           #endif
;;;7175           #endif
;;;7176                   );
;;;7177           else if (plane IS CANON_PLANE_YZ)
000028  f1ba0f02          CMP      r10,#2
00002c  d108              BNE      |L55.64|
;;;7178               STRAIGHT_FEED(end3, end1, end2
00002e  4622              MOV      r2,r4
000030  462b              MOV      r3,r5
000032  4640              MOV      r0,r8
000034  4649              MOV      r1,r9
000036  e9cd6700          STRD     r6,r7,[sp,#0]
00003a  f7fffffe          BL       STRAIGHT_FEED
00003e  e007              B        |L55.80|
                  |L55.64|
;;;7179               #ifdef AA
;;;7180                       ,         _setup.AA_current
;;;7181               #else
;;;7182               #ifdef ALL_AXES
;;;7183                       , 0
;;;7184               #endif
;;;7185               #endif
;;;7186               #ifdef BB
;;;7187                       ,  _setup.BB_current
;;;7188               #else
;;;7189               #ifdef ALL_AXES
;;;7190                       , 0
;;;7191               #endif
;;;7192               #endif
;;;7193               #ifdef CC
;;;7194                       ,  _setup.CC_current
;;;7195               #else
;;;7196               #ifdef ALL_AXES
;;;7197                       , 0
;;;7198               #endif
;;;7199               #endif
;;;7200                       );
;;;7201           else                                      /* if (plane IS CANON_PLANE_XZ) */
;;;7202               STRAIGHT_FEED(end2, end3, end1
000040  4642              MOV      r2,r8
000042  464b              MOV      r3,r9
000044  4630              MOV      r0,r6
000046  4639              MOV      r1,r7
000048  e9cd4500          STRD     r4,r5,[sp,#0]
00004c  f7fffffe          BL       STRAIGHT_FEED
                  |L55.80|
;;;7203           #ifdef AA
;;;7204                   ,         _setup.AA_current
;;;7205           #else
;;;7206           #ifdef ALL_AXES
;;;7207                   , 0
;;;7208           #endif
;;;7209           #endif
;;;7210           #ifdef BB
;;;7211                   ,  _setup.BB_current
;;;7212           #else
;;;7213           #ifdef ALL_AXES
;;;7214                   , 0
;;;7215           #endif
;;;7216           #endif
;;;7217           #ifdef CC
;;;7218                   ,  _setup.CC_current
;;;7219           #else
;;;7220           #ifdef ALL_AXES
;;;7221                   , 0
;;;7222           #endif
;;;7223           #endif
;;;7224                   );
;;;7225   
;;;7226           return RS274NGC_OK;
000050  2000              MOVS     r0,#0
;;;7227       }
000052  e8bd87fc          POP      {r2-r10,pc}
;;;7228   
                          ENDP


                          AREA ||i.cycle_traverse||, CODE, READONLY, ALIGN=1

                  cycle_traverse PROC
;;;7253   
;;;7254       static int cycle_traverse(                    /* ARGUMENTS                 */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;7255       CANON_PLANE plane,                            /* currently selected plane  */
;;;7256       double end1,                                  /* first coordinate value    */
;;;7257       double end2,                                  /* second coordinate value   */
;;;7258       double end3)                                  /* third coordinate value    */
;;;7259       {
000004  4682              MOV      r10,r0
000006  4614              MOV      r4,r2
000008  461d              MOV      r5,r3
00000a  ae0a              ADD      r6,sp,#0x28
00000c  e89603c0          LDM      r6,{r6-r9}
;;;7260   //        static char name[] SET_TO "cycle_traverse";
;;;7261           if (plane IS CANON_PLANE_XY)
000010  f1ba0f01          CMP      r10,#1
000014  d108              BNE      |L56.40|
;;;7262               STRAIGHT_TRAVERSE(end1, end2, end3
000016  4632              MOV      r2,r6
000018  463b              MOV      r3,r7
00001a  4620              MOV      r0,r4
00001c  4629              MOV      r1,r5
00001e  e9cd8900          STRD     r8,r9,[sp,#0]
000022  f7fffffe          BL       STRAIGHT_TRAVERSE
000026  e013              B        |L56.80|
                  |L56.40|
;;;7263           #ifdef AA
;;;7264                   ,             _setup.AA_current
;;;7265           #else
;;;7266           #ifdef ALL_AXES
;;;7267                   , 0
;;;7268           #endif
;;;7269           #endif
;;;7270           #ifdef BB
;;;7271                   ,  _setup.BB_current
;;;7272           #else
;;;7273           #ifdef ALL_AXES
;;;7274                   , 0
;;;7275           #endif
;;;7276           #endif
;;;7277           #ifdef CC
;;;7278                   ,  _setup.CC_current
;;;7279           #else
;;;7280           #ifdef ALL_AXES
;;;7281                   , 0
;;;7282           #endif
;;;7283           #endif
;;;7284                   );
;;;7285           else if (plane IS CANON_PLANE_YZ)
000028  f1ba0f02          CMP      r10,#2
00002c  d108              BNE      |L56.64|
;;;7286               STRAIGHT_TRAVERSE(end3, end1, end2
00002e  4622              MOV      r2,r4
000030  462b              MOV      r3,r5
000032  4640              MOV      r0,r8
000034  4649              MOV      r1,r9
000036  e9cd6700          STRD     r6,r7,[sp,#0]
00003a  f7fffffe          BL       STRAIGHT_TRAVERSE
00003e  e007              B        |L56.80|
                  |L56.64|
;;;7287               #ifdef AA
;;;7288                       ,             _setup.AA_current
;;;7289               #else
;;;7290               #ifdef ALL_AXES
;;;7291                       , 0
;;;7292               #endif
;;;7293               #endif
;;;7294               #ifdef BB
;;;7295                       ,  _setup.BB_current
;;;7296               #else
;;;7297               #ifdef ALL_AXES
;;;7298                       , 0
;;;7299               #endif
;;;7300               #endif
;;;7301               #ifdef CC
;;;7302                       ,  _setup.CC_current
;;;7303               #else
;;;7304               #ifdef ALL_AXES
;;;7305                       , 0
;;;7306               #endif
;;;7307               #endif
;;;7308                       );
;;;7309           else                                      /* if (plane IS CANON_PLANE_XZ) */
;;;7310               STRAIGHT_TRAVERSE(end2, end3, end1
000040  4642              MOV      r2,r8
000042  464b              MOV      r3,r9
000044  4630              MOV      r0,r6
000046  4639              MOV      r1,r7
000048  e9cd4500          STRD     r4,r5,[sp,#0]
00004c  f7fffffe          BL       STRAIGHT_TRAVERSE
                  |L56.80|
;;;7311           #ifdef AA
;;;7312                   ,             _setup.AA_current
;;;7313           #else
;;;7314           #ifdef ALL_AXES
;;;7315                   , 0
;;;7316           #endif
;;;7317           #endif
;;;7318           #ifdef BB
;;;7319                   ,  _setup.BB_current
;;;7320           #else
;;;7321           #ifdef ALL_AXES
;;;7322                   , 0
;;;7323           #endif
;;;7324           #endif
;;;7325           #ifdef CC
;;;7326                   ,  _setup.CC_current
;;;7327           #else
;;;7328           #ifdef ALL_AXES
;;;7329                   , 0
;;;7330           #endif
;;;7331           #endif
;;;7332                   );
;;;7333           return RS274NGC_OK;
000050  2000              MOVS     r0,#0
;;;7334       }
000052  e8bd87fc          POP      {r2-r10,pc}
;;;7335   
                          ENDP


                          AREA ||i.enhance_block||, CODE, READONLY, ALIGN=2

                  enhance_block PROC
;;;7371   
;;;7372       static int enhance_block(                     /* ARGUMENTS                         */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;7373       block_pointer block,                          /* pointer to a block to be checked  */
;;;7374       setup_pointer settings)                       /* pointer to machine settings       */
;;;7375       {
000004  4604              MOV      r4,r0
000006  460e              MOV      r6,r1
;;;7376           static char name[] SET_TO "enhance_block";
;;;7377           int axis_flag;
;;;7378           int mode_zero_covets_axes;
;;;7379   
;;;7380           axis_flag SET_TO ((block->x_flag IS ON) OR
000008  f8d401dc          LDR      r0,[r4,#0x1dc]
00000c  2801              CMP      r0,#1
00000e  d007              BEQ      |L57.32|
;;;7381               (block->y_flag IS ON) OR
000010  f8d401e8          LDR      r0,[r4,#0x1e8]
000014  2801              CMP      r0,#1
000016  d003              BEQ      |L57.32|
;;;7382       #ifdef AA
;;;7383               (block->a_flag IS ON) OR              /*AA*/
;;;7384       #endif
;;;7385       #ifdef BB
;;;7386               (block->b_flag IS ON) OR              /*BB*/
;;;7387       #endif
;;;7388       #ifdef CC
;;;7389               (block->c_flag IS ON) OR              /*CC*/
;;;7390       #endif
;;;7391               (block->z_flag IS ON));
000018  f8d401f8          LDR      r0,[r4,#0x1f8]
00001c  2801              CMP      r0,#1
00001e  d102              BNE      |L57.38|
                  |L57.32|
000020  f04f0001          MOV      r0,#1
000024  e001              B        |L57.42|
                  |L57.38|
000026  f04f0000          MOV      r0,#0
                  |L57.42|
00002a  4605              MOV      r5,r0
;;;7392           mode_zero_covets_axes SET_TO ((block->g_modes[0] IS G_50) OR
00002c  f8d40110          LDR      r0,[r4,#0x110]
000030  f5b07ffa          CMP      r0,#0x1f4
000034  d00e              BEQ      |L57.84|
;;;7393               (block->g_modes[0] IS G_28) OR
000036  f8d40110          LDR      r0,[r4,#0x110]
00003a  f5b07f8c          CMP      r0,#0x118
00003e  d009              BEQ      |L57.84|
;;;7394               (block->g_modes[0] IS G_30) OR
000040  f8d40110          LDR      r0,[r4,#0x110]
000044  f5b07f96          CMP      r0,#0x12c
000048  d004              BEQ      |L57.84|
;;;7395               (block->g_modes[0] IS G_92));
00004a  f8d40110          LDR      r0,[r4,#0x110]
00004e  f5b07f66          CMP      r0,#0x398
000052  d102              BNE      |L57.90|
                  |L57.84|
000054  f04f0001          MOV      r0,#1
000058  e001              B        |L57.94|
                  |L57.90|
00005a  f04f0000          MOV      r0,#0
                  |L57.94|
00005e  4607              MOV      r7,r0
;;;7396   
;;;7397           if (block->g_modes[1] ISNT -1)
000060  f44f708a          MOV      r0,#0x114
000064  5900              LDR      r0,[r0,r4]
000066  1c40              ADDS     r0,r0,#1
000068  d07e              BEQ      |L57.360|
;;;7398           {
;;;7399               if (block->g_modes[1] IS G_80)
00006a  f44f708a          MOV      r0,#0x114
00006e  5900              LDR      r0,[r0,r4]
000070  f5b07f48          CMP      r0,#0x320
000074  d154              BNE      |L57.288|
;;;7400               {
;;;7401                   CHK((axis_flag AND (NOT mode_zero_covets_axes)),
000076  b345              CBZ      r5,|L57.202|
000078  bb3f              CBNZ     r7,|L57.202|
00007a  f04f0100          MOV      r1,#0
00007e  4885              LDR      r0,|L57.660|
000080  f8c0114c          STR      r1,[r0,#0x14c]
000084  4601              MOV      r1,r0
000086  f8d1314c          LDR      r3,[r1,#0x14c]
00008a  f8d1114c          LDR      r1,[r1,#0x14c]
00008e  f1010101          ADD      r1,r1,#1
000092  4602              MOV      r2,r0
000094  f8c2114c          STR      r1,[r2,#0x14c]
000098  eb030183          ADD      r1,r3,r3,LSL #2
00009c  f6a06254          SUB      r2,r0,#0xe54
0000a0  eb021101          ADD      r1,r2,r1,LSL #4
0000a4  4608              MOV      r0,r1
0000a6  497c              LDR      r1,|L57.664|
0000a8  f7fffffe          BL       strcpy
0000ac  f04f0100          MOV      r1,#0
0000b0  4878              LDR      r0,|L57.660|
0000b2  f8d0014c          LDR      r0,[r0,#0x14c]
0000b6  eb000080          ADD      r0,r0,r0,LSL #2
0000ba  4a78              LDR      r2,|L57.668|
0000bc  eb021000          ADD      r0,r2,r0,LSL #4
0000c0  7001              STRB     r1,[r0,#0]
0000c2  f04f0038          MOV      r0,#0x38
                  |L57.198|
;;;7402                       NCE_CANNOT_USE_AXIS_VALUES_WITH_G80);
;;;7403                   CHK(((NOT axis_flag) AND (block->g_modes[0] IS G_92)),
;;;7404                       NCE_ALL_AXES_MISSING_WITH_G92);
;;;7405               }
;;;7406               else
;;;7407               {
;;;7408                   CHK(mode_zero_covets_axes,
;;;7409                       NCE_CANNOT_USE_TWO_G_CODES_THAT_BOTH_USE_AXIS_VALUES);
;;;7410                   CHK((NOT axis_flag), NCE_ALL_AXES_MISSING_WITH_MOTION_CODE);
;;;7411               }
;;;7412               block->motion_to_be SET_TO block->g_modes[1];
;;;7413           }
;;;7414           else if (mode_zero_covets_axes)
;;;7415           {                                         /* other 3 can get by without axes but not G92 */
;;;7416               CHK(((NOT axis_flag) AND (block->g_modes[0] IS G_92)),
;;;7417                   NCE_ALL_AXES_MISSING_WITH_G92);
;;;7418           }
;;;7419           else if (axis_flag)
;;;7420           {
;;;7421               CHK(((settings->motion_mode IS -1) OR (settings->motion_mode IS G_80)),
;;;7422                   NCE_CANNOT_USE_AXIS_VALUES_WITHOUT_A_G_CODE_THAT_USES_THEM);
;;;7423               block->motion_to_be SET_TO settings->motion_mode;
;;;7424           }
;;;7425           return RS274NGC_OK;
;;;7426       }
0000c6  e8bd81f0          POP      {r4-r8,pc}
                  |L57.202|
0000ca  2d00              CMP      r5,#0                 ;7403
0000cc  d179              BNE      |L57.450|
0000ce  f8d40110          LDR      r0,[r4,#0x110]        ;7403
0000d2  f5b07f66          CMP      r0,#0x398             ;7403
0000d6  d174              BNE      |L57.450|
0000d8  4629              MOV      r1,r5                 ;7403
0000da  486e              LDR      r0,|L57.660|
0000dc  f8c0114c          STR      r1,[r0,#0x14c]        ;7403
0000e0  4601              MOV      r1,r0                 ;7403
0000e2  f8d1314c          LDR      r3,[r1,#0x14c]        ;7403
0000e6  f8d1114c          LDR      r1,[r1,#0x14c]        ;7403
0000ea  f1010101          ADD      r1,r1,#1              ;7403
0000ee  4602              MOV      r2,r0                 ;7403
0000f0  f8c2114c          STR      r1,[r2,#0x14c]        ;7403
0000f4  eb030183          ADD      r1,r3,r3,LSL #2       ;7403
0000f8  4a68              LDR      r2,|L57.668|
0000fa  eb021101          ADD      r1,r2,r1,LSL #4       ;7403
0000fe  4608              MOV      r0,r1                 ;7403
000100  4965              LDR      r1,|L57.664|
000102  f7fffffe          BL       strcpy
000106  4629              MOV      r1,r5                 ;7403
000108  4862              LDR      r0,|L57.660|
00010a  f8d0014c          LDR      r0,[r0,#0x14c]        ;7403
00010e  eb000080          ADD      r0,r0,r0,LSL #2       ;7403
000112  4a62              LDR      r2,|L57.668|
000114  eb021000          ADD      r0,r2,r0,LSL #4       ;7403
000118  7001              STRB     r1,[r0,#0]            ;7403
00011a  f04f0005          MOV      r0,#5                 ;7403
00011e  e7d2              B        |L57.198|
                  |L57.288|
000120  b33f              CBZ      r7,|L57.370|
000122  f04f0100          MOV      r1,#0                 ;7408
000126  485b              LDR      r0,|L57.660|
000128  f8c0114c          STR      r1,[r0,#0x14c]        ;7408
00012c  4601              MOV      r1,r0                 ;7408
00012e  f8d1314c          LDR      r3,[r1,#0x14c]        ;7408
000132  f8d1114c          LDR      r1,[r1,#0x14c]        ;7408
000136  f1010101          ADD      r1,r1,#1              ;7408
00013a  4602              MOV      r2,r0                 ;7408
00013c  f8c2114c          STR      r1,[r2,#0x14c]        ;7408
000140  eb030183          ADD      r1,r3,r3,LSL #2       ;7408
000144  4a55              LDR      r2,|L57.668|
000146  eb021101          ADD      r1,r2,r1,LSL #4       ;7408
00014a  4608              MOV      r0,r1                 ;7408
00014c  4952              LDR      r1,|L57.664|
00014e  f7fffffe          BL       strcpy
000152  f04f0100          MOV      r1,#0                 ;7408
000156  484f              LDR      r0,|L57.660|
000158  f8d0014c          LDR      r0,[r0,#0x14c]        ;7408
00015c  eb000080          ADD      r0,r0,r0,LSL #2       ;7408
000160  4a4e              LDR      r2,|L57.668|
000162  eb021000          ADD      r0,r2,r0,LSL #4       ;7408
000166  e000              B        |L57.362|
                  |L57.360|
000168  e031              B        |L57.462|
                  |L57.362|
00016a  7001              STRB     r1,[r0,#0]            ;7408
00016c  f04f003f          MOV      r0,#0x3f              ;7408
000170  e7a9              B        |L57.198|
                  |L57.370|
000172  bb2d              CBNZ     r5,|L57.448|
000174  f04f0100          MOV      r1,#0                 ;7410
000178  4846              LDR      r0,|L57.660|
00017a  f8c0114c          STR      r1,[r0,#0x14c]        ;7410
00017e  4601              MOV      r1,r0                 ;7410
000180  f8d1314c          LDR      r3,[r1,#0x14c]        ;7410
000184  f8d1114c          LDR      r1,[r1,#0x14c]        ;7410
000188  f1010101          ADD      r1,r1,#1              ;7410
00018c  4602              MOV      r2,r0                 ;7410
00018e  f8c2114c          STR      r1,[r2,#0x14c]        ;7410
000192  eb030183          ADD      r1,r3,r3,LSL #2       ;7410
000196  4a41              LDR      r2,|L57.668|
000198  eb021101          ADD      r1,r2,r1,LSL #4       ;7410
00019c  4608              MOV      r0,r1                 ;7410
00019e  493e              LDR      r1,|L57.664|
0001a0  f7fffffe          BL       strcpy
0001a4  f04f0100          MOV      r1,#0                 ;7410
0001a8  483a              LDR      r0,|L57.660|
0001aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;7410
0001ae  eb000080          ADD      r0,r0,r0,LSL #2       ;7410
0001b2  4a3a              LDR      r2,|L57.668|
0001b4  eb021000          ADD      r0,r2,r0,LSL #4       ;7410
0001b8  7001              STRB     r1,[r0,#0]            ;7410
0001ba  f04f0006          MOV      r0,#6                 ;7410
0001be  e782              B        |L57.198|
                  |L57.448|
0001c0  e7ff              B        |L57.450|
                  |L57.450|
0001c2  f44f708a          MOV      r0,#0x114             ;7412
0001c6  5900              LDR      r0,[r0,r4]            ;7412
0001c8  f8c40180          STR      r0,[r4,#0x180]        ;7412
0001cc  e05f              B        |L57.654|
                  |L57.462|
0001ce  b357              CBZ      r7,|L57.550|
0001d0  2d00              CMP      r5,#0                 ;7416
0001d2  d15c              BNE      |L57.654|
0001d4  f8d40110          LDR      r0,[r4,#0x110]        ;7416
0001d8  f5b07f66          CMP      r0,#0x398             ;7416
0001dc  d157              BNE      |L57.654|
0001de  4629              MOV      r1,r5                 ;7416
0001e0  482c              LDR      r0,|L57.660|
0001e2  f8c0114c          STR      r1,[r0,#0x14c]        ;7416
0001e6  4601              MOV      r1,r0                 ;7416
0001e8  f8d1314c          LDR      r3,[r1,#0x14c]        ;7416
0001ec  f8d1114c          LDR      r1,[r1,#0x14c]        ;7416
0001f0  f1010101          ADD      r1,r1,#1              ;7416
0001f4  4602              MOV      r2,r0                 ;7416
0001f6  f8c2114c          STR      r1,[r2,#0x14c]        ;7416
0001fa  eb030183          ADD      r1,r3,r3,LSL #2       ;7416
0001fe  4a27              LDR      r2,|L57.668|
000200  eb021101          ADD      r1,r2,r1,LSL #4       ;7416
000204  4608              MOV      r0,r1                 ;7416
000206  4924              LDR      r1,|L57.664|
000208  f7fffffe          BL       strcpy
00020c  4629              MOV      r1,r5                 ;7416
00020e  4821              LDR      r0,|L57.660|
000210  f8d0014c          LDR      r0,[r0,#0x14c]        ;7416
000214  eb000080          ADD      r0,r0,r0,LSL #2       ;7416
000218  4a20              LDR      r2,|L57.668|
00021a  eb021000          ADD      r0,r2,r0,LSL #4       ;7416
00021e  7001              STRB     r1,[r0,#0]            ;7416
000220  f04f0005          MOV      r0,#5                 ;7416
000224  e74f              B        |L57.198|
                  |L57.550|
000226  b395              CBZ      r5,|L57.654|
000228  f8d60628          LDR      r0,[r6,#0x628]        ;7421
00022c  1c40              ADDS     r0,r0,#1              ;7421
00022e  d004              BEQ      |L57.570|
000230  f8d60628          LDR      r0,[r6,#0x628]        ;7421
000234  f5b07f48          CMP      r0,#0x320             ;7421
000238  d125              BNE      |L57.646|
                  |L57.570|
00023a  f04f0100          MOV      r1,#0                 ;7421
00023e  4815              LDR      r0,|L57.660|
000240  f8c0114c          STR      r1,[r0,#0x14c]        ;7421
000244  4601              MOV      r1,r0                 ;7421
000246  f8d1314c          LDR      r3,[r1,#0x14c]        ;7421
00024a  f8d1114c          LDR      r1,[r1,#0x14c]        ;7421
00024e  f1010101          ADD      r1,r1,#1              ;7421
000252  4602              MOV      r2,r0                 ;7421
000254  f8c2114c          STR      r1,[r2,#0x14c]        ;7421
000258  eb030183          ADD      r1,r3,r3,LSL #2       ;7421
00025c  4a0f              LDR      r2,|L57.668|
00025e  eb021101          ADD      r1,r2,r1,LSL #4       ;7421
000262  4608              MOV      r0,r1                 ;7421
000264  490c              LDR      r1,|L57.664|
000266  f7fffffe          BL       strcpy
00026a  f04f0100          MOV      r1,#0                 ;7421
00026e  4809              LDR      r0,|L57.660|
000270  f8d0014c          LDR      r0,[r0,#0x14c]        ;7421
000274  eb000080          ADD      r0,r0,r0,LSL #2       ;7421
000278  4a08              LDR      r2,|L57.668|
00027a  eb021000          ADD      r0,r2,r0,LSL #4       ;7421
00027e  7001              STRB     r1,[r0,#0]            ;7421
000280  f04f0039          MOV      r0,#0x39              ;7421
000284  e71f              B        |L57.198|
                  |L57.646|
000286  f8d60628          LDR      r0,[r6,#0x628]        ;7423
00028a  f8c40180          STR      r0,[r4,#0x180]        ;7423
                  |L57.654|
00028e  2000              MOVS     r0,#0                 ;7425
000290  e719              B        |L57.198|
;;;7427   				   
                          ENDP

000292  0000              DCW      0x0000
                  |L57.660|
                          DCD      _setup+0xc000
                  |L57.664|
                          DCD      |symbol_number.476|
                  |L57.668|
                          DCD      _setup+0xb1ac

                          AREA ||i.execute_binary||, CODE, READONLY, ALIGN=2

                  execute_binary PROC
;;;7445   
;;;7446       static int execute_binary(
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;7447       double * left,
;;;7448       int operation,
;;;7449       double * right)
;;;7450       {
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
;;;7451           static char name[] SET_TO "execute_binary";
;;;7452           int status;
;;;7453   
;;;7454           if (operation < AND2)
00000a  2d05              CMP      r5,#5
00000c  da2e              BGE      |L58.108|
;;;7455               CHP(execute_binary1(left, operation, right));
00000e  463a              MOV      r2,r7
000010  4629              MOV      r1,r5
000012  4630              MOV      r0,r6
000014  f7fffffe          BL       execute_binary1
000018  0004              MOVS     r4,r0
00001a  d054              BEQ      |L58.198|
00001c  482b              LDR      r0,|L58.204|
00001e  f8d0014c          LDR      r0,[r0,#0x14c]
000022  2831              CMP      r0,#0x31
000024  da20              BGE      |L58.104|
000026  4929              LDR      r1,|L58.204|
000028  f8d1314c          LDR      r3,[r1,#0x14c]
00002c  f8d1114c          LDR      r1,[r1,#0x14c]
000030  1c49              ADDS     r1,r1,#1
000032  4a26              LDR      r2,|L58.204|
000034  f8c2114c          STR      r1,[r2,#0x14c]
000038  eb030183          ADD      r1,r3,r3,LSL #2
00003c  f6a26254          SUB      r2,r2,#0xe54
000040  eb021101          ADD      r1,r2,r1,LSL #4
000044  4608              MOV      r0,r1
000046  4922              LDR      r1,|L58.208|
000048  f7fffffe          BL       strcpy
00004c  f04f0100          MOV      r1,#0
000050  481e              LDR      r0,|L58.204|
000052  f8d0014c          LDR      r0,[r0,#0x14c]
000056  eb000080          ADD      r0,r0,r0,LSL #2
00005a  4a1e              LDR      r2,|L58.212|
00005c  eb021000          ADD      r0,r2,r0,LSL #4
000060  7001              STRB     r1,[r0,#0]
000062  4620              MOV      r0,r4
                  |L58.100|
;;;7456           else
;;;7457               CHP(execute_binary2(left, operation, right));
;;;7458           return RS274NGC_OK;
;;;7459       }
000064  e8bd81f0          POP      {r4-r8,pc}
                  |L58.104|
000068  4620              MOV      r0,r4                 ;7455
00006a  e7fb              B        |L58.100|
                  |L58.108|
00006c  463a              MOV      r2,r7                 ;7457
00006e  4629              MOV      r1,r5                 ;7457
000070  4630              MOV      r0,r6                 ;7457
000072  f7fffffe          BL       execute_binary2
000076  0004              MOVS     r4,r0                 ;7457
000078  d025              BEQ      |L58.198|
00007a  4814              LDR      r0,|L58.204|
00007c  f8d0014c          LDR      r0,[r0,#0x14c]        ;7457
000080  2831              CMP      r0,#0x31              ;7457
000082  da1e              BGE      |L58.194|
000084  4911              LDR      r1,|L58.204|
000086  f8d1314c          LDR      r3,[r1,#0x14c]        ;7457
00008a  f8d1114c          LDR      r1,[r1,#0x14c]        ;7457
00008e  1c49              ADDS     r1,r1,#1              ;7457
000090  4a0e              LDR      r2,|L58.204|
000092  f8c2114c          STR      r1,[r2,#0x14c]        ;7457
000096  eb030183          ADD      r1,r3,r3,LSL #2       ;7457
00009a  4a0e              LDR      r2,|L58.212|
00009c  eb021101          ADD      r1,r2,r1,LSL #4       ;7457
0000a0  4608              MOV      r0,r1                 ;7457
0000a2  490b              LDR      r1,|L58.208|
0000a4  f7fffffe          BL       strcpy
0000a8  f04f0100          MOV      r1,#0                 ;7457
0000ac  4807              LDR      r0,|L58.204|
0000ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;7457
0000b2  eb000080          ADD      r0,r0,r0,LSL #2       ;7457
0000b6  4a07              LDR      r2,|L58.212|
0000b8  eb021000          ADD      r0,r2,r0,LSL #4       ;7457
0000bc  7001              STRB     r1,[r0,#0]            ;7457
0000be  4620              MOV      r0,r4                 ;7457
0000c0  e7d0              B        |L58.100|
                  |L58.194|
0000c2  4620              MOV      r0,r4                 ;7457
0000c4  e7ce              B        |L58.100|
                  |L58.198|
0000c6  2000              MOVS     r0,#0                 ;7458
0000c8  e7cc              B        |L58.100|
;;;7460   
                          ENDP

0000ca  0000              DCW      0x0000
                  |L58.204|
                          DCD      _setup+0xc000
                  |L58.208|
                          DCD      |symbol_number.477|
                  |L58.212|
                          DCD      _setup+0xb1ac

                          AREA ||i.execute_binary1||, CODE, READONLY, ALIGN=2

                  execute_binary1 PROC
;;;7481   
;;;7482       static int execute_binary1(                   /* ARGUMENTS                       */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;7483       double * left,                                /* pointer to the left operand     */
;;;7484       int operation,                                /* integer code for the operation  */
;;;7485       double * right)                               /* pointer to the right operand    */
;;;7486       {
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
;;;7487           static char name[] SET_TO "execute_binary1";
;;;7488           switch (operation)
00000a  f1b80f01          CMP      r8,#1
00000e  d009              BEQ      |L59.36|
000010  f1b80f02          CMP      r8,#2
000014  d047              BEQ      |L59.166|
000016  f1b80f03          CMP      r8,#3
00001a  d06b              BEQ      |L59.244|
00001c  f1b80f04          CMP      r8,#4
000020  d17e              BNE      |L59.288|
000022  e0b9              B        |L59.408|
                  |L59.36|
;;;7489           {
;;;7490               case DIVIDED_BY:
;;;7491                   CHK((*right IS 0.0), NCE_ATTEMPT_TO_DIVIDE_BY_ZERO);
000024  e9d50100          LDRD     r0,r1,[r5,#0]
000028  4606              MOV      r6,r0
00002a  2200              MOVS     r2,#0
00002c  4613              MOV      r3,r2
00002e  f7fffffe          BL       __aeabi_cdcmpeq
000032  d127              BNE      |L59.132|
000034  f04f0100          MOV      r1,#0
000038  4874              LDR      r0,|L59.524|
00003a  f8c0114c          STR      r1,[r0,#0x14c]
00003e  4601              MOV      r1,r0
000040  f8d1314c          LDR      r3,[r1,#0x14c]
000044  f8d1114c          LDR      r1,[r1,#0x14c]
000048  f1010101          ADD      r1,r1,#1
00004c  4602              MOV      r2,r0
00004e  f8c2114c          STR      r1,[r2,#0x14c]
000052  eb030183          ADD      r1,r3,r3,LSL #2
000056  f6a06254          SUB      r2,r0,#0xe54
00005a  eb021101          ADD      r1,r2,r1,LSL #4
00005e  4608              MOV      r0,r1
000060  496b              LDR      r1,|L59.528|
000062  f7fffffe          BL       strcpy
000066  f04f0100          MOV      r1,#0
00006a  4868              LDR      r0,|L59.524|
00006c  f8d0014c          LDR      r0,[r0,#0x14c]
000070  eb000080          ADD      r0,r0,r0,LSL #2
000074  4a67              LDR      r2,|L59.532|
000076  eb021000          ADD      r0,r2,r0,LSL #4
00007a  7001              STRB     r1,[r0,#0]
00007c  f04f000a          MOV      r0,#0xa
                  |L59.128|
;;;7492                   *left SET_TO (*left / *right);
;;;7493                   break;
;;;7494               case MODULO:                          /* always calculates a positive answer */
;;;7495                   *left SET_TO fmod(*left, *right);
;;;7496                   if (*left < 0.0)
;;;7497                   {
;;;7498                       *left SET_TO (*left + fabs(*right));
;;;7499                   }
;;;7500                   break;
;;;7501               case POWER:
;;;7502                   CHK(((*left < 0.0) AND (floor(*right) ISNT *right)),
;;;7503                       NCE_ATTEMPT_TO_RAISE_NEGATIVE_TO_NON_INTEGER_POWER);
;;;7504                   *left SET_TO pow(*left, *right);
;;;7505                   break;
;;;7506               case TIMES:
;;;7507                   *left SET_TO (*left * *right);
;;;7508                   break;
;;;7509               default:
;;;7510                   ERM(NCE_BUG_UNKNOWN_OPERATION);
;;;7511           }
;;;7512           return RS274NGC_OK;
;;;7513       }
000080  e8bd87f0          POP      {r4-r10,pc}
                  |L59.132|
000084  e9d51000          LDRD     r1,r0,[r5,#0]         ;7492
000088  460e              MOV      r6,r1                 ;7492
00008a  4607              MOV      r7,r0                 ;7492
00008c  e9d41000          LDRD     r1,r0,[r4,#0]         ;7492
000090  4689              MOV      r9,r1                 ;7492
000092  4682              MOV      r10,r0                ;7492
000094  4632              MOV      r2,r6                 ;7492
000096  463b              MOV      r3,r7                 ;7492
000098  4648              MOV      r0,r9                 ;7492
00009a  4651              MOV      r1,r10                ;7492
00009c  f7fffffe          BL       __aeabi_ddiv
0000a0  e9c40100          STRD     r0,r1,[r4,#0]         ;7492
0000a4  e0af              B        |L59.518|
                  |L59.166|
0000a6  e9d51000          LDRD     r1,r0,[r5,#0]         ;7495
0000aa  460e              MOV      r6,r1                 ;7495
0000ac  4607              MOV      r7,r0                 ;7495
0000ae  e9d40100          LDRD     r0,r1,[r4,#0]         ;7495
0000b2  4681              MOV      r9,r0                 ;7495
0000b4  4632              MOV      r2,r6                 ;7495
0000b6  463b              MOV      r3,r7                 ;7495
0000b8  f7fffffe          BL       fmod
0000bc  e9c40100          STRD     r0,r1,[r4,#0]         ;7495
0000c0  e9d40100          LDRD     r0,r1,[r4,#0]         ;7496
0000c4  4606              MOV      r6,r0                 ;7496
0000c6  2200              MOVS     r2,#0                 ;7496
0000c8  4613              MOV      r3,r2                 ;7496
0000ca  f7fffffe          BL       __aeabi_cdcmple
0000ce  d210              BCS      |L59.242|
0000d0  e9d50100          LDRD     r0,r1,[r5,#0]         ;7498
0000d4  f0214100          BIC      r1,r1,#0x80000000     ;7498
0000d8  4681              MOV      r9,r0                 ;7498
0000da  468a              MOV      r10,r1                ;7498
0000dc  e9d41000          LDRD     r1,r0,[r4,#0]         ;7498
0000e0  460e              MOV      r6,r1                 ;7498
0000e2  4632              MOV      r2,r6                 ;7498
0000e4  4603              MOV      r3,r0                 ;7498
0000e6  4648              MOV      r0,r9                 ;7498
0000e8  4651              MOV      r1,r10                ;7498
0000ea  f7fffffe          BL       __aeabi_dadd
0000ee  e9c40100          STRD     r0,r1,[r4,#0]         ;7498
                  |L59.242|
0000f2  e088              B        |L59.518|
                  |L59.244|
0000f4  e9d41000          LDRD     r1,r0,[r4,#0]         ;7502
0000f8  460e              MOV      r6,r1                 ;7502
0000fa  4607              MOV      r7,r0                 ;7502
0000fc  2200              MOVS     r2,#0                 ;7502
0000fe  4613              MOV      r3,r2                 ;7502
000100  4630              MOV      r0,r6                 ;7502
000102  4639              MOV      r1,r7                 ;7502
000104  f7fffffe          BL       __aeabi_cdcmple
000108  d238              BCS      |L59.380|
00010a  e9d50100          LDRD     r0,r1,[r5,#0]         ;7502
00010e  4602              MOV      r2,r0                 ;7502
000110  f7fffffe          BL       floor
000114  4681              MOV      r9,r0                 ;7502
000116  468a              MOV      r10,r1                ;7502
000118  e9d50100          LDRD     r0,r1,[r5,#0]         ;7502
00011c  4606              MOV      r6,r0                 ;7502
00011e  e000              B        |L59.290|
                  |L59.288|
000120  e04b              B        |L59.442|
                  |L59.290|
000122  4632              MOV      r2,r6                 ;7502
000124  460b              MOV      r3,r1                 ;7502
000126  4648              MOV      r0,r9                 ;7502
000128  4651              MOV      r1,r10                ;7502
00012a  f7fffffe          BL       __aeabi_cdcmpeq
00012e  d025              BEQ      |L59.380|
000130  f04f0100          MOV      r1,#0                 ;7502
000134  4835              LDR      r0,|L59.524|
000136  f8c0114c          STR      r1,[r0,#0x14c]        ;7502
00013a  4601              MOV      r1,r0                 ;7502
00013c  f8d1314c          LDR      r3,[r1,#0x14c]        ;7502
000140  f8d1114c          LDR      r1,[r1,#0x14c]        ;7502
000144  f1010101          ADD      r1,r1,#1              ;7502
000148  4602              MOV      r2,r0                 ;7502
00014a  f8c2114c          STR      r1,[r2,#0x14c]        ;7502
00014e  eb030183          ADD      r1,r3,r3,LSL #2       ;7502
000152  4a30              LDR      r2,|L59.532|
000154  eb021101          ADD      r1,r2,r1,LSL #4       ;7502
000158  4608              MOV      r0,r1                 ;7502
00015a  492d              LDR      r1,|L59.528|
00015c  f7fffffe          BL       strcpy
000160  f04f0100          MOV      r1,#0                 ;7502
000164  4829              LDR      r0,|L59.524|
000166  f8d0014c          LDR      r0,[r0,#0x14c]        ;7502
00016a  eb000080          ADD      r0,r0,r0,LSL #2       ;7502
00016e  4a29              LDR      r2,|L59.532|
000170  eb021000          ADD      r0,r2,r0,LSL #4       ;7502
000174  7001              STRB     r1,[r0,#0]            ;7502
000176  f04f000b          MOV      r0,#0xb               ;7502
00017a  e781              B        |L59.128|
                  |L59.380|
00017c  e9d50100          LDRD     r0,r1,[r5,#0]         ;7504
000180  4606              MOV      r6,r0                 ;7504
000182  460f              MOV      r7,r1                 ;7504
000184  e9d40100          LDRD     r0,r1,[r4,#0]         ;7504
000188  4681              MOV      r9,r0                 ;7504
00018a  4632              MOV      r2,r6                 ;7504
00018c  463b              MOV      r3,r7                 ;7504
00018e  f7fffffe          BL       pow
000192  e9c40100          STRD     r0,r1,[r4,#0]         ;7504
000196  e036              B        |L59.518|
                  |L59.408|
000198  e9d51000          LDRD     r1,r0,[r5,#0]         ;7507
00019c  460e              MOV      r6,r1                 ;7507
00019e  4607              MOV      r7,r0                 ;7507
0001a0  e9d41000          LDRD     r1,r0,[r4,#0]         ;7507
0001a4  4689              MOV      r9,r1                 ;7507
0001a6  4682              MOV      r10,r0                ;7507
0001a8  4632              MOV      r2,r6                 ;7507
0001aa  463b              MOV      r3,r7                 ;7507
0001ac  4648              MOV      r0,r9                 ;7507
0001ae  4651              MOV      r1,r10                ;7507
0001b0  f7fffffe          BL       __aeabi_dmul
0001b4  e9c40100          STRD     r0,r1,[r4,#0]         ;7507
0001b8  e025              B        |L59.518|
                  |L59.442|
0001ba  f04f0100          MOV      r1,#0                 ;7510
0001be  4813              LDR      r0,|L59.524|
0001c0  f8c0114c          STR      r1,[r0,#0x14c]        ;7510
0001c4  4601              MOV      r1,r0                 ;7510
0001c6  f8d1314c          LDR      r3,[r1,#0x14c]        ;7510
0001ca  f8d1114c          LDR      r1,[r1,#0x14c]        ;7510
0001ce  f1010101          ADD      r1,r1,#1              ;7510
0001d2  4602              MOV      r2,r0                 ;7510
0001d4  f8c2114c          STR      r1,[r2,#0x14c]        ;7510
0001d8  eb030183          ADD      r1,r3,r3,LSL #2       ;7510
0001dc  4a0d              LDR      r2,|L59.532|
0001de  eb021101          ADD      r1,r2,r1,LSL #4       ;7510
0001e2  4608              MOV      r0,r1                 ;7510
0001e4  490a              LDR      r1,|L59.528|
0001e6  f7fffffe          BL       strcpy
0001ea  f04f0100          MOV      r1,#0                 ;7510
0001ee  4807              LDR      r0,|L59.524|
0001f0  f8d0014c          LDR      r0,[r0,#0x14c]        ;7510
0001f4  eb000080          ADD      r0,r0,r0,LSL #2       ;7510
0001f8  4a06              LDR      r2,|L59.532|
0001fa  eb021000          ADD      r0,r2,r0,LSL #4       ;7510
0001fe  7001              STRB     r1,[r0,#0]            ;7510
000200  f04f0025          MOV      r0,#0x25              ;7510
000204  e73c              B        |L59.128|
                  |L59.518|
000206  bf00              NOP                            ;7493
000208  2000              MOVS     r0,#0                 ;7512
00020a  e739              B        |L59.128|
;;;7514   
                          ENDP

                  |L59.524|
                          DCD      _setup+0xc000
                  |L59.528|
                          DCD      |symbol_number.478|
                  |L59.532|
                          DCD      _setup+0xb1ac

                          AREA ||i.execute_binary2||, CODE, READONLY, ALIGN=2

                  execute_binary2 PROC
;;;7537   
;;;7538       static int execute_binary2(                   /* ARGUMENTS                       */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;7539       double * left,                                /* pointer to the left operand     */
;;;7540       int operation,                                /* integer code for the operation  */
;;;7541       double * right)                               /* pointer to the right operand    */
;;;7542       {
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
;;;7543           static char name[] SET_TO "execute_binary2";
;;;7544           switch (operation)
00000a  f1a80005          SUB      r0,r8,#5
00000e  2805              CMP      r0,#5
000010  d27e              BCS      |L60.272|
000012  e8dff000          TBB      [pc,r0]
000016  0320              DCB      0x03,0x20
000018  56648600          DCB      0x56,0x64,0x86,0x00
;;;7545           {
;;;7546               case AND2:
;;;7547                   *left SET_TO ((*left IS 0.0) OR (*right IS 0.0)) ? 0.0 : 1.0;
00001c  e9d41000          LDRD     r1,r0,[r4,#0]
000020  460e              MOV      r6,r1
000022  4607              MOV      r7,r0
000024  2200              MOVS     r2,#0
000026  4613              MOV      r3,r2
000028  4630              MOV      r0,r6
00002a  4639              MOV      r1,r7
00002c  f7fffffe          BL       __aeabi_cdcmpeq
000030  d007              BEQ      |L60.66|
000032  e9d50100          LDRD     r0,r1,[r5,#0]
000036  4606              MOV      r6,r0
000038  2200              MOVS     r2,#0
00003a  4613              MOV      r3,r2
00003c  f7fffffe          BL       __aeabi_cdcmpeq
000040  d103              BNE      |L60.74|
                  |L60.66|
000042  f04f0000          MOV      r0,#0
000046  4601              MOV      r1,r0
000048  e002              B        |L60.80|
                  |L60.74|
00004a  f04f0000          MOV      r0,#0
00004e  4953              LDR      r1,|L60.412|
                  |L60.80|
000050  e9c40100          STRD     r0,r1,[r4,#0]
;;;7548                   break;
000054  e09e              B        |L60.404|
;;;7549               case EXCLUSIVE_OR:
;;;7550                   *left SET_TO (((*left IS 0.0) AND (*right ISNT 0.0)) OR
000056  e9d41000          LDRD     r1,r0,[r4,#0]
00005a  460e              MOV      r6,r1
00005c  4607              MOV      r7,r0
00005e  2200              MOVS     r2,#0
000060  4613              MOV      r3,r2
000062  4630              MOV      r0,r6
000064  4639              MOV      r1,r7
000066  f7fffffe          BL       __aeabi_cdcmpeq
00006a  d10a              BNE      |L60.130|
00006c  e9d51000          LDRD     r1,r0,[r5,#0]
000070  460e              MOV      r6,r1
000072  4607              MOV      r7,r0
000074  2200              MOVS     r2,#0
000076  4613              MOV      r3,r2
000078  4630              MOV      r0,r6
00007a  4639              MOV      r1,r7
00007c  f7fffffe          BL       __aeabi_cdcmpeq
000080  d115              BNE      |L60.174|
                  |L60.130|
;;;7551                       ((*left ISNT 0.0) AND (*right IS 0.0))) ? 1.0 : 0.0;
000082  e9d41000          LDRD     r1,r0,[r4,#0]
000086  460e              MOV      r6,r1
000088  4607              MOV      r7,r0
00008a  2200              MOVS     r2,#0
00008c  4613              MOV      r3,r2
00008e  4630              MOV      r0,r6
000090  4639              MOV      r1,r7
000092  f7fffffe          BL       __aeabi_cdcmpeq
000096  d00e              BEQ      |L60.182|
000098  e9d51000          LDRD     r1,r0,[r5,#0]
00009c  460e              MOV      r6,r1
00009e  4607              MOV      r7,r0
0000a0  2200              MOVS     r2,#0
0000a2  4613              MOV      r3,r2
0000a4  4630              MOV      r0,r6
0000a6  4639              MOV      r1,r7
0000a8  f7fffffe          BL       __aeabi_cdcmpeq
0000ac  d103              BNE      |L60.182|
                  |L60.174|
0000ae  f04f0000          MOV      r0,#0
0000b2  493a              LDR      r1,|L60.412|
0000b4  e002              B        |L60.188|
                  |L60.182|
0000b6  f04f0000          MOV      r0,#0
0000ba  4601              MOV      r1,r0
                  |L60.188|
0000bc  e9c40100          STRD     r0,r1,[r4,#0]
;;;7552                   break;
0000c0  e068              B        |L60.404|
;;;7553               case MINUS:
;;;7554                   *left SET_TO (*left - *right);
0000c2  e9d51000          LDRD     r1,r0,[r5,#0]
0000c6  460e              MOV      r6,r1
0000c8  4607              MOV      r7,r0
0000ca  e9d40100          LDRD     r0,r1,[r4,#0]
0000ce  4681              MOV      r9,r0
0000d0  4632              MOV      r2,r6
0000d2  463b              MOV      r3,r7
0000d4  f7fffffe          BL       __aeabi_dsub
0000d8  e9c40100          STRD     r0,r1,[r4,#0]
;;;7555                   break;
0000dc  e05a              B        |L60.404|
;;;7556               case NON_EXCLUSIVE_OR:
;;;7557                   *left SET_TO ((*left ISNT 0.0) OR (*right ISNT 0.0)) ? 1.0 : 0.0;
0000de  e9d41000          LDRD     r1,r0,[r4,#0]
0000e2  460e              MOV      r6,r1
0000e4  4607              MOV      r7,r0
0000e6  2200              MOVS     r2,#0
0000e8  4613              MOV      r3,r2
0000ea  4630              MOV      r0,r6
0000ec  4639              MOV      r1,r7
0000ee  f7fffffe          BL       __aeabi_cdcmpeq
0000f2  d10a              BNE      |L60.266|
0000f4  e9d51000          LDRD     r1,r0,[r5,#0]
0000f8  460e              MOV      r6,r1
0000fa  4607              MOV      r7,r0
0000fc  2200              MOVS     r2,#0
0000fe  4613              MOV      r3,r2
000100  4630              MOV      r0,r6
000102  4639              MOV      r1,r7
000104  f7fffffe          BL       __aeabi_cdcmpeq
000108  d005              BEQ      |L60.278|
                  |L60.266|
00010a  f04f0000          MOV      r0,#0
00010e  e000              B        |L60.274|
                  |L60.272|
000110  e018              B        |L60.324|
                  |L60.274|
000112  4922              LDR      r1,|L60.412|
000114  e002              B        |L60.284|
                  |L60.278|
000116  f04f0000          MOV      r0,#0
00011a  4601              MOV      r1,r0
                  |L60.284|
00011c  e9c40100          STRD     r0,r1,[r4,#0]
;;;7558                   break;
000120  e038              B        |L60.404|
;;;7559               case PLUS:
;;;7560                   *left SET_TO (*left + *right);
000122  e9d51000          LDRD     r1,r0,[r5,#0]
000126  460e              MOV      r6,r1
000128  4607              MOV      r7,r0
00012a  e9d41000          LDRD     r1,r0,[r4,#0]
00012e  4689              MOV      r9,r1
000130  4682              MOV      r10,r0
000132  4632              MOV      r2,r6
000134  463b              MOV      r3,r7
000136  4648              MOV      r0,r9
000138  4651              MOV      r1,r10
00013a  f7fffffe          BL       __aeabi_dadd
00013e  e9c40100          STRD     r0,r1,[r4,#0]
;;;7561                   break;
000142  e027              B        |L60.404|
                  |L60.324|
;;;7562               default:
;;;7563                   ERM(NCE_BUG_UNKNOWN_OPERATION);
000144  f04f0100          MOV      r1,#0
000148  4815              LDR      r0,|L60.416|
00014a  f8c0114c          STR      r1,[r0,#0x14c]
00014e  4601              MOV      r1,r0
000150  f8d1314c          LDR      r3,[r1,#0x14c]
000154  f8d1114c          LDR      r1,[r1,#0x14c]
000158  f1010101          ADD      r1,r1,#1
00015c  4602              MOV      r2,r0
00015e  f8c2114c          STR      r1,[r2,#0x14c]
000162  eb030183          ADD      r1,r3,r3,LSL #2
000166  f6a06254          SUB      r2,r0,#0xe54
00016a  eb021101          ADD      r1,r2,r1,LSL #4
00016e  4608              MOV      r0,r1
000170  490c              LDR      r1,|L60.420|
000172  f7fffffe          BL       strcpy
000176  f04f0100          MOV      r1,#0
00017a  4809              LDR      r0,|L60.416|
00017c  f8d0014c          LDR      r0,[r0,#0x14c]
000180  eb000080          ADD      r0,r0,r0,LSL #2
000184  4a08              LDR      r2,|L60.424|
000186  eb021000          ADD      r0,r2,r0,LSL #4
00018a  7001              STRB     r1,[r0,#0]
00018c  f04f0025          MOV      r0,#0x25
                  |L60.400|
;;;7564           }
;;;7565           return RS274NGC_OK;
;;;7566       }
000190  e8bd87f0          POP      {r4-r10,pc}
                  |L60.404|
000194  bf00              NOP                            ;7548
000196  2000              MOVS     r0,#0                 ;7565
000198  e7fa              B        |L60.400|
;;;7567   
                          ENDP

00019a  0000              DCW      0x0000
                  |L60.412|
                          DCD      0x3ff00000
                  |L60.416|
                          DCD      _setup+0xc000
                  |L60.420|
                          DCD      |symbol_number.479|
                  |L60.424|
                          DCD      _setup+0xb1ac

                          AREA ||i.execute_block||, CODE, READONLY, ALIGN=2

                  execute_block PROC
;;;7615   
;;;7616       static int execute_block(                     /* ARGUMENTS                                    */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;7617       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;7618       setup_pointer settings)                       /* pointer to machine settings                  */
;;;7619       {
000004  4604              MOV      r4,r0
000006  4688              MOV      r8,r1
;;;7620           static char name[] SET_TO "execute_block";
;;;7621           int status;
;;;7622   
;;;7623           if (block->comment[0] ISNT 0)
000008  7820              LDRB     r0,[r4,#0]
00000a  b360              CBZ      r0,|L61.102|
;;;7624           {
;;;7625               CHP(convert_comment(block->comment));
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       convert_comment
000012  0005              MOVS     r5,r0
000014  d027              BEQ      |L61.102|
000016  48ca              LDR      r0,|L61.832|
000018  f8d0014c          LDR      r0,[r0,#0x14c]
00001c  2831              CMP      r0,#0x31
00001e  da20              BGE      |L61.98|
000020  49c7              LDR      r1,|L61.832|
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  1c49              ADDS     r1,r1,#1
00002c  4ac4              LDR      r2,|L61.832|
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a26254          SUB      r2,r2,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  49c0              LDR      r1,|L61.836|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  48bd              LDR      r0,|L61.832|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4abc              LDR      r2,|L61.840|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  4628              MOV      r0,r5
                  |L61.94|
;;;7626           }
;;;7627           if (block->g_modes[3] ISNT -1)
;;;7628           {
;;;7629               CHP(convert_feed_mode(block->g_modes[3], settings));
;;;7630           }
;;;7631           if (block->f_number > -1.0)
;;;7632           {
;;;7633      /* handle elsewhere */
;;;7634               if (settings->feed_mode IS INVERSE_TIME);
;;;7635               else
;;;7636               {
;;;7637                   CHP(convert_feed_rate(block, settings));
;;;7638               }
;;;7639           }
;;;7640           if (block->s_number > -1.0)
;;;7641           {
;;;7642               CHP(convert_speed(block, settings));
;;;7643           }
;;;7644           if (block->t_number ISNT -1)
;;;7645           {
;;;7646               CHP(convert_tool_select(block, settings));
;;;7647           }
;;;7648           CHP(convert_m(block, settings));
;;;7649           CHP(convert_g(block, settings));
;;;7650           if (block->m_modes[4] ISNT -1)            /* converts m0, m1, m2, m30, or m60 */
;;;7651           {
;;;7652               status SET_TO convert_stop(block, settings);
;;;7653               if (status IS RS274NGC_EXIT)
;;;7654                   return RS274NGC_EXIT;
;;;7655               else if (status ISNT RS274NGC_OK)
;;;7656                   ERP(status);
;;;7657           }
;;;7658           return ((settings->probe_flag IS ON) ? RS274NGC_EXECUTE_FINISH: RS274NGC_OK);
;;;7659       }
00005e  e8bd81f0          POP      {r4-r8,pc}
                  |L61.98|
000062  4628              MOV      r0,r5                 ;7625
000064  e7fb              B        |L61.94|
                  |L61.102|
000066  f44f708e          MOV      r0,#0x11c             ;7627
00006a  5900              LDR      r0,[r0,r4]            ;7627
00006c  1c40              ADDS     r0,r0,#1              ;7627
00006e  d02e              BEQ      |L61.206|
000070  f44f718e          MOV      r1,#0x11c             ;7629
000074  5909              LDR      r1,[r1,r4]            ;7629
000076  4608              MOV      r0,r1                 ;7629
000078  4641              MOV      r1,r8                 ;7629
00007a  f7fffffe          BL       convert_feed_mode
00007e  0005              MOVS     r5,r0                 ;7629
000080  d025              BEQ      |L61.206|
000082  48af              LDR      r0,|L61.832|
000084  f8d0014c          LDR      r0,[r0,#0x14c]        ;7629
000088  2831              CMP      r0,#0x31              ;7629
00008a  da1e              BGE      |L61.202|
00008c  49ac              LDR      r1,|L61.832|
00008e  f8d1314c          LDR      r3,[r1,#0x14c]        ;7629
000092  f8d1114c          LDR      r1,[r1,#0x14c]        ;7629
000096  1c49              ADDS     r1,r1,#1              ;7629
000098  4aa9              LDR      r2,|L61.832|
00009a  f8c2114c          STR      r1,[r2,#0x14c]        ;7629
00009e  eb030183          ADD      r1,r3,r3,LSL #2       ;7629
0000a2  4aa9              LDR      r2,|L61.840|
0000a4  eb021101          ADD      r1,r2,r1,LSL #4       ;7629
0000a8  4608              MOV      r0,r1                 ;7629
0000aa  49a6              LDR      r1,|L61.836|
0000ac  f7fffffe          BL       strcpy
0000b0  f04f0100          MOV      r1,#0                 ;7629
0000b4  48a2              LDR      r0,|L61.832|
0000b6  f8d0014c          LDR      r0,[r0,#0x14c]        ;7629
0000ba  eb000080          ADD      r0,r0,r0,LSL #2       ;7629
0000be  4aa2              LDR      r2,|L61.840|
0000c0  eb021000          ADD      r0,r2,r0,LSL #4       ;7629
0000c4  7001              STRB     r1,[r0,#0]            ;7629
0000c6  4628              MOV      r0,r5                 ;7629
0000c8  e7c9              B        |L61.94|
                  |L61.202|
0000ca  4628              MOV      r0,r5                 ;7629
0000cc  e7c7              B        |L61.94|
                  |L61.206|
0000ce  f8d41108          LDR      r1,[r4,#0x108]        ;7631
0000d2  460e              MOV      r6,r1                 ;7631
0000d4  f8d4010c          LDR      r0,[r4,#0x10c]        ;7631
0000d8  4607              MOV      r7,r0                 ;7631
0000da  2200              MOVS     r2,#0                 ;7631
0000dc  4b9b              LDR      r3,|L61.844|
0000de  4630              MOV      r0,r6                 ;7631
0000e0  4639              MOV      r1,r7                 ;7631
0000e2  f7fffffe          BL       __aeabi_cdrcmple
0000e6  d22f              BCS      |L61.328|
0000e8  f8d803fc          LDR      r0,[r8,#0x3fc]        ;7634
0000ec  2801              CMP      r0,#1                 ;7634
0000ee  d02b              BEQ      |L61.328|
0000f0  4641              MOV      r1,r8                 ;7637
0000f2  4620              MOV      r0,r4                 ;7637
0000f4  f7fffffe          BL       convert_feed_rate
0000f8  0005              MOVS     r5,r0                 ;7637
0000fa  d025              BEQ      |L61.328|
0000fc  4890              LDR      r0,|L61.832|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]        ;7637
000102  2831              CMP      r0,#0x31              ;7637
000104  da1e              BGE      |L61.324|
000106  498e              LDR      r1,|L61.832|
000108  f8d1314c          LDR      r3,[r1,#0x14c]        ;7637
00010c  f8d1114c          LDR      r1,[r1,#0x14c]        ;7637
000110  1c49              ADDS     r1,r1,#1              ;7637
000112  4a8b              LDR      r2,|L61.832|
000114  f8c2114c          STR      r1,[r2,#0x14c]        ;7637
000118  eb030183          ADD      r1,r3,r3,LSL #2       ;7637
00011c  4a8a              LDR      r2,|L61.840|
00011e  eb021101          ADD      r1,r2,r1,LSL #4       ;7637
000122  4608              MOV      r0,r1                 ;7637
000124  4987              LDR      r1,|L61.836|
000126  f7fffffe          BL       strcpy
00012a  f04f0100          MOV      r1,#0                 ;7637
00012e  4884              LDR      r0,|L61.832|
000130  f8d0014c          LDR      r0,[r0,#0x14c]        ;7637
000134  eb000080          ADD      r0,r0,r0,LSL #2       ;7637
000138  4a83              LDR      r2,|L61.840|
00013a  eb021000          ADD      r0,r2,r0,LSL #4       ;7637
00013e  7001              STRB     r1,[r0,#0]            ;7637
000140  4628              MOV      r0,r5                 ;7637
000142  e78c              B        |L61.94|
                  |L61.324|
000144  4628              MOV      r0,r5                 ;7637
000146  e78a              B        |L61.94|
                  |L61.328|
000148  f50470e8          ADD      r0,r4,#0x1d0          ;7640
00014c  c803              LDM      r0,{r0,r1}            ;7640
00014e  4606              MOV      r6,r0                 ;7640
000150  2200              MOVS     r2,#0                 ;7640
000152  4b7e              LDR      r3,|L61.844|
000154  f7fffffe          BL       __aeabi_cdrcmple
000158  d22b              BCS      |L61.434|
00015a  4641              MOV      r1,r8                 ;7642
00015c  4620              MOV      r0,r4                 ;7642
00015e  f7fffffe          BL       convert_speed
000162  0005              MOVS     r5,r0                 ;7642
000164  d025              BEQ      |L61.434|
000166  4876              LDR      r0,|L61.832|
000168  f8d0014c          LDR      r0,[r0,#0x14c]        ;7642
00016c  2831              CMP      r0,#0x31              ;7642
00016e  da1e              BGE      |L61.430|
000170  4973              LDR      r1,|L61.832|
000172  f8d1314c          LDR      r3,[r1,#0x14c]        ;7642
000176  f8d1114c          LDR      r1,[r1,#0x14c]        ;7642
00017a  1c49              ADDS     r1,r1,#1              ;7642
00017c  4a70              LDR      r2,|L61.832|
00017e  f8c2114c          STR      r1,[r2,#0x14c]        ;7642
000182  eb030183          ADD      r1,r3,r3,LSL #2       ;7642
000186  4a70              LDR      r2,|L61.840|
000188  eb021101          ADD      r1,r2,r1,LSL #4       ;7642
00018c  4608              MOV      r0,r1                 ;7642
00018e  496d              LDR      r1,|L61.836|
000190  f7fffffe          BL       strcpy
000194  f04f0100          MOV      r1,#0                 ;7642
000198  4869              LDR      r0,|L61.832|
00019a  f8d0014c          LDR      r0,[r0,#0x14c]        ;7642
00019e  eb000080          ADD      r0,r0,r0,LSL #2       ;7642
0001a2  4a69              LDR      r2,|L61.840|
0001a4  eb021000          ADD      r0,r2,r0,LSL #4       ;7642
0001a8  7001              STRB     r1,[r0,#0]            ;7642
0001aa  4628              MOV      r0,r5                 ;7642
0001ac  e757              B        |L61.94|
                  |L61.430|
0001ae  4628              MOV      r0,r5                 ;7642
0001b0  e755              B        |L61.94|
                  |L61.434|
0001b2  f8d401d8          LDR      r0,[r4,#0x1d8]        ;7644
0001b6  1c40              ADDS     r0,r0,#1              ;7644
0001b8  d02b              BEQ      |L61.530|
0001ba  4641              MOV      r1,r8                 ;7646
0001bc  4620              MOV      r0,r4                 ;7646
0001be  f7fffffe          BL       convert_tool_select
0001c2  0005              MOVS     r5,r0                 ;7646
0001c4  d025              BEQ      |L61.530|
0001c6  485e              LDR      r0,|L61.832|
0001c8  f8d0014c          LDR      r0,[r0,#0x14c]        ;7646
0001cc  2831              CMP      r0,#0x31              ;7646
0001ce  da1e              BGE      |L61.526|
0001d0  495b              LDR      r1,|L61.832|
0001d2  f8d1314c          LDR      r3,[r1,#0x14c]        ;7646
0001d6  f8d1114c          LDR      r1,[r1,#0x14c]        ;7646
0001da  1c49              ADDS     r1,r1,#1              ;7646
0001dc  4a58              LDR      r2,|L61.832|
0001de  f8c2114c          STR      r1,[r2,#0x14c]        ;7646
0001e2  eb030183          ADD      r1,r3,r3,LSL #2       ;7646
0001e6  4a58              LDR      r2,|L61.840|
0001e8  eb021101          ADD      r1,r2,r1,LSL #4       ;7646
0001ec  4608              MOV      r0,r1                 ;7646
0001ee  4955              LDR      r1,|L61.836|
0001f0  f7fffffe          BL       strcpy
0001f4  f04f0100          MOV      r1,#0                 ;7646
0001f8  4851              LDR      r0,|L61.832|
0001fa  f8d0014c          LDR      r0,[r0,#0x14c]        ;7646
0001fe  eb000080          ADD      r0,r0,r0,LSL #2       ;7646
000202  4a51              LDR      r2,|L61.840|
000204  eb021000          ADD      r0,r2,r0,LSL #4       ;7646
000208  7001              STRB     r1,[r0,#0]            ;7646
00020a  4628              MOV      r0,r5                 ;7646
00020c  e727              B        |L61.94|
                  |L61.526|
00020e  4628              MOV      r0,r5                 ;7646
000210  e725              B        |L61.94|
                  |L61.530|
000212  4641              MOV      r1,r8                 ;7648
000214  4620              MOV      r0,r4                 ;7648
000216  f7fffffe          BL       convert_m
00021a  0005              MOVS     r5,r0                 ;7648
00021c  d025              BEQ      |L61.618|
00021e  4848              LDR      r0,|L61.832|
000220  f8d0014c          LDR      r0,[r0,#0x14c]        ;7648
000224  2831              CMP      r0,#0x31              ;7648
000226  da1e              BGE      |L61.614|
000228  4945              LDR      r1,|L61.832|
00022a  f8d1314c          LDR      r3,[r1,#0x14c]        ;7648
00022e  f8d1114c          LDR      r1,[r1,#0x14c]        ;7648
000232  1c49              ADDS     r1,r1,#1              ;7648
000234  4a42              LDR      r2,|L61.832|
000236  f8c2114c          STR      r1,[r2,#0x14c]        ;7648
00023a  eb030183          ADD      r1,r3,r3,LSL #2       ;7648
00023e  4a42              LDR      r2,|L61.840|
000240  eb021101          ADD      r1,r2,r1,LSL #4       ;7648
000244  4608              MOV      r0,r1                 ;7648
000246  493f              LDR      r1,|L61.836|
000248  f7fffffe          BL       strcpy
00024c  f04f0100          MOV      r1,#0                 ;7648
000250  483b              LDR      r0,|L61.832|
000252  f8d0014c          LDR      r0,[r0,#0x14c]        ;7648
000256  eb000080          ADD      r0,r0,r0,LSL #2       ;7648
00025a  4a3b              LDR      r2,|L61.840|
00025c  eb021000          ADD      r0,r2,r0,LSL #4       ;7648
000260  7001              STRB     r1,[r0,#0]            ;7648
000262  4628              MOV      r0,r5                 ;7648
000264  e6fb              B        |L61.94|
                  |L61.614|
000266  4628              MOV      r0,r5                 ;7648
000268  e6f9              B        |L61.94|
                  |L61.618|
00026a  4641              MOV      r1,r8                 ;7649
00026c  4620              MOV      r0,r4                 ;7649
00026e  f7fffffe          BL       convert_g
000272  0005              MOVS     r5,r0                 ;7649
000274  d025              BEQ      |L61.706|
000276  4832              LDR      r0,|L61.832|
000278  f8d0014c          LDR      r0,[r0,#0x14c]        ;7649
00027c  2831              CMP      r0,#0x31              ;7649
00027e  da1e              BGE      |L61.702|
000280  492f              LDR      r1,|L61.832|
000282  f8d1314c          LDR      r3,[r1,#0x14c]        ;7649
000286  f8d1114c          LDR      r1,[r1,#0x14c]        ;7649
00028a  1c49              ADDS     r1,r1,#1              ;7649
00028c  4a2c              LDR      r2,|L61.832|
00028e  f8c2114c          STR      r1,[r2,#0x14c]        ;7649
000292  eb030183          ADD      r1,r3,r3,LSL #2       ;7649
000296  4a2c              LDR      r2,|L61.840|
000298  eb021101          ADD      r1,r2,r1,LSL #4       ;7649
00029c  4608              MOV      r0,r1                 ;7649
00029e  4929              LDR      r1,|L61.836|
0002a0  f7fffffe          BL       strcpy
0002a4  f04f0100          MOV      r1,#0                 ;7649
0002a8  4825              LDR      r0,|L61.832|
0002aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;7649
0002ae  eb000080          ADD      r0,r0,r0,LSL #2       ;7649
0002b2  4a25              LDR      r2,|L61.840|
0002b4  eb021000          ADD      r0,r2,r0,LSL #4       ;7649
0002b8  7001              STRB     r1,[r0,#0]            ;7649
0002ba  4628              MOV      r0,r5                 ;7649
0002bc  e6cf              B        |L61.94|
                  |L61.702|
0002be  4628              MOV      r0,r5                 ;7649
0002c0  e6cd              B        |L61.94|
                  |L61.706|
0002c2  f44f70cc          MOV      r0,#0x198             ;7650
0002c6  5900              LDR      r0,[r0,r4]            ;7650
0002c8  1c40              ADDS     r0,r0,#1              ;7650
0002ca  d02e              BEQ      |L61.810|
0002cc  4641              MOV      r1,r8                 ;7652
0002ce  4620              MOV      r0,r4                 ;7652
0002d0  f7fffffe          BL       convert_stop
0002d4  4605              MOV      r5,r0                 ;7652
0002d6  2d01              CMP      r5,#1                 ;7653
0002d8  d100              BNE      |L61.732|
0002da  e6c0              B        |L61.94|
                  |L61.732|
0002dc  b32d              CBZ      r5,|L61.810|
0002de  4818              LDR      r0,|L61.832|
0002e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;7656
0002e4  2831              CMP      r0,#0x31              ;7656
0002e6  da1e              BGE      |L61.806|
0002e8  4915              LDR      r1,|L61.832|
0002ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;7656
0002ee  f8d1114c          LDR      r1,[r1,#0x14c]        ;7656
0002f2  1c49              ADDS     r1,r1,#1              ;7656
0002f4  4a12              LDR      r2,|L61.832|
0002f6  f8c2114c          STR      r1,[r2,#0x14c]        ;7656
0002fa  eb030183          ADD      r1,r3,r3,LSL #2       ;7656
0002fe  4a12              LDR      r2,|L61.840|
000300  eb021101          ADD      r1,r2,r1,LSL #4       ;7656
000304  4608              MOV      r0,r1                 ;7656
000306  490f              LDR      r1,|L61.836|
000308  f7fffffe          BL       strcpy
00030c  f04f0100          MOV      r1,#0                 ;7656
000310  480b              LDR      r0,|L61.832|
000312  f8d0014c          LDR      r0,[r0,#0x14c]        ;7656
000316  eb000080          ADD      r0,r0,r0,LSL #2       ;7656
00031a  4a0b              LDR      r2,|L61.840|
00031c  eb021000          ADD      r0,r2,r0,LSL #4       ;7656
000320  7001              STRB     r1,[r0,#0]            ;7656
000322  4628              MOV      r0,r5                 ;7656
000324  e69b              B        |L61.94|
                  |L61.806|
000326  4628              MOV      r0,r5                 ;7656
000328  e699              B        |L61.94|
                  |L61.810|
00032a  f24b1070          MOV      r0,#0xb170            ;7658
00032e  f8500008          LDR      r0,[r0,r8]            ;7658
000332  2801              CMP      r0,#1                 ;7658
000334  d101              BNE      |L61.826|
000336  2002              MOVS     r0,#2                 ;7658
000338  e691              B        |L61.94|
                  |L61.826|
00033a  2000              MOVS     r0,#0                 ;7658
00033c  e68f              B        |L61.94|
;;;7660   
                          ENDP

00033e  0000              DCW      0x0000
                  |L61.832|
                          DCD      _setup+0xc000
                  |L61.836|
                          DCD      |symbol_number.480|
                  |L61.840|
                          DCD      _setup+0xb1ac
                  |L61.844|
                          DCD      0xbff00000

                          AREA ||i.execute_unary||, CODE, READONLY, ALIGN=2

                  execute_unary PROC
;;;7690   
;;;7691       static int execute_unary(                     /* ARGUMENTS                       */
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;7692       double * double_ptr,                          /* pointer to the operand          */
;;;7693       int operation)                                /* integer code for the operation  */
;;;7694       {
000004  4680              MOV      r8,r0
000006  4689              MOV      r9,r1
;;;7695           static char name[] SET_TO "execute_unary";
;;;7696           switch (operation)
000008  f1b90f0e          CMP      r9,#0xe
00000c  d273              BCS      |L62.246|
00000e  e8dff009          TBB      [pc,r9]
000012  7207              DCB      0x72,0x07
000014  1b7372ca          DCB      0x1b,0x73,0x72,0xca
000018  dfe7f8f6          DCB      0xdf,0xe7,0xf8,0xf6
00001c  f5f4f3f2          DCB      0xf5,0xf4,0xf3,0xf2
;;;7697           {
;;;7698               case ABS:
;;;7699                   if (*double_ptr < 0.0)
000020  e9d80100          LDRD     r0,r1,[r8,#0]
000024  4604              MOV      r4,r0
000026  2200              MOVS     r2,#0
000028  4613              MOV      r3,r2
00002a  f7fffffe          BL       __aeabi_cdcmple
00002e  d20a              BCS      |L62.70|
;;;7700                       *double_ptr SET_TO (-1.0 * *double_ptr);
000030  e9d81000          LDRD     r1,r0,[r8,#0]
000034  460c              MOV      r4,r1
000036  4622              MOV      r2,r4
000038  4603              MOV      r3,r0
00003a  2000              MOVS     r0,#0
00003c  49eb              LDR      r1,|L62.1004|
00003e  f7fffffe          BL       __aeabi_dmul
000042  e9c80100          STRD     r0,r1,[r8,#0]
                  |L62.70|
;;;7701                   break;
000046  e1ce              B        |L62.998|
;;;7702               case ACOS:
;;;7703                   CHK(((*double_ptr < -1.0) OR (*double_ptr > 1.0)),
000048  e9d81000          LDRD     r1,r0,[r8,#0]
00004c  460c              MOV      r4,r1
00004e  4605              MOV      r5,r0
000050  2200              MOVS     r2,#0
000052  4be6              LDR      r3,|L62.1004|
000054  4620              MOV      r0,r4
000056  4629              MOV      r1,r5
000058  f7fffffe          BL       __aeabi_cdcmple
00005c  d30a              BCC      |L62.116|
00005e  e9d81000          LDRD     r1,r0,[r8,#0]
000062  460c              MOV      r4,r1
000064  4605              MOV      r5,r0
000066  2200              MOVS     r2,#0
000068  4be1              LDR      r3,|L62.1008|
00006a  4620              MOV      r0,r4
00006c  4629              MOV      r1,r5
00006e  f7fffffe          BL       __aeabi_cdrcmple
000072  d227              BCS      |L62.196|
                  |L62.116|
000074  f04f0100          MOV      r1,#0
000078  48de              LDR      r0,|L62.1012|
00007a  f8c0114c          STR      r1,[r0,#0x14c]
00007e  4601              MOV      r1,r0
000080  f8d1314c          LDR      r3,[r1,#0x14c]
000084  f8d1114c          LDR      r1,[r1,#0x14c]
000088  f1010101          ADD      r1,r1,#1
00008c  4602              MOV      r2,r0
00008e  f8c2114c          STR      r1,[r2,#0x14c]
000092  eb030183          ADD      r1,r3,r3,LSL #2
000096  f6a06254          SUB      r2,r0,#0xe54
00009a  eb021101          ADD      r1,r2,r1,LSL #4
00009e  4608              MOV      r0,r1
0000a0  49d5              LDR      r1,|L62.1016|
0000a2  f7fffffe          BL       strcpy
0000a6  f04f0100          MOV      r1,#0
0000aa  48d2              LDR      r0,|L62.1012|
0000ac  f8d0014c          LDR      r0,[r0,#0x14c]
0000b0  eb000080          ADD      r0,r0,r0,LSL #2
0000b4  4ad1              LDR      r2,|L62.1020|
0000b6  eb021000          ADD      r0,r2,r0,LSL #4
0000ba  7001              STRB     r1,[r0,#0]
0000bc  f04f0008          MOV      r0,#8
                  |L62.192|
;;;7704                       NCE_ARGUMENT_TO_ACOS_OUT_OF_RANGE);
;;;7705                   *double_ptr SET_TO acos(*double_ptr);
;;;7706                   *double_ptr SET_TO ((*double_ptr * 180.0)/ PI);
;;;7707                   break;
;;;7708               case ASIN:
;;;7709                   CHK(((*double_ptr < -1.0) OR (*double_ptr > 1.0)),
;;;7710                       NCE_ARGUMENT_TO_ASIN_OUT_OF_RANGE);
;;;7711                   *double_ptr SET_TO asin(*double_ptr);
;;;7712                   *double_ptr SET_TO ((*double_ptr * 180.0)/ PI);
;;;7713                   break;
;;;7714               case COS:
;;;7715                   *double_ptr SET_TO cos((*double_ptr * PI)/180.0);
;;;7716                   break;
;;;7717               case EXP:
;;;7718                   *double_ptr SET_TO exp(*double_ptr);
;;;7719                   break;
;;;7720               case FIX:
;;;7721                   *double_ptr SET_TO floor(*double_ptr);
;;;7722                   break;
;;;7723               case FUP:
;;;7724                   *double_ptr SET_TO ceil(*double_ptr);
;;;7725                   break;
;;;7726               case LN:
;;;7727                   CHK((*double_ptr <= 0.0), NCE_ZERO_OR_NEGATIVE_ARGUMENT_TO_LN);
;;;7728                   *double_ptr SET_TO log(*double_ptr);
;;;7729                   break;
;;;7730               case ROUND:
;;;7731                   *double_ptr SET_TO (double)
;;;7732                       ((int) (*double_ptr + ((*double_ptr < 0.0) ? -0.5 : 0.5)));
;;;7733                   break;
;;;7734               case SIN:
;;;7735                   *double_ptr SET_TO sin((*double_ptr * PI)/180.0);
;;;7736                   break;
;;;7737               case SQRT:
;;;7738                   CHK((*double_ptr < 0.0), NCE_NEGATIVE_ARGUMENT_TO_SQRT);
;;;7739                   *double_ptr SET_TO sqrt(*double_ptr);
;;;7740                   break;
;;;7741               case TAN:
;;;7742                   *double_ptr SET_TO tan((*double_ptr * PI)/180.0);
;;;7743                   break;
;;;7744               default:
;;;7745                   ERM(NCE_BUG_UNKNOWN_OPERATION);
;;;7746           }
;;;7747           return RS274NGC_OK;
;;;7748       }
0000c0  e8bd9ff0          POP      {r4-r12,pc}
                  |L62.196|
0000c4  e9d80100          LDRD     r0,r1,[r8,#0]         ;7705
0000c8  4602              MOV      r2,r0                 ;7705
0000ca  f7fffffe          BL       acos
0000ce  e9c80100          STRD     r0,r1,[r8,#0]         ;7705
0000d2  e9d81000          LDRD     r1,r0,[r8,#0]         ;7706
0000d6  460c              MOV      r4,r1                 ;7706
0000d8  4605              MOV      r5,r0                 ;7706
0000da  2200              MOVS     r2,#0                 ;7706
0000dc  4bc8              LDR      r3,|L62.1024|
0000de  4620              MOV      r0,r4                 ;7706
0000e0  4629              MOV      r1,r5                 ;7706
0000e2  f7fffffe          BL       __aeabi_dmul
0000e6  4606              MOV      r6,r0                 ;7706
0000e8  4ac6              LDR      r2,|L62.1028|
0000ea  4bc7              LDR      r3,|L62.1032|
0000ec  f7fffffe          BL       __aeabi_ddiv
0000f0  e9c80100          STRD     r0,r1,[r8,#0]         ;7706
0000f4  e177              B        |L62.998|
                  |L62.246|
0000f6  e150              B        |L62.922|
0000f8  e9d81000          LDRD     r1,r0,[r8,#0]         ;7709
0000fc  460c              MOV      r4,r1                 ;7709
0000fe  4605              MOV      r5,r0                 ;7709
000100  2200              MOVS     r2,#0                 ;7709
000102  4bba              LDR      r3,|L62.1004|
000104  4620              MOV      r0,r4                 ;7709
000106  4629              MOV      r1,r5                 ;7709
000108  f7fffffe          BL       __aeabi_cdcmple
00010c  d30a              BCC      |L62.292|
00010e  e9d81000          LDRD     r1,r0,[r8,#0]         ;7709
000112  460c              MOV      r4,r1                 ;7709
000114  4605              MOV      r5,r0                 ;7709
000116  2200              MOVS     r2,#0                 ;7709
000118  4bb5              LDR      r3,|L62.1008|
00011a  4620              MOV      r0,r4                 ;7709
00011c  4629              MOV      r1,r5                 ;7709
00011e  f7fffffe          BL       __aeabi_cdrcmple
000122  d224              BCS      |L62.366|
                  |L62.292|
000124  f04f0100          MOV      r1,#0                 ;7709
000128  48b2              LDR      r0,|L62.1012|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;7709
00012e  4601              MOV      r1,r0                 ;7709
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;7709
000134  f8d1214c          LDR      r2,[r1,#0x14c]        ;7709
000138  f1020201          ADD      r2,r2,#1              ;7709
00013c  f8c1214c          STR      r2,[r1,#0x14c]        ;7709
000140  eb030183          ADD      r1,r3,r3,LSL #2       ;7709
000144  4aad              LDR      r2,|L62.1020|
000146  eb021101          ADD      r1,r2,r1,LSL #4       ;7709
00014a  4608              MOV      r0,r1                 ;7709
00014c  49aa              LDR      r1,|L62.1016|
00014e  f7fffffe          BL       strcpy
000152  f04f0100          MOV      r1,#0                 ;7709
000156  48a7              LDR      r0,|L62.1012|
000158  f8d0014c          LDR      r0,[r0,#0x14c]        ;7709
00015c  eb000080          ADD      r0,r0,r0,LSL #2       ;7709
000160  4aa6              LDR      r2,|L62.1020|
000162  eb021000          ADD      r0,r2,r0,LSL #4       ;7709
000166  7001              STRB     r1,[r0,#0]            ;7709
000168  f04f0009          MOV      r0,#9                 ;7709
00016c  e7a8              B        |L62.192|
                  |L62.366|
00016e  e9d81000          LDRD     r1,r0,[r8,#0]         ;7711
000172  460a              MOV      r2,r1                 ;7711
000174  4603              MOV      r3,r0                 ;7711
000176  4610              MOV      r0,r2                 ;7711
000178  4619              MOV      r1,r3                 ;7711
00017a  f7fffffe          BL       asin
00017e  e9c80100          STRD     r0,r1,[r8,#0]         ;7711
000182  e9d81000          LDRD     r1,r0,[r8,#0]         ;7712
000186  460c              MOV      r4,r1                 ;7712
000188  4605              MOV      r5,r0                 ;7712
00018a  2200              MOVS     r2,#0                 ;7712
00018c  4b9c              LDR      r3,|L62.1024|
00018e  4620              MOV      r0,r4                 ;7712
000190  4629              MOV      r1,r5                 ;7712
000192  f7fffffe          BL       __aeabi_dmul
000196  4606              MOV      r6,r0                 ;7712
000198  4a9a              LDR      r2,|L62.1028|
00019a  4b9b              LDR      r3,|L62.1032|
00019c  f7fffffe          BL       __aeabi_ddiv
0001a0  e9c80100          STRD     r0,r1,[r8,#0]         ;7712
0001a4  e11f              B        |L62.998|
0001a6  e9d81000          LDRD     r1,r0,[r8,#0]         ;7715
0001aa  460c              MOV      r4,r1                 ;7715
0001ac  4605              MOV      r5,r0                 ;7715
0001ae  4a95              LDR      r2,|L62.1028|
0001b0  4b95              LDR      r3,|L62.1032|
0001b2  4620              MOV      r0,r4                 ;7715
0001b4  4629              MOV      r1,r5                 ;7715
0001b6  f7fffffe          BL       __aeabi_dmul
0001ba  4606              MOV      r6,r0                 ;7715
0001bc  2200              MOVS     r2,#0                 ;7715
0001be  4b90              LDR      r3,|L62.1024|
0001c0  f7fffffe          BL       __aeabi_ddiv
0001c4  4682              MOV      r10,r0                ;7715
0001c6  f7fffffe          BL       ||cos||
0001ca  e9c80100          STRD     r0,r1,[r8,#0]         ;7715
0001ce  e10a              B        |L62.998|
0001d0  e9d80100          LDRD     r0,r1,[r8,#0]         ;7718
0001d4  4602              MOV      r2,r0                 ;7718
0001d6  f7fffffe          BL       exp
0001da  e9c80100          STRD     r0,r1,[r8,#0]         ;7718
0001de  e102              B        |L62.998|
0001e0  e9d81000          LDRD     r1,r0,[r8,#0]         ;7721
0001e4  460a              MOV      r2,r1                 ;7721
0001e6  4603              MOV      r3,r0                 ;7721
0001e8  4610              MOV      r0,r2                 ;7721
0001ea  4619              MOV      r1,r3                 ;7721
0001ec  f7fffffe          BL       floor
0001f0  e9c80100          STRD     r0,r1,[r8,#0]         ;7721
0001f4  e0f7              B        |L62.998|
0001f6  e0bb              B        |L62.880|
0001f8  e07e              B        |L62.760|
0001fa  e068              B        |L62.718|
0001fc  e045              B        |L62.650|
0001fe  e00b              B        |L62.536|
000200  e7ff              B        |L62.514|
                  |L62.514|
000202  e9d81000          LDRD     r1,r0,[r8,#0]         ;7724
000206  460a              MOV      r2,r1                 ;7724
000208  4603              MOV      r3,r0                 ;7724
00020a  4610              MOV      r0,r2                 ;7724
00020c  4619              MOV      r1,r3                 ;7724
00020e  f7fffffe          BL       ceil
000212  e9c80100          STRD     r0,r1,[r8,#0]         ;7724
000216  e0e6              B        |L62.998|
                  |L62.536|
000218  e9d80100          LDRD     r0,r1,[r8,#0]         ;7727
00021c  4604              MOV      r4,r0                 ;7727
00021e  2200              MOVS     r2,#0                 ;7727
000220  4613              MOV      r3,r2                 ;7727
000222  f7fffffe          BL       __aeabi_cdcmple
000226  d825              BHI      |L62.628|
000228  f04f0100          MOV      r1,#0                 ;7727
00022c  4871              LDR      r0,|L62.1012|
00022e  f8c0114c          STR      r1,[r0,#0x14c]        ;7727
000232  4601              MOV      r1,r0                 ;7727
000234  f8d1314c          LDR      r3,[r1,#0x14c]        ;7727
000238  f8d1114c          LDR      r1,[r1,#0x14c]        ;7727
00023c  f1010101          ADD      r1,r1,#1              ;7727
000240  4602              MOV      r2,r0                 ;7727
000242  f8c2114c          STR      r1,[r2,#0x14c]        ;7727
000246  eb030183          ADD      r1,r3,r3,LSL #2       ;7727
00024a  4a6c              LDR      r2,|L62.1020|
00024c  eb021101          ADD      r1,r2,r1,LSL #4       ;7727
000250  4608              MOV      r0,r1                 ;7727
000252  4969              LDR      r1,|L62.1016|
000254  f7fffffe          BL       strcpy
000258  f04f0100          MOV      r1,#0                 ;7727
00025c  4865              LDR      r0,|L62.1012|
00025e  f8d0014c          LDR      r0,[r0,#0x14c]        ;7727
000262  eb000080          ADD      r0,r0,r0,LSL #2       ;7727
000266  4a65              LDR      r2,|L62.1020|
000268  eb021000          ADD      r0,r2,r0,LSL #4       ;7727
00026c  7001              STRB     r1,[r0,#0]            ;7727
00026e  f04f00c4          MOV      r0,#0xc4              ;7727
000272  e725              B        |L62.192|
                  |L62.628|
000274  e9d81000          LDRD     r1,r0,[r8,#0]         ;7728
000278  460a              MOV      r2,r1                 ;7728
00027a  4603              MOV      r3,r0                 ;7728
00027c  4610              MOV      r0,r2                 ;7728
00027e  4619              MOV      r1,r3                 ;7728
000280  f7fffffe          BL       log
000284  e9c80100          STRD     r0,r1,[r8,#0]         ;7728
000288  e0ad              B        |L62.998|
                  |L62.650|
00028a  e9d81000          LDRD     r1,r0,[r8,#0]         ;7731
00028e  468b              MOV      r11,r1                ;7731
000290  4684              MOV      r12,r0                ;7731
000292  2200              MOVS     r2,#0                 ;7731
000294  4613              MOV      r3,r2                 ;7731
000296  4658              MOV      r0,r11                ;7731
000298  4661              MOV      r1,r12                ;7731
00029a  f7fffffe          BL       __aeabi_cdcmple
00029e  d202              BCS      |L62.678|
0002a0  2200              MOVS     r2,#0                 ;7732
0002a2  4b5a              LDR      r3,|L62.1036|
0002a4  e001              B        |L62.682|
                  |L62.678|
0002a6  2200              MOVS     r2,#0                 ;7732
0002a8  4b59              LDR      r3,|L62.1040|
                  |L62.682|
0002aa  4616              MOV      r6,r2                 ;7732
0002ac  e9d81000          LDRD     r1,r0,[r8,#0]         ;7732
0002b0  468b              MOV      r11,r1                ;7732
0002b2  4684              MOV      r12,r0                ;7732
0002b4  4658              MOV      r0,r11                ;7732
0002b6  4661              MOV      r1,r12                ;7732
0002b8  f7fffffe          BL       __aeabi_dadd
0002bc  4604              MOV      r4,r0                 ;7732
0002be  f7fffffe          BL       __aeabi_d2iz
0002c2  4682              MOV      r10,r0                ;7732
0002c4  f7fffffe          BL       __aeabi_i2d
0002c8  e9c80100          STRD     r0,r1,[r8,#0]         ;7732
0002cc  e08b              B        |L62.998|
                  |L62.718|
0002ce  e9d81000          LDRD     r1,r0,[r8,#0]         ;7735
0002d2  460c              MOV      r4,r1                 ;7735
0002d4  4605              MOV      r5,r0                 ;7735
0002d6  4a4b              LDR      r2,|L62.1028|
0002d8  4b4b              LDR      r3,|L62.1032|
0002da  4620              MOV      r0,r4                 ;7735
0002dc  4629              MOV      r1,r5                 ;7735
0002de  f7fffffe          BL       __aeabi_dmul
0002e2  4606              MOV      r6,r0                 ;7735
0002e4  2200              MOVS     r2,#0                 ;7735
0002e6  4b46              LDR      r3,|L62.1024|
0002e8  f7fffffe          BL       __aeabi_ddiv
0002ec  4682              MOV      r10,r0                ;7735
0002ee  f7fffffe          BL       ||sin||
0002f2  e9c80100          STRD     r0,r1,[r8,#0]         ;7735
0002f6  e076              B        |L62.998|
                  |L62.760|
0002f8  e9d81000          LDRD     r1,r0,[r8,#0]         ;7738
0002fc  460c              MOV      r4,r1                 ;7738
0002fe  4605              MOV      r5,r0                 ;7738
000300  2200              MOVS     r2,#0                 ;7738
000302  4613              MOV      r3,r2                 ;7738
000304  4620              MOV      r0,r4                 ;7738
000306  4629              MOV      r1,r5                 ;7738
000308  f7fffffe          BL       __aeabi_cdcmple
00030c  d225              BCS      |L62.858|
00030e  f04f0100          MOV      r1,#0                 ;7738
000312  4838              LDR      r0,|L62.1012|
000314  f8c0114c          STR      r1,[r0,#0x14c]        ;7738
000318  4601              MOV      r1,r0                 ;7738
00031a  f8d1314c          LDR      r3,[r1,#0x14c]        ;7738
00031e  f8d1114c          LDR      r1,[r1,#0x14c]        ;7738
000322  f1010101          ADD      r1,r1,#1              ;7738
000326  4602              MOV      r2,r0                 ;7738
000328  f8c2114c          STR      r1,[r2,#0x14c]        ;7738
00032c  eb030183          ADD      r1,r3,r3,LSL #2       ;7738
000330  4a32              LDR      r2,|L62.1020|
000332  eb021101          ADD      r1,r2,r1,LSL #4       ;7738
000336  4608              MOV      r0,r1                 ;7738
000338  492f              LDR      r1,|L62.1016|
00033a  f7fffffe          BL       strcpy
00033e  f04f0100          MOV      r1,#0                 ;7738
000342  482c              LDR      r0,|L62.1012|
000344  f8d0014c          LDR      r0,[r0,#0x14c]        ;7738
000348  eb000080          ADD      r0,r0,r0,LSL #2       ;7738
00034c  4a2b              LDR      r2,|L62.1020|
00034e  eb021000          ADD      r0,r2,r0,LSL #4       ;7738
000352  7001              STRB     r1,[r0,#0]            ;7738
000354  f04f0079          MOV      r0,#0x79              ;7738
000358  e6b2              B        |L62.192|
                  |L62.858|
00035a  e9d81000          LDRD     r1,r0,[r8,#0]         ;7739
00035e  460a              MOV      r2,r1                 ;7739
000360  4603              MOV      r3,r0                 ;7739
000362  4610              MOV      r0,r2                 ;7739
000364  4619              MOV      r1,r3                 ;7739
000366  f7fffffe          BL       sqrt
00036a  e9c80100          STRD     r0,r1,[r8,#0]         ;7739
00036e  e03a              B        |L62.998|
                  |L62.880|
000370  e9d81000          LDRD     r1,r0,[r8,#0]         ;7742
000374  460c              MOV      r4,r1                 ;7742
000376  4605              MOV      r5,r0                 ;7742
000378  4a22              LDR      r2,|L62.1028|
00037a  4b23              LDR      r3,|L62.1032|
00037c  4620              MOV      r0,r4                 ;7742
00037e  4629              MOV      r1,r5                 ;7742
000380  f7fffffe          BL       __aeabi_dmul
000384  4606              MOV      r6,r0                 ;7742
000386  2200              MOVS     r2,#0                 ;7742
000388  4b1d              LDR      r3,|L62.1024|
00038a  f7fffffe          BL       __aeabi_ddiv
00038e  4682              MOV      r10,r0                ;7742
000390  f7fffffe          BL       tan
000394  e9c80100          STRD     r0,r1,[r8,#0]         ;7742
000398  e025              B        |L62.998|
                  |L62.922|
00039a  f04f0100          MOV      r1,#0                 ;7745
00039e  4815              LDR      r0,|L62.1012|
0003a0  f8c0114c          STR      r1,[r0,#0x14c]        ;7745
0003a4  4601              MOV      r1,r0                 ;7745
0003a6  f8d1314c          LDR      r3,[r1,#0x14c]        ;7745
0003aa  f8d1114c          LDR      r1,[r1,#0x14c]        ;7745
0003ae  f1010101          ADD      r1,r1,#1              ;7745
0003b2  4602              MOV      r2,r0                 ;7745
0003b4  f8c2114c          STR      r1,[r2,#0x14c]        ;7745
0003b8  eb030183          ADD      r1,r3,r3,LSL #2       ;7745
0003bc  4a0f              LDR      r2,|L62.1020|
0003be  eb021101          ADD      r1,r2,r1,LSL #4       ;7745
0003c2  4608              MOV      r0,r1                 ;7745
0003c4  490c              LDR      r1,|L62.1016|
0003c6  f7fffffe          BL       strcpy
0003ca  f04f0100          MOV      r1,#0                 ;7745
0003ce  4809              LDR      r0,|L62.1012|
0003d0  f8d0014c          LDR      r0,[r0,#0x14c]        ;7745
0003d4  eb000080          ADD      r0,r0,r0,LSL #2       ;7745
0003d8  4a08              LDR      r2,|L62.1020|
0003da  eb021000          ADD      r0,r2,r0,LSL #4       ;7745
0003de  7001              STRB     r1,[r0,#0]            ;7745
0003e0  f04f0025          MOV      r0,#0x25              ;7745
0003e4  e66c              B        |L62.192|
                  |L62.998|
0003e6  bf00              NOP                            ;7701
0003e8  2000              MOVS     r0,#0                 ;7747
0003ea  e669              B        |L62.192|
;;;7749   
                          ENDP

                  |L62.1004|
                          DCD      0xbff00000
                  |L62.1008|
                          DCD      0x3ff00000
                  |L62.1012|
                          DCD      _setup+0xc000
                  |L62.1016|
                          DCD      |symbol_number.481|
                  |L62.1020|
                          DCD      _setup+0xb1ac
                  |L62.1024|
                          DCD      0x40668000
                  |L62.1028|
                          DCD      0x54442d18
                  |L62.1032|
                          DCD      0x400921fb
                  |L62.1036|
                          DCD      0xbfe00000
                  |L62.1040|
                          DCD      0x3fe00000

                          AREA ||i.find_arc_length||, CODE, READONLY, ALIGN=1

                  find_arc_length PROC
;;;7784   
;;;7785       static double find_arc_length(                /* ARGUMENTS                          */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;7786       double x1,                                    /* X-coordinate of start point        */
;;;7787       double y1,                                    /* Y-coordinate of start point        */
;;;7788       double z1,                                    /* Z-coordinate of start point        */
;;;7789       double center_x,                              /* X-coordinate of arc center         */
;;;7790       double center_y,                              /* Y-coordinate of arc center         */
;;;7791       int turn,                                     /* no. of full or partial circles CCW */
;;;7792       double x2,                                    /* X-coordinate of end point          */
;;;7793       double y2,                                    /* Y-coordinate of end point          */
;;;7794       double z2)                                    /* Z-coordinate of end point          */
;;;7795       {
000004  b08d              SUB      sp,sp,#0x34
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  e9ddab18          LDRD     r10,r11,[sp,#0x60]
;;;7796           double radius;
;;;7797           double theta;                             /* amount of turn of arc in radians */
;;;7798   
;;;7799           radius SET_TO hypot((center_x - x1), (center_y - y1));
000012  4642              MOV      r2,r8
000014  464b              MOV      r3,r9
000016  e9dd011a          LDRD     r0,r1,[sp,#0x68]
00001a  f7fffffe          BL       __aeabi_dsub
00001e  4652              MOV      r2,r10
000020  465b              MOV      r3,r11
000022  e9cd0108          STRD     r0,r1,[sp,#0x20]
000026  4630              MOV      r0,r6
000028  4639              MOV      r1,r7
00002a  f7fffffe          BL       __aeabi_drsub
00002e  e9cd0106          STRD     r0,r1,[sp,#0x18]
000032  e9dd2308          LDRD     r2,r3,[sp,#0x20]
000036  f7fffffe          BL       hypot
00003a  e9cd010a          STRD     r0,r1,[sp,#0x28]
;;;7800           theta SET_TO find_turn(x1, y1, center_x, center_y, turn, x2, y2);
00003e  e9dd0120          LDRD     r0,r1,[sp,#0x80]
000042  e9cd0108          STRD     r0,r1,[sp,#0x20]
000046  e9dd011e          LDRD     r0,r1,[sp,#0x78]
00004a  e9cd0106          STRD     r0,r1,[sp,#0x18]
00004e  981c              LDR      r0,[sp,#0x70]
000050  9004              STR      r0,[sp,#0x10]
000052  e9dd011a          LDRD     r0,r1,[sp,#0x68]
000056  4642              MOV      r2,r8
000058  464b              MOV      r3,r9
00005a  e9cdab00          STRD     r10,r11,[sp,#0]
00005e  e9cd0102          STRD     r0,r1,[sp,#8]
000062  4630              MOV      r0,r6
000064  4639              MOV      r1,r7
000066  f7fffffe          BL       find_turn
00006a  4604              MOV      r4,r0
00006c  460d              MOV      r5,r1
;;;7801           if (z2 IS z1)
00006e  e9dd2316          LDRD     r2,r3,[sp,#0x58]
000072  e9dd0122          LDRD     r0,r1,[sp,#0x88]
000076  f7fffffe          BL       __aeabi_cdcmpeq
00007a  d10b              BNE      |L63.148|
;;;7802               return (radius * fabs(theta));
00007c  f0254000          BIC      r0,r5,#0x80000000
000080  e9cd4008          STRD     r4,r0,[sp,#0x20]
000084  4620              MOV      r0,r4
000086  a909              ADD      r1,sp,#0x24
000088  c90e              LDM      r1,{r1-r3}
00008a  f7fffffe          BL       __aeabi_dmul
                  |L63.142|
;;;7803           else
;;;7804               return hypot((radius * theta), (z2 - z1));
;;;7805       }
00008e  b00d              ADD      sp,sp,#0x34
000090  e8bd8ff0          POP      {r4-r11,pc}
                  |L63.148|
000094  e9dd2316          LDRD     r2,r3,[sp,#0x58]      ;7804
000098  e9dd0122          LDRD     r0,r1,[sp,#0x88]      ;7804
00009c  f7fffffe          BL       __aeabi_dsub
0000a0  4622              MOV      r2,r4                 ;7804
0000a2  462b              MOV      r3,r5                 ;7804
0000a4  e9cd0108          STRD     r0,r1,[sp,#0x20]      ;7804
0000a8  e9dd010a          LDRD     r0,r1,[sp,#0x28]      ;7804
0000ac  f7fffffe          BL       __aeabi_dmul
0000b0  e9cd0106          STRD     r0,r1,[sp,#0x18]      ;7804
0000b4  e9dd2308          LDRD     r2,r3,[sp,#0x20]      ;7804
0000b8  f7fffffe          BL       hypot
0000bc  e7e7              B        |L63.142|
;;;7806   
                          ENDP


                          AREA ||i.find_ends||, CODE, READONLY, ALIGN=2

                  find_ends PROC
;;;7846   
;;;7847       static int find_ends(                         /* ARGUMENTS                                    */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;7848       block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;7849       setup_pointer settings,                       /* pointer to machine settings                  */
;;;7850       double * px,                                  /* pointer to end_x                             */
;;;7851       double * py,                                  /* pointer to end_y                             */
;;;7852       double * pz                                   /* pointer to end_z                             */
;;;7853   #ifdef AA
;;;7854       , double * AA_p                               /* pointer to end_a                       *//*AA*/
;;;7855   #endif
;;;7856   #ifdef BB
;;;7857       , double * BB_p                               /* pointer to end_b                       *//*BB*/
;;;7858   #endif
;;;7859   #ifdef CC
;;;7860       , double * CC_p                               /* pointer to end_c                       *//*CC*/
;;;7861   #endif
;;;7862       )
;;;7863       {
000004  b087              SUB      sp,sp,#0x1c
000006  4605              MOV      r5,r0
000008  460c              MOV      r4,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  f8dda040          LDR      r10,[sp,#0x40]
;;;7864           int mode;
;;;7865           int middle;
;;;7866           int comp;
;;;7867   
;;;7868           mode SET_TO settings->distance_mode;
000012  f89403f8          LDRB     r0,[r4,#0x3f8]
000016  9006              STR      r0,[sp,#0x18]
;;;7869           middle SET_TO (settings->program_x ISNT UNKNOWN);
000018  f5044130          ADD      r1,r4,#0xb000
00001c  f50171bc          ADD      r1,r1,#0x178
000020  c903              LDM      r1,{r0,r1}
000022  4683              MOV      r11,r0
000024  4aaf              LDR      r2,|L64.740|
000026  4bb0              LDR      r3,|L64.744|
000028  f7fffffe          BL       __aeabi_cdcmpeq
00002c  d002              BEQ      |L64.52|
00002e  f04f0001          MOV      r0,#1
000032  e001              B        |L64.56|
                  |L64.52|
000034  f04f0000          MOV      r0,#0
                  |L64.56|
000038  4606              MOV      r6,r0
;;;7870           comp SET_TO (settings->cutter_comp_side ISNT OFF);
00003a  f8d403b0          LDR      r0,[r4,#0x3b0]
00003e  b110              CBZ      r0,|L64.70|
000040  f04f0001          MOV      r0,#1
000044  e001              B        |L64.74|
                  |L64.70|
000046  f04f0000          MOV      r0,#0
                  |L64.74|
00004a  4607              MOV      r7,r0
;;;7871   
;;;7872           if (block->g_modes[0] IS G_53)            /* distance mode is absolute in this case */
00004c  f8d50110          LDR      r0,[r5,#0x110]
000050  f5a07100          SUB      r1,r0,#0x200
000054  3912              SUBS     r1,r1,#0x12
000056  d17a              BNE      |L64.334|
;;;7873           {
;;;7874   #ifdef DEBUG_EMC
;;;7875               COMMENT("interpreter: offsets temporarily suspended");
000058  a0a4              ADR      r0,|L64.748|
00005a  f7fffffe          BL       COMMENT
;;;7876   #endif
;;;7877               *px SET_TO (block->x_flag IS ON) ? (block->x_number -
00005e  f8d501dc          LDR      r0,[r5,#0x1dc]
000062  2801              CMP      r0,#1
000064  d11a              BNE      |L64.156|
000066  e9d4011a          LDRD     r0,r1,[r4,#0x68]
00006a  4683              MOV      r11,r0
00006c  468c              MOV      r12,r1
00006e  f50460c6          ADD      r0,r4,#0x630
000072  c803              LDM      r0,{r0,r1}
000074  465a              MOV      r2,r11
000076  4663              MOV      r3,r12
000078  e9cd0102          STRD     r0,r1,[sp,#8]
00007c  f7fffffe          BL       __aeabi_dadd
000080  e9cd0104          STRD     r0,r1,[sp,#0x10]
000084  f8d511e0          LDR      r1,[r5,#0x1e0]
000088  468b              MOV      r11,r1
00008a  465a              MOV      r2,r11
00008c  f8d501e4          LDR      r0,[r5,#0x1e4]
000090  4603              MOV      r3,r0
000092  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000096  f7fffffe          BL       __aeabi_drsub
00009a  e002              B        |L64.162|
                  |L64.156|
;;;7878                   (settings->origin_offset_x + settings->axis_offset_x)) :
;;;7879               settings->current_x;
00009c  f5047064          ADD      r0,r4,#0x390
0000a0  c803              LDM      r0,{r0,r1}
                  |L64.162|
0000a2  e9c80100          STRD     r0,r1,[r8,#0]
;;;7880               *py SET_TO (block->y_flag IS ON) ? (block->y_number -
0000a6  f8d501e8          LDR      r0,[r5,#0x1e8]
0000aa  2801              CMP      r0,#1
0000ac  d11d              BNE      |L64.234|
0000ae  e9d4011c          LDRD     r0,r1,[r4,#0x70]
0000b2  e9cd0102          STRD     r0,r1,[sp,#8]
0000b6  f8d41638          LDR      r1,[r4,#0x638]
0000ba  468b              MOV      r11,r1
0000bc  f8d4063c          LDR      r0,[r4,#0x63c]
0000c0  4684              MOV      r12,r0
0000c2  4658              MOV      r0,r11
0000c4  4661              MOV      r1,r12
0000c6  e9dd2302          LDRD     r2,r3,[sp,#8]
0000ca  f7fffffe          BL       __aeabi_dadd
0000ce  e9cd0104          STRD     r0,r1,[sp,#0x10]
0000d2  f8d511f0          LDR      r1,[r5,#0x1f0]
0000d6  468b              MOV      r11,r1
0000d8  465a              MOV      r2,r11
0000da  f8d501f4          LDR      r0,[r5,#0x1f4]
0000de  4603              MOV      r3,r0
0000e0  e9dd0104          LDRD     r0,r1,[sp,#0x10]
0000e4  f7fffffe          BL       __aeabi_drsub
0000e8  e002              B        |L64.240|
                  |L64.234|
;;;7881                   (settings->origin_offset_y + settings->axis_offset_y)) :
;;;7882               settings->current_y;
0000ea  f5047066          ADD      r0,r4,#0x398
0000ee  c803              LDM      r0,{r0,r1}
                  |L64.240|
0000f0  e9c90100          STRD     r0,r1,[r9,#0]
;;;7883               *pz SET_TO (block->z_flag IS ON) ? (block->z_number -
0000f4  f8d501f8          LDR      r0,[r5,#0x1f8]
0000f8  2801              CMP      r0,#1
0000fa  d129              BNE      |L64.336|
0000fc  f50460c8          ADD      r0,r4,#0x640
000100  c803              LDM      r0,{r0,r1}
000102  4683              MOV      r11,r0
000104  468c              MOV      r12,r1
000106  f5044140          ADD      r1,r4,#0xc000
00010a  f50171a8          ADD      r1,r1,#0x150
00010e  c903              LDM      r1,{r0,r1}
000110  465a              MOV      r2,r11
000112  4663              MOV      r3,r12
000114  e9cd0100          STRD     r0,r1,[sp,#0]
000118  f7fffffe          BL       __aeabi_dadd
00011c  e9cd0102          STRD     r0,r1,[sp,#8]
000120  e9d4011e          LDRD     r0,r1,[r4,#0x78]
000124  4683              MOV      r11,r0
000126  465a              MOV      r2,r11
000128  460b              MOV      r3,r1
00012a  e9dd0102          LDRD     r0,r1,[sp,#8]
00012e  f7fffffe          BL       __aeabi_dadd
000132  e9cd0104          STRD     r0,r1,[sp,#0x10]
000136  f8d51200          LDR      r1,[r5,#0x200]
00013a  468b              MOV      r11,r1
00013c  465a              MOV      r2,r11
00013e  f8d50204          LDR      r0,[r5,#0x204]
000142  4603              MOV      r3,r0
000144  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000148  f7fffffe          BL       __aeabi_drsub
00014c  e003              B        |L64.342|
                  |L64.334|
00014e  e005              B        |L64.348|
                  |L64.336|
;;;7884                   (settings->tool_length_offset + settings->origin_offset_z
;;;7885                   + settings->axis_offset_z)) : settings->current_z;
000150  f5047068          ADD      r0,r4,#0x3a0
000154  c803              LDM      r0,{r0,r1}
                  |L64.342|
000156  e9ca0100          STRD     r0,r1,[r10,#0]
00015a  e0bf              B        |L64.732|
                  |L64.348|
;;;7886   #ifdef AA
;;;7887      /*AA*/
;;;7888               *AA_p SET_TO (block->a_flag IS ON) ? (block->a_number -
;;;7889       #endif
;;;7890       #ifdef AA
;;;7891      /*AA*/
;;;7892                   (settings->AA_origin_offset + settings->AA_axis_offset)) :
;;;7893   #endif
;;;7894   #ifdef AA
;;;7895               settings->AA_current;                 /*AA*/
;;;7896   #endif
;;;7897   #ifdef BB
;;;7898      /*BB*/
;;;7899               *BB_p SET_TO (block->b_flag IS ON) ? (block->b_number -
;;;7900       #endif
;;;7901       #ifdef BB
;;;7902      /*BB*/
;;;7903                   (settings->BB_origin_offset + settings->BB_axis_offset)) :
;;;7904   #endif
;;;7905   #ifdef BB
;;;7906               settings->BB_current;                 /*BB*/
;;;7907   #endif
;;;7908   #ifdef CC
;;;7909      /*CC*/
;;;7910               *CC_p SET_TO (block->c_flag IS ON) ? (block->c_number -
;;;7911       #endif
;;;7912       #ifdef CC
;;;7913      /*CC*/
;;;7914                   (settings->tool_length_offset + settings->CC_origin_offset
;;;7915       #endif
;;;7916       #ifdef CC
;;;7917      /*CC*/
;;;7918                   + settings->CC_axis_offset)) : settings->CC_current;
;;;7919   #endif
;;;7920           }
;;;7921           else if (mode IS MODE_ABSOLUTE)
00015c  9806              LDR      r0,[sp,#0x18]
00015e  bb88              CBNZ     r0,|L64.452|
;;;7922           {
;;;7923               *px SET_TO (block->x_flag IS ON) ? block->x_number     :
000160  f8d501dc          LDR      r0,[r5,#0x1dc]
000164  2801              CMP      r0,#1
000166  d103              BNE      |L64.368|
000168  f50570f0          ADD      r0,r5,#0x1e0
00016c  c803              LDM      r0,{r0,r1}
00016e  e00a              B        |L64.390|
                  |L64.368|
;;;7924               (comp AND middle)     ? settings->program_x :
000170  b137              CBZ      r7,|L64.384|
000172  b12e              CBZ      r6,|L64.384|
000174  f5044130          ADD      r1,r4,#0xb000
000178  f50171bc          ADD      r1,r1,#0x178
00017c  c903              LDM      r1,{r0,r1}
00017e  e002              B        |L64.390|
                  |L64.384|
;;;7925               settings->current_x ;
000180  f5047064          ADD      r0,r4,#0x390
000184  c803              LDM      r0,{r0,r1}
                  |L64.390|
000186  e9c80100          STRD     r0,r1,[r8,#0]
;;;7926   
;;;7927               *py SET_TO (block->y_flag IS ON) ? block->y_number     :
00018a  f8d501e8          LDR      r0,[r5,#0x1e8]
00018e  2801              CMP      r0,#1
000190  d103              BNE      |L64.410|
000192  f50570f8          ADD      r0,r5,#0x1f0
000196  c803              LDM      r0,{r0,r1}
000198  e00a              B        |L64.432|
                  |L64.410|
;;;7928               (comp AND middle)     ? settings->program_y :
00019a  b137              CBZ      r7,|L64.426|
00019c  b12e              CBZ      r6,|L64.426|
00019e  f5044130          ADD      r1,r4,#0xb000
0001a2  f50171c0          ADD      r1,r1,#0x180
0001a6  c903              LDM      r1,{r0,r1}
0001a8  e002              B        |L64.432|
                  |L64.426|
;;;7929               settings->current_y ;
0001aa  f5047066          ADD      r0,r4,#0x398
0001ae  c803              LDM      r0,{r0,r1}
                  |L64.432|
0001b0  e9c90100          STRD     r0,r1,[r9,#0]
;;;7930   
;;;7931               *pz SET_TO (block->z_flag IS ON) ? block->z_number     :
0001b4  f8d501f8          LDR      r0,[r5,#0x1f8]
0001b8  2801              CMP      r0,#1
0001ba  d104              BNE      |L64.454|
0001bc  f5057000          ADD      r0,r5,#0x200
0001c0  c803              LDM      r0,{r0,r1}
0001c2  e003              B        |L64.460|
                  |L64.452|
0001c4  e005              B        |L64.466|
                  |L64.454|
;;;7932               settings->current_z ;
0001c6  f5047068          ADD      r0,r4,#0x3a0
0001ca  c803              LDM      r0,{r0,r1}
                  |L64.460|
0001cc  e9ca0100          STRD     r0,r1,[r10,#0]
0001d0  e084              B        |L64.732|
                  |L64.466|
;;;7933   #ifdef AA
;;;7934      /*AA*/
;;;7935               *AA_p SET_TO (block->a_flag IS ON) ? block->a_number     :
;;;7936   #endif
;;;7937   #ifdef AA
;;;7938               settings->AA_current ;                /*AA*/
;;;7939   #endif
;;;7940   #ifdef BB
;;;7941      /*BB*/
;;;7942               *BB_p SET_TO (block->b_flag IS ON) ? block->b_number     :
;;;7943   #endif
;;;7944   #ifdef BB
;;;7945               settings->BB_current ;                /*BB*/
;;;7946   #endif
;;;7947   #ifdef CC
;;;7948      /*CC*/
;;;7949               *CC_p SET_TO (block->c_flag IS ON) ? block->c_number     :
;;;7950   #endif
;;;7951   #ifdef CC
;;;7952               settings->CC_current ;                /*CC*/
;;;7953   #endif
;;;7954           }
;;;7955           else                                      /* mode is MODE_INCREMENTAL */
;;;7956           {
;;;7957               *px SET_TO (block->x_flag IS ON)
0001d2  f8d501dc          LDR      r0,[r5,#0x1dc]
0001d6  2801              CMP      r0,#1
0001d8  d125              BNE      |L64.550|
;;;7958                   ? ((comp AND middle) ? (block->x_number + settings->program_x)
0001da  b197              CBZ      r7,|L64.514|
0001dc  b18e              CBZ      r6,|L64.514|
0001de  f5044030          ADD      r0,r4,#0xb000
0001e2  f8d01178          LDR      r1,[r0,#0x178]
0001e6  f8d0017c          LDR      r0,[r0,#0x17c]
0001ea  468b              MOV      r11,r1
0001ec  4684              MOV      r12,r0
0001ee  f50570f0          ADD      r0,r5,#0x1e0
0001f2  c803              LDM      r0,{r0,r1}
0001f4  465a              MOV      r2,r11
0001f6  4663              MOV      r3,r12
0001f8  e9cd0104          STRD     r0,r1,[sp,#0x10]
0001fc  f7fffffe          BL       __aeabi_dadd
000200  e01c              B        |L64.572|
                  |L64.514|
;;;7959                   : (block->x_number + settings->current_x))
000202  f5047064          ADD      r0,r4,#0x390
000206  c803              LDM      r0,{r0,r1}
000208  e9cd0104          STRD     r0,r1,[sp,#0x10]
00020c  f8d511e0          LDR      r1,[r5,#0x1e0]
000210  468b              MOV      r11,r1
000212  f8d501e4          LDR      r0,[r5,#0x1e4]
000216  4684              MOV      r12,r0
000218  4658              MOV      r0,r11
00021a  4661              MOV      r1,r12
00021c  e9dd2304          LDRD     r2,r3,[sp,#0x10]
000220  f7fffffe          BL       __aeabi_dadd
000224  e00a              B        |L64.572|
                  |L64.550|
;;;7960                   : ((comp AND middle) ? settings->program_x
000226  b137              CBZ      r7,|L64.566|
000228  b12e              CBZ      r6,|L64.566|
00022a  f5044130          ADD      r1,r4,#0xb000
00022e  f50171bc          ADD      r1,r1,#0x178
000232  c903              LDM      r1,{r0,r1}
000234  e002              B        |L64.572|
                  |L64.566|
;;;7961                   : settings->current_x);
000236  f5047064          ADD      r0,r4,#0x390
00023a  c803              LDM      r0,{r0,r1}
                  |L64.572|
00023c  e9c80100          STRD     r0,r1,[r8,#0]
;;;7962   
;;;7963               *py SET_TO (block->y_flag IS ON)
000240  f8d501e8          LDR      r0,[r5,#0x1e8]
000244  2801              CMP      r0,#1
000246  d123              BNE      |L64.656|
;;;7964                   ? ((comp AND middle) ? (block->y_number + settings->program_y)
000248  b197              CBZ      r7,|L64.624|
00024a  b18e              CBZ      r6,|L64.624|
00024c  f5044030          ADD      r0,r4,#0xb000
000250  f8d01180          LDR      r1,[r0,#0x180]
000254  f8d00184          LDR      r0,[r0,#0x184]
000258  468b              MOV      r11,r1
00025a  4684              MOV      r12,r0
00025c  f50570f8          ADD      r0,r5,#0x1f0
000260  c803              LDM      r0,{r0,r1}
000262  465a              MOV      r2,r11
000264  4663              MOV      r3,r12
000266  e9cd0104          STRD     r0,r1,[sp,#0x10]
00026a  f7fffffe          BL       __aeabi_dadd
00026e  e01a              B        |L64.678|
                  |L64.624|
;;;7965                   : (block->y_number + settings->current_y))
000270  f8d41398          LDR      r1,[r4,#0x398]
000274  468b              MOV      r11,r1
000276  f8d4039c          LDR      r0,[r4,#0x39c]
00027a  4684              MOV      r12,r0
00027c  f50570f8          ADD      r0,r5,#0x1f0
000280  c803              LDM      r0,{r0,r1}
000282  465a              MOV      r2,r11
000284  4663              MOV      r3,r12
000286  e9cd0104          STRD     r0,r1,[sp,#0x10]
00028a  f7fffffe          BL       __aeabi_dadd
00028e  e00a              B        |L64.678|
                  |L64.656|
;;;7966                   : ((comp AND middle) ? settings->program_y
000290  b137              CBZ      r7,|L64.672|
000292  b12e              CBZ      r6,|L64.672|
000294  f5044130          ADD      r1,r4,#0xb000
000298  f50171c0          ADD      r1,r1,#0x180
00029c  c903              LDM      r1,{r0,r1}
00029e  e002              B        |L64.678|
                  |L64.672|
;;;7967                   : settings->current_y);
0002a0  f5047066          ADD      r0,r4,#0x398
0002a4  c803              LDM      r0,{r0,r1}
                  |L64.678|
0002a6  e9c90100          STRD     r0,r1,[r9,#0]
;;;7968   
;;;7969               *pz SET_TO (block->z_flag IS ON) ?
0002aa  f8d501f8          LDR      r0,[r5,#0x1f8]
0002ae  2801              CMP      r0,#1
0002b0  d10f              BNE      |L64.722|
;;;7970                   (settings->current_z + block->z_number) : settings->current_z;
0002b2  f8d51200          LDR      r1,[r5,#0x200]
0002b6  468b              MOV      r11,r1
0002b8  f8d50204          LDR      r0,[r5,#0x204]
0002bc  4684              MOV      r12,r0
0002be  f5047068          ADD      r0,r4,#0x3a0
0002c2  c803              LDM      r0,{r0,r1}
0002c4  465a              MOV      r2,r11
0002c6  4663              MOV      r3,r12
0002c8  e9cd0104          STRD     r0,r1,[sp,#0x10]
0002cc  f7fffffe          BL       __aeabi_dadd
0002d0  e002              B        |L64.728|
                  |L64.722|
0002d2  f5047068          ADD      r0,r4,#0x3a0
0002d6  c803              LDM      r0,{r0,r1}
                  |L64.728|
0002d8  e9ca0100          STRD     r0,r1,[r10,#0]
                  |L64.732|
;;;7971   #ifdef AA
;;;7972               *AA_p SET_TO (block->a_flag IS ON) ?  /*AA*/
;;;7973       #endif
;;;7974       #ifdef AA
;;;7975      /*AA*/
;;;7976                   (settings->AA_current + block->a_number) : settings->AA_current;
;;;7977   #endif
;;;7978   #ifdef BB
;;;7979               *BB_p SET_TO (block->b_flag IS ON) ?  /*BB*/
;;;7980       #endif
;;;7981       #ifdef BB
;;;7982      /*BB*/
;;;7983                   (settings->BB_current + block->b_number) : settings->BB_current;
;;;7984   #endif
;;;7985   #ifdef CC
;;;7986               *CC_p SET_TO (block->c_flag IS ON) ?  /*CC*/
;;;7987       #endif
;;;7988       #ifdef CC
;;;7989      /*CC*/
;;;7990                   (settings->CC_current + block->c_number) : settings->CC_current;
;;;7991   #endif
;;;7992           }
;;;7993           return RS274NGC_OK;
0002dc  2000              MOVS     r0,#0
;;;7994       }
0002de  b007              ADD      sp,sp,#0x1c
0002e0  e8bd8ff0          POP      {r4-r11,pc}
;;;7995   
                          ENDP

                  |L64.740|
                          DCD      0x0c924223
                  |L64.744|
                          DCD      0x3bc79ca1
                  |L64.748|
0002ec  696e7465          DCB      "interpreter: offsets temporarily suspended",0
0002f0  72707265
0002f4  7465723a
0002f8  206f6666
0002fc  73657473
000300  2074656d
000304  706f7261
000308  72696c79
00030c  20737573
000310  70656e64
000314  656400  
000317  00                DCB      0

                          AREA ||i.find_relative||, CODE, READONLY, ALIGN=1

                  find_relative PROC
;;;8017   
;;;8018       static int find_relative(                     /* ARGUMENTS                   */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;8019       double x1,                                    /* absolute x position         */
;;;8020       double y1,                                    /* absolute y position         */
;;;8021       double z1,                                    /* absolute z position         */
;;;8022   #ifdef AA
;;;8023       double AA_1,             /* absolute a position         */ /*AA*/
;;;8024   #endif
;;;8025   #ifdef BB
;;;8026       double BB_1,             /* absolute b position         */ /*BB*/
;;;8027   #endif
;;;8028   #ifdef CC
;;;8029       double CC_1,             /* absolute c position         */ /*CC*/
;;;8030   #endif
;;;8031       double * x2,                                  /* pointer to relative x       */
;;;8032       double * y2,                                  /* pointer to relative y       */
;;;8033       double * z2,                                  /* pointer to relative z       */
;;;8034   #ifdef AA
;;;8035       double * AA_2,           /* pointer to relative a       */ /*AA*/
;;;8036   #endif
;;;8037   #ifdef BB
;;;8038       double * BB_2,           /* pointer to relative b       */ /*BB*/
;;;8039   #endif
;;;8040   #ifdef CC
;;;8041       double * CC_2,           /* pointer to relative c       */ /*CC*/
;;;8042   #endif
;;;8043       setup_pointer settings)                       /* pointer to machine settings */
;;;8044       {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
00000c  f8dda04c          LDR      r10,[sp,#0x4c]
;;;8045           *x2 SET_TO (x1 - (settings->origin_offset_x + settings->axis_offset_x));
000010  e9da101a          LDRD     r1,r0,[r10,#0x68]
000014  4688              MOV      r8,r1
000016  4681              MOV      r9,r0
000018  f8da1630          LDR      r1,[r10,#0x630]
00001c  468b              MOV      r11,r1
00001e  f8da0634          LDR      r0,[r10,#0x634]
000022  4684              MOV      r12,r0
000024  4642              MOV      r2,r8
000026  464b              MOV      r3,r9
000028  4658              MOV      r0,r11
00002a  4661              MOV      r1,r12
00002c  f7fffffe          BL       __aeabi_dadd
000030  4622              MOV      r2,r4
000032  462b              MOV      r3,r5
000034  e9cd0102          STRD     r0,r1,[sp,#8]
000038  f7fffffe          BL       __aeabi_drsub
00003c  9a10              LDR      r2,[sp,#0x40]
00003e  c203              STM      r2!,{r0,r1}
;;;8046           *y2 SET_TO (y1 - (settings->origin_offset_y + settings->axis_offset_y));
000040  e9da101c          LDRD     r1,r0,[r10,#0x70]
000044  4688              MOV      r8,r1
000046  4681              MOV      r9,r0
000048  f8da1638          LDR      r1,[r10,#0x638]
00004c  468b              MOV      r11,r1
00004e  f8da063c          LDR      r0,[r10,#0x63c]
000052  4684              MOV      r12,r0
000054  4642              MOV      r2,r8
000056  464b              MOV      r3,r9
000058  4658              MOV      r0,r11
00005a  4661              MOV      r1,r12
00005c  f7fffffe          BL       __aeabi_dadd
000060  4632              MOV      r2,r6
000062  463b              MOV      r3,r7
000064  e9cd0102          STRD     r0,r1,[sp,#8]
000068  f7fffffe          BL       __aeabi_drsub
00006c  9a11              LDR      r2,[sp,#0x44]
00006e  c203              STM      r2!,{r0,r1}
;;;8047           *z2 SET_TO (z1 - (settings->tool_length_offset +
000070  f8da1640          LDR      r1,[r10,#0x640]
000074  4688              MOV      r8,r1
000076  f8da0644          LDR      r0,[r10,#0x644]
00007a  4681              MOV      r9,r0
00007c  f50a4140          ADD      r1,r10,#0xc000
000080  f50171a8          ADD      r1,r1,#0x150
000084  c903              LDM      r1,{r0,r1}
000086  4683              MOV      r11,r0
000088  4642              MOV      r2,r8
00008a  464b              MOV      r3,r9
00008c  f7fffffe          BL       __aeabi_dadd
000090  e9cd0100          STRD     r0,r1,[sp,#0]
000094  e9da011e          LDRD     r0,r1,[r10,#0x78]
000098  4602              MOV      r2,r0
00009a  4690              MOV      r8,r2
00009c  460b              MOV      r3,r1
00009e  e9dd0100          LDRD     r0,r1,[sp,#0]
0000a2  f7fffffe          BL       __aeabi_dadd
0000a6  e9cd0102          STRD     r0,r1,[sp,#8]
0000aa  e9dd230e          LDRD     r2,r3,[sp,#0x38]
0000ae  f7fffffe          BL       __aeabi_drsub
0000b2  9a12              LDR      r2,[sp,#0x48]
0000b4  c203              STM      r2!,{r0,r1}
;;;8048               settings->origin_offset_z + settings->axis_offset_z));
;;;8049   #ifdef AA
;;;8050      /*AA*/
;;;8051           *AA_2 SET_TO (AA_1 - (settings->AA_origin_offset +
;;;8052       #endif
;;;8053       #ifdef AA
;;;8054               settings->AA_axis_offset));           /*AA*/
;;;8055   #endif
;;;8056   #ifdef BB
;;;8057      /*BB*/
;;;8058           *BB_2 SET_TO (BB_1 - (settings->BB_origin_offset +
;;;8059       #endif
;;;8060       #ifdef BB
;;;8061               settings->BB_axis_offset));           /*BB*/
;;;8062   #endif
;;;8063   #ifdef CC
;;;8064      /*CC*/
;;;8065           *CC_2 SET_TO (CC_1 - (settings->CC_origin_offset +
;;;8066       #endif
;;;8067       #ifdef CC
;;;8068               settings->CC_axis_offset));           /*CC*/
;;;8069   #endif
;;;8070           return RS274NGC_OK;
0000b6  2000              MOVS     r0,#0
;;;8071       }
0000b8  b004              ADD      sp,sp,#0x10
0000ba  e8bd9ff0          POP      {r4-r12,pc}
;;;8072   
                          ENDP


                          AREA ||i.find_straight_length||, CODE, READONLY, ALIGN=1

                  find_straight_length PROC
;;;8105   
;;;8106       static double find_straight_length(           /* ARGUMENTS   */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;8107       double x2,                                    /* X-coordinate of end point    */
;;;8108       double y2,                                    /* Y-coordinate of end point    */
;;;8109       double z2,                                    /* Z-coordinate of end point    */
;;;8110   #ifdef AA
;;;8111       double AA_2,      /* A-coordinate of end point    */ /*AA*/
;;;8112   #endif
;;;8113   #ifdef BB
;;;8114       double BB_2,      /* B-coordinate of end point    */ /*BB*/
;;;8115   #endif
;;;8116   #ifdef CC
;;;8117       double CC_2,      /* C-coordinate of end point    */ /*CC*/
;;;8118   #endif
;;;8119       double x1,                                    /* X-coordinate of start point  */
;;;8120       double y1,                                    /* Y-coordinate of start point  */
;;;8121       double z1                                     /* Z-coordinate of start point  */
;;;8122   #ifdef AA
;;;8123       , double AA_1     /* A-coordinate of start point  */ /*AA*/
;;;8124   #endif
;;;8125   #ifdef BB
;;;8126       , double BB_1     /* B-coordinate of start point  */ /*BB*/
;;;8127   #endif
;;;8128   #ifdef CC
;;;8129       , double CC_1     /* C-coordinate of start point  */ /*CC*/
;;;8130   #endif
;;;8131       )
;;;8132       {
000004  b08d              SUB      sp,sp,#0x34
000006  4604              MOV      r4,r0
000008  460d              MOV      r5,r1
00000a  4616              MOV      r6,r2
00000c  461f              MOV      r7,r3
00000e  e9ddab18          LDRD     r10,r11,[sp,#0x60]
000012  e9dd8916          LDRD     r8,r9,[sp,#0x58]
;;;8133           if ((x1 ISNT x2) OR (y1 ISNT y2) OR (z1 ISNT z2) OR
000016  4652              MOV      r2,r10
000018  465b              MOV      r3,r11
00001a  4620              MOV      r0,r4
00001c  4629              MOV      r1,r5
00001e  f7fffffe          BL       __aeabi_cdcmpeq
000022  d10e              BNE      |L66.66|
000024  4632              MOV      r2,r6
000026  463b              MOV      r3,r7
000028  e9dd011a          LDRD     r0,r1,[sp,#0x68]
00002c  f7fffffe          BL       __aeabi_cdcmpeq
000030  d107              BNE      |L66.66|
000032  4642              MOV      r2,r8
000034  464b              MOV      r3,r9
000036  e9dd011c          LDRD     r0,r1,[sp,#0x70]
00003a  f7fffffe          BL       __aeabi_cdcmpeq
00003e  d100              BNE      |L66.66|
;;;8134               (1
000040  bf00              NOP      
                  |L66.66|
;;;8135       #ifdef AA
;;;8136               AND (AA_2 IS AA_1)                    /*AA*/
;;;8137       #endif
;;;8138       #ifdef BB
;;;8139               AND (BB_2 IS BB_1)                    /*BB*/
;;;8140       #endif
;;;8141       #ifdef CC
;;;8142               AND (CC_2 IS CC_1)                    /*CC*/
;;;8143       #endif
;;;8144               ))                                    /* straight line */
;;;8145               return sqrt(pow((x2 - x1),2) + pow((y2 - y1),2) + pow((z2 - z1),2));
000042  4640              MOV      r0,r8
000044  4649              MOV      r1,r9
000046  e9dd231c          LDRD     r2,r3,[sp,#0x70]
00004a  f7fffffe          BL       __aeabi_dsub
00004e  2200              MOVS     r2,#0
000050  f04f4380          MOV      r3,#0x40000000
000054  e9cd0104          STRD     r0,r1,[sp,#0x10]
000058  f7fffffe          BL       pow
00005c  e9cd0108          STRD     r0,r1,[sp,#0x20]
000060  4630              MOV      r0,r6
000062  4639              MOV      r1,r7
000064  e9dd231a          LDRD     r2,r3,[sp,#0x68]
000068  f7fffffe          BL       __aeabi_dsub
00006c  2200              MOVS     r2,#0
00006e  f04f4380          MOV      r3,#0x40000000
000072  e9cd0100          STRD     r0,r1,[sp,#0]
000076  f7fffffe          BL       pow
00007a  4652              MOV      r2,r10
00007c  465b              MOV      r3,r11
00007e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000082  4620              MOV      r0,r4
000084  4629              MOV      r1,r5
000086  f7fffffe          BL       __aeabi_dsub
00008a  2200              MOVS     r2,#0
00008c  f04f4380          MOV      r3,#0x40000000
000090  e9cd0100          STRD     r0,r1,[sp,#0]
000094  f7fffffe          BL       pow
000098  e9cd0102          STRD     r0,r1,[sp,#8]
00009c  e9dd2304          LDRD     r2,r3,[sp,#0x10]
0000a0  f7fffffe          BL       __aeabi_dadd
0000a4  e9cd0106          STRD     r0,r1,[sp,#0x18]
0000a8  e9dd2308          LDRD     r2,r3,[sp,#0x20]
0000ac  f7fffffe          BL       __aeabi_dadd
0000b0  e9cd010a          STRD     r0,r1,[sp,#0x28]
0000b4  f7fffffe          BL       sqrt
;;;8146           else
;;;8147               return sqrt(0 +
;;;8148           #ifdef AA
;;;8149                   pow((AA_2 - AA_1), 2) +           /*AA*/
;;;8150           #endif
;;;8151           #ifdef BB
;;;8152                   pow((BB_2 - BB_1), 2) +           /*BB*/
;;;8153           #endif
;;;8154           #ifdef CC
;;;8155                   pow((CC_2 - CC_1), 2) +           /*CC*/
;;;8156           #endif
;;;8157                   0);
;;;8158       }
0000b8  b00d              ADD      sp,sp,#0x34
0000ba  e8bd8ff0          POP      {r4-r11,pc}
;;;8159   
                          ENDP


                          AREA ||i.find_turn||, CODE, READONLY, ALIGN=2

                  find_turn PROC
;;;8173   
;;;8174       static double find_turn(                      /* ARGUMENTS                          */
000000  e92d47ff          PUSH     {r0-r10,lr}
;;;8175       double x1,                                    /* X-coordinate of start point        */
;;;8176       double y1,                                    /* Y-coordinate of start point        */
;;;8177       double center_x,                              /* X-coordinate of arc center         */
;;;8178       double center_y,                              /* Y-coordinate of arc center         */
;;;8179       int turn,                                     /* no. of full or partial circles CCW */
;;;8180       double x2,                                    /* X-coordinate of end point          */
;;;8181       double y2)                                    /* Y-coordinate of end point          */
;;;8182       {
000004  b086              SUB      sp,sp,#0x18
000006  f8dda058          LDR      r10,[sp,#0x58]
;;;8183           double alpha;                             /* angle of first radius                      */
;;;8184           double beta;                              /* angle of second radius                     */
;;;8185           double theta;                             /* amount of turn of arc CCW - negative if CW */
;;;8186   
;;;8187           if (turn IS 0)
00000a  f1ba0f00          CMP      r10,#0
00000e  d104              BNE      |L67.26|
;;;8188               return 0.0;
000010  2000              MOVS     r0,#0
000012  4601              MOV      r1,r0
                  |L67.20|
;;;8189           alpha SET_TO atan2((y1 - center_y), (x1 - center_x));
;;;8190           beta SET_TO atan2((y2 - center_y), (x2 - center_x));
;;;8191           if (turn > 0)
;;;8192           {
;;;8193               if (beta <= alpha)
;;;8194                   beta SET_TO (beta + TWO_PI);
;;;8195               theta SET_TO ((beta - alpha) + ((turn - 1) * TWO_PI));
;;;8196           }
;;;8197           else                                      /* turn < 0 */
;;;8198           {
;;;8199               if (alpha <= beta)
;;;8200                   alpha SET_TO (alpha + TWO_PI);
;;;8201               theta SET_TO ((beta - alpha) + ((turn + 1) * TWO_PI));
;;;8202           }
;;;8203           return (theta);
;;;8204       }
000014  b00a              ADD      sp,sp,#0x28
000016  e8bd87f0          POP      {r4-r10,pc}
                  |L67.26|
00001a  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;8189
00001e  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;8189
000022  f7fffffe          BL       __aeabi_dsub
000026  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;8189
00002a  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;8189
00002e  e9dd0108          LDRD     r0,r1,[sp,#0x20]      ;8189
000032  f7fffffe          BL       __aeabi_dsub
000036  e9cd0102          STRD     r0,r1,[sp,#8]         ;8189
00003a  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;8189
00003e  f7fffffe          BL       atan2
000042  4606              MOV      r6,r0                 ;8189
000044  460f              MOV      r7,r1                 ;8189
000046  e9dd2312          LDRD     r2,r3,[sp,#0x48]      ;8190
00004a  e9dd0118          LDRD     r0,r1,[sp,#0x60]      ;8190
00004e  f7fffffe          BL       __aeabi_dsub
000052  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;8190
000056  e9dd2314          LDRD     r2,r3,[sp,#0x50]      ;8190
00005a  e9dd011a          LDRD     r0,r1,[sp,#0x68]      ;8190
00005e  f7fffffe          BL       __aeabi_dsub
000062  e9cd0102          STRD     r0,r1,[sp,#8]         ;8190
000066  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;8190
00006a  f7fffffe          BL       atan2
00006e  4604              MOV      r4,r0                 ;8190
000070  460d              MOV      r5,r1                 ;8190
000072  f1ba0f00          CMP      r10,#0                ;8191
000076  dd2a              BLE      |L67.206|
000078  4632              MOV      r2,r6                 ;8193
00007a  463b              MOV      r3,r7                 ;8193
00007c  4620              MOV      r0,r4                 ;8193
00007e  4629              MOV      r1,r5                 ;8193
000080  f7fffffe          BL       __aeabi_cdcmple
000084  d807              BHI      |L67.150|
000086  4a28              LDR      r2,|L67.296|
000088  4b28              LDR      r3,|L67.300|
00008a  4620              MOV      r0,r4                 ;8194
00008c  4629              MOV      r1,r5                 ;8194
00008e  f7fffffe          BL       __aeabi_dadd
000092  4604              MOV      r4,r0                 ;8194
000094  460d              MOV      r5,r1                 ;8194
                  |L67.150|
000096  f1aa0101          SUB      r1,r10,#1             ;8195
00009a  4608              MOV      r0,r1                 ;8195
00009c  f7fffffe          BL       __aeabi_i2d
0000a0  4a21              LDR      r2,|L67.296|
0000a2  4b22              LDR      r3,|L67.300|
0000a4  e9cd0100          STRD     r0,r1,[sp,#0]         ;8195
0000a8  f7fffffe          BL       __aeabi_dmul
0000ac  4632              MOV      r2,r6                 ;8195
0000ae  463b              MOV      r3,r7                 ;8195
0000b0  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;8195
0000b4  4620              MOV      r0,r4                 ;8195
0000b6  4629              MOV      r1,r5                 ;8195
0000b8  f7fffffe          BL       __aeabi_dsub
0000bc  e9cd0102          STRD     r0,r1,[sp,#8]         ;8195
0000c0  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;8195
0000c4  f7fffffe          BL       __aeabi_dadd
0000c8  4680              MOV      r8,r0                 ;8195
0000ca  4689              MOV      r9,r1                 ;8195
0000cc  e028              B        |L67.288|
                  |L67.206|
0000ce  4622              MOV      r2,r4                 ;8199
0000d0  462b              MOV      r3,r5                 ;8199
0000d2  4630              MOV      r0,r6                 ;8199
0000d4  4639              MOV      r1,r7                 ;8199
0000d6  f7fffffe          BL       __aeabi_cdcmple
0000da  d807              BHI      |L67.236|
0000dc  4a12              LDR      r2,|L67.296|
0000de  4b13              LDR      r3,|L67.300|
0000e0  4630              MOV      r0,r6                 ;8200
0000e2  4639              MOV      r1,r7                 ;8200
0000e4  f7fffffe          BL       __aeabi_dadd
0000e8  4606              MOV      r6,r0                 ;8200
0000ea  460f              MOV      r7,r1                 ;8200
                  |L67.236|
0000ec  f10a0001          ADD      r0,r10,#1             ;8201
0000f0  f7fffffe          BL       __aeabi_i2d
0000f4  4a0c              LDR      r2,|L67.296|
0000f6  4b0d              LDR      r3,|L67.300|
0000f8  e9cd0100          STRD     r0,r1,[sp,#0]         ;8201
0000fc  f7fffffe          BL       __aeabi_dmul
000100  4632              MOV      r2,r6                 ;8201
000102  463b              MOV      r3,r7                 ;8201
000104  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;8201
000108  4620              MOV      r0,r4                 ;8201
00010a  4629              MOV      r1,r5                 ;8201
00010c  f7fffffe          BL       __aeabi_dsub
000110  e9cd0102          STRD     r0,r1,[sp,#8]         ;8201
000114  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;8201
000118  f7fffffe          BL       __aeabi_dadd
00011c  4680              MOV      r8,r0                 ;8201
00011e  4689              MOV      r9,r1                 ;8201
                  |L67.288|
000120  4640              MOV      r0,r8                 ;8203
000122  4649              MOV      r1,r9                 ;8203
000124  e776              B        |L67.20|
;;;8205   
                          ENDP

000126  0000              DCW      0x0000
                  |L67.296|
                          DCD      0x54442d18
                  |L67.300|
                          DCD      0x401921fb

                          AREA ||i.init_block||, CODE, READONLY, ALIGN=2

                  init_block PROC
;;;8243   
;;;8244       static int init_block(                        /* ARGUMENTS                                     */
000000  4601              MOV      r1,r0
;;;8245       block_pointer block)                          /* pointer to a block to be initialized or reset */
;;;8246       {
;;;8247           int n;
;;;8248   #ifdef AA
;;;8249           block->a_flag SET_TO OFF;                 /*AA*/
;;;8250   #endif
;;;8251   #ifdef BB
;;;8252           block->b_flag SET_TO OFF;                 /*BB*/
;;;8253   #endif
;;;8254   #ifdef CC
;;;8255           block->c_flag SET_TO OFF;                 /*CC*/
;;;8256   #endif
;;;8257           block->comment[0] SET_TO 0;
000002  f04f0000          MOV      r0,#0
000006  7008              STRB     r0,[r1,#0]
;;;8258           block->d_number SET_TO -1;
000008  f04f30ff          MOV      r0,#0xffffffff
00000c  f8c10100          STR      r0,[r1,#0x100]
;;;8259           block->f_number SET_TO -1.0;
000010  f04f0300          MOV      r3,#0
000014  4828              LDR      r0,|L68.184|
000016  f8c13108          STR      r3,[r1,#0x108]
00001a  f8c1010c          STR      r0,[r1,#0x10c]
;;;8260           for (n SET_TO 0; n < 14; n++)
00001e  f04f0000          MOV      r0,#0
000022  4602              MOV      r2,r0
000024  e008              B        |L68.56|
                  |L68.38|
;;;8261           {
;;;8262               block->g_modes[n] SET_TO -1;
000026  f04f33ff          MOV      r3,#0xffffffff
00002a  f5017088          ADD      r0,r1,#0x110
00002e  f8403022          STR      r3,[r0,r2,LSL #2]
000032  f1020001          ADD      r0,r2,#1              ;8260
000036  4602              MOV      r2,r0                 ;8260
                  |L68.56|
000038  2a0e              CMP      r2,#0xe               ;8260
00003a  dbf4              BLT      |L68.38|
;;;8263           }
;;;8264           block->h_number SET_TO -1;
00003c  f04f30ff          MOV      r0,#0xffffffff
000040  f50171a4          ADD      r1,r1,#0x148
000044  6008              STR      r0,[r1,#0]
;;;8265           block->i_flag SET_TO OFF;
000046  f04f0000          MOV      r0,#0
00004a  6048              STR      r0,[r1,#4]
;;;8266           block->j_flag SET_TO OFF;
00004c  6108              STR      r0,[r1,#0x10]
;;;8267           block->k_flag SET_TO OFF;
00004e  6208              STR      r0,[r1,#0x20]
;;;8268           block->l_number SET_TO -1;
000050  f04f30ff          MOV      r0,#0xffffffff
000054  6308              STR      r0,[r1,#0x30]
;;;8269           block->line_number SET_TO -1;
000056  6348              STR      r0,[r1,#0x34]
;;;8270           block->motion_to_be SET_TO -1;
000058  6388              STR      r0,[r1,#0x38]
;;;8271           block->m_count SET_TO 0;
00005a  f04f0000          MOV      r0,#0
00005e  63c8              STR      r0,[r1,#0x3c]
000060  f5a171a4          SUB      r1,r1,#0x148
;;;8272           for (n SET_TO 0; n < 10; n++)
000064  4602              MOV      r2,r0
000066  e008              B        |L68.122|
                  |L68.104|
;;;8273           {
;;;8274               block->m_modes[n] SET_TO -1;
000068  f04f33ff          MOV      r3,#0xffffffff
00006c  f50170c4          ADD      r0,r1,#0x188
000070  f8403022          STR      r3,[r0,r2,LSL #2]
000074  f1020001          ADD      r0,r2,#1              ;8272
000078  4602              MOV      r2,r0                 ;8272
                  |L68.122|
00007a  2a0a              CMP      r2,#0xa               ;8272
00007c  dbf4              BLT      |L68.104|
;;;8275           }
;;;8276           block->p_number SET_TO -1.0;
00007e  f04f0000          MOV      r0,#0
000082  4b0d              LDR      r3,|L68.184|
000084  f50171d8          ADD      r1,r1,#0x1b0
000088  e9c10300          STRD     r0,r3,[r1,#0]
;;;8277           block->q_number SET_TO -1.0;
00008c  4603              MOV      r3,r0
00008e  480a              LDR      r0,|L68.184|
000090  e9c13002          STRD     r3,r0,[r1,#8]
;;;8278           block->r_flag SET_TO OFF;
000094  f04f0000          MOV      r0,#0
000098  6108              STR      r0,[r1,#0x10]
;;;8279           block->s_number SET_TO -1.0;
00009a  4b07              LDR      r3,|L68.184|
00009c  e9c10308          STRD     r0,r3,[r1,#0x20]
;;;8280           block->t_number SET_TO -1;
0000a0  f04f30ff          MOV      r0,#0xffffffff
0000a4  6288              STR      r0,[r1,#0x28]
;;;8281           block->x_flag SET_TO OFF;
0000a6  f04f0000          MOV      r0,#0
0000aa  62c8              STR      r0,[r1,#0x2c]
;;;8282           block->y_flag SET_TO OFF;
0000ac  6388              STR      r0,[r1,#0x38]
;;;8283           block->z_flag SET_TO OFF;
0000ae  6488              STR      r0,[r1,#0x48]
0000b0  f5a171d8          SUB      r1,r1,#0x1b0
;;;8284   
;;;8285           return RS274NGC_OK;
;;;8286       }
0000b4  4770              BX       lr
;;;8287   
                          ENDP

0000b6  0000              DCW      0x0000
                  |L68.184|
                          DCD      0xbff00000

                          AREA ||i.inverse_time_rate_arc||, CODE, READONLY, ALIGN=2

                  inverse_time_rate_arc PROC
;;;8306   
;;;8307       static int inverse_time_rate_arc(             /* ARGUMENTS                       */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;8308       double x1,                                    /* x coord of start point of arc            */
;;;8309       double y1,                                    /* y coord of start point of arc            */
;;;8310       double z1,                                    /* z coord of start point of arc            */
;;;8311       double cx,                                    /* x coord of center of arc                 */
;;;8312       double cy,                                    /* y coord of center of arc                 */
;;;8313       int turn,                                     /* turn of arc                              */
;;;8314       double x2,                                    /* x coord of end point of arc              */
;;;8315       double y2,                                    /* y coord of end point of arc              */
;;;8316       double z2,                                    /* z coord of end point of arc              */
;;;8317       block_pointer block,                          /* pointer to a block of RS274 instructions */
;;;8318       setup_pointer settings)                       /* pointer to machine settings              */
;;;8319       {
000004  b091              SUB      sp,sp,#0x44
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  e9ddab1a          LDRD     r10,r11,[sp,#0x68]
;;;8320           double length;
;;;8321           double rate;
;;;8322   
;;;8323           length SET_TO find_arc_length (x1, y1, z1, cx, cy, turn, x2, y2, z2);
000012  e9dd0126          LDRD     r0,r1,[sp,#0x98]
000016  e9cd010c          STRD     r0,r1,[sp,#0x30]
00001a  e9dd0124          LDRD     r0,r1,[sp,#0x90]
00001e  e9cd010a          STRD     r0,r1,[sp,#0x28]
000022  e9dd0122          LDRD     r0,r1,[sp,#0x88]
000026  e9cd0108          STRD     r0,r1,[sp,#0x20]
00002a  9820              LDR      r0,[sp,#0x80]
00002c  9006              STR      r0,[sp,#0x18]
00002e  e9dd011e          LDRD     r0,r1,[sp,#0x78]
000032  e9cd0104          STRD     r0,r1,[sp,#0x10]
000036  e9dd011c          LDRD     r0,r1,[sp,#0x70]
00003a  4642              MOV      r2,r8
00003c  464b              MOV      r3,r9
00003e  e9cdab00          STRD     r10,r11,[sp,#0]
000042  e9cd0102          STRD     r0,r1,[sp,#8]
000046  4630              MOV      r0,r6
000048  4639              MOV      r1,r7
00004a  f7fffffe          BL       find_arc_length
00004e  e9cd010e          STRD     r0,r1,[sp,#0x38]
;;;8324           rate SET_TO MAX(0.1, (length * block->f_number));
000052  9828              LDR      r0,[sp,#0xa0]
000054  f5007084          ADD      r0,r0,#0x108
000058  c803              LDM      r0,{r0,r1}
00005a  e9cd010a          STRD     r0,r1,[sp,#0x28]
00005e  e9dd230e          LDRD     r2,r3,[sp,#0x38]
000062  f7fffffe          BL       __aeabi_dmul
000066  4a11              LDR      r2,|L69.172|
000068  4b11              LDR      r3,|L69.176|
00006a  e9cd010c          STRD     r0,r1,[sp,#0x30]
00006e  f7fffffe          BL       __aeabi_cdcmple
000072  d202              BCS      |L69.122|
000074  480d              LDR      r0,|L69.172|
000076  490e              LDR      r1,|L69.176|
000078  e009              B        |L69.142|
                  |L69.122|
00007a  9928              LDR      r1,[sp,#0xa0]
00007c  f5017184          ADD      r1,r1,#0x108
000080  c903              LDM      r1,{r0,r1}
000082  e9cd010c          STRD     r0,r1,[sp,#0x30]
000086  e9dd230e          LDRD     r2,r3,[sp,#0x38]
00008a  f7fffffe          BL       __aeabi_dmul
                  |L69.142|
00008e  4604              MOV      r4,r0
000090  460d              MOV      r5,r1
;;;8325           SET_FEED_RATE (rate);
000092  4620              MOV      r0,r4
000094  4629              MOV      r1,r5
000096  f7fffffe          BL       SET_FEED_RATE
;;;8326           settings->feed_rate SET_TO rate;
00009a  9a29              LDR      r2,[sp,#0xa4]
00009c  f5026281          ADD      r2,r2,#0x408
0000a0  c230              STM      r2!,{r4,r5}
;;;8327   
;;;8328           return RS274NGC_OK;
0000a2  2000              MOVS     r0,#0
;;;8329       }
0000a4  b011              ADD      sp,sp,#0x44
0000a6  e8bd8ff0          POP      {r4-r11,pc}
;;;8330   
                          ENDP

0000aa  0000              DCW      0x0000
                  |L69.172|
                          DCD      0x9999999a
                  |L69.176|
                          DCD      0x3fb99999

                          AREA ||i.inverse_time_rate_arc2||, CODE, READONLY, ALIGN=2

                  inverse_time_rate_arc2 PROC
;;;8352   
;;;8353       static int inverse_time_rate_arc2(            /* ARGUMENTS */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;8354       double start_x,                               /* x coord of last program point, extra arc center x */
;;;8355       double start_y,                               /* y coord of last program point, extra arc center y */
;;;8356       int turn1,                                    /* turn of extra arc                                 */
;;;8357       double mid_x,                                 /* x coord of end point of extra arc                 */
;;;8358       double mid_y,                                 /* y coord of end point of extra arc                 */
;;;8359       double cx,                                    /* x coord of center of main arc                     */
;;;8360       double cy,                                    /* y coord of center of main arc                     */
;;;8361       int turn2,                                    /* turn of main arc                                  */
;;;8362       double end_x,                                 /* x coord of end point of main arc                  */
;;;8363       double end_y,                                 /* y coord of end point of main arc                  */
;;;8364       double end_z,                                 /* z coord of end point of main arc                  */
;;;8365       block_pointer block,                          /* pointer to a block of RS274 instructions          */
;;;8366       setup_pointer settings)                       /* pointer to machine settings                       */
;;;8367       {
000004  b099              SUB      sp,sp,#0x64
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  e9ddba34          LDRD     r11,r10,[sp,#0xd0]
;;;8368           double length;
;;;8369           double rate;
;;;8370   
;;;8371           length SET_TO (find_arc_length (settings->current_x, settings->current_y,
000012  e9dd0132          LDRD     r0,r1,[sp,#0xc8]
000016  e9cd010c          STRD     r0,r1,[sp,#0x30]
00001a  e9dd0130          LDRD     r0,r1,[sp,#0xc0]
00001e  e9cd010a          STRD     r0,r1,[sp,#0x28]
000022  e9dd012e          LDRD     r0,r1,[sp,#0xb8]
000026  e9cd0108          STRD     r0,r1,[sp,#0x20]
00002a  982c              LDR      r0,[sp,#0xb0]
00002c  9006              STR      r0,[sp,#0x18]
00002e  e9dd012a          LDRD     r0,r1,[sp,#0xa8]
000032  e9cd0104          STRD     r0,r1,[sp,#0x10]
000036  e9dd0128          LDRD     r0,r1,[sp,#0xa0]
00003a  e9cd0102          STRD     r0,r1,[sp,#8]
00003e  f50a7068          ADD      r0,r10,#0x3a0
000042  c803              LDM      r0,{r0,r1}
000044  e9cd0100          STRD     r0,r1,[sp,#0]
000048  a824              ADD      r0,sp,#0x90
00004a  c80f              LDM      r0,{r0-r3}
00004c  f7fffffe          BL       find_arc_length
000050  e9cd0114          STRD     r0,r1,[sp,#0x50]
000054  f50a7068          ADD      r0,r10,#0x3a0
000058  c803              LDM      r0,{r0,r1}
00005a  e9cd010c          STRD     r0,r1,[sp,#0x30]
00005e  e9dd0126          LDRD     r0,r1,[sp,#0x98]
000062  e9cd010a          STRD     r0,r1,[sp,#0x28]
000066  e9dd0124          LDRD     r0,r1,[sp,#0x90]
00006a  e9cd0108          STRD     r0,r1,[sp,#0x20]
00006e  9822              LDR      r0,[sp,#0x88]
000070  a902              ADD      r1,sp,#8
000072  e8a103c0          STM      r1!,{r6-r9}
000076  9006              STR      r0,[sp,#0x18]
000078  f50a7068          ADD      r0,r10,#0x3a0
00007c  c803              LDM      r0,{r0,r1}
00007e  e9cd0100          STRD     r0,r1,[sp,#0]
000082  f50a7066          ADD      r0,r10,#0x398
000086  c803              LDM      r0,{r0,r1}
000088  e9cd0110          STRD     r0,r1,[sp,#0x40]
00008c  f50a7064          ADD      r0,r10,#0x390
000090  c803              LDM      r0,{r0,r1}
000092  e9cd010e          STRD     r0,r1,[sp,#0x38]
000096  e9dd2310          LDRD     r2,r3,[sp,#0x40]
00009a  f7fffffe          BL       find_arc_length
00009e  e9cd0112          STRD     r0,r1,[sp,#0x48]
0000a2  e9dd2314          LDRD     r2,r3,[sp,#0x50]
0000a6  f7fffffe          BL       __aeabi_dadd
0000aa  e9cd0116          STRD     r0,r1,[sp,#0x58]
;;;8372               settings->current_z, start_x, start_y,
;;;8373               turn1, mid_x, mid_y, settings->current_z) +
;;;8374               find_arc_length(mid_x, mid_y, settings->current_z,
;;;8375               cx, cy, turn2, end_x, end_y, end_z));
;;;8376           rate SET_TO MAX(0.1, (length * block->f_number));
0000ae  f50b7084          ADD      r0,r11,#0x108
0000b2  c803              LDM      r0,{r0,r1}
0000b4  e9cd0112          STRD     r0,r1,[sp,#0x48]
0000b8  e9dd2316          LDRD     r2,r3,[sp,#0x58]
0000bc  f7fffffe          BL       __aeabi_dmul
0000c0  4a0f              LDR      r2,|L70.256|
0000c2  4b10              LDR      r3,|L70.260|
0000c4  e9cd0114          STRD     r0,r1,[sp,#0x50]
0000c8  f7fffffe          BL       __aeabi_cdcmple
0000cc  d202              BCS      |L70.212|
0000ce  480c              LDR      r0,|L70.256|
0000d0  490c              LDR      r1,|L70.260|
0000d2  e008              B        |L70.230|
                  |L70.212|
0000d4  f50b7084          ADD      r0,r11,#0x108
0000d8  c803              LDM      r0,{r0,r1}
0000da  e9cd0114          STRD     r0,r1,[sp,#0x50]
0000de  e9dd2316          LDRD     r2,r3,[sp,#0x58]
0000e2  f7fffffe          BL       __aeabi_dmul
                  |L70.230|
0000e6  4604              MOV      r4,r0
0000e8  460d              MOV      r5,r1
;;;8377           SET_FEED_RATE (rate);
0000ea  4620              MOV      r0,r4
0000ec  4629              MOV      r1,r5
0000ee  f7fffffe          BL       SET_FEED_RATE
;;;8378           settings->feed_rate SET_TO rate;
0000f2  f50a6081          ADD      r0,r10,#0x408
0000f6  c030              STM      r0!,{r4,r5}
;;;8379   
;;;8380           return RS274NGC_OK;
0000f8  2000              MOVS     r0,#0
;;;8381       }
0000fa  b019              ADD      sp,sp,#0x64
0000fc  e8bd8ff0          POP      {r4-r11,pc}
;;;8382   
                          ENDP

                  |L70.256|
                          DCD      0x9999999a
                  |L70.260|
                          DCD      0x3fb99999

                          AREA ||i.inverse_time_rate_as||, CODE, READONLY, ALIGN=2

                  inverse_time_rate_as PROC
;;;8405   
;;;8406       static int inverse_time_rate_as(              /* ARGUMENTS */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;8407       double start_x,                               /* x coord of last program point, extra arc center x */
;;;8408       double start_y,                               /* y coord of last program point, extra arc center y */
;;;8409       int turn,                                     /* turn of extra arc                                 */
;;;8410       double mid_x,                                 /* x coord of end point of extra arc                 */
;;;8411       double mid_y,                                 /* y coord of end point of extra arc                 */
;;;8412       double end_x,                                 /* x coord of end point of straight line             */
;;;8413       double end_y,                                 /* y coord of end point of straight line             */
;;;8414       double end_z,                                 /* z coord of end point of straight line             */
;;;8415   #ifdef AA
;;;8416       double AA_end,                                /* A coord of end point of straight line       *//*AA*/
;;;8417   #endif
;;;8418   #ifdef BB
;;;8419       double BB_end,                                /* B coord of end point of straight line       *//*BB*/
;;;8420   #endif
;;;8421   #ifdef CC
;;;8422       double CC_end,                                /* C coord of end point of straight line       *//*CC*/
;;;8423   #endif
;;;8424       block_pointer block,                          /* pointer to a block of RS274 instructions          */
;;;8425       setup_pointer settings)                       /* pointer to machine settings                       */
;;;8426       {
000004  b098              SUB      sp,sp,#0x60
000006  e9ddba32          LDRD     r11,r10,[sp,#0xc8]
00000a  ac28              ADD      r4,sp,#0xa0
00000c  ccf0              LDM      r4,{r4-r7}
;;;8427           double length;
;;;8428           double rate;
;;;8429   
;;;8430           length SET_TO (find_arc_length (settings->current_x, settings->current_y,
00000e  f50a7068          ADD      r0,r10,#0x3a0
000012  c803              LDM      r0,{r0,r1}
000014  e9cd6704          STRD     r6,r7,[sp,#0x10]
000018  e9cd4502          STRD     r4,r5,[sp,#8]
00001c  e9cd0106          STRD     r0,r1,[sp,#0x18]
000020  e9dd0130          LDRD     r0,r1,[sp,#0xc0]
000024  e9cd0100          STRD     r0,r1,[sp,#0]
000028  a82c              ADD      r0,sp,#0xb0
00002a  c80f              LDM      r0,{r0-r3}
00002c  f7fffffe          BL       find_straight_length
000030  e9cd0114          STRD     r0,r1,[sp,#0x50]
000034  f50a7068          ADD      r0,r10,#0x3a0
000038  c803              LDM      r0,{r0,r1}
00003a  aa08              ADD      r2,sp,#0x20
00003c  c2f0              STM      r2!,{r4-r7}
00003e  e9cd010c          STRD     r0,r1,[sp,#0x30]
000042  9826              LDR      r0,[sp,#0x98]
000044  9006              STR      r0,[sp,#0x18]
000046  e9dd011a          LDRD     r0,r1,[sp,#0x68]
00004a  e9cd0104          STRD     r0,r1,[sp,#0x10]
00004e  e9dd0118          LDRD     r0,r1,[sp,#0x60]
000052  e9cd0102          STRD     r0,r1,[sp,#8]
000056  f50a7068          ADD      r0,r10,#0x3a0
00005a  c803              LDM      r0,{r0,r1}
00005c  e9cd0100          STRD     r0,r1,[sp,#0]
000060  f50a7066          ADD      r0,r10,#0x398
000064  c803              LDM      r0,{r0,r1}
000066  e9cd0110          STRD     r0,r1,[sp,#0x40]
00006a  f50a7064          ADD      r0,r10,#0x390
00006e  c803              LDM      r0,{r0,r1}
000070  e9cd010e          STRD     r0,r1,[sp,#0x38]
000074  e9dd2310          LDRD     r2,r3,[sp,#0x40]
000078  f7fffffe          BL       find_arc_length
00007c  e9cd0112          STRD     r0,r1,[sp,#0x48]
000080  e9dd2314          LDRD     r2,r3,[sp,#0x50]
000084  f7fffffe          BL       __aeabi_dadd
000088  e9cd0116          STRD     r0,r1,[sp,#0x58]
;;;8431               settings->current_z, start_x, start_y,
;;;8432               turn, mid_x, mid_y, settings->current_z) +
;;;8433               find_straight_length(end_x, end_y,
;;;8434               end_z
;;;8435       #ifdef AA
;;;8436               , AA_end
;;;8437       #endif
;;;8438   
;;;8439       #ifdef BB
;;;8440               , BB_end
;;;8441       #endif
;;;8442   
;;;8443       #ifdef CC
;;;8444               , CC_end
;;;8445       #endif
;;;8446               , mid_x, mid_y,
;;;8447               settings->current_z
;;;8448       #ifdef AA
;;;8449               , AA_end
;;;8450       #endif
;;;8451   
;;;8452       #ifdef BB
;;;8453               , BB_end
;;;8454       #endif
;;;8455   
;;;8456       #ifdef CC
;;;8457               , CC_end
;;;8458       #endif
;;;8459               ));
;;;8460           rate SET_TO MAX(0.1, (length * block->f_number));
00008c  f50b7084          ADD      r0,r11,#0x108
000090  c803              LDM      r0,{r0,r1}
000092  e9cd0112          STRD     r0,r1,[sp,#0x48]
000096  e9dd2316          LDRD     r2,r3,[sp,#0x58]
00009a  f7fffffe          BL       __aeabi_dmul
00009e  4a10              LDR      r2,|L71.224|
0000a0  4b10              LDR      r3,|L71.228|
0000a2  e9cd0114          STRD     r0,r1,[sp,#0x50]
0000a6  f7fffffe          BL       __aeabi_cdcmple
0000aa  d202              BCS      |L71.178|
0000ac  480c              LDR      r0,|L71.224|
0000ae  490d              LDR      r1,|L71.228|
0000b0  e008              B        |L71.196|
                  |L71.178|
0000b2  f50b7084          ADD      r0,r11,#0x108
0000b6  c803              LDM      r0,{r0,r1}
0000b8  e9cd0114          STRD     r0,r1,[sp,#0x50]
0000bc  e9dd2316          LDRD     r2,r3,[sp,#0x58]
0000c0  f7fffffe          BL       __aeabi_dmul
                  |L71.196|
0000c4  4680              MOV      r8,r0
0000c6  4689              MOV      r9,r1
;;;8461           SET_FEED_RATE (rate);
0000c8  4640              MOV      r0,r8
0000ca  4649              MOV      r1,r9
0000cc  f7fffffe          BL       SET_FEED_RATE
;;;8462           settings->feed_rate SET_TO rate;
0000d0  f8ca940c          STR      r9,[r10,#0x40c]
0000d4  f8ca8408          STR      r8,[r10,#0x408]
;;;8463   
;;;8464           return RS274NGC_OK;
0000d8  2000              MOVS     r0,#0
;;;8465       }
0000da  b01c              ADD      sp,sp,#0x70
0000dc  e8bd9ff0          POP      {r4-r12,pc}
;;;8466   
                          ENDP

                  |L71.224|
                          DCD      0x9999999a
                  |L71.228|
                          DCD      0x3fb99999

                          AREA ||i.inverse_time_rate_straight||, CODE, READONLY, ALIGN=2

                  inverse_time_rate_straight PROC
;;;8484   
;;;8485       static int inverse_time_rate_straight(        /* ARGUMENTS                    */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;8486       double end_x,                                 /* x coordinate of end point of straight line */
;;;8487       double end_y,                                 /* y coordinate of end point of straight line */
;;;8488       double end_z,                                 /* z coordinate of end point of straight line */
;;;8489   #ifdef AA
;;;8490       double AA_end,                                /* A coordinate of end point of straight line *//*AA*/
;;;8491   #endif
;;;8492   #ifdef BB
;;;8493       double BB_end,                                /* B coordinate of end point of straight line *//*BB*/
;;;8494   #endif
;;;8495   #ifdef CC
;;;8496       double CC_end,                                /* C coordinate of end point of straight line *//*CC*/
;;;8497   #endif
;;;8498       block_pointer block,                          /* pointer to a block of RS274 instructions   */
;;;8499       setup_pointer settings)                       /* pointer to machine settings                */
;;;8500       {
000004  b08b              SUB      sp,sp,#0x2c
000006  4606              MOV      r6,r0
000008  460f              MOV      r7,r1
00000a  4690              MOV      r8,r2
00000c  4699              MOV      r9,r3
00000e  e9ddba16          LDRD     r11,r10,[sp,#0x58]
;;;8501   //        static char name[] SET_TO "inverse_time_rate_straight";
;;;8502           double length;
;;;8503           double rate;
;;;8504   
;;;8505           length SET_TO find_straight_length
000012  f50a7068          ADD      r0,r10,#0x3a0
000016  c803              LDM      r0,{r0,r1}
000018  e9cd0106          STRD     r0,r1,[sp,#0x18]
00001c  f50a7066          ADD      r0,r10,#0x398
000020  c803              LDM      r0,{r0,r1}
000022  e9cd0104          STRD     r0,r1,[sp,#0x10]
000026  f50a7064          ADD      r0,r10,#0x390
00002a  c803              LDM      r0,{r0,r1}
00002c  e9cd0102          STRD     r0,r1,[sp,#8]
000030  e9dd0114          LDRD     r0,r1,[sp,#0x50]
000034  4642              MOV      r2,r8
000036  464b              MOV      r3,r9
000038  e9cd0100          STRD     r0,r1,[sp,#0]
00003c  4630              MOV      r0,r6
00003e  4639              MOV      r1,r7
000040  f7fffffe          BL       find_straight_length
000044  e9cd0108          STRD     r0,r1,[sp,#0x20]
;;;8506               (end_x, end_y, end_z
;;;8507       #ifdef AA
;;;8508               , AA_end
;;;8509       #endif
;;;8510   
;;;8511       #ifdef BB
;;;8512               , BB_end
;;;8513       #endif
;;;8514   
;;;8515       #ifdef CC
;;;8516               , CC_end
;;;8517       #endif
;;;8518               , settings->current_x,
;;;8519               settings->current_y, settings->current_z
;;;8520   
;;;8521       #ifdef AA
;;;8522               , settings->AA_current
;;;8523       #endif
;;;8524   
;;;8525       #ifdef BB
;;;8526               , settings->BB_current
;;;8527       #endif
;;;8528   
;;;8529       #ifdef CC
;;;8530               , settings->CC_current
;;;8531       #endif
;;;8532               );
;;;8533           rate SET_TO MAX(0.1, (length * block->f_number));
000048  f50b7084          ADD      r0,r11,#0x108
00004c  c803              LDM      r0,{r0,r1}
00004e  e9cd0104          STRD     r0,r1,[sp,#0x10]
000052  e9dd2308          LDRD     r2,r3,[sp,#0x20]
000056  f7fffffe          BL       __aeabi_dmul
00005a  4a10              LDR      r2,|L72.156|
00005c  4b10              LDR      r3,|L72.160|
00005e  e9cd0106          STRD     r0,r1,[sp,#0x18]
000062  f7fffffe          BL       __aeabi_cdcmple
000066  d202              BCS      |L72.110|
000068  480c              LDR      r0,|L72.156|
00006a  490d              LDR      r1,|L72.160|
00006c  e008              B        |L72.128|
                  |L72.110|
00006e  f50b7084          ADD      r0,r11,#0x108
000072  c803              LDM      r0,{r0,r1}
000074  e9cd0106          STRD     r0,r1,[sp,#0x18]
000078  e9dd2308          LDRD     r2,r3,[sp,#0x20]
00007c  f7fffffe          BL       __aeabi_dmul
                  |L72.128|
000080  4604              MOV      r4,r0
000082  460d              MOV      r5,r1
;;;8534           SET_FEED_RATE (rate);
000084  4620              MOV      r0,r4
000086  4629              MOV      r1,r5
000088  f7fffffe          BL       SET_FEED_RATE
;;;8535           settings->feed_rate SET_TO rate;
00008c  f50a6081          ADD      r0,r10,#0x408
000090  c030              STM      r0!,{r4,r5}
;;;8536   
;;;8537           return RS274NGC_OK;
000092  2000              MOVS     r0,#0
;;;8538       }
000094  b00b              ADD      sp,sp,#0x2c
000096  e8bd8ff0          POP      {r4-r11,pc}
;;;8539   
                          ENDP

00009a  0000              DCW      0x0000
                  |L72.156|
                          DCD      0x9999999a
                  |L72.160|
                          DCD      0x3fb99999

                          AREA ||i.parse_line||, CODE, READONLY, ALIGN=2

                  parse_line PROC
;;;8560   
;;;8561       static int parse_line(                        /* ARGUMENTS                            */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;8562       char * line,                                  /* array holding a line of RS274 code   */
;;;8563       block_pointer block,                          /* pointer to a block to be filled      */
;;;8564       setup_pointer settings)                       /* pointer to machine settings          */
;;;8565       {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4614              MOV      r4,r2
;;;8566           static char name[] SET_TO "parse_line";
;;;8567           int status;
;;;8568   
;;;8569           CHP(init_block (block));
00000a  4630              MOV      r0,r6
00000c  f7fffffe          BL       init_block
000010  0007              MOVS     r7,r0
000012  d027              BEQ      |L73.100|
000014  4857              LDR      r0,|L73.372|
000016  f8d0014c          LDR      r0,[r0,#0x14c]
00001a  2831              CMP      r0,#0x31
00001c  da20              BGE      |L73.96|
00001e  4955              LDR      r1,|L73.372|
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  1c49              ADDS     r1,r1,#1
00002a  4a52              LDR      r2,|L73.372|
00002c  f8c2114c          STR      r1,[r2,#0x14c]
000030  eb030183          ADD      r1,r3,r3,LSL #2
000034  f6a26254          SUB      r2,r2,#0xe54
000038  eb021101          ADD      r1,r2,r1,LSL #4
00003c  4608              MOV      r0,r1
00003e  494e              LDR      r1,|L73.376|
000040  f7fffffe          BL       strcpy
000044  f04f0100          MOV      r1,#0
000048  484a              LDR      r0,|L73.372|
00004a  f8d0014c          LDR      r0,[r0,#0x14c]
00004e  eb000080          ADD      r0,r0,r0,LSL #2
000052  4a4a              LDR      r2,|L73.380|
000054  eb021000          ADD      r0,r2,r0,LSL #4
000058  7001              STRB     r1,[r0,#0]
00005a  4638              MOV      r0,r7
                  |L73.92|
;;;8570           CHP(read_items(block, line, settings->parameters));
;;;8571           CHP(enhance_block(block, settings));
;;;8572           CHP(check_items (block, settings));
;;;8573           return RS274NGC_OK;
;;;8574       }
00005c  e8bd81f0          POP      {r4-r8,pc}
                  |L73.96|
000060  4638              MOV      r0,r7                 ;8569
000062  e7fb              B        |L73.92|
                  |L73.100|
000064  f50462c9          ADD      r2,r4,#0x648          ;8570
000068  4629              MOV      r1,r5                 ;8570
00006a  4630              MOV      r0,r6                 ;8570
00006c  f7fffffe          BL       read_items
000070  0007              MOVS     r7,r0                 ;8570
000072  d025              BEQ      |L73.192|
000074  483f              LDR      r0,|L73.372|
000076  f8d0014c          LDR      r0,[r0,#0x14c]        ;8570
00007a  2831              CMP      r0,#0x31              ;8570
00007c  da1e              BGE      |L73.188|
00007e  493d              LDR      r1,|L73.372|
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;8570
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;8570
000088  1c49              ADDS     r1,r1,#1              ;8570
00008a  4a3a              LDR      r2,|L73.372|
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;8570
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;8570
000094  4a39              LDR      r2,|L73.380|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;8570
00009a  4608              MOV      r0,r1                 ;8570
00009c  4936              LDR      r1,|L73.376|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;8570
0000a6  4833              LDR      r0,|L73.372|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;8570
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;8570
0000b0  4a32              LDR      r2,|L73.380|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;8570
0000b6  7001              STRB     r1,[r0,#0]            ;8570
0000b8  4638              MOV      r0,r7                 ;8570
0000ba  e7cf              B        |L73.92|
                  |L73.188|
0000bc  4638              MOV      r0,r7                 ;8570
0000be  e7cd              B        |L73.92|
                  |L73.192|
0000c0  4621              MOV      r1,r4                 ;8571
0000c2  4630              MOV      r0,r6                 ;8571
0000c4  f7fffffe          BL       enhance_block
0000c8  0007              MOVS     r7,r0                 ;8571
0000ca  d025              BEQ      |L73.280|
0000cc  4829              LDR      r0,|L73.372|
0000ce  f8d0014c          LDR      r0,[r0,#0x14c]        ;8571
0000d2  2831              CMP      r0,#0x31              ;8571
0000d4  da1e              BGE      |L73.276|
0000d6  4927              LDR      r1,|L73.372|
0000d8  f8d1314c          LDR      r3,[r1,#0x14c]        ;8571
0000dc  f8d1114c          LDR      r1,[r1,#0x14c]        ;8571
0000e0  1c49              ADDS     r1,r1,#1              ;8571
0000e2  4a24              LDR      r2,|L73.372|
0000e4  f8c2114c          STR      r1,[r2,#0x14c]        ;8571
0000e8  eb030183          ADD      r1,r3,r3,LSL #2       ;8571
0000ec  4a23              LDR      r2,|L73.380|
0000ee  eb021101          ADD      r1,r2,r1,LSL #4       ;8571
0000f2  4608              MOV      r0,r1                 ;8571
0000f4  4920              LDR      r1,|L73.376|
0000f6  f7fffffe          BL       strcpy
0000fa  f04f0100          MOV      r1,#0                 ;8571
0000fe  481d              LDR      r0,|L73.372|
000100  f8d0014c          LDR      r0,[r0,#0x14c]        ;8571
000104  eb000080          ADD      r0,r0,r0,LSL #2       ;8571
000108  4a1c              LDR      r2,|L73.380|
00010a  eb021000          ADD      r0,r2,r0,LSL #4       ;8571
00010e  7001              STRB     r1,[r0,#0]            ;8571
000110  4638              MOV      r0,r7                 ;8571
000112  e7a3              B        |L73.92|
                  |L73.276|
000114  4638              MOV      r0,r7                 ;8571
000116  e7a1              B        |L73.92|
                  |L73.280|
000118  4621              MOV      r1,r4                 ;8572
00011a  4630              MOV      r0,r6                 ;8572
00011c  f7fffffe          BL       check_items
000120  0007              MOVS     r7,r0                 ;8572
000122  d025              BEQ      |L73.368|
000124  4813              LDR      r0,|L73.372|
000126  f8d0014c          LDR      r0,[r0,#0x14c]        ;8572
00012a  2831              CMP      r0,#0x31              ;8572
00012c  da1e              BGE      |L73.364|
00012e  4911              LDR      r1,|L73.372|
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;8572
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;8572
000138  1c49              ADDS     r1,r1,#1              ;8572
00013a  4a0e              LDR      r2,|L73.372|
00013c  f8c2114c          STR      r1,[r2,#0x14c]        ;8572
000140  eb030183          ADD      r1,r3,r3,LSL #2       ;8572
000144  4a0d              LDR      r2,|L73.380|
000146  eb021101          ADD      r1,r2,r1,LSL #4       ;8572
00014a  4608              MOV      r0,r1                 ;8572
00014c  490a              LDR      r1,|L73.376|
00014e  f7fffffe          BL       strcpy
000152  f04f0100          MOV      r1,#0                 ;8572
000156  4807              LDR      r0,|L73.372|
000158  f8d0014c          LDR      r0,[r0,#0x14c]        ;8572
00015c  eb000080          ADD      r0,r0,r0,LSL #2       ;8572
000160  4a06              LDR      r2,|L73.380|
000162  eb021000          ADD      r0,r2,r0,LSL #4       ;8572
000166  7001              STRB     r1,[r0,#0]            ;8572
000168  4638              MOV      r0,r7                 ;8572
00016a  e777              B        |L73.92|
                  |L73.364|
00016c  4638              MOV      r0,r7                 ;8572
00016e  e775              B        |L73.92|
                  |L73.368|
000170  2000              MOVS     r0,#0                 ;8573
000172  e773              B        |L73.92|
;;;8575   
                          ENDP

                  |L73.372|
                          DCD      _setup+0xc000
                  |L73.376|
                          DCD      |symbol_number.482|
                  |L73.380|
                          DCD      _setup+0xb1ac

                          AREA ||i.precedence||, CODE, READONLY, ALIGN=1

                  precedence PROC
;;;8590   
;;;8591       static int precedence(                        /* ARGUMENTS  */
000000  4601              MOV      r1,r0
;;;8592       int an_operator)
;;;8593       {
;;;8594           if (an_operator IS RIGHT_BRACKET)
000002  290a              CMP      r1,#0xa
000004  d101              BNE      |L74.10|
;;;8595               return 1;
000006  2001              MOVS     r0,#1
                  |L74.8|
;;;8596           else if (an_operator IS POWER)
;;;8597               return 4;
;;;8598           else if (an_operator >= AND2)
;;;8599               return 2;
;;;8600           else
;;;8601               return 3;
;;;8602       }
000008  4770              BX       lr
                  |L74.10|
00000a  2903              CMP      r1,#3                 ;8596
00000c  d101              BNE      |L74.18|
00000e  2004              MOVS     r0,#4                 ;8597
000010  e7fa              B        |L74.8|
                  |L74.18|
000012  2905              CMP      r1,#5                 ;8598
000014  db01              BLT      |L74.26|
000016  2002              MOVS     r0,#2                 ;8599
000018  e7f6              B        |L74.8|
                  |L74.26|
00001a  2003              MOVS     r0,#3                 ;8601
00001c  e7f4              B        |L74.8|
;;;8603   
                          ENDP


                          AREA ||i.read_a||, CODE, READONLY, ALIGN=2

                  read_a PROC
;;;8642   
;;;8643       static int read_a(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;8644       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;8645       int * counter,                                /* pointer to a counter for position on the line  */
;;;8646       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;8647       double * parameters)                          /* array of system parameters                     */
;;;8648       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  461e              MOV      r6,r3
;;;8649           static char name[] SET_TO "read_a";
;;;8650           double value;
;;;8651           int status;
;;;8652   
;;;8653           CHK((line[*counter] ISNT 'a'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2861              CMP      r0,#0x61
000012  d027              BEQ      |L75.100|
000014  f04f0100          MOV      r1,#0
000018  482c              LDR      r0,|L75.204|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4923              LDR      r1,|L75.208|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4820              LDR      r0,|L75.204|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a1f              LDR      r2,|L75.212|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L75.96|
;;;8654           *counter SET_TO (*counter + 1);
;;;8655   #ifdef AA
;;;8656      /*AA*/
;;;8657           CHK((block->a_flag ISNT OFF), NCE_MULTIPLE_A_WORDS_ON_ONE_LINE);
;;;8658   #endif
;;;8659           CHP(read_real_value(line, counter, &value, parameters));
;;;8660   #ifdef AA
;;;8661           block->a_flag SET_TO ON;
;;;8662           block->a_number SET_TO value;
;;;8663   #else
;;;8664   #ifdef AXIS_ERROR
;;;8665           ERM(NCE_CANNOT_USE_A_WORD);
;;;8666   #endif                                    /* ifdef AXIS_ERROR */
;;;8667   #endif                                    /* ifdef AA */
;;;8668           return RS274NGC_OK;
;;;8669       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L75.100|
000064  6820              LDR      r0,[r4,#0]            ;8654
000066  f1000001          ADD      r0,r0,#1              ;8654
00006a  6020              STR      r0,[r4,#0]            ;8654
00006c  4633              MOV      r3,r6                 ;8659
00006e  466a              MOV      r2,sp                 ;8659
000070  4621              MOV      r1,r4                 ;8659
000072  4628              MOV      r0,r5                 ;8659
000074  f7fffffe          BL       read_real_value
000078  0007              MOVS     r7,r0                 ;8659
00007a  d025              BEQ      |L75.200|
00007c  4813              LDR      r0,|L75.204|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]        ;8659
000082  2831              CMP      r0,#0x31              ;8659
000084  da1e              BGE      |L75.196|
000086  4911              LDR      r1,|L75.204|
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;8659
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;8659
000090  1c49              ADDS     r1,r1,#1              ;8659
000092  4a0e              LDR      r2,|L75.204|
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;8659
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;8659
00009c  4a0d              LDR      r2,|L75.212|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;8659
0000a2  4608              MOV      r0,r1                 ;8659
0000a4  490a              LDR      r1,|L75.208|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;8659
0000ae  4807              LDR      r0,|L75.204|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;8659
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;8659
0000b8  4a06              LDR      r2,|L75.212|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;8659
0000be  7001              STRB     r1,[r0,#0]            ;8659
0000c0  4638              MOV      r0,r7                 ;8659
0000c2  e7cd              B        |L75.96|
                  |L75.196|
0000c4  4638              MOV      r0,r7                 ;8659
0000c6  e7cb              B        |L75.96|
                  |L75.200|
0000c8  2000              MOVS     r0,#0                 ;8668
0000ca  e7c9              B        |L75.96|
;;;8670   
                          ENDP

                  |L75.204|
                          DCD      _setup+0xc000
                  |L75.208|
                          DCD      |symbol_number.483|
                  |L75.212|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_atan||, CODE, READONLY, ALIGN=2

                  read_atan PROC
;;;8705   
;;;8706       static int read_atan(                         /* ARGUMENTS                                      */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;8707       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;8708       int * counter,                                /* pointer to a counter for position on line      */
;;;8709       double * double_ptr,                          /* pointer to double to be read                   */
;;;8710       double * parameters)                          /* array of system parameters                     */
;;;8711       {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  469b              MOV      r11,r3
;;;8712           static char name[] SET_TO "read_atan";
;;;8713           double argument2;
;;;8714           int status;
;;;8715   
;;;8716           CHK((line [*counter] ISNT '/'), NCE_SLASH_MISSING_AFTER_FIRST_ATAN_ARGUMENT);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  282f              CMP      r0,#0x2f
000014  d028              BEQ      |L76.104|
000016  f04f0100          MOV      r1,#0
00001a  4851              LDR      r0,|L76.352|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4948              LDR      r1,|L76.356|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4844              LDR      r0,|L76.352|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a44              LDR      r2,|L76.360|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f009c          MOV      r0,#0x9c
                  |L76.98|
;;;8717           *counter SET_TO (*counter + 1);
;;;8718           CHK((line[*counter] ISNT '['),
;;;8719               NCE_LEFT_BRACKET_MISSING_AFTER_SLASH_WITH_ATAN);
;;;8720           CHP(read_real_expression (line, counter, &argument2, parameters));
;;;8721      /* value in radians */
;;;8722           *double_ptr SET_TO atan2(*double_ptr, argument2);
;;;8723      /* convert to degrees */
;;;8724           *double_ptr SET_TO ((*double_ptr * 180.0)/PI);
;;;8725           return RS274NGC_OK;
;;;8726       }
000062  b004              ADD      sp,sp,#0x10
000064  e8bd9ff0          POP      {r4-r12,pc}
                  |L76.104|
000068  6820              LDR      r0,[r4,#0]            ;8717
00006a  f1000001          ADD      r0,r0,#1              ;8717
00006e  6020              STR      r0,[r4,#0]            ;8717
000070  6820              LDR      r0,[r4,#0]            ;8718
000072  f8180000          LDRB     r0,[r8,r0]            ;8718
000076  285b              CMP      r0,#0x5b              ;8718
000078  d025              BEQ      |L76.198|
00007a  f04f0100          MOV      r1,#0                 ;8718
00007e  4838              LDR      r0,|L76.352|
000080  f8c0114c          STR      r1,[r0,#0x14c]        ;8718
000084  4601              MOV      r1,r0                 ;8718
000086  f8d1314c          LDR      r3,[r1,#0x14c]        ;8718
00008a  f8d1114c          LDR      r1,[r1,#0x14c]        ;8718
00008e  f1010101          ADD      r1,r1,#1              ;8718
000092  4602              MOV      r2,r0                 ;8718
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;8718
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;8718
00009c  4a32              LDR      r2,|L76.360|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;8718
0000a2  4608              MOV      r0,r1                 ;8718
0000a4  492f              LDR      r1,|L76.356|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;8718
0000ae  482c              LDR      r0,|L76.352|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;8718
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;8718
0000b8  4a2b              LDR      r2,|L76.360|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;8718
0000be  7001              STRB     r1,[r0,#0]            ;8718
0000c0  f04f0060          MOV      r0,#0x60              ;8718
0000c4  e7cd              B        |L76.98|
                  |L76.198|
0000c6  465b              MOV      r3,r11                ;8720
0000c8  aa02              ADD      r2,sp,#8              ;8720
0000ca  4621              MOV      r1,r4                 ;8720
0000cc  4640              MOV      r0,r8                 ;8720
0000ce  f7fffffe          BL       read_real_expression
0000d2  9001              STR      r0,[sp,#4]            ;8720
0000d4  b328              CBZ      r0,|L76.290|
0000d6  4822              LDR      r0,|L76.352|
0000d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;8720
0000dc  2831              CMP      r0,#0x31              ;8720
0000de  da1e              BGE      |L76.286|
0000e0  491f              LDR      r1,|L76.352|
0000e2  f8d1314c          LDR      r3,[r1,#0x14c]        ;8720
0000e6  f8d1114c          LDR      r1,[r1,#0x14c]        ;8720
0000ea  1c49              ADDS     r1,r1,#1              ;8720
0000ec  4a1c              LDR      r2,|L76.352|
0000ee  f8c2114c          STR      r1,[r2,#0x14c]        ;8720
0000f2  eb030183          ADD      r1,r3,r3,LSL #2       ;8720
0000f6  4a1c              LDR      r2,|L76.360|
0000f8  eb021101          ADD      r1,r2,r1,LSL #4       ;8720
0000fc  4608              MOV      r0,r1                 ;8720
0000fe  4919              LDR      r1,|L76.356|
000100  f7fffffe          BL       strcpy
000104  f04f0100          MOV      r1,#0                 ;8720
000108  4815              LDR      r0,|L76.352|
00010a  f8d0014c          LDR      r0,[r0,#0x14c]        ;8720
00010e  eb000080          ADD      r0,r0,r0,LSL #2       ;8720
000112  4a15              LDR      r2,|L76.360|
000114  eb021000          ADD      r0,r2,r0,LSL #4       ;8720
000118  7001              STRB     r1,[r0,#0]            ;8720
00011a  9801              LDR      r0,[sp,#4]            ;8720
00011c  e7a1              B        |L76.98|
                  |L76.286|
00011e  9801              LDR      r0,[sp,#4]            ;8720
000120  e79f              B        |L76.98|
                  |L76.290|
000122  e9d51000          LDRD     r1,r0,[r5,#0]         ;8722
000126  460e              MOV      r6,r1                 ;8722
000128  4607              MOV      r7,r0                 ;8722
00012a  4630              MOV      r0,r6                 ;8722
00012c  4639              MOV      r1,r7                 ;8722
00012e  e9dd2302          LDRD     r2,r3,[sp,#8]         ;8722
000132  f7fffffe          BL       atan2
000136  e9c50100          STRD     r0,r1,[r5,#0]         ;8722
00013a  e9d51000          LDRD     r1,r0,[r5,#0]         ;8724
00013e  460e              MOV      r6,r1                 ;8724
000140  4607              MOV      r7,r0                 ;8724
000142  2200              MOVS     r2,#0                 ;8724
000144  4b09              LDR      r3,|L76.364|
000146  4630              MOV      r0,r6                 ;8724
000148  4639              MOV      r1,r7                 ;8724
00014a  f7fffffe          BL       __aeabi_dmul
00014e  4681              MOV      r9,r0                 ;8724
000150  4a07              LDR      r2,|L76.368|
000152  4b08              LDR      r3,|L76.372|
000154  f7fffffe          BL       __aeabi_ddiv
000158  e9c50100          STRD     r0,r1,[r5,#0]         ;8724
00015c  2000              MOVS     r0,#0                 ;8725
00015e  e780              B        |L76.98|
;;;8727   
                          ENDP

                  |L76.352|
                          DCD      _setup+0xc000
                  |L76.356|
                          DCD      |symbol_number.484|
                  |L76.360|
                          DCD      _setup+0xb1ac
                  |L76.364|
                          DCD      0x40668000
                  |L76.368|
                          DCD      0x54442d18
                  |L76.372|
                          DCD      0x400921fb

                          AREA ||i.read_b||, CODE, READONLY, ALIGN=2

                  read_b PROC
;;;8766   
;;;8767       static int read_b(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;8768       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;8769       int * counter,                                /* pointer to a counter for position on the line  */
;;;8770       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;8771       double * parameters)                          /* array of system parameters                     */
;;;8772       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  461e              MOV      r6,r3
;;;8773           static char name[] SET_TO "read_b";
;;;8774           double value;
;;;8775           int status;
;;;8776   
;;;8777           CHK((line[*counter] ISNT 'b'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2862              CMP      r0,#0x62
000012  d027              BEQ      |L77.100|
000014  f04f0100          MOV      r1,#0
000018  482c              LDR      r0,|L77.204|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4923              LDR      r1,|L77.208|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4820              LDR      r0,|L77.204|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a1f              LDR      r2,|L77.212|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L77.96|
;;;8778           *counter SET_TO (*counter + 1);
;;;8779   #ifdef BB
;;;8780      /*BB*/
;;;8781           CHK((block->b_flag ISNT OFF), NCE_MULTIPLE_B_WORDS_ON_ONE_LINE);
;;;8782   #endif
;;;8783           CHP(read_real_value(line, counter, &value, parameters));
;;;8784   #ifdef BB
;;;8785           block->b_flag SET_TO ON;
;;;8786           block->b_number SET_TO value;
;;;8787   #else
;;;8788   #ifdef AXIS_ERROR
;;;8789           ERM(NCE_CANNOT_USE_B_WORD);
;;;8790   #endif                                    /* ifdef AXIS_ERROR */
;;;8791   #endif                                    /* ifdef BB */
;;;8792           return RS274NGC_OK;
;;;8793       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L77.100|
000064  6820              LDR      r0,[r4,#0]            ;8778
000066  f1000001          ADD      r0,r0,#1              ;8778
00006a  6020              STR      r0,[r4,#0]            ;8778
00006c  4633              MOV      r3,r6                 ;8783
00006e  466a              MOV      r2,sp                 ;8783
000070  4621              MOV      r1,r4                 ;8783
000072  4628              MOV      r0,r5                 ;8783
000074  f7fffffe          BL       read_real_value
000078  0007              MOVS     r7,r0                 ;8783
00007a  d025              BEQ      |L77.200|
00007c  4813              LDR      r0,|L77.204|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]        ;8783
000082  2831              CMP      r0,#0x31              ;8783
000084  da1e              BGE      |L77.196|
000086  4911              LDR      r1,|L77.204|
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;8783
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;8783
000090  1c49              ADDS     r1,r1,#1              ;8783
000092  4a0e              LDR      r2,|L77.204|
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;8783
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;8783
00009c  4a0d              LDR      r2,|L77.212|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;8783
0000a2  4608              MOV      r0,r1                 ;8783
0000a4  490a              LDR      r1,|L77.208|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;8783
0000ae  4807              LDR      r0,|L77.204|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;8783
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;8783
0000b8  4a06              LDR      r2,|L77.212|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;8783
0000be  7001              STRB     r1,[r0,#0]            ;8783
0000c0  4638              MOV      r0,r7                 ;8783
0000c2  e7cd              B        |L77.96|
                  |L77.196|
0000c4  4638              MOV      r0,r7                 ;8783
0000c6  e7cb              B        |L77.96|
                  |L77.200|
0000c8  2000              MOVS     r0,#0                 ;8792
0000ca  e7c9              B        |L77.96|
;;;8794   
                          ENDP

                  |L77.204|
                          DCD      _setup+0xc000
                  |L77.208|
                          DCD      |symbol_number.485|
                  |L77.212|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_c||, CODE, READONLY, ALIGN=2

                  read_c PROC
;;;8833   
;;;8834       static int read_c(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;8835       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;8836       int * counter,                                /* pointer to a counter for position on the line  */
;;;8837       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;8838       double * parameters)                          /* array of system parameters                     */
;;;8839       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  461e              MOV      r6,r3
;;;8840           static char name[] SET_TO "read_c";
;;;8841           double value;
;;;8842           int status;
;;;8843   
;;;8844           CHK((line[*counter] ISNT 'c'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2863              CMP      r0,#0x63
000012  d027              BEQ      |L78.100|
000014  f04f0100          MOV      r1,#0
000018  482c              LDR      r0,|L78.204|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4923              LDR      r1,|L78.208|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4820              LDR      r0,|L78.204|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a1f              LDR      r2,|L78.212|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L78.96|
;;;8845           *counter SET_TO (*counter + 1);
;;;8846   #ifdef CC
;;;8847      /*CC*/
;;;8848           CHK((block->c_flag ISNT OFF), NCE_MULTIPLE_C_WORDS_ON_ONE_LINE);
;;;8849   #endif
;;;8850           CHP(read_real_value(line, counter, &value, parameters));
;;;8851   #ifdef CC
;;;8852           block->c_flag SET_TO ON;
;;;8853           block->c_number SET_TO value;
;;;8854   #else
;;;8855   #ifdef AXIS_ERROR
;;;8856           ERM(NCE_CANNOT_USE_C_WORD);
;;;8857   #endif                                    /* ifdef AXIS_ERROR */
;;;8858   #endif                                    /* ifdef CC */
;;;8859           return RS274NGC_OK;
;;;8860       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L78.100|
000064  6820              LDR      r0,[r4,#0]            ;8845
000066  f1000001          ADD      r0,r0,#1              ;8845
00006a  6020              STR      r0,[r4,#0]            ;8845
00006c  4633              MOV      r3,r6                 ;8850
00006e  466a              MOV      r2,sp                 ;8850
000070  4621              MOV      r1,r4                 ;8850
000072  4628              MOV      r0,r5                 ;8850
000074  f7fffffe          BL       read_real_value
000078  0007              MOVS     r7,r0                 ;8850
00007a  d025              BEQ      |L78.200|
00007c  4813              LDR      r0,|L78.204|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]        ;8850
000082  2831              CMP      r0,#0x31              ;8850
000084  da1e              BGE      |L78.196|
000086  4911              LDR      r1,|L78.204|
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;8850
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;8850
000090  1c49              ADDS     r1,r1,#1              ;8850
000092  4a0e              LDR      r2,|L78.204|
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;8850
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;8850
00009c  4a0d              LDR      r2,|L78.212|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;8850
0000a2  4608              MOV      r0,r1                 ;8850
0000a4  490a              LDR      r1,|L78.208|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;8850
0000ae  4807              LDR      r0,|L78.204|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;8850
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;8850
0000b8  4a06              LDR      r2,|L78.212|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;8850
0000be  7001              STRB     r1,[r0,#0]            ;8850
0000c0  4638              MOV      r0,r7                 ;8850
0000c2  e7cd              B        |L78.96|
                  |L78.196|
0000c4  4638              MOV      r0,r7                 ;8850
0000c6  e7cb              B        |L78.96|
                  |L78.200|
0000c8  2000              MOVS     r0,#0                 ;8859
0000ca  e7c9              B        |L78.96|
;;;8861   
                          ENDP

                  |L78.204|
                          DCD      _setup+0xc000
                  |L78.208|
                          DCD      |symbol_number.486|
                  |L78.212|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_comment||, CODE, READONLY, ALIGN=2

                  read_comment PROC
;;;8895   
;;;8896       static int read_comment(                      /* ARGUMENTS                                     */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;8897       char * line,                                  /* string: line of RS274 code being processed    */
;;;8898       int * counter,                                /* pointer to a counter for position on the line */
;;;8899       block_pointer block,                          /* pointer to a block being filled from the line */
;;;8900       double * parameters)                          /* array of system parameters                    */
;;;8901       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;8902           static char name[] SET_TO "read_comment";
;;;8903           int n;
;;;8904   
;;;8905           CHK((line[*counter] ISNT '('), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2828              CMP      r0,#0x28
000012  d027              BEQ      |L79.100|
000014  f04f0100          MOV      r1,#0
000018  4822              LDR      r0,|L79.164|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4919              LDR      r1,|L79.168|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4816              LDR      r0,|L79.164|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a15              LDR      r2,|L79.172|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L79.96|
;;;8906           (*counter)++;
;;;8907           for (n SET_TO 0; line[*counter] ISNT ')' ; (*counter)++, n++)
;;;8908           {
;;;8909               block->comment[n] SET_TO line[*counter];
;;;8910           }
;;;8911           block->comment[n] SET_TO 0;
;;;8912           (*counter)++;
;;;8913           return RS274NGC_OK;
;;;8914       }
000060  e8bd81f0          POP      {r4-r8,pc}
                  |L79.100|
000064  6820              LDR      r0,[r4,#0]            ;8906
000066  f1000001          ADD      r0,r0,#1              ;8906
00006a  6020              STR      r0,[r4,#0]            ;8906
00006c  f04f0600          MOV      r6,#0                 ;8907
000070  e009              B        |L79.134|
                  |L79.114|
000072  6820              LDR      r0,[r4,#0]            ;8909
000074  5c28              LDRB     r0,[r5,r0]            ;8909
000076  55b8              STRB     r0,[r7,r6]            ;8909
000078  6820              LDR      r0,[r4,#0]            ;8907
00007a  f1000001          ADD      r0,r0,#1              ;8907
00007e  6020              STR      r0,[r4,#0]            ;8907
000080  f1060001          ADD      r0,r6,#1              ;8907
000084  4606              MOV      r6,r0                 ;8907
                  |L79.134|
000086  6820              LDR      r0,[r4,#0]            ;8907
000088  5c28              LDRB     r0,[r5,r0]            ;8907
00008a  2829              CMP      r0,#0x29              ;8907
00008c  d1f1              BNE      |L79.114|
00008e  f04f0000          MOV      r0,#0                 ;8911
000092  55b8              STRB     r0,[r7,r6]            ;8911
000094  6820              LDR      r0,[r4,#0]            ;8912
000096  f1000001          ADD      r0,r0,#1              ;8912
00009a  6020              STR      r0,[r4,#0]            ;8912
00009c  f04f0000          MOV      r0,#0                 ;8913
0000a0  e7de              B        |L79.96|
;;;8915   
                          ENDP

0000a2  0000              DCW      0x0000
                  |L79.164|
                          DCD      _setup+0xc000
                  |L79.168|
                          DCD      |symbol_number.487|
                  |L79.172|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_d||, CODE, READONLY, ALIGN=2

                  read_d PROC
;;;8948   
;;;8949       static int read_d(                            /* ARGUMENTS                                     */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;8950       char * line,                                  /* string: line of RS274 code being processed    */
;;;8951       int * counter,                                /* pointer to a counter for position on the line */
;;;8952       block_pointer block,                          /* pointer to a block being filled from the line */
;;;8953       double * parameters)                          /* array of system parameters                    */
;;;8954       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;8955           static char name[] SET_TO "read_d";
;;;8956           int value;
;;;8957           int status;
;;;8958   
;;;8959           CHK((line[*counter] ISNT 'd'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2864              CMP      r0,#0x64
000012  d027              BEQ      |L80.100|
000014  f04f0100          MOV      r1,#0
000018  486e              LDR      r0,|L80.468|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4965              LDR      r1,|L80.472|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4862              LDR      r0,|L80.468|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a61              LDR      r2,|L80.476|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L80.96|
;;;8960           *counter SET_TO (*counter + 1);
;;;8961           CHK((block->d_number > -1), NCE_MULTIPLE_D_WORDS_ON_ONE_LINE);
;;;8962           CHP(read_integer_value(line, counter, &value, parameters));
;;;8963           CHK((value < 0), NCE_NEGATIVE_D_WORD_TOOL_RADIUS_INDEX_USED);
;;;8964           CHK((value > _setup.tool_max), NCE_TOOL_RADIUS_INDEX_TOO_BIG);
;;;8965           block->d_number SET_TO value;
;;;8966           return RS274NGC_OK;
;;;8967       }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L80.100|
000064  6820              LDR      r0,[r4,#0]            ;8960
000066  f1000001          ADD      r0,r0,#1              ;8960
00006a  6020              STR      r0,[r4,#0]            ;8960
00006c  f8d50100          LDR      r0,[r5,#0x100]        ;8961
000070  2800              CMP      r0,#0                 ;8961
000072  db25              BLT      |L80.192|
000074  f04f0100          MOV      r1,#0                 ;8961
000078  4856              LDR      r0,|L80.468|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;8961
00007e  4601              MOV      r1,r0                 ;8961
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;8961
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;8961
000088  f1010101          ADD      r1,r1,#1              ;8961
00008c  4602              MOV      r2,r0                 ;8961
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;8961
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;8961
000096  4a51              LDR      r2,|L80.476|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;8961
00009c  4608              MOV      r0,r1                 ;8961
00009e  494e              LDR      r1,|L80.472|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;8961
0000a8  484a              LDR      r0,|L80.468|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;8961
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;8961
0000b2  4a4a              LDR      r2,|L80.476|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;8961
0000b8  7001              STRB     r1,[r0,#0]            ;8961
0000ba  f04f0069          MOV      r0,#0x69              ;8961
0000be  e7cf              B        |L80.96|
                  |L80.192|
0000c0  463b              MOV      r3,r7                 ;8962
0000c2  466a              MOV      r2,sp                 ;8962
0000c4  4621              MOV      r1,r4                 ;8962
0000c6  4630              MOV      r0,r6                 ;8962
0000c8  f7fffffe          BL       read_integer_value
0000cc  ea5f0800          MOVS     r8,r0                 ;8962
0000d0  d025              BEQ      |L80.286|
0000d2  4840              LDR      r0,|L80.468|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;8962
0000d8  2831              CMP      r0,#0x31              ;8962
0000da  da1e              BGE      |L80.282|
0000dc  493d              LDR      r1,|L80.468|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;8962
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;8962
0000e6  1c49              ADDS     r1,r1,#1              ;8962
0000e8  4a3a              LDR      r2,|L80.468|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;8962
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;8962
0000f2  4a3a              LDR      r2,|L80.476|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;8962
0000f8  4608              MOV      r0,r1                 ;8962
0000fa  4937              LDR      r1,|L80.472|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;8962
000104  4833              LDR      r0,|L80.468|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;8962
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;8962
00010e  4a33              LDR      r2,|L80.476|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;8962
000114  7001              STRB     r1,[r0,#0]            ;8962
000116  4640              MOV      r0,r8                 ;8962
000118  e7a2              B        |L80.96|
                  |L80.282|
00011a  4640              MOV      r0,r8                 ;8962
00011c  e7a0              B        |L80.96|
                  |L80.286|
00011e  9800              LDR      r0,[sp,#0]            ;8963
000120  2800              CMP      r0,#0                 ;8963
000122  da25              BGE      |L80.368|
000124  f04f0100          MOV      r1,#0                 ;8963
000128  482a              LDR      r0,|L80.468|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;8963
00012e  4601              MOV      r1,r0                 ;8963
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;8963
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;8963
000138  f1010101          ADD      r1,r1,#1              ;8963
00013c  4602              MOV      r2,r0                 ;8963
00013e  f8c2114c          STR      r1,[r2,#0x14c]        ;8963
000142  eb030183          ADD      r1,r3,r3,LSL #2       ;8963
000146  4a25              LDR      r2,|L80.476|
000148  eb021101          ADD      r1,r2,r1,LSL #4       ;8963
00014c  4608              MOV      r0,r1                 ;8963
00014e  4922              LDR      r1,|L80.472|
000150  f7fffffe          BL       strcpy
000154  f04f0100          MOV      r1,#0                 ;8963
000158  481e              LDR      r0,|L80.468|
00015a  f8d0014c          LDR      r0,[r0,#0x14c]        ;8963
00015e  eb000080          ADD      r0,r0,r0,LSL #2       ;8963
000162  4a1e              LDR      r2,|L80.476|
000164  eb021000          ADD      r0,r2,r0,LSL #4       ;8963
000168  7001              STRB     r1,[r0,#0]            ;8963
00016a  f04f007a          MOV      r0,#0x7a              ;8963
00016e  e777              B        |L80.96|
                  |L80.368|
000170  4818              LDR      r0,|L80.468|
000172  f8d00158          LDR      r0,[r0,#0x158]        ;8964
000176  9900              LDR      r1,[sp,#0]            ;8964
000178  4288              CMP      r0,r1                 ;8964
00017a  da25              BGE      |L80.456|
00017c  f04f0100          MOV      r1,#0                 ;8964
000180  4814              LDR      r0,|L80.468|
000182  f8c0114c          STR      r1,[r0,#0x14c]        ;8964
000186  4601              MOV      r1,r0                 ;8964
000188  f8d1314c          LDR      r3,[r1,#0x14c]        ;8964
00018c  f8d1114c          LDR      r1,[r1,#0x14c]        ;8964
000190  f1010101          ADD      r1,r1,#1              ;8964
000194  4602              MOV      r2,r0                 ;8964
000196  f8c2114c          STR      r1,[r2,#0x14c]        ;8964
00019a  eb030183          ADD      r1,r3,r3,LSL #2       ;8964
00019e  4a0f              LDR      r2,|L80.476|
0001a0  eb021101          ADD      r1,r2,r1,LSL #4       ;8964
0001a4  4608              MOV      r0,r1                 ;8964
0001a6  490c              LDR      r1,|L80.472|
0001a8  f7fffffe          BL       strcpy
0001ac  f04f0100          MOV      r1,#0                 ;8964
0001b0  4808              LDR      r0,|L80.468|
0001b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;8964
0001b6  eb000080          ADD      r0,r0,r0,LSL #2       ;8964
0001ba  4a08              LDR      r2,|L80.476|
0001bc  eb021000          ADD      r0,r2,r0,LSL #4       ;8964
0001c0  7001              STRB     r1,[r0,#0]            ;8964
0001c2  f04f00a6          MOV      r0,#0xa6              ;8964
0001c6  e74b              B        |L80.96|
                  |L80.456|
0001c8  9800              LDR      r0,[sp,#0]            ;8965
0001ca  f8c50100          STR      r0,[r5,#0x100]        ;8965
0001ce  2000              MOVS     r0,#0                 ;8966
0001d0  e746              B        |L80.96|
;;;8968   
                          ENDP

0001d2  0000              DCW      0x0000
                  |L80.468|
                          DCD      _setup+0xc000
                  |L80.472|
                          DCD      |symbol_number.488|
                  |L80.476|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_f||, CODE, READONLY, ALIGN=2

                  read_f PROC
;;;9000   
;;;9001       static int read_f(                            /* ARGUMENTS                                     */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;9002       char * line,                                  /* string: line of RS274 code being processed    */
;;;9003       int * counter,                                /* pointer to a counter for position on the line */
;;;9004       block_pointer block,                          /* pointer to a block being filled from the line */
;;;9005       double * parameters)                          /* array of system parameters                    */
;;;9006       {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;9007           static char name[] SET_TO "read_f";
;;;9008           double value;
;;;9009           int status;
;;;9010   
;;;9011           CHK((line[*counter] ISNT 'f'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  2866              CMP      r0,#0x66
000014  d027              BEQ      |L81.102|
000016  f04f0100          MOV      r1,#0
00001a  4860              LDR      r0,|L81.412|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4957              LDR      r1,|L81.416|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4853              LDR      r0,|L81.412|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a53              LDR      r2,|L81.420|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L81.98|
;;;9012           *counter SET_TO (*counter + 1);
;;;9013           CHK((block->f_number > -1.0), NCE_MULTIPLE_F_WORDS_ON_ONE_LINE);
;;;9014           CHP(read_real_value(line, counter, &value, parameters));
;;;9015           CHK((value < 0.0), NCE_NEGATIVE_F_WORD_USED);
;;;9016           block->f_number SET_TO value;
;;;9017           return RS274NGC_OK;
;;;9018       }
000062  e8bd87fc          POP      {r2-r10,pc}
                  |L81.102|
000066  6820              LDR      r0,[r4,#0]            ;9012
000068  f1000001          ADD      r0,r0,#1              ;9012
00006c  6020              STR      r0,[r4,#0]            ;9012
00006e  f8d51108          LDR      r1,[r5,#0x108]        ;9013
000072  460e              MOV      r6,r1                 ;9013
000074  f8d5010c          LDR      r0,[r5,#0x10c]        ;9013
000078  4607              MOV      r7,r0                 ;9013
00007a  f04f0200          MOV      r2,#0                 ;9013
00007e  4b4a              LDR      r3,|L81.424|
000080  4630              MOV      r0,r6                 ;9013
000082  4639              MOV      r1,r7                 ;9013
000084  f7fffffe          BL       __aeabi_cdrcmple
000088  d225              BCS      |L81.214|
00008a  f04f0100          MOV      r1,#0                 ;9013
00008e  4843              LDR      r0,|L81.412|
000090  f8c0114c          STR      r1,[r0,#0x14c]        ;9013
000094  4601              MOV      r1,r0                 ;9013
000096  f8d1314c          LDR      r3,[r1,#0x14c]        ;9013
00009a  f8d1114c          LDR      r1,[r1,#0x14c]        ;9013
00009e  f1010101          ADD      r1,r1,#1              ;9013
0000a2  4602              MOV      r2,r0                 ;9013
0000a4  f8c2114c          STR      r1,[r2,#0x14c]        ;9013
0000a8  eb030183          ADD      r1,r3,r3,LSL #2       ;9013
0000ac  4a3d              LDR      r2,|L81.420|
0000ae  eb021101          ADD      r1,r2,r1,LSL #4       ;9013
0000b2  4608              MOV      r0,r1                 ;9013
0000b4  493a              LDR      r1,|L81.416|
0000b6  f7fffffe          BL       strcpy
0000ba  f04f0100          MOV      r1,#0                 ;9013
0000be  4837              LDR      r0,|L81.412|
0000c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;9013
0000c4  eb000080          ADD      r0,r0,r0,LSL #2       ;9013
0000c8  4a36              LDR      r2,|L81.420|
0000ca  eb021000          ADD      r0,r2,r0,LSL #4       ;9013
0000ce  7001              STRB     r1,[r0,#0]            ;9013
0000d0  f04f006a          MOV      r0,#0x6a              ;9013
0000d4  e7c5              B        |L81.98|
                  |L81.214|
0000d6  464b              MOV      r3,r9                 ;9014
0000d8  466a              MOV      r2,sp                 ;9014
0000da  4621              MOV      r1,r4                 ;9014
0000dc  4640              MOV      r0,r8                 ;9014
0000de  f7fffffe          BL       read_real_value
0000e2  ea5f0a00          MOVS     r10,r0                ;9014
0000e6  d025              BEQ      |L81.308|
0000e8  482c              LDR      r0,|L81.412|
0000ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;9014
0000ee  2831              CMP      r0,#0x31              ;9014
0000f0  da1e              BGE      |L81.304|
0000f2  492a              LDR      r1,|L81.412|
0000f4  f8d1314c          LDR      r3,[r1,#0x14c]        ;9014
0000f8  f8d1114c          LDR      r1,[r1,#0x14c]        ;9014
0000fc  1c49              ADDS     r1,r1,#1              ;9014
0000fe  4a27              LDR      r2,|L81.412|
000100  f8c2114c          STR      r1,[r2,#0x14c]        ;9014
000104  eb030183          ADD      r1,r3,r3,LSL #2       ;9014
000108  4a26              LDR      r2,|L81.420|
00010a  eb021101          ADD      r1,r2,r1,LSL #4       ;9014
00010e  4608              MOV      r0,r1                 ;9014
000110  4923              LDR      r1,|L81.416|
000112  f7fffffe          BL       strcpy
000116  f04f0100          MOV      r1,#0                 ;9014
00011a  4820              LDR      r0,|L81.412|
00011c  f8d0014c          LDR      r0,[r0,#0x14c]        ;9014
000120  eb000080          ADD      r0,r0,r0,LSL #2       ;9014
000124  4a1f              LDR      r2,|L81.420|
000126  eb021000          ADD      r0,r2,r0,LSL #4       ;9014
00012a  7001              STRB     r1,[r0,#0]            ;9014
00012c  4650              MOV      r0,r10                ;9014
00012e  e798              B        |L81.98|
                  |L81.304|
000130  4650              MOV      r0,r10                ;9014
000132  e796              B        |L81.98|
                  |L81.308|
000134  2200              MOVS     r2,#0                 ;9015
000136  4613              MOV      r3,r2                 ;9015
000138  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9015
00013c  f7fffffe          BL       __aeabi_cdcmple
000140  d225              BCS      |L81.398|
000142  f04f0100          MOV      r1,#0                 ;9015
000146  4815              LDR      r0,|L81.412|
000148  f8c0114c          STR      r1,[r0,#0x14c]        ;9015
00014c  4601              MOV      r1,r0                 ;9015
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9015
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;9015
000156  f1010101          ADD      r1,r1,#1              ;9015
00015a  4602              MOV      r2,r0                 ;9015
00015c  f8c2114c          STR      r1,[r2,#0x14c]        ;9015
000160  eb030183          ADD      r1,r3,r3,LSL #2       ;9015
000164  4a0f              LDR      r2,|L81.420|
000166  eb021101          ADD      r1,r2,r1,LSL #4       ;9015
00016a  4608              MOV      r0,r1                 ;9015
00016c  490c              LDR      r1,|L81.416|
00016e  f7fffffe          BL       strcpy
000172  f04f0100          MOV      r1,#0                 ;9015
000176  4809              LDR      r0,|L81.412|
000178  f8d0014c          LDR      r0,[r0,#0x14c]        ;9015
00017c  eb000080          ADD      r0,r0,r0,LSL #2       ;9015
000180  4a08              LDR      r2,|L81.420|
000182  eb021000          ADD      r0,r2,r0,LSL #4       ;9015
000186  7001              STRB     r1,[r0,#0]            ;9015
000188  f04f007b          MOV      r0,#0x7b              ;9015
00018c  e769              B        |L81.98|
                  |L81.398|
00018e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9016
000192  f5057284          ADD      r2,r5,#0x108          ;9016
000196  c203              STM      r2!,{r0,r1}           ;9016
000198  2000              MOVS     r0,#0                 ;9017
00019a  e762              B        |L81.98|
;;;9019   
                          ENDP

                  |L81.412|
                          DCD      _setup+0xc000
                  |L81.416|
                          DCD      |symbol_number.489|
                  |L81.420|
                          DCD      _setup+0xb1ac
                  |L81.424|
                          DCD      0xbff00000

                          AREA ||i.read_g||, CODE, READONLY, ALIGN=2

                  read_g PROC
;;;9068   
;;;9069       static int read_g(                            /* ARGUMENTS                                      */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;9070       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9071       int * counter,                                /* pointer to a counter for position on the line  */
;;;9072       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9073       double * parameters)                          /* array of system parameters                     */
;;;9074       {
000004  b087              SUB      sp,sp,#0x1c
000006  4682              MOV      r10,r0
000008  460f              MOV      r7,r1
00000a  4691              MOV      r9,r2
00000c  469b              MOV      r11,r3
;;;9075           static char name[] SET_TO "read_g";
;;;9076           double value_read;
;;;9077           int value;
;;;9078           int mode;
;;;9079           int status;
;;;9080   
;;;9081           CHK((line[*counter] ISNT 'g'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000e  6838              LDR      r0,[r7,#0]
000010  f81a0000          LDRB     r0,[r10,r0]
000014  2867              CMP      r0,#0x67
000016  d028              BEQ      |L82.106|
000018  f04f0100          MOV      r1,#0
00001c  48b2              LDR      r0,|L82.744|
00001e  f8c0114c          STR      r1,[r0,#0x14c]
000022  4601              MOV      r1,r0
000024  f8d1314c          LDR      r3,[r1,#0x14c]
000028  f8d1114c          LDR      r1,[r1,#0x14c]
00002c  f1010101          ADD      r1,r1,#1
000030  4602              MOV      r2,r0
000032  f8c2114c          STR      r1,[r2,#0x14c]
000036  eb030183          ADD      r1,r3,r3,LSL #2
00003a  f6a06254          SUB      r2,r0,#0xe54
00003e  eb021101          ADD      r1,r2,r1,LSL #4
000042  4608              MOV      r0,r1
000044  49a9              LDR      r1,|L82.748|
000046  f7fffffe          BL       strcpy
00004a  f04f0100          MOV      r1,#0
00004e  48a6              LDR      r0,|L82.744|
000050  f8d0014c          LDR      r0,[r0,#0x14c]
000054  eb000080          ADD      r0,r0,r0,LSL #2
000058  4aa5              LDR      r2,|L82.752|
00005a  eb021000          ADD      r0,r2,r0,LSL #4
00005e  7001              STRB     r1,[r0,#0]
000060  f04f0020          MOV      r0,#0x20
                  |L82.100|
;;;9082           *counter SET_TO (*counter + 1);
;;;9083           CHP(read_real_value(line, counter, &value_read, parameters));
;;;9084           value_read SET_TO (10.0 * value_read);
;;;9085           value SET_TO (int)floor(value_read);
;;;9086   
;;;9087           if ((value_read - value) > 0.999)
;;;9088               value SET_TO (int)ceil(value_read);
;;;9089           else if ((value_read - value) > 0.001)
;;;9090               ERM(NCE_G_CODE_OUT_OF_RANGE);
;;;9091   
;;;9092           CHK((value > 999), NCE_G_CODE_OUT_OF_RANGE);
;;;9093           CHK((value < 0), NCE_NEGATIVE_G_CODE_USED);
;;;9094           mode SET_TO _gees[value];
;;;9095           CHK((mode IS -1), NCE_UNKNOWN_G_CODE_USED);
;;;9096           CHK((block->g_modes[mode] ISNT -1),
;;;9097               NCE_TWO_G_CODES_USED_FROM_SAME_MODAL_GROUP);
;;;9098           block->g_modes[mode] SET_TO value;
;;;9099           return RS274NGC_OK;
;;;9100       }
000064  b007              ADD      sp,sp,#0x1c
000066  e8bd8ff0          POP      {r4-r11,pc}
                  |L82.106|
00006a  6838              LDR      r0,[r7,#0]            ;9082
00006c  f1000001          ADD      r0,r0,#1              ;9082
000070  6038              STR      r0,[r7,#0]            ;9082
000072  465b              MOV      r3,r11                ;9083
000074  aa04              ADD      r2,sp,#0x10           ;9083
000076  4639              MOV      r1,r7                 ;9083
000078  4650              MOV      r0,r10                ;9083
00007a  f7fffffe          BL       read_real_value
00007e  9003              STR      r0,[sp,#0xc]          ;9083
000080  b328              CBZ      r0,|L82.206|
000082  4899              LDR      r0,|L82.744|
000084  f8d0014c          LDR      r0,[r0,#0x14c]        ;9083
000088  2831              CMP      r0,#0x31              ;9083
00008a  da1e              BGE      |L82.202|
00008c  4996              LDR      r1,|L82.744|
00008e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9083
000092  f8d1114c          LDR      r1,[r1,#0x14c]        ;9083
000096  1c49              ADDS     r1,r1,#1              ;9083
000098  4a93              LDR      r2,|L82.744|
00009a  f8c2114c          STR      r1,[r2,#0x14c]        ;9083
00009e  eb030183          ADD      r1,r3,r3,LSL #2       ;9083
0000a2  4a93              LDR      r2,|L82.752|
0000a4  eb021101          ADD      r1,r2,r1,LSL #4       ;9083
0000a8  4608              MOV      r0,r1                 ;9083
0000aa  4990              LDR      r1,|L82.748|
0000ac  f7fffffe          BL       strcpy
0000b0  f04f0100          MOV      r1,#0                 ;9083
0000b4  488c              LDR      r0,|L82.744|
0000b6  f8d0014c          LDR      r0,[r0,#0x14c]        ;9083
0000ba  eb000080          ADD      r0,r0,r0,LSL #2       ;9083
0000be  4a8c              LDR      r2,|L82.752|
0000c0  eb021000          ADD      r0,r2,r0,LSL #4       ;9083
0000c4  7001              STRB     r1,[r0,#0]            ;9083
0000c6  9803              LDR      r0,[sp,#0xc]          ;9083
0000c8  e7cc              B        |L82.100|
                  |L82.202|
0000ca  9803              LDR      r0,[sp,#0xc]          ;9083
0000cc  e7ca              B        |L82.100|
                  |L82.206|
0000ce  2000              MOVS     r0,#0                 ;9084
0000d0  4988              LDR      r1,|L82.756|
0000d2  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;9084
0000d6  f7fffffe          BL       __aeabi_dmul
0000da  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;9084
0000de  e9dd0104          LDRD     r0,r1,[sp,#0x10]      ;9085
0000e2  f7fffffe          BL       floor
0000e6  4604              MOV      r4,r0                 ;9085
0000e8  f7fffffe          BL       __aeabi_d2iz
0000ec  4606              MOV      r6,r0                 ;9085
0000ee  4630              MOV      r0,r6                 ;9087
0000f0  f7fffffe          BL       __aeabi_i2d
0000f4  e9cd0100          STRD     r0,r1,[sp,#0]         ;9087
0000f8  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;9087
0000fc  f7fffffe          BL       __aeabi_drsub
000100  4604              MOV      r4,r0                 ;9087
000102  4a7d              LDR      r2,|L82.760|
000104  4b7d              LDR      r3,|L82.764|
000106  f7fffffe          BL       __aeabi_cdrcmple
00010a  d208              BCS      |L82.286|
00010c  e9dd0104          LDRD     r0,r1,[sp,#0x10]      ;9088
000110  f7fffffe          BL       ceil
000114  4604              MOV      r4,r0                 ;9088
000116  f7fffffe          BL       __aeabi_d2iz
00011a  4606              MOV      r6,r0                 ;9088
00011c  e034              B        |L82.392|
                  |L82.286|
00011e  4630              MOV      r0,r6                 ;9089
000120  f7fffffe          BL       __aeabi_i2d
000124  4604              MOV      r4,r0                 ;9089
000126  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;9089
00012a  f7fffffe          BL       __aeabi_drsub
00012e  4a74              LDR      r2,|L82.768|
000130  4b74              LDR      r3,|L82.772|
000132  e9cd0100          STRD     r0,r1,[sp,#0]         ;9089
000136  f7fffffe          BL       __aeabi_cdrcmple
00013a  d225              BCS      |L82.392|
00013c  f04f0100          MOV      r1,#0                 ;9090
000140  4869              LDR      r0,|L82.744|
000142  f8c0114c          STR      r1,[r0,#0x14c]        ;9090
000146  4601              MOV      r1,r0                 ;9090
000148  f8d1314c          LDR      r3,[r1,#0x14c]        ;9090
00014c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9090
000150  f1010101          ADD      r1,r1,#1              ;9090
000154  4602              MOV      r2,r0                 ;9090
000156  f8c2114c          STR      r1,[r2,#0x14c]        ;9090
00015a  eb030183          ADD      r1,r3,r3,LSL #2       ;9090
00015e  4a64              LDR      r2,|L82.752|
000160  eb021101          ADD      r1,r2,r1,LSL #4       ;9090
000164  4608              MOV      r0,r1                 ;9090
000166  4961              LDR      r1,|L82.748|
000168  f7fffffe          BL       strcpy
00016c  f04f0100          MOV      r1,#0                 ;9090
000170  485d              LDR      r0,|L82.744|
000172  f8d0014c          LDR      r0,[r0,#0x14c]        ;9090
000176  eb000080          ADD      r0,r0,r0,LSL #2       ;9090
00017a  4a5d              LDR      r2,|L82.752|
00017c  eb021000          ADD      r0,r2,r0,LSL #4       ;9090
000180  7001              STRB     r1,[r0,#0]            ;9090
000182  f04f0054          MOV      r0,#0x54              ;9090
000186  e76d              B        |L82.100|
                  |L82.392|
000188  f5b67f7a          CMP      r6,#0x3e8             ;9092
00018c  db25              BLT      |L82.474|
00018e  f04f0100          MOV      r1,#0                 ;9092
000192  4855              LDR      r0,|L82.744|
000194  f8c0114c          STR      r1,[r0,#0x14c]        ;9092
000198  4601              MOV      r1,r0                 ;9092
00019a  f8d1314c          LDR      r3,[r1,#0x14c]        ;9092
00019e  f8d1114c          LDR      r1,[r1,#0x14c]        ;9092
0001a2  f1010101          ADD      r1,r1,#1              ;9092
0001a6  4602              MOV      r2,r0                 ;9092
0001a8  f8c2114c          STR      r1,[r2,#0x14c]        ;9092
0001ac  eb030183          ADD      r1,r3,r3,LSL #2       ;9092
0001b0  4a4f              LDR      r2,|L82.752|
0001b2  eb021101          ADD      r1,r2,r1,LSL #4       ;9092
0001b6  4608              MOV      r0,r1                 ;9092
0001b8  494c              LDR      r1,|L82.748|
0001ba  f7fffffe          BL       strcpy
0001be  f04f0100          MOV      r1,#0                 ;9092
0001c2  4849              LDR      r0,|L82.744|
0001c4  f8d0014c          LDR      r0,[r0,#0x14c]        ;9092
0001c8  eb000080          ADD      r0,r0,r0,LSL #2       ;9092
0001cc  4a48              LDR      r2,|L82.752|
0001ce  eb021000          ADD      r0,r2,r0,LSL #4       ;9092
0001d2  7001              STRB     r1,[r0,#0]            ;9092
0001d4  f04f0054          MOV      r0,#0x54              ;9092
0001d8  e744              B        |L82.100|
                  |L82.474|
0001da  2e00              CMP      r6,#0                 ;9093
0001dc  da25              BGE      |L82.554|
0001de  f04f0100          MOV      r1,#0                 ;9093
0001e2  4841              LDR      r0,|L82.744|
0001e4  f8c0114c          STR      r1,[r0,#0x14c]        ;9093
0001e8  4601              MOV      r1,r0                 ;9093
0001ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;9093
0001ee  f8d1114c          LDR      r1,[r1,#0x14c]        ;9093
0001f2  f1010101          ADD      r1,r1,#1              ;9093
0001f6  4602              MOV      r2,r0                 ;9093
0001f8  f8c2114c          STR      r1,[r2,#0x14c]        ;9093
0001fc  eb030183          ADD      r1,r3,r3,LSL #2       ;9093
000200  4a3b              LDR      r2,|L82.752|
000202  eb021101          ADD      r1,r2,r1,LSL #4       ;9093
000206  4608              MOV      r0,r1                 ;9093
000208  4938              LDR      r1,|L82.748|
00020a  f7fffffe          BL       strcpy
00020e  f04f0100          MOV      r1,#0                 ;9093
000212  4835              LDR      r0,|L82.744|
000214  f8d0014c          LDR      r0,[r0,#0x14c]        ;9093
000218  eb000080          ADD      r0,r0,r0,LSL #2       ;9093
00021c  4a34              LDR      r2,|L82.752|
00021e  eb021000          ADD      r0,r2,r0,LSL #4       ;9093
000222  7001              STRB     r1,[r0,#0]            ;9093
000224  f04f007c          MOV      r0,#0x7c              ;9093
000228  e71c              B        |L82.100|
                  |L82.554|
00022a  4837              LDR      r0,|L82.776|
00022c  f8508026          LDR      r8,[r0,r6,LSL #2]     ;9094
000230  f1180001          ADDS     r0,r8,#1              ;9095
000234  d124              BNE      |L82.640|
000236  4601              MOV      r1,r0                 ;9095
000238  482b              LDR      r0,|L82.744|
00023a  f8c0114c          STR      r1,[r0,#0x14c]        ;9095
00023e  4601              MOV      r1,r0                 ;9095
000240  f8d1314c          LDR      r3,[r1,#0x14c]        ;9095
000244  f8d1114c          LDR      r1,[r1,#0x14c]        ;9095
000248  f1010101          ADD      r1,r1,#1              ;9095
00024c  4602              MOV      r2,r0                 ;9095
00024e  f8c2114c          STR      r1,[r2,#0x14c]        ;9095
000252  eb030183          ADD      r1,r3,r3,LSL #2       ;9095
000256  4a26              LDR      r2,|L82.752|
000258  eb021101          ADD      r1,r2,r1,LSL #4       ;9095
00025c  4608              MOV      r0,r1                 ;9095
00025e  4923              LDR      r1,|L82.748|
000260  f7fffffe          BL       strcpy
000264  f04f0100          MOV      r1,#0                 ;9095
000268  481f              LDR      r0,|L82.744|
00026a  f8d0014c          LDR      r0,[r0,#0x14c]        ;9095
00026e  eb000080          ADD      r0,r0,r0,LSL #2       ;9095
000272  4a1f              LDR      r2,|L82.752|
000274  eb021000          ADD      r0,r2,r0,LSL #4       ;9095
000278  7001              STRB     r1,[r0,#0]            ;9095
00027a  f04f00ad          MOV      r0,#0xad              ;9095
00027e  e6f1              B        |L82.100|
                  |L82.640|
000280  f5097088          ADD      r0,r9,#0x110          ;9096
000284  f8500028          LDR      r0,[r0,r8,LSL #2]     ;9096
000288  1c40              ADDS     r0,r0,#1              ;9096
00028a  d025              BEQ      |L82.728|
00028c  f04f0100          MOV      r1,#0                 ;9096
000290  4815              LDR      r0,|L82.744|
000292  f8c0114c          STR      r1,[r0,#0x14c]        ;9096
000296  4601              MOV      r1,r0                 ;9096
000298  f8d1314c          LDR      r3,[r1,#0x14c]        ;9096
00029c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9096
0002a0  f1010101          ADD      r1,r1,#1              ;9096
0002a4  4602              MOV      r2,r0                 ;9096
0002a6  f8c2114c          STR      r1,[r2,#0x14c]        ;9096
0002aa  eb030183          ADD      r1,r3,r3,LSL #2       ;9096
0002ae  4a10              LDR      r2,|L82.752|
0002b0  eb021101          ADD      r1,r2,r1,LSL #4       ;9096
0002b4  4608              MOV      r0,r1                 ;9096
0002b6  490d              LDR      r1,|L82.748|
0002b8  f7fffffe          BL       strcpy
0002bc  f04f0100          MOV      r1,#0                 ;9096
0002c0  4809              LDR      r0,|L82.744|
0002c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9096
0002c6  eb000080          ADD      r0,r0,r0,LSL #2       ;9096
0002ca  4a09              LDR      r2,|L82.752|
0002cc  eb021000          ADD      r0,r2,r0,LSL #4       ;9096
0002d0  7001              STRB     r1,[r0,#0]            ;9096
0002d2  f04f00a8          MOV      r0,#0xa8              ;9096
0002d6  e6c5              B        |L82.100|
                  |L82.728|
0002d8  f5097088          ADD      r0,r9,#0x110          ;9098
0002dc  f8406028          STR      r6,[r0,r8,LSL #2]     ;9098
0002e0  f04f0000          MOV      r0,#0                 ;9099
0002e4  e6be              B        |L82.100|
;;;9101   
                          ENDP

0002e6  0000              DCW      0x0000
                  |L82.744|
                          DCD      _setup+0xc000
                  |L82.748|
                          DCD      |symbol_number.490|
                  |L82.752|
                          DCD      _setup+0xb1ac
                  |L82.756|
                          DCD      0x40240000
                  |L82.760|
                          DCD      0xd916872b
                  |L82.764|
                          DCD      0x3feff7ce
                  |L82.768|
                          DCD      0xd2f1a9fc
                  |L82.772|
                          DCD      0x3f50624d
                  |L82.776|
                          DCD      _gees

                          AREA ||i.read_h||, CODE, READONLY, ALIGN=2

                  read_h PROC
;;;9131   
;;;9132       static int read_h(                            /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;9133       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9134       int * counter,                                /* pointer to a counter for position on the line  */
;;;9135       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9136       double * parameters)                          /* array of system parameters                     */
;;;9137       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9138           static char name[] SET_TO "read_h";
;;;9139           int value;
;;;9140           int status;
;;;9141   
;;;9142           CHK((line[*counter] ISNT 'h'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2868              CMP      r0,#0x68
000012  d027              BEQ      |L83.100|
000014  f04f0100          MOV      r1,#0
000018  486e              LDR      r0,|L83.468|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4965              LDR      r1,|L83.472|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4862              LDR      r0,|L83.468|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a61              LDR      r2,|L83.476|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L83.96|
;;;9143           *counter SET_TO (*counter + 1);
;;;9144           CHK((block->h_number > -1), NCE_MULTIPLE_H_WORDS_ON_ONE_LINE);
;;;9145           CHP(read_integer_value(line, counter, &value, parameters));
;;;9146           CHK((value < 0), NCE_NEGATIVE_H_WORD_TOOL_LENGTH_OFFSET_INDEX_USED);
;;;9147           CHK((value > _setup.tool_max), NCE_TOOL_LENGTH_OFFSET_INDEX_TOO_BIG);
;;;9148           block->h_number SET_TO value;
;;;9149           return RS274NGC_OK;
;;;9150       }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L83.100|
000064  6820              LDR      r0,[r4,#0]            ;9143
000066  f1000001          ADD      r0,r0,#1              ;9143
00006a  6020              STR      r0,[r4,#0]            ;9143
00006c  f8d50148          LDR      r0,[r5,#0x148]        ;9144
000070  2800              CMP      r0,#0                 ;9144
000072  db25              BLT      |L83.192|
000074  f04f0100          MOV      r1,#0                 ;9144
000078  4856              LDR      r0,|L83.468|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;9144
00007e  4601              MOV      r1,r0                 ;9144
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;9144
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;9144
000088  f1010101          ADD      r1,r1,#1              ;9144
00008c  4602              MOV      r2,r0                 ;9144
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;9144
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;9144
000096  4a51              LDR      r2,|L83.476|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;9144
00009c  4608              MOV      r0,r1                 ;9144
00009e  494e              LDR      r1,|L83.472|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;9144
0000a8  484a              LDR      r0,|L83.468|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;9144
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;9144
0000b2  4a4a              LDR      r2,|L83.476|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;9144
0000b8  7001              STRB     r1,[r0,#0]            ;9144
0000ba  f04f006b          MOV      r0,#0x6b              ;9144
0000be  e7cf              B        |L83.96|
                  |L83.192|
0000c0  463b              MOV      r3,r7                 ;9145
0000c2  466a              MOV      r2,sp                 ;9145
0000c4  4621              MOV      r1,r4                 ;9145
0000c6  4630              MOV      r0,r6                 ;9145
0000c8  f7fffffe          BL       read_integer_value
0000cc  ea5f0800          MOVS     r8,r0                 ;9145
0000d0  d025              BEQ      |L83.286|
0000d2  4840              LDR      r0,|L83.468|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;9145
0000d8  2831              CMP      r0,#0x31              ;9145
0000da  da1e              BGE      |L83.282|
0000dc  493d              LDR      r1,|L83.468|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;9145
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;9145
0000e6  1c49              ADDS     r1,r1,#1              ;9145
0000e8  4a3a              LDR      r2,|L83.468|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;9145
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;9145
0000f2  4a3a              LDR      r2,|L83.476|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;9145
0000f8  4608              MOV      r0,r1                 ;9145
0000fa  4937              LDR      r1,|L83.472|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;9145
000104  4833              LDR      r0,|L83.468|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;9145
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;9145
00010e  4a33              LDR      r2,|L83.476|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;9145
000114  7001              STRB     r1,[r0,#0]            ;9145
000116  4640              MOV      r0,r8                 ;9145
000118  e7a2              B        |L83.96|
                  |L83.282|
00011a  4640              MOV      r0,r8                 ;9145
00011c  e7a0              B        |L83.96|
                  |L83.286|
00011e  9800              LDR      r0,[sp,#0]            ;9146
000120  2800              CMP      r0,#0                 ;9146
000122  da25              BGE      |L83.368|
000124  f04f0100          MOV      r1,#0                 ;9146
000128  482a              LDR      r0,|L83.468|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;9146
00012e  4601              MOV      r1,r0                 ;9146
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;9146
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;9146
000138  f1010101          ADD      r1,r1,#1              ;9146
00013c  4602              MOV      r2,r0                 ;9146
00013e  f8c2114c          STR      r1,[r2,#0x14c]        ;9146
000142  eb030183          ADD      r1,r3,r3,LSL #2       ;9146
000146  4a25              LDR      r2,|L83.476|
000148  eb021101          ADD      r1,r2,r1,LSL #4       ;9146
00014c  4608              MOV      r0,r1                 ;9146
00014e  4922              LDR      r1,|L83.472|
000150  f7fffffe          BL       strcpy
000154  f04f0100          MOV      r1,#0                 ;9146
000158  481e              LDR      r0,|L83.468|
00015a  f8d0014c          LDR      r0,[r0,#0x14c]        ;9146
00015e  eb000080          ADD      r0,r0,r0,LSL #2       ;9146
000162  4a1e              LDR      r2,|L83.476|
000164  eb021000          ADD      r0,r2,r0,LSL #4       ;9146
000168  7001              STRB     r1,[r0,#0]            ;9146
00016a  f04f007d          MOV      r0,#0x7d              ;9146
00016e  e777              B        |L83.96|
                  |L83.368|
000170  4818              LDR      r0,|L83.468|
000172  f8d00158          LDR      r0,[r0,#0x158]        ;9147
000176  9900              LDR      r1,[sp,#0]            ;9147
000178  4288              CMP      r0,r1                 ;9147
00017a  da25              BGE      |L83.456|
00017c  f04f0100          MOV      r1,#0                 ;9147
000180  4814              LDR      r0,|L83.468|
000182  f8c0114c          STR      r1,[r0,#0x14c]        ;9147
000186  4601              MOV      r1,r0                 ;9147
000188  f8d1314c          LDR      r3,[r1,#0x14c]        ;9147
00018c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9147
000190  f1010101          ADD      r1,r1,#1              ;9147
000194  4602              MOV      r2,r0                 ;9147
000196  f8c2114c          STR      r1,[r2,#0x14c]        ;9147
00019a  eb030183          ADD      r1,r3,r3,LSL #2       ;9147
00019e  4a0f              LDR      r2,|L83.476|
0001a0  eb021101          ADD      r1,r2,r1,LSL #4       ;9147
0001a4  4608              MOV      r0,r1                 ;9147
0001a6  490c              LDR      r1,|L83.472|
0001a8  f7fffffe          BL       strcpy
0001ac  f04f0100          MOV      r1,#0                 ;9147
0001b0  4808              LDR      r0,|L83.468|
0001b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9147
0001b6  eb000080          ADD      r0,r0,r0,LSL #2       ;9147
0001ba  4a08              LDR      r2,|L83.476|
0001bc  eb021000          ADD      r0,r2,r0,LSL #4       ;9147
0001c0  7001              STRB     r1,[r0,#0]            ;9147
0001c2  f04f00a4          MOV      r0,#0xa4              ;9147
0001c6  e74b              B        |L83.96|
                  |L83.456|
0001c8  9800              LDR      r0,[sp,#0]            ;9148
0001ca  f8c50148          STR      r0,[r5,#0x148]        ;9148
0001ce  2000              MOVS     r0,#0                 ;9149
0001d0  e746              B        |L83.96|
;;;9151   
                          ENDP

0001d2  0000              DCW      0x0000
                  |L83.468|
                          DCD      _setup+0xc000
                  |L83.472|
                          DCD      |symbol_number.491|
                  |L83.476|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_i||, CODE, READONLY, ALIGN=2

                  read_i PROC
;;;9184   
;;;9185       static int read_i(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;9186       char * line,                                  /* string: line of RS274 code being processed     */
;;;9187       int * counter,                                /* pointer to a counter for position on the line  */
;;;9188       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9189       double * parameters)                          /* array of system parameters                     */
;;;9190       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9191           static char name[] SET_TO "read_i";
;;;9192           double value;
;;;9193           int status;
;;;9194   
;;;9195           CHK((line[*counter] ISNT 'i'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2869              CMP      r0,#0x69
000012  d027              BEQ      |L84.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L84.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L84.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L84.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L84.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L84.96|
;;;9196           *counter SET_TO (*counter + 1);
;;;9197           CHK((block->i_flag ISNT OFF), NCE_MULTIPLE_I_WORDS_ON_ONE_LINE);
;;;9198           CHP(read_real_value(line, counter, &value, parameters));
;;;9199           block->i_flag SET_TO ON;
;;;9200           block->i_number SET_TO value;
;;;9201           return RS274NGC_OK;
;;;9202       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L84.100|
000064  6820              LDR      r0,[r4,#0]            ;9196
000066  f1000001          ADD      r0,r0,#1              ;9196
00006a  6020              STR      r0,[r4,#0]            ;9196
00006c  f8d5014c          LDR      r0,[r5,#0x14c]        ;9197
000070  b328              CBZ      r0,|L84.190|
000072  f04f0100          MOV      r1,#0                 ;9197
000076  482f              LDR      r0,|L84.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;9197
00007c  4601              MOV      r1,r0                 ;9197
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9197
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;9197
000086  f1010101          ADD      r1,r1,#1              ;9197
00008a  4602              MOV      r2,r0                 ;9197
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9197
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9197
000094  4a29              LDR      r2,|L84.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9197
00009a  4608              MOV      r0,r1                 ;9197
00009c  4926              LDR      r1,|L84.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9197
0000a6  4823              LDR      r0,|L84.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9197
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9197
0000b0  4a22              LDR      r2,|L84.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9197
0000b6  7001              STRB     r1,[r0,#0]            ;9197
0000b8  f04f006c          MOV      r0,#0x6c              ;9197
0000bc  e7d0              B        |L84.96|
                  |L84.190|
0000be  463b              MOV      r3,r7                 ;9198
0000c0  466a              MOV      r2,sp                 ;9198
0000c2  4621              MOV      r1,r4                 ;9198
0000c4  4630              MOV      r0,r6                 ;9198
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;9198
0000ce  d025              BEQ      |L84.284|
0000d0  4818              LDR      r0,|L84.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9198
0000d6  2831              CMP      r0,#0x31              ;9198
0000d8  da1e              BGE      |L84.280|
0000da  4916              LDR      r1,|L84.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9198
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9198
0000e4  1c49              ADDS     r1,r1,#1              ;9198
0000e6  4a13              LDR      r2,|L84.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;9198
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;9198
0000f0  4a12              LDR      r2,|L84.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;9198
0000f6  4608              MOV      r0,r1                 ;9198
0000f8  490f              LDR      r1,|L84.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;9198
000102  480c              LDR      r0,|L84.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;9198
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;9198
00010c  4a0b              LDR      r2,|L84.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;9198
000112  7001              STRB     r1,[r0,#0]            ;9198
000114  4640              MOV      r0,r8                 ;9198
000116  e7a3              B        |L84.96|
                  |L84.280|
000118  4640              MOV      r0,r8                 ;9198
00011a  e7a1              B        |L84.96|
                  |L84.284|
00011c  f04f0001          MOV      r0,#1                 ;9199
000120  f8c5014c          STR      r0,[r5,#0x14c]        ;9199
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9200
000128  f50572a8          ADD      r2,r5,#0x150          ;9200
00012c  c203              STM      r2!,{r0,r1}           ;9200
00012e  f04f0000          MOV      r0,#0                 ;9201
000132  e795              B        |L84.96|
;;;9203   
                          ENDP

                  |L84.308|
                          DCD      _setup+0xc000
                  |L84.312|
                          DCD      |symbol_number.492|
                  |L84.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_integer_unsigned||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_int
                  read_integer_unsigned PROC
;;;9226   
;;;9227       static int read_integer_unsigned(             /* ARGUMENTS                       */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;9228       char * line,                                  /* string: line of RS274 code being processed    */
;;;9229       int * counter,                                /* pointer to a counter for position on the line */
;;;9230       int * integer_ptr)                            /* pointer to the value being read               */
;;;9231       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
;;;9232           static char name[] SET_TO "read_integer_unsigned";
;;;9233           int n;
;;;9234           char c;
;;;9235   
;;;9236           for (n SET_TO *counter; ; n++)
00000a  6820              LDR      r0,[r4,#0]
00000c  4605              MOV      r5,r0
00000e  bf00              NOP      
                  |L85.16|
;;;9237           {
;;;9238               c SET_TO line[n];
000010  5d77              LDRB     r7,[r6,r5]
;;;9239               if ((c < 48) OR (c > 57))
000012  2f30              CMP      r7,#0x30
000014  db01              BLT      |L85.26|
000016  2f39              CMP      r7,#0x39
000018  dd00              BLE      |L85.28|
                  |L85.26|
;;;9240                   break;
00001a  e003              B        |L85.36|
                  |L85.28|
00001c  f1050001          ADD      r0,r5,#1              ;9236
000020  4605              MOV      r5,r0                 ;9236
000022  e7f5              B        |L85.16|
                  |L85.36|
000024  bf00              NOP      
;;;9241           }
;;;9242           CHK((n IS *counter), NCE_BAD_FORMAT_UNSIGNED_INTEGER);
000026  6820              LDR      r0,[r4,#0]
000028  42a8              CMP      r0,r5
00002a  d127              BNE      |L85.124|
00002c  f04f0100          MOV      r1,#0
000030  482b              LDR      r0,|L85.224|
000032  f8c0114c          STR      r1,[r0,#0x14c]
000036  4601              MOV      r1,r0
000038  f8d1314c          LDR      r3,[r1,#0x14c]
00003c  f8d1114c          LDR      r1,[r1,#0x14c]
000040  f1010101          ADD      r1,r1,#1
000044  4602              MOV      r2,r0
000046  f8c2114c          STR      r1,[r2,#0x14c]
00004a  eb030183          ADD      r1,r3,r3,LSL #2
00004e  f6a06254          SUB      r2,r0,#0xe54
000052  eb021101          ADD      r1,r2,r1,LSL #4
000056  4608              MOV      r0,r1
000058  4922              LDR      r1,|L85.228|
00005a  f7fffffe          BL       strcpy
00005e  f04f0100          MOV      r1,#0
000062  481f              LDR      r0,|L85.224|
000064  f8d0014c          LDR      r0,[r0,#0x14c]
000068  eb000080          ADD      r0,r0,r0,LSL #2
00006c  4a1e              LDR      r2,|L85.232|
00006e  eb021000          ADD      r0,r2,r0,LSL #4
000072  7001              STRB     r1,[r0,#0]
000074  f04f000d          MOV      r0,#0xd
                  |L85.120|
;;;9243           if (sscanf(line + *counter, "%d", integer_ptr) IS 0)
;;;9244               ERM(NCE_SSCANF_FAILED);
;;;9245           *counter SET_TO n;
;;;9246           return RS274NGC_OK;
;;;9247       }
000078  e8bd81f0          POP      {r4-r8,pc}
                  |L85.124|
00007c  6821              LDR      r1,[r4,#0]            ;9243
00007e  4431              ADD      r1,r1,r6              ;9243
000080  4608              MOV      r0,r1                 ;9243
000082  4642              MOV      r2,r8                 ;9243
000084  a119              ADR      r1,|L85.236|
000086  f7fffffe          BL       __0sscanf
00008a  bb28              CBNZ     r0,|L85.216|
00008c  f04f0100          MOV      r1,#0                 ;9244
000090  4813              LDR      r0,|L85.224|
000092  f8c0114c          STR      r1,[r0,#0x14c]        ;9244
000096  4601              MOV      r1,r0                 ;9244
000098  f8d1314c          LDR      r3,[r1,#0x14c]        ;9244
00009c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9244
0000a0  f1010101          ADD      r1,r1,#1              ;9244
0000a4  4602              MOV      r2,r0                 ;9244
0000a6  f8c2114c          STR      r1,[r2,#0x14c]        ;9244
0000aa  eb030183          ADD      r1,r3,r3,LSL #2       ;9244
0000ae  4a0e              LDR      r2,|L85.232|
0000b0  eb021101          ADD      r1,r2,r1,LSL #4       ;9244
0000b4  4608              MOV      r0,r1                 ;9244
0000b6  490b              LDR      r1,|L85.228|
0000b8  f7fffffe          BL       strcpy
0000bc  f04f0100          MOV      r1,#0                 ;9244
0000c0  4807              LDR      r0,|L85.224|
0000c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9244
0000c6  eb000080          ADD      r0,r0,r0,LSL #2       ;9244
0000ca  4a07              LDR      r2,|L85.232|
0000cc  eb021000          ADD      r0,r2,r0,LSL #4       ;9244
0000d0  7001              STRB     r1,[r0,#0]            ;9244
0000d2  f04f00a1          MOV      r0,#0xa1              ;9244
0000d6  e7cf              B        |L85.120|
                  |L85.216|
0000d8  6025              STR      r5,[r4,#0]            ;9245
0000da  2000              MOVS     r0,#0                 ;9246
0000dc  e7cc              B        |L85.120|
;;;9248   
                          ENDP

0000de  0000              DCW      0x0000
                  |L85.224|
                          DCD      _setup+0xc000
                  |L85.228|
                          DCD      |symbol_number.493|
                  |L85.232|
                          DCD      _setup+0xb1ac
                  |L85.236|
0000ec  256400            DCB      "%d",0
0000ef  00                DCB      0

                          AREA ||i.read_integer_value||, CODE, READONLY, ALIGN=2

                  read_integer_value PROC
;;;9282   
;;;9283       static int read_integer_value(                /* ARGUMENTS                                 */
000000  e92d5fff          PUSH     {r0-r12,lr}
;;;9284       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9285       int * counter,                                /* pointer to a counter for position on the line  */
;;;9286       int * integer_ptr,                            /* pointer to the value being read                */
;;;9287       double * parameters)                          /* array of system parameters                     */
;;;9288       {
000004  4681              MOV      r9,r0
000006  468a              MOV      r10,r1
000008  4616              MOV      r6,r2
00000a  469b              MOV      r11,r3
;;;9289           static char name[] SET_TO "read_integer_value";
;;;9290           double float_value;
;;;9291           int status;
;;;9292   
;;;9293           CHP(read_real_value(line, counter, &float_value, parameters));
00000c  465b              MOV      r3,r11
00000e  aa02              ADD      r2,sp,#8
000010  4651              MOV      r1,r10
000012  4648              MOV      r0,r9
000014  f7fffffe          BL       read_real_value
000018  9001              STR      r0,[sp,#4]
00001a  b340              CBZ      r0,|L86.110|
00001c  483f              LDR      r0,|L86.284|
00001e  f8d0014c          LDR      r0,[r0,#0x14c]
000022  2831              CMP      r0,#0x31
000024  da21              BGE      |L86.106|
000026  493d              LDR      r1,|L86.284|
000028  f8d1314c          LDR      r3,[r1,#0x14c]
00002c  f8d1114c          LDR      r1,[r1,#0x14c]
000030  1c49              ADDS     r1,r1,#1
000032  4a3a              LDR      r2,|L86.284|
000034  f8c2114c          STR      r1,[r2,#0x14c]
000038  eb030183          ADD      r1,r3,r3,LSL #2
00003c  f6a26254          SUB      r2,r2,#0xe54
000040  eb021101          ADD      r1,r2,r1,LSL #4
000044  4608              MOV      r0,r1
000046  4936              LDR      r1,|L86.288|
000048  f7fffffe          BL       strcpy
00004c  f04f0100          MOV      r1,#0
000050  4832              LDR      r0,|L86.284|
000052  f8d0014c          LDR      r0,[r0,#0x14c]
000056  eb000080          ADD      r0,r0,r0,LSL #2
00005a  4a32              LDR      r2,|L86.292|
00005c  eb021000          ADD      r0,r2,r0,LSL #4
000060  7001              STRB     r1,[r0,#0]
000062  9801              LDR      r0,[sp,#4]
                  |L86.100|
;;;9294           *integer_ptr SET_TO (int)floor(float_value);
;;;9295           if ((float_value - *integer_ptr) > 0.9999)
;;;9296           {
;;;9297               *integer_ptr SET_TO (int)ceil(float_value);
;;;9298           }
;;;9299           else if ((float_value - *integer_ptr) > 0.0001)
;;;9300               ERM(NCE_NON_INTEGER_VALUE_FOR_INTEGER);
;;;9301           return RS274NGC_OK;
;;;9302       }
000064  b004              ADD      sp,sp,#0x10
000066  e8bd9ff0          POP      {r4-r12,pc}
                  |L86.106|
00006a  9801              LDR      r0,[sp,#4]            ;9293
00006c  e7fa              B        |L86.100|
                  |L86.110|
00006e  e9dd0102          LDRD     r0,r1,[sp,#8]         ;9294
000072  f7fffffe          BL       floor
000076  4604              MOV      r4,r0                 ;9294
000078  f7fffffe          BL       __aeabi_d2iz
00007c  6030              STR      r0,[r6,#0]            ;9294
00007e  6831              LDR      r1,[r6,#0]            ;9295
000080  4608              MOV      r0,r1                 ;9295
000082  f7fffffe          BL       __aeabi_i2d
000086  4607              MOV      r7,r0                 ;9295
000088  e9dd2302          LDRD     r2,r3,[sp,#8]         ;9295
00008c  f7fffffe          BL       __aeabi_drsub
000090  4604              MOV      r4,r0                 ;9295
000092  4a25              LDR      r2,|L86.296|
000094  4b25              LDR      r3,|L86.300|
000096  f7fffffe          BL       __aeabi_cdrcmple
00009a  d208              BCS      |L86.174|
00009c  e9dd0102          LDRD     r0,r1,[sp,#8]         ;9297
0000a0  f7fffffe          BL       ceil
0000a4  4604              MOV      r4,r0                 ;9297
0000a6  f7fffffe          BL       __aeabi_d2iz
0000aa  6030              STR      r0,[r6,#0]            ;9297
0000ac  e034              B        |L86.280|
                  |L86.174|
0000ae  6831              LDR      r1,[r6,#0]            ;9299
0000b0  4608              MOV      r0,r1                 ;9299
0000b2  f7fffffe          BL       __aeabi_i2d
0000b6  4607              MOV      r7,r0                 ;9299
0000b8  e9dd2302          LDRD     r2,r3,[sp,#8]         ;9299
0000bc  f7fffffe          BL       __aeabi_drsub
0000c0  4604              MOV      r4,r0                 ;9299
0000c2  4a1b              LDR      r2,|L86.304|
0000c4  4b1b              LDR      r3,|L86.308|
0000c6  f7fffffe          BL       __aeabi_cdrcmple
0000ca  d225              BCS      |L86.280|
0000cc  f04f0100          MOV      r1,#0                 ;9300
0000d0  4812              LDR      r0,|L86.284|
0000d2  f8c0114c          STR      r1,[r0,#0x14c]        ;9300
0000d6  4601              MOV      r1,r0                 ;9300
0000d8  f8d1314c          LDR      r3,[r1,#0x14c]        ;9300
0000dc  f8d1114c          LDR      r1,[r1,#0x14c]        ;9300
0000e0  f1010101          ADD      r1,r1,#1              ;9300
0000e4  4602              MOV      r2,r0                 ;9300
0000e6  f8c2114c          STR      r1,[r2,#0x14c]        ;9300
0000ea  eb030183          ADD      r1,r3,r3,LSL #2       ;9300
0000ee  4a0d              LDR      r2,|L86.292|
0000f0  eb021101          ADD      r1,r2,r1,LSL #4       ;9300
0000f4  4608              MOV      r0,r1                 ;9300
0000f6  490a              LDR      r1,|L86.288|
0000f8  f7fffffe          BL       strcpy
0000fc  f04f0100          MOV      r1,#0                 ;9300
000100  4806              LDR      r0,|L86.284|
000102  f8d0014c          LDR      r0,[r0,#0x14c]        ;9300
000106  eb000080          ADD      r0,r0,r0,LSL #2       ;9300
00010a  4a06              LDR      r2,|L86.292|
00010c  eb021000          ADD      r0,r2,r0,LSL #4       ;9300
000110  7001              STRB     r1,[r0,#0]            ;9300
000112  f04f0087          MOV      r0,#0x87              ;9300
000116  e7a5              B        |L86.100|
                  |L86.280|
000118  2000              MOVS     r0,#0                 ;9301
00011a  e7a3              B        |L86.100|
;;;9303   
                          ENDP

                  |L86.284|
                          DCD      _setup+0xc000
                  |L86.288|
                          DCD      |symbol_number.494|
                  |L86.292|
                          DCD      _setup+0xb1ac
                  |L86.296|
                          DCD      0x48e8a71e
                  |L86.300|
                          DCD      0x3fefff2e
                  |L86.304|
                          DCD      0xeb1c432d
                  |L86.308|
                          DCD      0x3f1a36e2

                          AREA ||i.read_items||, CODE, READONLY, ALIGN=2

                  read_items PROC
;;;9321   
;;;9322       static int read_items(                        /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;9323       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9324       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9325       double * parameters)                          /* array of system parameters                     */
;;;9326       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;9327           static char name[] SET_TO "read_items";
;;;9328           int counter;
;;;9329           int length;
;;;9330           int status;
;;;9331   
;;;9332           length SET_TO strlen(line);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       strlen
000010  4607              MOV      r7,r0
;;;9333           counter SET_TO 0;
000012  f04f0000          MOV      r0,#0
000016  9000              STR      r0,[sp,#0]
;;;9334   
;;;9335           if (line[counter] IS '/')                 /* skip the slash character if first */
000018  9800              LDR      r0,[sp,#0]
00001a  5c20              LDRB     r0,[r4,r0]
00001c  282f              CMP      r0,#0x2f
00001e  d103              BNE      |L87.40|
;;;9336               counter++;
000020  9800              LDR      r0,[sp,#0]
000022  f1000001          ADD      r0,r0,#1
000026  9000              STR      r0,[sp,#0]
                  |L87.40|
;;;9337           if (line[counter] IS 'n')
000028  9800              LDR      r0,[sp,#0]
00002a  5c20              LDRB     r0,[r4,r0]
00002c  286e              CMP      r0,#0x6e
00002e  d12f              BNE      |L87.144|
;;;9338           {
;;;9339               CHP(read_line_number(line, &counter, block));
000030  462a              MOV      r2,r5
000032  4669              MOV      r1,sp
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       read_line_number
00003a  ea5f0800          MOVS     r8,r0
00003e  d027              BEQ      |L87.144|
000040  482e              LDR      r0,|L87.252|
000042  f8d0014c          LDR      r0,[r0,#0x14c]
000046  2831              CMP      r0,#0x31
000048  da20              BGE      |L87.140|
00004a  492c              LDR      r1,|L87.252|
00004c  f8d1314c          LDR      r3,[r1,#0x14c]
000050  f8d1114c          LDR      r1,[r1,#0x14c]
000054  1c49              ADDS     r1,r1,#1
000056  4a29              LDR      r2,|L87.252|
000058  f8c2114c          STR      r1,[r2,#0x14c]
00005c  eb030183          ADD      r1,r3,r3,LSL #2
000060  f6a26254          SUB      r2,r2,#0xe54
000064  eb021101          ADD      r1,r2,r1,LSL #4
000068  4608              MOV      r0,r1
00006a  4925              LDR      r1,|L87.256|
00006c  f7fffffe          BL       strcpy
000070  f04f0100          MOV      r1,#0
000074  4821              LDR      r0,|L87.252|
000076  f8d0014c          LDR      r0,[r0,#0x14c]
00007a  eb000080          ADD      r0,r0,r0,LSL #2
00007e  4a21              LDR      r2,|L87.260|
000080  eb021000          ADD      r0,r2,r0,LSL #4
000084  7001              STRB     r1,[r0,#0]
000086  4640              MOV      r0,r8
                  |L87.136|
;;;9340           }
;;;9341           for ( ; counter < length; )
;;;9342           {
;;;9343               CHP(read_one_item (line, &counter, block, parameters));
;;;9344           }
;;;9345           return RS274NGC_OK;
;;;9346       }
000088  e8bd83f8          POP      {r3-r9,pc}
                  |L87.140|
00008c  4640              MOV      r0,r8                 ;9339
00008e  e7fb              B        |L87.136|
                  |L87.144|
000090  e02e              B        |L87.240|
                  |L87.146|
000092  4633              MOV      r3,r6                 ;9343
000094  462a              MOV      r2,r5                 ;9343
000096  4669              MOV      r1,sp                 ;9343
000098  4620              MOV      r0,r4                 ;9343
00009a  f7fffffe          BL       read_one_item
00009e  ea5f0800          MOVS     r8,r0                 ;9343
0000a2  d025              BEQ      |L87.240|
0000a4  4815              LDR      r0,|L87.252|
0000a6  f8d0014c          LDR      r0,[r0,#0x14c]        ;9343
0000aa  2831              CMP      r0,#0x31              ;9343
0000ac  da1e              BGE      |L87.236|
0000ae  4913              LDR      r1,|L87.252|
0000b0  f8d1314c          LDR      r3,[r1,#0x14c]        ;9343
0000b4  f8d1114c          LDR      r1,[r1,#0x14c]        ;9343
0000b8  1c49              ADDS     r1,r1,#1              ;9343
0000ba  4a10              LDR      r2,|L87.252|
0000bc  f8c2114c          STR      r1,[r2,#0x14c]        ;9343
0000c0  eb030183          ADD      r1,r3,r3,LSL #2       ;9343
0000c4  4a0f              LDR      r2,|L87.260|
0000c6  eb021101          ADD      r1,r2,r1,LSL #4       ;9343
0000ca  4608              MOV      r0,r1                 ;9343
0000cc  490c              LDR      r1,|L87.256|
0000ce  f7fffffe          BL       strcpy
0000d2  f04f0100          MOV      r1,#0                 ;9343
0000d6  4809              LDR      r0,|L87.252|
0000d8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9343
0000dc  eb000080          ADD      r0,r0,r0,LSL #2       ;9343
0000e0  4a08              LDR      r2,|L87.260|
0000e2  eb021000          ADD      r0,r2,r0,LSL #4       ;9343
0000e6  7001              STRB     r1,[r0,#0]            ;9343
0000e8  4640              MOV      r0,r8                 ;9343
0000ea  e7cd              B        |L87.136|
                  |L87.236|
0000ec  4640              MOV      r0,r8                 ;9343
0000ee  e7cb              B        |L87.136|
                  |L87.240|
0000f0  9800              LDR      r0,[sp,#0]            ;9341
0000f2  42b8              CMP      r0,r7                 ;9341
0000f4  dbcd              BLT      |L87.146|
0000f6  2000              MOVS     r0,#0                 ;9345
0000f8  e7c6              B        |L87.136|
;;;9347   
                          ENDP

0000fa  0000              DCW      0x0000
                  |L87.252|
                          DCD      _setup+0xc000
                  |L87.256|
                          DCD      |symbol_number.495|
                  |L87.260|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_j||, CODE, READONLY, ALIGN=2

                  read_j PROC
;;;9380   
;;;9381       static int read_j(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;9382       char * line,                                  /* string: line of RS274 code being processed     */
;;;9383       int * counter,                                /* pointer to a counter for position on the line  */
;;;9384       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9385       double * parameters)                          /* array of system parameters                     */
;;;9386       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9387           static char name[] SET_TO "read_j";
;;;9388           double value;
;;;9389           int status;
;;;9390   
;;;9391           CHK((line[*counter] ISNT 'j'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  286a              CMP      r0,#0x6a
000012  d027              BEQ      |L88.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L88.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L88.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L88.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L88.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L88.96|
;;;9392           *counter SET_TO (*counter + 1);
;;;9393           CHK((block->j_flag ISNT OFF), NCE_MULTIPLE_J_WORDS_ON_ONE_LINE);
;;;9394           CHP(read_real_value(line, counter, &value, parameters));
;;;9395           block->j_flag SET_TO ON;
;;;9396           block->j_number SET_TO value;
;;;9397           return RS274NGC_OK;
;;;9398       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L88.100|
000064  6820              LDR      r0,[r4,#0]            ;9392
000066  f1000001          ADD      r0,r0,#1              ;9392
00006a  6020              STR      r0,[r4,#0]            ;9392
00006c  f8d50158          LDR      r0,[r5,#0x158]        ;9393
000070  b328              CBZ      r0,|L88.190|
000072  f04f0100          MOV      r1,#0                 ;9393
000076  482f              LDR      r0,|L88.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;9393
00007c  4601              MOV      r1,r0                 ;9393
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9393
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;9393
000086  f1010101          ADD      r1,r1,#1              ;9393
00008a  4602              MOV      r2,r0                 ;9393
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9393
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9393
000094  4a29              LDR      r2,|L88.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9393
00009a  4608              MOV      r0,r1                 ;9393
00009c  4926              LDR      r1,|L88.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9393
0000a6  4823              LDR      r0,|L88.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9393
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9393
0000b0  4a22              LDR      r2,|L88.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9393
0000b6  7001              STRB     r1,[r0,#0]            ;9393
0000b8  f04f006d          MOV      r0,#0x6d              ;9393
0000bc  e7d0              B        |L88.96|
                  |L88.190|
0000be  463b              MOV      r3,r7                 ;9394
0000c0  466a              MOV      r2,sp                 ;9394
0000c2  4621              MOV      r1,r4                 ;9394
0000c4  4630              MOV      r0,r6                 ;9394
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;9394
0000ce  d025              BEQ      |L88.284|
0000d0  4818              LDR      r0,|L88.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9394
0000d6  2831              CMP      r0,#0x31              ;9394
0000d8  da1e              BGE      |L88.280|
0000da  4916              LDR      r1,|L88.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9394
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9394
0000e4  1c49              ADDS     r1,r1,#1              ;9394
0000e6  4a13              LDR      r2,|L88.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;9394
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;9394
0000f0  4a12              LDR      r2,|L88.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;9394
0000f6  4608              MOV      r0,r1                 ;9394
0000f8  490f              LDR      r1,|L88.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;9394
000102  480c              LDR      r0,|L88.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;9394
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;9394
00010c  4a0b              LDR      r2,|L88.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;9394
000112  7001              STRB     r1,[r0,#0]            ;9394
000114  4640              MOV      r0,r8                 ;9394
000116  e7a3              B        |L88.96|
                  |L88.280|
000118  4640              MOV      r0,r8                 ;9394
00011a  e7a1              B        |L88.96|
                  |L88.284|
00011c  f04f0001          MOV      r0,#1                 ;9395
000120  f8c50158          STR      r0,[r5,#0x158]        ;9395
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9396
000128  f50572b0          ADD      r2,r5,#0x160          ;9396
00012c  c203              STM      r2!,{r0,r1}           ;9396
00012e  f04f0000          MOV      r0,#0                 ;9397
000132  e795              B        |L88.96|
;;;9399   
                          ENDP

                  |L88.308|
                          DCD      _setup+0xc000
                  |L88.312|
                          DCD      |symbol_number.496|
                  |L88.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_k||, CODE, READONLY, ALIGN=2

                  read_k PROC
;;;9432   
;;;9433       static int read_k(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;9434       char * line,                                  /* string: line of RS274 code being processed     */
;;;9435       int * counter,                                /* pointer to a counter for position on the line  */
;;;9436       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9437       double * parameters)                          /* array of system parameters                     */
;;;9438       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9439           static char name[] SET_TO "read_k";
;;;9440           double value;
;;;9441           int status;
;;;9442   
;;;9443           CHK((line[*counter] ISNT 'k'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  286b              CMP      r0,#0x6b
000012  d027              BEQ      |L89.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L89.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L89.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L89.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L89.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L89.96|
;;;9444           *counter SET_TO (*counter + 1);
;;;9445           CHK((block->k_flag ISNT OFF), NCE_MULTIPLE_K_WORDS_ON_ONE_LINE);
;;;9446           CHP(read_real_value(line, counter, &value, parameters));
;;;9447           block->k_flag SET_TO ON;
;;;9448           block->k_number SET_TO value;
;;;9449           return RS274NGC_OK;
;;;9450       }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L89.100|
000064  6820              LDR      r0,[r4,#0]            ;9444
000066  f1000001          ADD      r0,r0,#1              ;9444
00006a  6020              STR      r0,[r4,#0]            ;9444
00006c  f8d50168          LDR      r0,[r5,#0x168]        ;9445
000070  b328              CBZ      r0,|L89.190|
000072  f04f0100          MOV      r1,#0                 ;9445
000076  482f              LDR      r0,|L89.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;9445
00007c  4601              MOV      r1,r0                 ;9445
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9445
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;9445
000086  f1010101          ADD      r1,r1,#1              ;9445
00008a  4602              MOV      r2,r0                 ;9445
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9445
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9445
000094  4a29              LDR      r2,|L89.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9445
00009a  4608              MOV      r0,r1                 ;9445
00009c  4926              LDR      r1,|L89.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9445
0000a6  4823              LDR      r0,|L89.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9445
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9445
0000b0  4a22              LDR      r2,|L89.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9445
0000b6  7001              STRB     r1,[r0,#0]            ;9445
0000b8  f04f006e          MOV      r0,#0x6e              ;9445
0000bc  e7d0              B        |L89.96|
                  |L89.190|
0000be  463b              MOV      r3,r7                 ;9446
0000c0  466a              MOV      r2,sp                 ;9446
0000c2  4621              MOV      r1,r4                 ;9446
0000c4  4630              MOV      r0,r6                 ;9446
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;9446
0000ce  d025              BEQ      |L89.284|
0000d0  4818              LDR      r0,|L89.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9446
0000d6  2831              CMP      r0,#0x31              ;9446
0000d8  da1e              BGE      |L89.280|
0000da  4916              LDR      r1,|L89.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9446
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9446
0000e4  1c49              ADDS     r1,r1,#1              ;9446
0000e6  4a13              LDR      r2,|L89.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;9446
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;9446
0000f0  4a12              LDR      r2,|L89.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;9446
0000f6  4608              MOV      r0,r1                 ;9446
0000f8  490f              LDR      r1,|L89.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;9446
000102  480c              LDR      r0,|L89.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;9446
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;9446
00010c  4a0b              LDR      r2,|L89.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;9446
000112  7001              STRB     r1,[r0,#0]            ;9446
000114  4640              MOV      r0,r8                 ;9446
000116  e7a3              B        |L89.96|
                  |L89.280|
000118  4640              MOV      r0,r8                 ;9446
00011a  e7a1              B        |L89.96|
                  |L89.284|
00011c  f04f0001          MOV      r0,#1                 ;9447
000120  f8c50168          STR      r0,[r5,#0x168]        ;9447
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9448
000128  f50572b8          ADD      r2,r5,#0x170          ;9448
00012c  c203              STM      r2!,{r0,r1}           ;9448
00012e  f04f0000          MOV      r0,#0                 ;9449
000132  e795              B        |L89.96|
;;;9451   
                          ENDP

                  |L89.308|
                          DCD      _setup+0xc000
                  |L89.312|
                          DCD      |symbol_number.497|
                  |L89.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_l||, CODE, READONLY, ALIGN=2

                  read_l PROC
;;;9482   
;;;9483       static int read_l(                            /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;9484       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9485       int * counter,                                /* pointer to a counter for position on the line  */
;;;9486       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9487       double * parameters)                          /* array of system parameters                     */
;;;9488       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;9489           static char name[] SET_TO "read_l";
;;;9490           int value;
;;;9491           int status;
;;;9492   
;;;9493           CHK((line[*counter] ISNT 'l'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  286c              CMP      r0,#0x6c
000012  d027              BEQ      |L90.100|
000014  f04f0100          MOV      r1,#0
000018  4858              LDR      r0,|L90.380|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  494f              LDR      r1,|L90.384|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  484c              LDR      r0,|L90.380|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a4b              LDR      r2,|L90.388|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L90.96|
;;;9494           *counter SET_TO (*counter + 1);
;;;9495           CHK((block->l_number > -1), NCE_MULTIPLE_L_WORDS_ON_ONE_LINE);
;;;9496           CHP(read_integer_value(line, counter, &value, parameters));
;;;9497           CHK((value < 0), NCE_NEGATIVE_L_WORD_USED);
;;;9498           block->l_number SET_TO value;
;;;9499           return RS274NGC_OK;
;;;9500       }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L90.100|
000064  6820              LDR      r0,[r4,#0]            ;9494
000066  f1000001          ADD      r0,r0,#1              ;9494
00006a  6020              STR      r0,[r4,#0]            ;9494
00006c  f8d50178          LDR      r0,[r5,#0x178]        ;9495
000070  2800              CMP      r0,#0                 ;9495
000072  db25              BLT      |L90.192|
000074  f04f0100          MOV      r1,#0                 ;9495
000078  4840              LDR      r0,|L90.380|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;9495
00007e  4601              MOV      r1,r0                 ;9495
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;9495
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;9495
000088  f1010101          ADD      r1,r1,#1              ;9495
00008c  4602              MOV      r2,r0                 ;9495
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;9495
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;9495
000096  4a3b              LDR      r2,|L90.388|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;9495
00009c  4608              MOV      r0,r1                 ;9495
00009e  4938              LDR      r1,|L90.384|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;9495
0000a8  4834              LDR      r0,|L90.380|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;9495
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;9495
0000b2  4a34              LDR      r2,|L90.388|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;9495
0000b8  7001              STRB     r1,[r0,#0]            ;9495
0000ba  f04f006f          MOV      r0,#0x6f              ;9495
0000be  e7cf              B        |L90.96|
                  |L90.192|
0000c0  463b              MOV      r3,r7                 ;9496
0000c2  466a              MOV      r2,sp                 ;9496
0000c4  4621              MOV      r1,r4                 ;9496
0000c6  4630              MOV      r0,r6                 ;9496
0000c8  f7fffffe          BL       read_integer_value
0000cc  ea5f0800          MOVS     r8,r0                 ;9496
0000d0  d025              BEQ      |L90.286|
0000d2  482a              LDR      r0,|L90.380|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;9496
0000d8  2831              CMP      r0,#0x31              ;9496
0000da  da1e              BGE      |L90.282|
0000dc  4927              LDR      r1,|L90.380|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;9496
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;9496
0000e6  1c49              ADDS     r1,r1,#1              ;9496
0000e8  4a24              LDR      r2,|L90.380|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;9496
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;9496
0000f2  4a24              LDR      r2,|L90.388|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;9496
0000f8  4608              MOV      r0,r1                 ;9496
0000fa  4921              LDR      r1,|L90.384|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;9496
000104  481d              LDR      r0,|L90.380|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;9496
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;9496
00010e  4a1d              LDR      r2,|L90.388|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;9496
000114  7001              STRB     r1,[r0,#0]            ;9496
000116  4640              MOV      r0,r8                 ;9496
000118  e7a2              B        |L90.96|
                  |L90.282|
00011a  4640              MOV      r0,r8                 ;9496
00011c  e7a0              B        |L90.96|
                  |L90.286|
00011e  9800              LDR      r0,[sp,#0]            ;9497
000120  2800              CMP      r0,#0                 ;9497
000122  da25              BGE      |L90.368|
000124  f04f0100          MOV      r1,#0                 ;9497
000128  4814              LDR      r0,|L90.380|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;9497
00012e  4601              MOV      r1,r0                 ;9497
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;9497
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;9497
000138  f1010101          ADD      r1,r1,#1              ;9497
00013c  4602              MOV      r2,r0                 ;9497
00013e  f8c2114c          STR      r1,[r2,#0x14c]        ;9497
000142  eb030183          ADD      r1,r3,r3,LSL #2       ;9497
000146  4a0f              LDR      r2,|L90.388|
000148  eb021101          ADD      r1,r2,r1,LSL #4       ;9497
00014c  4608              MOV      r0,r1                 ;9497
00014e  490c              LDR      r1,|L90.384|
000150  f7fffffe          BL       strcpy
000154  f04f0100          MOV      r1,#0                 ;9497
000158  4808              LDR      r0,|L90.380|
00015a  f8d0014c          LDR      r0,[r0,#0x14c]        ;9497
00015e  eb000080          ADD      r0,r0,r0,LSL #2       ;9497
000162  4a08              LDR      r2,|L90.388|
000164  eb021000          ADD      r0,r2,r0,LSL #4       ;9497
000168  7001              STRB     r1,[r0,#0]            ;9497
00016a  f04f007e          MOV      r0,#0x7e              ;9497
00016e  e777              B        |L90.96|
                  |L90.368|
000170  9800              LDR      r0,[sp,#0]            ;9498
000172  f8c50178          STR      r0,[r5,#0x178]        ;9498
000176  2000              MOVS     r0,#0                 ;9499
000178  e772              B        |L90.96|
;;;9501   
                          ENDP

00017a  0000              DCW      0x0000
                  |L90.380|
                          DCD      _setup+0xc000
                  |L90.384|
                          DCD      |symbol_number.498|
                  |L90.388|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_line_number||, CODE, READONLY, ALIGN=2

                  read_line_number PROC
;;;9530   
;;;9531       static int read_line_number(                  /* ARGUMENTS                               */
000000  b5f8              PUSH     {r3-r7,lr}
;;;9532       char * line,                                  /* string: line of RS274    code being processed  */
;;;9533       int * counter,                                /* pointer to a counter for position on the line  */
;;;9534       block_pointer block)                          /* pointer to a block being filled from the line  */
;;;9535       {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;9536           static char name[] SET_TO "read_line_number";
;;;9537           int value;
;;;9538           int status;
;;;9539   
;;;9540           CHK((line[*counter] ISNT 'n'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
000008  6820              LDR      r0,[r4,#0]
00000a  5c28              LDRB     r0,[r5,r0]
00000c  286e              CMP      r0,#0x6e
00000e  d026              BEQ      |L91.94|
000010  f04f0100          MOV      r1,#0
000014  4842              LDR      r0,|L91.288|
000016  f8c0114c          STR      r1,[r0,#0x14c]
00001a  4601              MOV      r1,r0
00001c  f8d1314c          LDR      r3,[r1,#0x14c]
000020  f8d1114c          LDR      r1,[r1,#0x14c]
000024  f1010101          ADD      r1,r1,#1
000028  4602              MOV      r2,r0
00002a  f8c2114c          STR      r1,[r2,#0x14c]
00002e  eb030183          ADD      r1,r3,r3,LSL #2
000032  f6a06254          SUB      r2,r0,#0xe54
000036  eb021101          ADD      r1,r2,r1,LSL #4
00003a  4608              MOV      r0,r1
00003c  4939              LDR      r1,|L91.292|
00003e  f7fffffe          BL       strcpy
000042  f04f0100          MOV      r1,#0
000046  4836              LDR      r0,|L91.288|
000048  f8d0014c          LDR      r0,[r0,#0x14c]
00004c  eb000080          ADD      r0,r0,r0,LSL #2
000050  4a35              LDR      r2,|L91.296|
000052  eb021000          ADD      r0,r2,r0,LSL #4
000056  7001              STRB     r1,[r0,#0]
000058  f04f0020          MOV      r0,#0x20
                  |L91.92|
;;;9541           *counter SET_TO (*counter + 1);
;;;9542           CHP(read_integer_unsigned(line, counter, &value));
;;;9543           CHK((value > 99999), NCE_LINE_NUMBER_GREATER_THAN_99999);
;;;9544           block->line_number SET_TO value;
;;;9545           return RS274NGC_OK;
;;;9546       }
00005c  bdf8              POP      {r3-r7,pc}
                  |L91.94|
00005e  6820              LDR      r0,[r4,#0]            ;9541
000060  f1000001          ADD      r0,r0,#1              ;9541
000064  6020              STR      r0,[r4,#0]            ;9541
000066  466a              MOV      r2,sp                 ;9542
000068  4621              MOV      r1,r4                 ;9542
00006a  4628              MOV      r0,r5                 ;9542
00006c  f7fffffe          BL       read_integer_unsigned
000070  0007              MOVS     r7,r0                 ;9542
000072  d025              BEQ      |L91.192|
000074  482a              LDR      r0,|L91.288|
000076  f8d0014c          LDR      r0,[r0,#0x14c]        ;9542
00007a  2831              CMP      r0,#0x31              ;9542
00007c  da1e              BGE      |L91.188|
00007e  4928              LDR      r1,|L91.288|
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;9542
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;9542
000088  1c49              ADDS     r1,r1,#1              ;9542
00008a  4a25              LDR      r2,|L91.288|
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9542
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9542
000094  4a24              LDR      r2,|L91.296|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9542
00009a  4608              MOV      r0,r1                 ;9542
00009c  4921              LDR      r1,|L91.292|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9542
0000a6  481e              LDR      r0,|L91.288|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9542
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9542
0000b0  4a1d              LDR      r2,|L91.296|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9542
0000b6  7001              STRB     r1,[r0,#0]            ;9542
0000b8  4638              MOV      r0,r7                 ;9542
0000ba  e7cf              B        |L91.92|
                  |L91.188|
0000bc  4638              MOV      r0,r7                 ;9542
0000be  e7cd              B        |L91.92|
                  |L91.192|
0000c0  491a              LDR      r1,|L91.300|
0000c2  9800              LDR      r0,[sp,#0]            ;9543
0000c4  4288              CMP      r0,r1                 ;9543
0000c6  dd25              BLE      |L91.276|
0000c8  f04f0100          MOV      r1,#0                 ;9543
0000cc  4814              LDR      r0,|L91.288|
0000ce  f8c0114c          STR      r1,[r0,#0x14c]        ;9543
0000d2  4601              MOV      r1,r0                 ;9543
0000d4  f8d1314c          LDR      r3,[r1,#0x14c]        ;9543
0000d8  f8d1114c          LDR      r1,[r1,#0x14c]        ;9543
0000dc  f1010101          ADD      r1,r1,#1              ;9543
0000e0  4602              MOV      r2,r0                 ;9543
0000e2  f8c2114c          STR      r1,[r2,#0x14c]        ;9543
0000e6  eb030183          ADD      r1,r3,r3,LSL #2       ;9543
0000ea  4a0f              LDR      r2,|L91.296|
0000ec  eb021101          ADD      r1,r2,r1,LSL #4       ;9543
0000f0  4608              MOV      r0,r1                 ;9543
0000f2  490c              LDR      r1,|L91.292|
0000f4  f7fffffe          BL       strcpy
0000f8  f04f0100          MOV      r1,#0                 ;9543
0000fc  4808              LDR      r0,|L91.288|
0000fe  f8d0014c          LDR      r0,[r0,#0x14c]        ;9543
000102  eb000080          ADD      r0,r0,r0,LSL #2       ;9543
000106  4a08              LDR      r2,|L91.296|
000108  eb021000          ADD      r0,r2,r0,LSL #4       ;9543
00010c  7001              STRB     r1,[r0,#0]            ;9543
00010e  f04f0062          MOV      r0,#0x62              ;9543
000112  e7a3              B        |L91.92|
                  |L91.276|
000114  9800              LDR      r0,[sp,#0]            ;9544
000116  f8c6017c          STR      r0,[r6,#0x17c]        ;9544
00011a  2000              MOVS     r0,#0                 ;9545
00011c  e79e              B        |L91.92|
;;;9547   
                          ENDP

00011e  0000              DCW      0x0000
                  |L91.288|
                          DCD      _setup+0xc000
                  |L91.292|
                          DCD      |symbol_number.499|
                  |L91.296|
                          DCD      _setup+0xb1ac
                  |L91.300|
                          DCD      0x0001869f

                          AREA ||i.read_m||, CODE, READONLY, ALIGN=2

                  read_m PROC
;;;9581   
;;;9582       static int read_m(                            /* ARGUMENTS                                     */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;9583       char * line,                                  /* string: line of RS274 code being processed    */
;;;9584       int * counter,                                /* pointer to a counter for position on the line */
;;;9585       block_pointer block,                          /* pointer to a block being filled from the line */
;;;9586       double * parameters)                          /* array of system parameters                    */
;;;9587       {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4614              MOV      r4,r2
00000a  4698              MOV      r8,r3
;;;9588           static char name[] SET_TO "read_m";
;;;9589           int value;
;;;9590           int mode;
;;;9591           int status;
;;;9592   
;;;9593           CHK((line[*counter] ISNT 'm'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6828              LDR      r0,[r5,#0]
00000e  5c38              LDRB     r0,[r7,r0]
000010  286d              CMP      r0,#0x6d
000012  d027              BEQ      |L92.100|
000014  f04f0100          MOV      r1,#0
000018  4887              LDR      r0,|L92.568|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  497e              LDR      r1,|L92.572|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  487b              LDR      r0,|L92.568|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a7a              LDR      r2,|L92.576|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L92.96|
;;;9594           *counter SET_TO (*counter + 1);
;;;9595           CHP(read_integer_value(line, counter, &value, parameters));
;;;9596           CHK((value < 0), NCE_NEGATIVE_M_CODE_USED);
;;;9597           CHK((value > 99), NCE_M_CODE_GREATER_THAN_99);
;;;9598           mode SET_TO _ems[value];
;;;9599           CHK((mode IS -1), NCE_UNKNOWN_M_CODE_USED);
;;;9600           CHK((block->m_modes[mode] ISNT -1),
;;;9601               NCE_TWO_M_CODES_USED_FROM_SAME_MODAL_GROUP);
;;;9602           block->m_modes[mode] SET_TO value;
;;;9603           block->m_count++;
;;;9604           return RS274NGC_OK;
;;;9605       }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L92.100|
000064  6828              LDR      r0,[r5,#0]            ;9594
000066  f1000001          ADD      r0,r0,#1              ;9594
00006a  6028              STR      r0,[r5,#0]            ;9594
00006c  4643              MOV      r3,r8                 ;9595
00006e  466a              MOV      r2,sp                 ;9595
000070  4629              MOV      r1,r5                 ;9595
000072  4638              MOV      r0,r7                 ;9595
000074  f7fffffe          BL       read_integer_value
000078  ea5f0900          MOVS     r9,r0                 ;9595
00007c  d025              BEQ      |L92.202|
00007e  486e              LDR      r0,|L92.568|
000080  f8d0014c          LDR      r0,[r0,#0x14c]        ;9595
000084  2831              CMP      r0,#0x31              ;9595
000086  da1e              BGE      |L92.198|
000088  496b              LDR      r1,|L92.568|
00008a  f8d1314c          LDR      r3,[r1,#0x14c]        ;9595
00008e  f8d1114c          LDR      r1,[r1,#0x14c]        ;9595
000092  1c49              ADDS     r1,r1,#1              ;9595
000094  4a68              LDR      r2,|L92.568|
000096  f8c2114c          STR      r1,[r2,#0x14c]        ;9595
00009a  eb030183          ADD      r1,r3,r3,LSL #2       ;9595
00009e  4a68              LDR      r2,|L92.576|
0000a0  eb021101          ADD      r1,r2,r1,LSL #4       ;9595
0000a4  4608              MOV      r0,r1                 ;9595
0000a6  4965              LDR      r1,|L92.572|
0000a8  f7fffffe          BL       strcpy
0000ac  f04f0100          MOV      r1,#0                 ;9595
0000b0  4861              LDR      r0,|L92.568|
0000b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9595
0000b6  eb000080          ADD      r0,r0,r0,LSL #2       ;9595
0000ba  4a61              LDR      r2,|L92.576|
0000bc  eb021000          ADD      r0,r2,r0,LSL #4       ;9595
0000c0  7001              STRB     r1,[r0,#0]            ;9595
0000c2  4648              MOV      r0,r9                 ;9595
0000c4  e7cc              B        |L92.96|
                  |L92.198|
0000c6  4648              MOV      r0,r9                 ;9595
0000c8  e7ca              B        |L92.96|
                  |L92.202|
0000ca  9800              LDR      r0,[sp,#0]            ;9596
0000cc  2800              CMP      r0,#0                 ;9596
0000ce  da25              BGE      |L92.284|
0000d0  f04f0100          MOV      r1,#0                 ;9596
0000d4  4858              LDR      r0,|L92.568|
0000d6  f8c0114c          STR      r1,[r0,#0x14c]        ;9596
0000da  4601              MOV      r1,r0                 ;9596
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9596
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9596
0000e4  f1010101          ADD      r1,r1,#1              ;9596
0000e8  4602              MOV      r2,r0                 ;9596
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;9596
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;9596
0000f2  4a53              LDR      r2,|L92.576|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;9596
0000f8  4608              MOV      r0,r1                 ;9596
0000fa  4950              LDR      r1,|L92.572|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;9596
000104  484c              LDR      r0,|L92.568|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;9596
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;9596
00010e  4a4c              LDR      r2,|L92.576|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;9596
000114  7001              STRB     r1,[r0,#0]            ;9596
000116  f04f007f          MOV      r0,#0x7f              ;9596
00011a  e7a1              B        |L92.96|
                  |L92.284|
00011c  9800              LDR      r0,[sp,#0]            ;9597
00011e  2863              CMP      r0,#0x63              ;9597
000120  dd25              BLE      |L92.366|
000122  f04f0100          MOV      r1,#0                 ;9597
000126  4844              LDR      r0,|L92.568|
000128  f8c0114c          STR      r1,[r0,#0x14c]        ;9597
00012c  4601              MOV      r1,r0                 ;9597
00012e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9597
000132  f8d1114c          LDR      r1,[r1,#0x14c]        ;9597
000136  f1010101          ADD      r1,r1,#1              ;9597
00013a  4602              MOV      r2,r0                 ;9597
00013c  f8c2114c          STR      r1,[r2,#0x14c]        ;9597
000140  eb030183          ADD      r1,r3,r3,LSL #2       ;9597
000144  4a3e              LDR      r2,|L92.576|
000146  eb021101          ADD      r1,r2,r1,LSL #4       ;9597
00014a  4608              MOV      r0,r1                 ;9597
00014c  493b              LDR      r1,|L92.572|
00014e  f7fffffe          BL       strcpy
000152  f04f0100          MOV      r1,#0                 ;9597
000156  4838              LDR      r0,|L92.568|
000158  f8d0014c          LDR      r0,[r0,#0x14c]        ;9597
00015c  eb000080          ADD      r0,r0,r0,LSL #2       ;9597
000160  4a37              LDR      r2,|L92.576|
000162  eb021000          ADD      r0,r2,r0,LSL #4       ;9597
000166  7001              STRB     r1,[r0,#0]            ;9597
000168  f04f0064          MOV      r0,#0x64              ;9597
00016c  e778              B        |L92.96|
                  |L92.366|
00016e  4835              LDR      r0,|L92.580|
000170  9900              LDR      r1,[sp,#0]            ;9598
000172  f8506021          LDR      r6,[r0,r1,LSL #2]     ;9598
000176  1c70              ADDS     r0,r6,#1              ;9599
000178  d124              BNE      |L92.452|
00017a  4601              MOV      r1,r0                 ;9599
00017c  482e              LDR      r0,|L92.568|
00017e  f8c0114c          STR      r1,[r0,#0x14c]        ;9599
000182  4601              MOV      r1,r0                 ;9599
000184  f8d1314c          LDR      r3,[r1,#0x14c]        ;9599
000188  f8d1114c          LDR      r1,[r1,#0x14c]        ;9599
00018c  f1010101          ADD      r1,r1,#1              ;9599
000190  4602              MOV      r2,r0                 ;9599
000192  f8c2114c          STR      r1,[r2,#0x14c]        ;9599
000196  eb030183          ADD      r1,r3,r3,LSL #2       ;9599
00019a  4a29              LDR      r2,|L92.576|
00019c  eb021101          ADD      r1,r2,r1,LSL #4       ;9599
0001a0  4608              MOV      r0,r1                 ;9599
0001a2  4926              LDR      r1,|L92.572|
0001a4  f7fffffe          BL       strcpy
0001a8  f04f0100          MOV      r1,#0                 ;9599
0001ac  4822              LDR      r0,|L92.568|
0001ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;9599
0001b2  eb000080          ADD      r0,r0,r0,LSL #2       ;9599
0001b6  4a22              LDR      r2,|L92.576|
0001b8  eb021000          ADD      r0,r2,r0,LSL #4       ;9599
0001bc  7001              STRB     r1,[r0,#0]            ;9599
0001be  f04f00ae          MOV      r0,#0xae              ;9599
0001c2  e74d              B        |L92.96|
                  |L92.452|
0001c4  f50470c4          ADD      r0,r4,#0x188          ;9600
0001c8  f8500026          LDR      r0,[r0,r6,LSL #2]     ;9600
0001cc  1c40              ADDS     r0,r0,#1              ;9600
0001ce  d025              BEQ      |L92.540|
0001d0  f04f0100          MOV      r1,#0                 ;9600
0001d4  4818              LDR      r0,|L92.568|
0001d6  f8c0114c          STR      r1,[r0,#0x14c]        ;9600
0001da  4601              MOV      r1,r0                 ;9600
0001dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9600
0001e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9600
0001e4  f1010101          ADD      r1,r1,#1              ;9600
0001e8  4602              MOV      r2,r0                 ;9600
0001ea  f8c2114c          STR      r1,[r2,#0x14c]        ;9600
0001ee  eb030183          ADD      r1,r3,r3,LSL #2       ;9600
0001f2  4a13              LDR      r2,|L92.576|
0001f4  eb021101          ADD      r1,r2,r1,LSL #4       ;9600
0001f8  4608              MOV      r0,r1                 ;9600
0001fa  4910              LDR      r1,|L92.572|
0001fc  f7fffffe          BL       strcpy
000200  f04f0100          MOV      r1,#0                 ;9600
000204  480c              LDR      r0,|L92.568|
000206  f8d0014c          LDR      r0,[r0,#0x14c]        ;9600
00020a  eb000080          ADD      r0,r0,r0,LSL #2       ;9600
00020e  4a0c              LDR      r2,|L92.576|
000210  eb021000          ADD      r0,r2,r0,LSL #4       ;9600
000214  7001              STRB     r1,[r0,#0]            ;9600
000216  f04f00a9          MOV      r0,#0xa9              ;9600
00021a  e721              B        |L92.96|
                  |L92.540|
00021c  f50470c4          ADD      r0,r4,#0x188          ;9602
000220  9900              LDR      r1,[sp,#0]            ;9602
000222  f8401026          STR      r1,[r0,r6,LSL #2]     ;9602
000226  f8d40184          LDR      r0,[r4,#0x184]        ;9603
00022a  f1000001          ADD      r0,r0,#1              ;9603
00022e  f8c40184          STR      r0,[r4,#0x184]        ;9603
000232  f04f0000          MOV      r0,#0                 ;9604
000236  e713              B        |L92.96|
;;;9606   
                          ENDP

                  |L92.568|
                          DCD      _setup+0xc000
                  |L92.572|
                          DCD      |symbol_number.500|
                  |L92.576|
                          DCD      _setup+0xb1ac
                  |L92.580|
                          DCD      _ems

                          AREA ||i.read_one_item||, CODE, READONLY, ALIGN=2

                  read_one_item PROC
;;;9651   
;;;9652       static int read_one_item(                     /* ARGUMENTS                                      */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;9653       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9654       int * counter,                                /* pointer to a counter for position on the line  */
;;;9655       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9656       double * parameters)                          /* array of system parameters                     */
;;;9657       {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
00000a  4699              MOV      r9,r3
;;;9658           static char name[] SET_TO "read_one_item";
;;;9659           int status;
;;;9660           read_function_pointer function_pointer;
;;;9661           char letter;
;;;9662   
;;;9663           letter SET_TO line[*counter];             /* check if in array range */
00000c  6838              LDR      r0,[r7,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  4605              MOV      r5,r0
;;;9664           CHK(((letter < 0) OR (letter > 'z')), NCE_BAD_CHARACTER_USED);
000012  2d00              CMP      r5,#0
000014  db01              BLT      |L93.26|
000016  2d7a              CMP      r5,#0x7a
000018  dd27              BLE      |L93.106|
                  |L93.26|
00001a  f04f0100          MOV      r1,#0
00001e  4840              LDR      r0,|L93.288|
000020  f8c0114c          STR      r1,[r0,#0x14c]
000024  4601              MOV      r1,r0
000026  f8d1314c          LDR      r3,[r1,#0x14c]
00002a  f8d1114c          LDR      r1,[r1,#0x14c]
00002e  f1010101          ADD      r1,r1,#1
000032  4602              MOV      r2,r0
000034  f8c2114c          STR      r1,[r2,#0x14c]
000038  eb030183          ADD      r1,r3,r3,LSL #2
00003c  f6a06254          SUB      r2,r0,#0xe54
000040  eb021101          ADD      r1,r2,r1,LSL #4
000044  4608              MOV      r0,r1
000046  4937              LDR      r1,|L93.292|
000048  f7fffffe          BL       strcpy
00004c  f04f0100          MOV      r1,#0
000050  4833              LDR      r0,|L93.288|
000052  f8d0014c          LDR      r0,[r0,#0x14c]
000056  eb000080          ADD      r0,r0,r0,LSL #2
00005a  4a33              LDR      r2,|L93.296|
00005c  eb021000          ADD      r0,r2,r0,LSL #4
000060  7001              STRB     r1,[r0,#0]
000062  f04f000c          MOV      r0,#0xc
                  |L93.102|
;;;9665           function_pointer SET_TO _readers[letter];
;;;9666           CHK((function_pointer IS 0), NCE_BAD_CHARACTER_USED);
;;;9667           CHP(function_pointer(line, counter, block, parameters));
;;;9668           return RS274NGC_OK;
;;;9669       }
000066  e8bd87f0          POP      {r4-r10,pc}
                  |L93.106|
00006a  4830              LDR      r0,|L93.300|
00006c  f8504025          LDR      r4,[r0,r5,LSL #2]     ;9665
000070  bb2c              CBNZ     r4,|L93.190|
000072  f04f0100          MOV      r1,#0                 ;9666
000076  482a              LDR      r0,|L93.288|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;9666
00007c  4601              MOV      r1,r0                 ;9666
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9666
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;9666
000086  f1010101          ADD      r1,r1,#1              ;9666
00008a  4602              MOV      r2,r0                 ;9666
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;9666
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;9666
000094  4a24              LDR      r2,|L93.296|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;9666
00009a  4608              MOV      r0,r1                 ;9666
00009c  4921              LDR      r1,|L93.292|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;9666
0000a6  481e              LDR      r0,|L93.288|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;9666
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;9666
0000b0  4a1d              LDR      r2,|L93.296|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;9666
0000b6  7001              STRB     r1,[r0,#0]            ;9666
0000b8  f04f000c          MOV      r0,#0xc               ;9666
0000bc  e7d3              B        |L93.102|
                  |L93.190|
0000be  464b              MOV      r3,r9                 ;9667
0000c0  4642              MOV      r2,r8                 ;9667
0000c2  4639              MOV      r1,r7                 ;9667
0000c4  4630              MOV      r0,r6                 ;9667
0000c6  47a0              BLX      r4                    ;9667
0000c8  ea5f0a00          MOVS     r10,r0                ;9667
0000cc  d025              BEQ      |L93.282|
0000ce  4814              LDR      r0,|L93.288|
0000d0  f8d0014c          LDR      r0,[r0,#0x14c]        ;9667
0000d4  2831              CMP      r0,#0x31              ;9667
0000d6  da1e              BGE      |L93.278|
0000d8  4911              LDR      r1,|L93.288|
0000da  f8d1314c          LDR      r3,[r1,#0x14c]        ;9667
0000de  f8d1114c          LDR      r1,[r1,#0x14c]        ;9667
0000e2  1c49              ADDS     r1,r1,#1              ;9667
0000e4  4a0e              LDR      r2,|L93.288|
0000e6  f8c2114c          STR      r1,[r2,#0x14c]        ;9667
0000ea  eb030183          ADD      r1,r3,r3,LSL #2       ;9667
0000ee  4a0e              LDR      r2,|L93.296|
0000f0  eb021101          ADD      r1,r2,r1,LSL #4       ;9667
0000f4  4608              MOV      r0,r1                 ;9667
0000f6  490b              LDR      r1,|L93.292|
0000f8  f7fffffe          BL       strcpy
0000fc  f04f0100          MOV      r1,#0                 ;9667
000100  4807              LDR      r0,|L93.288|
000102  f8d0014c          LDR      r0,[r0,#0x14c]        ;9667
000106  eb000080          ADD      r0,r0,r0,LSL #2       ;9667
00010a  4a07              LDR      r2,|L93.296|
00010c  eb021000          ADD      r0,r2,r0,LSL #4       ;9667
000110  7001              STRB     r1,[r0,#0]            ;9667
000112  4650              MOV      r0,r10                ;9667
000114  e7a7              B        |L93.102|
                  |L93.278|
000116  4650              MOV      r0,r10                ;9667
000118  e7a5              B        |L93.102|
                  |L93.282|
00011a  2000              MOVS     r0,#0                 ;9668
00011c  e7a3              B        |L93.102|
;;;9670   
                          ENDP

00011e  0000              DCW      0x0000
                  |L93.288|
                          DCD      _setup+0xc000
                  |L93.292|
                          DCD      |symbol_number.501|
                  |L93.296|
                          DCD      _setup+0xb1ac
                  |L93.300|
                          DCD      _readers

                          AREA ||i.read_operation||, CODE, READONLY, ALIGN=2

                  read_operation PROC
;;;9699   
;;;9700       static int read_operation(                    /* ARGUMENTS                                      */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;9701       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9702       int * counter,                                /* pointer to a counter for position on the line  */
;;;9703       int * operation)                              /* pointer to operation to be read                */
;;;9704       {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
;;;9705           static char name[] SET_TO "read_operation";
;;;9706           char c;
;;;9707   
;;;9708           c SET_TO line[*counter];
00000a  6820              LDR      r0,[r4,#0]
00000c  5c30              LDRB     r0,[r6,r0]
00000e  4607              MOV      r7,r0
;;;9709           *counter SET_TO (*counter + 1);
000010  6820              LDR      r0,[r4,#0]
000012  f1000001          ADD      r0,r0,#1
000016  6020              STR      r0,[r4,#0]
;;;9710           switch(c)
000018  2f5d              CMP      r7,#0x5d
00001a  d032              BEQ      |L94.130|
00001c  dc0c              BGT      |L94.56|
00001e  2f2b              CMP      r7,#0x2b
000020  d013              BEQ      |L94.74|
000022  dc04              BGT      |L94.46|
000024  2f00              CMP      r7,#0
000026  d07b              BEQ      |L94.288|
000028  2f2a              CMP      r7,#0x2a
                  |L94.42|
00002a  d17a              BNE      |L94.290|
00002c  e019              B        |L94.98|
                  |L94.46|
00002e  2f2d              CMP      r7,#0x2d
000030  d00f              BEQ      |L94.82|
000032  2f2f              CMP      r7,#0x2f
000034  d1f9              BNE      |L94.42|
000036  e010              B        |L94.90|
                  |L94.56|
000038  2f61              CMP      r7,#0x61
00003a  d026              BEQ      |L94.138|
00003c  2f6d              CMP      r7,#0x6d
00003e  d05e              BEQ      |L94.254|
000040  2f6f              CMP      r7,#0x6f
000042  d06f              BEQ      |L94.292|
000044  2f78              CMP      r7,#0x78
000046  d1f0              BNE      |L94.42|
000048  e0c7              B        |L94.474|
                  |L94.74|
;;;9711           {
;;;9712               case '+':
;;;9713                   *operation SET_TO PLUS;
00004a  f04f0009          MOV      r0,#9
00004e  6028              STR      r0,[r5,#0]
;;;9714                   break;
000050  e147              B        |L94.738|
                  |L94.82|
;;;9715               case '-':
;;;9716                   *operation SET_TO MINUS;
000052  f04f0007          MOV      r0,#7
000056  6028              STR      r0,[r5,#0]
;;;9717                   break;
000058  e143              B        |L94.738|
                  |L94.90|
;;;9718               case '/':
;;;9719                   *operation SET_TO DIVIDED_BY;
00005a  f04f0001          MOV      r0,#1
00005e  6028              STR      r0,[r5,#0]
;;;9720                   break;
000060  e13f              B        |L94.738|
                  |L94.98|
;;;9721               case '*':
;;;9722                   if(line[*counter] IS '*')
000062  6820              LDR      r0,[r4,#0]
000064  5c30              LDRB     r0,[r6,r0]
000066  282a              CMP      r0,#0x2a
000068  d107              BNE      |L94.122|
;;;9723                   {
;;;9724                       *operation SET_TO POWER;
00006a  f04f0003          MOV      r0,#3
00006e  6028              STR      r0,[r5,#0]
;;;9725                       *counter SET_TO (*counter + 1);
000070  6820              LDR      r0,[r4,#0]
000072  f1000001          ADD      r0,r0,#1
000076  6020              STR      r0,[r4,#0]
000078  e002              B        |L94.128|
                  |L94.122|
;;;9726                   }
;;;9727                   else
;;;9728                       *operation SET_TO TIMES;
00007a  f04f0004          MOV      r0,#4
00007e  6028              STR      r0,[r5,#0]
                  |L94.128|
;;;9729                   break;
000080  e12f              B        |L94.738|
                  |L94.130|
;;;9730               case ']':
;;;9731                   *operation SET_TO RIGHT_BRACKET;
000082  f04f000a          MOV      r0,#0xa
000086  6028              STR      r0,[r5,#0]
;;;9732                   break;
000088  e12b              B        |L94.738|
                  |L94.138|
;;;9733               case 'a':
;;;9734                   if((line[*counter] IS 'n') AND (line[(*counter)+1] IS 'd'))
00008a  6820              LDR      r0,[r4,#0]
00008c  5c30              LDRB     r0,[r6,r0]
00008e  286e              CMP      r0,#0x6e
000090  d10c              BNE      |L94.172|
000092  6820              LDR      r0,[r4,#0]
000094  1c40              ADDS     r0,r0,#1
000096  5c30              LDRB     r0,[r6,r0]
000098  2864              CMP      r0,#0x64
00009a  d107              BNE      |L94.172|
;;;9735                   {
;;;9736                       *operation SET_TO AND2;
00009c  f04f0005          MOV      r0,#5
0000a0  6028              STR      r0,[r5,#0]
;;;9737                       *counter SET_TO (*counter + 2);
0000a2  6820              LDR      r0,[r4,#0]
0000a4  f1000002          ADD      r0,r0,#2
0000a8  6020              STR      r0,[r4,#0]
0000aa  e027              B        |L94.252|
                  |L94.172|
;;;9738                   }
;;;9739                   else
;;;9740                       ERM(NCE_UNKNOWN_OPERATION_NAME_STARTING_WITH_A);
0000ac  f04f0100          MOV      r1,#0
0000b0  488d              LDR      r0,|L94.744|
0000b2  f8c0114c          STR      r1,[r0,#0x14c]
0000b6  4601              MOV      r1,r0
0000b8  f8d1314c          LDR      r3,[r1,#0x14c]
0000bc  f8d1114c          LDR      r1,[r1,#0x14c]
0000c0  f1010101          ADD      r1,r1,#1
0000c4  4602              MOV      r2,r0
0000c6  f8c2114c          STR      r1,[r2,#0x14c]
0000ca  eb030183          ADD      r1,r3,r3,LSL #2
0000ce  f6a06254          SUB      r2,r0,#0xe54
0000d2  eb021101          ADD      r1,r2,r1,LSL #4
0000d6  4608              MOV      r0,r1
0000d8  4984              LDR      r1,|L94.748|
0000da  f7fffffe          BL       strcpy
0000de  f04f0100          MOV      r1,#0
0000e2  4881              LDR      r0,|L94.744|
0000e4  f8d0014c          LDR      r0,[r0,#0x14c]
0000e8  eb000080          ADD      r0,r0,r0,LSL #2
0000ec  4a80              LDR      r2,|L94.752|
0000ee  eb021000          ADD      r0,r2,r0,LSL #4
0000f2  7001              STRB     r1,[r0,#0]
0000f4  f04f00b0          MOV      r0,#0xb0
                  |L94.248|
;;;9741                   break;
;;;9742               case 'm':
;;;9743                   if((line[*counter] IS 'o') AND (line[(*counter)+1] IS 'd'))
;;;9744                   {
;;;9745                       *operation SET_TO MODULO;
;;;9746                       *counter SET_TO (*counter + 2);
;;;9747                   }
;;;9748                   else
;;;9749                       ERM(NCE_UNKNOWN_OPERATION_NAME_STARTING_WITH_M);
;;;9750                   break;
;;;9751               case 'o':
;;;9752                   if(line[*counter] IS 'r')
;;;9753                   {
;;;9754                       *operation SET_TO NON_EXCLUSIVE_OR;
;;;9755                       *counter SET_TO (*counter + 1);
;;;9756                   }
;;;9757                   else
;;;9758                       ERM(NCE_UNKNOWN_OPERATION_NAME_STARTING_WITH_O);
;;;9759                   break;
;;;9760               case 'x':
;;;9761                   if((line[*counter] IS 'o') AND (line[(*counter)+1] IS 'r'))
;;;9762                   {
;;;9763                       *operation SET_TO EXCLUSIVE_OR;
;;;9764                       *counter SET_TO (*counter + 2);
;;;9765                   }
;;;9766                   else
;;;9767                       ERM(NCE_UNKNOWN_OPERATION_NAME_STARTING_WITH_X);
;;;9768                   break;
;;;9769               case 0:
;;;9770                   ERM(NCE_UNCLOSED_EXPRESSION);
;;;9771               default:
;;;9772                   ERM(NCE_UNKNOWN_OPERATION);
;;;9773           }
;;;9774           return RS274NGC_OK;
;;;9775       }
0000f8  e8bd81f0          POP      {r4-r8,pc}
                  |L94.252|
0000fc  e0f1              B        |L94.738|
                  |L94.254|
0000fe  6820              LDR      r0,[r4,#0]            ;9743
000100  5c30              LDRB     r0,[r6,r0]            ;9743
000102  286f              CMP      r0,#0x6f              ;9743
000104  d10f              BNE      |L94.294|
000106  6820              LDR      r0,[r4,#0]            ;9743
000108  1c40              ADDS     r0,r0,#1              ;9743
00010a  5c30              LDRB     r0,[r6,r0]            ;9743
00010c  2864              CMP      r0,#0x64              ;9743
00010e  d10a              BNE      |L94.294|
000110  f04f0002          MOV      r0,#2                 ;9745
000114  6028              STR      r0,[r5,#0]            ;9745
000116  6820              LDR      r0,[r4,#0]            ;9746
000118  f1000002          ADD      r0,r0,#2              ;9746
00011c  6020              STR      r0,[r4,#0]            ;9746
00011e  e028              B        |L94.370|
                  |L94.288|
000120  e093              B        |L94.586|
                  |L94.290|
000122  e0b8              B        |L94.662|
                  |L94.292|
000124  e026              B        |L94.372|
                  |L94.294|
000126  f04f0100          MOV      r1,#0                 ;9749
00012a  486f              LDR      r0,|L94.744|
00012c  f8c0114c          STR      r1,[r0,#0x14c]        ;9749
000130  4601              MOV      r1,r0                 ;9749
000132  f8d1314c          LDR      r3,[r1,#0x14c]        ;9749
000136  f8d1114c          LDR      r1,[r1,#0x14c]        ;9749
00013a  f1010101          ADD      r1,r1,#1              ;9749
00013e  4602              MOV      r2,r0                 ;9749
000140  f8c2114c          STR      r1,[r2,#0x14c]        ;9749
000144  eb030183          ADD      r1,r3,r3,LSL #2       ;9749
000148  4a69              LDR      r2,|L94.752|
00014a  eb021101          ADD      r1,r2,r1,LSL #4       ;9749
00014e  4608              MOV      r0,r1                 ;9749
000150  4966              LDR      r1,|L94.748|
000152  f7fffffe          BL       strcpy
000156  f04f0100          MOV      r1,#0                 ;9749
00015a  4863              LDR      r0,|L94.744|
00015c  f8d0014c          LDR      r0,[r0,#0x14c]        ;9749
000160  eb000080          ADD      r0,r0,r0,LSL #2       ;9749
000164  4a62              LDR      r2,|L94.752|
000166  eb021000          ADD      r0,r2,r0,LSL #4       ;9749
00016a  7001              STRB     r1,[r0,#0]            ;9749
00016c  f04f00b1          MOV      r0,#0xb1              ;9749
000170  e7c2              B        |L94.248|
                  |L94.370|
000172  e0b6              B        |L94.738|
                  |L94.372|
000174  6820              LDR      r0,[r4,#0]            ;9752
000176  5c30              LDRB     r0,[r6,r0]            ;9752
000178  2872              CMP      r0,#0x72              ;9752
00017a  d107              BNE      |L94.396|
00017c  f04f0008          MOV      r0,#8                 ;9754
000180  6028              STR      r0,[r5,#0]            ;9754
000182  6820              LDR      r0,[r4,#0]            ;9755
000184  f1000001          ADD      r0,r0,#1              ;9755
000188  6020              STR      r0,[r4,#0]            ;9755
00018a  e025              B        |L94.472|
                  |L94.396|
00018c  f04f0100          MOV      r1,#0                 ;9758
000190  4855              LDR      r0,|L94.744|
000192  f8c0114c          STR      r1,[r0,#0x14c]        ;9758
000196  4601              MOV      r1,r0                 ;9758
000198  f8d1314c          LDR      r3,[r1,#0x14c]        ;9758
00019c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9758
0001a0  f1010101          ADD      r1,r1,#1              ;9758
0001a4  4602              MOV      r2,r0                 ;9758
0001a6  f8c2114c          STR      r1,[r2,#0x14c]        ;9758
0001aa  eb030183          ADD      r1,r3,r3,LSL #2       ;9758
0001ae  4a50              LDR      r2,|L94.752|
0001b0  eb021101          ADD      r1,r2,r1,LSL #4       ;9758
0001b4  4608              MOV      r0,r1                 ;9758
0001b6  494d              LDR      r1,|L94.748|
0001b8  f7fffffe          BL       strcpy
0001bc  f04f0100          MOV      r1,#0                 ;9758
0001c0  4849              LDR      r0,|L94.744|
0001c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9758
0001c6  eb000080          ADD      r0,r0,r0,LSL #2       ;9758
0001ca  4a49              LDR      r2,|L94.752|
0001cc  eb021000          ADD      r0,r2,r0,LSL #4       ;9758
0001d0  7001              STRB     r1,[r0,#0]            ;9758
0001d2  f04f00b2          MOV      r0,#0xb2              ;9758
0001d6  e78f              B        |L94.248|
                  |L94.472|
0001d8  e083              B        |L94.738|
                  |L94.474|
0001da  6820              LDR      r0,[r4,#0]            ;9761
0001dc  5c30              LDRB     r0,[r6,r0]            ;9761
0001de  286f              CMP      r0,#0x6f              ;9761
0001e0  d10c              BNE      |L94.508|
0001e2  6820              LDR      r0,[r4,#0]            ;9761
0001e4  1c40              ADDS     r0,r0,#1              ;9761
0001e6  5c30              LDRB     r0,[r6,r0]            ;9761
0001e8  2872              CMP      r0,#0x72              ;9761
0001ea  d107              BNE      |L94.508|
0001ec  f04f0006          MOV      r0,#6                 ;9763
0001f0  6028              STR      r0,[r5,#0]            ;9763
0001f2  6820              LDR      r0,[r4,#0]            ;9764
0001f4  f1000002          ADD      r0,r0,#2              ;9764
0001f8  6020              STR      r0,[r4,#0]            ;9764
0001fa  e025              B        |L94.584|
                  |L94.508|
0001fc  f04f0100          MOV      r1,#0                 ;9767
000200  4839              LDR      r0,|L94.744|
000202  f8c0114c          STR      r1,[r0,#0x14c]        ;9767
000206  4601              MOV      r1,r0                 ;9767
000208  f8d1314c          LDR      r3,[r1,#0x14c]        ;9767
00020c  f8d1114c          LDR      r1,[r1,#0x14c]        ;9767
000210  f1010101          ADD      r1,r1,#1              ;9767
000214  4602              MOV      r2,r0                 ;9767
000216  f8c2114c          STR      r1,[r2,#0x14c]        ;9767
00021a  eb030183          ADD      r1,r3,r3,LSL #2       ;9767
00021e  4a34              LDR      r2,|L94.752|
000220  eb021101          ADD      r1,r2,r1,LSL #4       ;9767
000224  4608              MOV      r0,r1                 ;9767
000226  4931              LDR      r1,|L94.748|
000228  f7fffffe          BL       strcpy
00022c  f04f0100          MOV      r1,#0                 ;9767
000230  482d              LDR      r0,|L94.744|
000232  f8d0014c          LDR      r0,[r0,#0x14c]        ;9767
000236  eb000080          ADD      r0,r0,r0,LSL #2       ;9767
00023a  4a2d              LDR      r2,|L94.752|
00023c  eb021000          ADD      r0,r2,r0,LSL #4       ;9767
000240  7001              STRB     r1,[r0,#0]            ;9767
000242  f04f00b3          MOV      r0,#0xb3              ;9767
000246  e757              B        |L94.248|
                  |L94.584|
000248  e04b              B        |L94.738|
                  |L94.586|
00024a  f04f0100          MOV      r1,#0                 ;9770
00024e  4826              LDR      r0,|L94.744|
000250  f8c0114c          STR      r1,[r0,#0x14c]        ;9770
000254  4601              MOV      r1,r0                 ;9770
000256  f8d1314c          LDR      r3,[r1,#0x14c]        ;9770
00025a  f8d1114c          LDR      r1,[r1,#0x14c]        ;9770
00025e  f1010101          ADD      r1,r1,#1              ;9770
000262  4602              MOV      r2,r0                 ;9770
000264  f8c2114c          STR      r1,[r2,#0x14c]        ;9770
000268  eb030183          ADD      r1,r3,r3,LSL #2       ;9770
00026c  4a20              LDR      r2,|L94.752|
00026e  eb021101          ADD      r1,r2,r1,LSL #4       ;9770
000272  4608              MOV      r0,r1                 ;9770
000274  491d              LDR      r1,|L94.748|
000276  f7fffffe          BL       strcpy
00027a  f04f0100          MOV      r1,#0                 ;9770
00027e  481a              LDR      r0,|L94.744|
000280  f8d0014c          LDR      r0,[r0,#0x14c]        ;9770
000284  eb000080          ADD      r0,r0,r0,LSL #2       ;9770
000288  4a19              LDR      r2,|L94.752|
00028a  eb021000          ADD      r0,r2,r0,LSL #4       ;9770
00028e  7001              STRB     r1,[r0,#0]            ;9770
000290  f04f00ac          MOV      r0,#0xac              ;9770
000294  e730              B        |L94.248|
                  |L94.662|
000296  f04f0100          MOV      r1,#0                 ;9772
00029a  4813              LDR      r0,|L94.744|
00029c  f8c0114c          STR      r1,[r0,#0x14c]        ;9772
0002a0  4601              MOV      r1,r0                 ;9772
0002a2  f8d1314c          LDR      r3,[r1,#0x14c]        ;9772
0002a6  f8d1114c          LDR      r1,[r1,#0x14c]        ;9772
0002aa  f1010101          ADD      r1,r1,#1              ;9772
0002ae  4602              MOV      r2,r0                 ;9772
0002b0  f8c2114c          STR      r1,[r2,#0x14c]        ;9772
0002b4  eb030183          ADD      r1,r3,r3,LSL #2       ;9772
0002b8  4a0d              LDR      r2,|L94.752|
0002ba  eb021101          ADD      r1,r2,r1,LSL #4       ;9772
0002be  4608              MOV      r0,r1                 ;9772
0002c0  490a              LDR      r1,|L94.748|
0002c2  f7fffffe          BL       strcpy
0002c6  f04f0100          MOV      r1,#0                 ;9772
0002ca  4807              LDR      r0,|L94.744|
0002cc  f8d0014c          LDR      r0,[r0,#0x14c]        ;9772
0002d0  eb000080          ADD      r0,r0,r0,LSL #2       ;9772
0002d4  4a06              LDR      r2,|L94.752|
0002d6  eb021000          ADD      r0,r2,r0,LSL #4       ;9772
0002da  7001              STRB     r1,[r0,#0]            ;9772
0002dc  f04f00af          MOV      r0,#0xaf              ;9772
0002e0  e70a              B        |L94.248|
                  |L94.738|
0002e2  bf00              NOP                            ;9714
0002e4  2000              MOVS     r0,#0                 ;9774
0002e6  e707              B        |L94.248|
;;;9776   
                          ENDP

                  |L94.744|
                          DCD      _setup+0xc000
                  |L94.748|
                          DCD      |symbol_number.502|
                  |L94.752|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_operation_unary||, CODE, READONLY, ALIGN=2

                  read_operation_unary PROC
;;;9809   
;;;9810       static int read_operation_unary(              /* ARGUMENTS                               */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;9811       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9812       int * counter,                                /* pointer to a counter for position on the line  */
;;;9813       int * operation)                              /* pointer to operation to be read                */
;;;9814       {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
;;;9815           static char name[] SET_TO "read_operation_unary";
;;;9816           char c;
;;;9817   
;;;9818           c SET_TO line[*counter];
00000a  6820              LDR      r0,[r4,#0]
00000c  5c28              LDRB     r0,[r5,r0]
00000e  4607              MOV      r7,r0
;;;9819           *counter SET_TO (*counter + 1);
000010  6820              LDR      r0,[r4,#0]
000012  f1000001          ADD      r0,r0,#1
000016  6020              STR      r0,[r4,#0]
;;;9820           switch (c)
000018  2f6c              CMP      r7,#0x6c
00001a  d079              BEQ      |L95.272|
00001c  dc08              BGT      |L95.48|
00001e  2f61              CMP      r7,#0x61
000020  d00d              BEQ      |L95.62|
000022  2f63              CMP      r7,#0x63
000024  d07b              BEQ      |L95.286|
000026  2f65              CMP      r7,#0x65
000028  d074              BEQ      |L95.276|
00002a  2f66              CMP      r7,#0x66
                  |L95.44|
00002c  d173              BNE      |L95.278|
00002e  e0e6              B        |L95.510|
                  |L95.48|
000030  2f72              CMP      r7,#0x72
000032  d071              BEQ      |L95.280|
000034  2f73              CMP      r7,#0x73
000036  d070              BEQ      |L95.282|
000038  2f74              CMP      r7,#0x74
00003a  d1f7              BNE      |L95.44|
00003c  e1da              B        |L95.1012|
                  |L95.62|
;;;9821           {
;;;9822               case 'a':
;;;9823                   if((line[*counter] IS 'b') AND (line[(*counter)+1] IS 's'))
00003e  6820              LDR      r0,[r4,#0]
000040  5c28              LDRB     r0,[r5,r0]
000042  2862              CMP      r0,#0x62
000044  d10c              BNE      |L95.96|
000046  6820              LDR      r0,[r4,#0]
000048  1c40              ADDS     r0,r0,#1
00004a  5c28              LDRB     r0,[r5,r0]
00004c  2873              CMP      r0,#0x73
00004e  d107              BNE      |L95.96|
;;;9824                   {
;;;9825                       *operation SET_TO ABS;
000050  f04f0001          MOV      r0,#1
000054  6030              STR      r0,[r6,#0]
;;;9826                       *counter SET_TO (*counter + 2);
000056  6820              LDR      r0,[r4,#0]
000058  f1000002          ADD      r0,r0,#2
00005c  6020              STR      r0,[r4,#0]
00005e  e05d              B        |L95.284|
                  |L95.96|
;;;9827                   }
;;;9828                   else if(strncmp((line + *counter), "cos", 3) IS 0)
000060  6821              LDR      r1,[r4,#0]
000062  4429              ADD      r1,r1,r5
000064  4608              MOV      r0,r1
000066  2203              MOVS     r2,#3
000068  a1fe              ADR      r1,|L95.1124|
00006a  f7fffffe          BL       strncmp
00006e  b938              CBNZ     r0,|L95.128|
;;;9829                   {
;;;9830                       *operation SET_TO ACOS;
000070  f04f0002          MOV      r0,#2
000074  6030              STR      r0,[r6,#0]
;;;9831                       *counter SET_TO (*counter + 3);
000076  6820              LDR      r0,[r4,#0]
000078  f1000003          ADD      r0,r0,#3
00007c  6020              STR      r0,[r4,#0]
00007e  e04d              B        |L95.284|
                  |L95.128|
;;;9832                   }
;;;9833                   else if(strncmp((line + *counter), "sin", 3) IS 0)
000080  6821              LDR      r1,[r4,#0]
000082  4429              ADD      r1,r1,r5
000084  4608              MOV      r0,r1
000086  2203              MOVS     r2,#3
000088  a1f7              ADR      r1,|L95.1128|
00008a  f7fffffe          BL       strncmp
00008e  b938              CBNZ     r0,|L95.160|
;;;9834                   {
;;;9835                       *operation SET_TO ASIN;
000090  f04f0003          MOV      r0,#3
000094  6030              STR      r0,[r6,#0]
;;;9836                       *counter SET_TO (*counter + 3);
000096  6820              LDR      r0,[r4,#0]
000098  f1000003          ADD      r0,r0,#3
00009c  6020              STR      r0,[r4,#0]
00009e  e03d              B        |L95.284|
                  |L95.160|
;;;9837                   }
;;;9838                   else if(strncmp((line + *counter), "tan", 3) IS 0)
0000a0  6821              LDR      r1,[r4,#0]
0000a2  4429              ADD      r1,r1,r5
0000a4  4608              MOV      r0,r1
0000a6  2203              MOVS     r2,#3
0000a8  a1f0              ADR      r1,|L95.1132|
0000aa  f7fffffe          BL       strncmp
0000ae  b938              CBNZ     r0,|L95.192|
;;;9839                   {
;;;9840                       *operation SET_TO ATAN;
0000b0  f04f0004          MOV      r0,#4
0000b4  6030              STR      r0,[r6,#0]
;;;9841                       *counter SET_TO (*counter + 3);
0000b6  6820              LDR      r0,[r4,#0]
0000b8  f1000003          ADD      r0,r0,#3
0000bc  6020              STR      r0,[r4,#0]
0000be  e02d              B        |L95.284|
                  |L95.192|
;;;9842                   }
;;;9843                   else
;;;9844                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_A);
0000c0  f04f0100          MOV      r1,#0
0000c4  48ea              LDR      r0,|L95.1136|
0000c6  f8c0114c          STR      r1,[r0,#0x14c]
0000ca  4601              MOV      r1,r0
0000cc  f8d1314c          LDR      r3,[r1,#0x14c]
0000d0  f8d1114c          LDR      r1,[r1,#0x14c]
0000d4  f1010101          ADD      r1,r1,#1
0000d8  4602              MOV      r2,r0
0000da  f8c2114c          STR      r1,[r2,#0x14c]
0000de  eb030183          ADD      r1,r3,r3,LSL #2
0000e2  f6a06254          SUB      r2,r0,#0xe54
0000e6  eb021101          ADD      r1,r2,r1,LSL #4
0000ea  4608              MOV      r0,r1
0000ec  49e1              LDR      r1,|L95.1140|
0000ee  f7fffffe          BL       strcpy
0000f2  f04f0100          MOV      r1,#0
0000f6  48de              LDR      r0,|L95.1136|
0000f8  f8d0014c          LDR      r0,[r0,#0x14c]
0000fc  eb000080          ADD      r0,r0,r0,LSL #2
000100  4add              LDR      r2,|L95.1144|
000102  eb021000          ADD      r0,r2,r0,LSL #4
000106  7001              STRB     r1,[r0,#0]
000108  f04f00b4          MOV      r0,#0xb4
                  |L95.268|
;;;9845                   break;
;;;9846               case 'c':
;;;9847                   if((line[*counter] IS 'o') AND (line[(*counter)+1] IS 's'))
;;;9848                   {
;;;9849                       *operation SET_TO COS;
;;;9850                       *counter SET_TO (*counter + 2);
;;;9851                   }
;;;9852                   else
;;;9853                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_C);
;;;9854                   break;
;;;9855               case 'e':
;;;9856                   if((line[*counter] IS 'x') AND (line[(*counter)+1] IS 'p'))
;;;9857                   {
;;;9858                       *operation SET_TO EXP;
;;;9859                       *counter SET_TO (*counter + 2);
;;;9860                   }
;;;9861                   else
;;;9862                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_E);
;;;9863                   break;
;;;9864               case 'f':
;;;9865                   if((line[*counter] IS 'i') AND (line[(*counter)+1] IS 'x'))
;;;9866                   {
;;;9867                       *operation SET_TO FIX;
;;;9868                       *counter SET_TO (*counter + 2);
;;;9869                   }
;;;9870                   else if((line[*counter] IS 'u') AND (line[(*counter)+1] IS 'p'))
;;;9871                   {
;;;9872                       *operation SET_TO FUP;
;;;9873                       *counter SET_TO (*counter + 2);
;;;9874                   }
;;;9875                   else
;;;9876                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_F);
;;;9877                   break;
;;;9878               case 'l':
;;;9879                   if(line[*counter] IS 'n')
;;;9880                   {
;;;9881                       *operation SET_TO LN;
;;;9882                       *counter SET_TO (*counter + 1);
;;;9883                   }
;;;9884                   else
;;;9885                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_L);
;;;9886                   break;
;;;9887               case 'r':
;;;9888                   if(strncmp((line + *counter), "ound", 4) IS 0)
;;;9889                   {
;;;9890                       *operation SET_TO ROUND;
;;;9891                       *counter SET_TO (*counter + 4);
;;;9892                   }
;;;9893                   else
;;;9894                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_R);
;;;9895                   break;
;;;9896               case 's':
;;;9897                   if((line[*counter] IS 'i') AND (line[(*counter)+1] IS 'n'))
;;;9898                   {
;;;9899                       *operation SET_TO SIN;
;;;9900                       *counter SET_TO (*counter + 2);
;;;9901                   }
;;;9902                   else if(strncmp((line + *counter), "qrt", 3) IS 0)
;;;9903                   {
;;;9904                       *operation SET_TO SQRT;
;;;9905                       *counter SET_TO (*counter + 3);
;;;9906                   }
;;;9907                   else
;;;9908                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_S);
;;;9909                   break;
;;;9910               case 't':
;;;9911                   if((line[*counter] IS 'a') AND (line[(*counter)+1] IS 'n'))
;;;9912                   {
;;;9913                       *operation SET_TO TAN;
;;;9914                       *counter SET_TO (*counter + 2);
;;;9915                   }
;;;9916                   else
;;;9917                       ERM(NCE_UNKNOWN_WORD_STARTING_WITH_T);
;;;9918                   break;
;;;9919               default:
;;;9920                   ERM(NCE_UNKNOWN_WORD_WHERE_UNARY_OPERATION_COULD_BE);
;;;9921           }
;;;9922           return RS274NGC_OK;
;;;9923       }
00010c  e8bd81f0          POP      {r4-r8,pc}
                  |L95.272|
000110  e0be              B        |L95.656|
000112  e004              B        |L95.286|
                  |L95.276|
000114  e03b              B        |L95.398|
                  |L95.278|
000116  e1b8              B        |L95.1162|
                  |L95.280|
000118  e0ed              B        |L95.758|
                  |L95.282|
00011a  e123              B        |L95.868|
                  |L95.284|
00011c  e1dc              B        |L95.1240|
                  |L95.286|
00011e  6820              LDR      r0,[r4,#0]            ;9847
000120  5c28              LDRB     r0,[r5,r0]            ;9847
000122  286f              CMP      r0,#0x6f              ;9847
000124  d10c              BNE      |L95.320|
000126  6820              LDR      r0,[r4,#0]            ;9847
000128  1c40              ADDS     r0,r0,#1              ;9847
00012a  5c28              LDRB     r0,[r5,r0]            ;9847
00012c  2873              CMP      r0,#0x73              ;9847
00012e  d107              BNE      |L95.320|
000130  f04f0005          MOV      r0,#5                 ;9849
000134  6030              STR      r0,[r6,#0]            ;9849
000136  6820              LDR      r0,[r4,#0]            ;9850
000138  f1000002          ADD      r0,r0,#2              ;9850
00013c  6020              STR      r0,[r4,#0]            ;9850
00013e  e025              B        |L95.396|
                  |L95.320|
000140  f04f0100          MOV      r1,#0                 ;9853
000144  48ca              LDR      r0,|L95.1136|
000146  f8c0114c          STR      r1,[r0,#0x14c]        ;9853
00014a  4601              MOV      r1,r0                 ;9853
00014c  f8d1314c          LDR      r3,[r1,#0x14c]        ;9853
000150  f8d1114c          LDR      r1,[r1,#0x14c]        ;9853
000154  f1010101          ADD      r1,r1,#1              ;9853
000158  4602              MOV      r2,r0                 ;9853
00015a  f8c2114c          STR      r1,[r2,#0x14c]        ;9853
00015e  eb030183          ADD      r1,r3,r3,LSL #2       ;9853
000162  4ac5              LDR      r2,|L95.1144|
000164  eb021101          ADD      r1,r2,r1,LSL #4       ;9853
000168  4608              MOV      r0,r1                 ;9853
00016a  49c2              LDR      r1,|L95.1140|
00016c  f7fffffe          BL       strcpy
000170  f04f0100          MOV      r1,#0                 ;9853
000174  48be              LDR      r0,|L95.1136|
000176  f8d0014c          LDR      r0,[r0,#0x14c]        ;9853
00017a  eb000080          ADD      r0,r0,r0,LSL #2       ;9853
00017e  4abe              LDR      r2,|L95.1144|
000180  eb021000          ADD      r0,r2,r0,LSL #4       ;9853
000184  7001              STRB     r1,[r0,#0]            ;9853
000186  f04f00b5          MOV      r0,#0xb5              ;9853
00018a  e7bf              B        |L95.268|
                  |L95.396|
00018c  e1a4              B        |L95.1240|
                  |L95.398|
00018e  6820              LDR      r0,[r4,#0]            ;9856
000190  5c28              LDRB     r0,[r5,r0]            ;9856
000192  2878              CMP      r0,#0x78              ;9856
000194  d10c              BNE      |L95.432|
000196  6820              LDR      r0,[r4,#0]            ;9856
000198  1c40              ADDS     r0,r0,#1              ;9856
00019a  5c28              LDRB     r0,[r5,r0]            ;9856
00019c  2870              CMP      r0,#0x70              ;9856
00019e  d107              BNE      |L95.432|
0001a0  f04f0006          MOV      r0,#6                 ;9858
0001a4  6030              STR      r0,[r6,#0]            ;9858
0001a6  6820              LDR      r0,[r4,#0]            ;9859
0001a8  f1000002          ADD      r0,r0,#2              ;9859
0001ac  6020              STR      r0,[r4,#0]            ;9859
0001ae  e025              B        |L95.508|
                  |L95.432|
0001b0  f04f0100          MOV      r1,#0                 ;9862
0001b4  48ae              LDR      r0,|L95.1136|
0001b6  f8c0114c          STR      r1,[r0,#0x14c]        ;9862
0001ba  4601              MOV      r1,r0                 ;9862
0001bc  f8d1314c          LDR      r3,[r1,#0x14c]        ;9862
0001c0  f8d1114c          LDR      r1,[r1,#0x14c]        ;9862
0001c4  f1010101          ADD      r1,r1,#1              ;9862
0001c8  4602              MOV      r2,r0                 ;9862
0001ca  f8c2114c          STR      r1,[r2,#0x14c]        ;9862
0001ce  eb030183          ADD      r1,r3,r3,LSL #2       ;9862
0001d2  4aa9              LDR      r2,|L95.1144|
0001d4  eb021101          ADD      r1,r2,r1,LSL #4       ;9862
0001d8  4608              MOV      r0,r1                 ;9862
0001da  49a6              LDR      r1,|L95.1140|
0001dc  f7fffffe          BL       strcpy
0001e0  f04f0100          MOV      r1,#0                 ;9862
0001e4  48a2              LDR      r0,|L95.1136|
0001e6  f8d0014c          LDR      r0,[r0,#0x14c]        ;9862
0001ea  eb000080          ADD      r0,r0,r0,LSL #2       ;9862
0001ee  4aa2              LDR      r2,|L95.1144|
0001f0  eb021000          ADD      r0,r2,r0,LSL #4       ;9862
0001f4  7001              STRB     r1,[r0,#0]            ;9862
0001f6  f04f00b6          MOV      r0,#0xb6              ;9862
0001fa  e787              B        |L95.268|
                  |L95.508|
0001fc  e16c              B        |L95.1240|
                  |L95.510|
0001fe  6820              LDR      r0,[r4,#0]            ;9865
000200  5c28              LDRB     r0,[r5,r0]            ;9865
000202  2869              CMP      r0,#0x69              ;9865
000204  d10c              BNE      |L95.544|
000206  6820              LDR      r0,[r4,#0]            ;9865
000208  1c40              ADDS     r0,r0,#1              ;9865
00020a  5c28              LDRB     r0,[r5,r0]            ;9865
00020c  2878              CMP      r0,#0x78              ;9865
00020e  d107              BNE      |L95.544|
000210  f04f0007          MOV      r0,#7                 ;9867
000214  6030              STR      r0,[r6,#0]            ;9867
000216  6820              LDR      r0,[r4,#0]            ;9868
000218  f1000002          ADD      r0,r0,#2              ;9868
00021c  6020              STR      r0,[r4,#0]            ;9868
00021e  e036              B        |L95.654|
                  |L95.544|
000220  6820              LDR      r0,[r4,#0]            ;9870
000222  5c28              LDRB     r0,[r5,r0]            ;9870
000224  2875              CMP      r0,#0x75              ;9870
000226  d10c              BNE      |L95.578|
000228  6820              LDR      r0,[r4,#0]            ;9870
00022a  1c40              ADDS     r0,r0,#1              ;9870
00022c  5c28              LDRB     r0,[r5,r0]            ;9870
00022e  2870              CMP      r0,#0x70              ;9870
000230  d107              BNE      |L95.578|
000232  f04f0008          MOV      r0,#8                 ;9872
000236  6030              STR      r0,[r6,#0]            ;9872
000238  6820              LDR      r0,[r4,#0]            ;9873
00023a  f1000002          ADD      r0,r0,#2              ;9873
00023e  6020              STR      r0,[r4,#0]            ;9873
000240  e025              B        |L95.654|
                  |L95.578|
000242  f04f0100          MOV      r1,#0                 ;9876
000246  488a              LDR      r0,|L95.1136|
000248  f8c0114c          STR      r1,[r0,#0x14c]        ;9876
00024c  4601              MOV      r1,r0                 ;9876
00024e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9876
000252  f8d1114c          LDR      r1,[r1,#0x14c]        ;9876
000256  f1010101          ADD      r1,r1,#1              ;9876
00025a  4602              MOV      r2,r0                 ;9876
00025c  f8c2114c          STR      r1,[r2,#0x14c]        ;9876
000260  eb030183          ADD      r1,r3,r3,LSL #2       ;9876
000264  4a84              LDR      r2,|L95.1144|
000266  eb021101          ADD      r1,r2,r1,LSL #4       ;9876
00026a  4608              MOV      r0,r1                 ;9876
00026c  4981              LDR      r1,|L95.1140|
00026e  f7fffffe          BL       strcpy
000272  f04f0100          MOV      r1,#0                 ;9876
000276  487e              LDR      r0,|L95.1136|
000278  f8d0014c          LDR      r0,[r0,#0x14c]        ;9876
00027c  eb000080          ADD      r0,r0,r0,LSL #2       ;9876
000280  4a7d              LDR      r2,|L95.1144|
000282  eb021000          ADD      r0,r2,r0,LSL #4       ;9876
000286  7001              STRB     r1,[r0,#0]            ;9876
000288  f04f00b7          MOV      r0,#0xb7              ;9876
00028c  e73e              B        |L95.268|
                  |L95.654|
00028e  e123              B        |L95.1240|
                  |L95.656|
000290  6820              LDR      r0,[r4,#0]            ;9879
000292  5c28              LDRB     r0,[r5,r0]            ;9879
000294  286e              CMP      r0,#0x6e              ;9879
000296  d107              BNE      |L95.680|
000298  f04f0009          MOV      r0,#9                 ;9881
00029c  6030              STR      r0,[r6,#0]            ;9881
00029e  6820              LDR      r0,[r4,#0]            ;9882
0002a0  f1000001          ADD      r0,r0,#1              ;9882
0002a4  6020              STR      r0,[r4,#0]            ;9882
0002a6  e025              B        |L95.756|
                  |L95.680|
0002a8  f04f0100          MOV      r1,#0                 ;9885
0002ac  4870              LDR      r0,|L95.1136|
0002ae  f8c0114c          STR      r1,[r0,#0x14c]        ;9885
0002b2  4601              MOV      r1,r0                 ;9885
0002b4  f8d1314c          LDR      r3,[r1,#0x14c]        ;9885
0002b8  f8d1114c          LDR      r1,[r1,#0x14c]        ;9885
0002bc  f1010101          ADD      r1,r1,#1              ;9885
0002c0  4602              MOV      r2,r0                 ;9885
0002c2  f8c2114c          STR      r1,[r2,#0x14c]        ;9885
0002c6  eb030183          ADD      r1,r3,r3,LSL #2       ;9885
0002ca  4a6b              LDR      r2,|L95.1144|
0002cc  eb021101          ADD      r1,r2,r1,LSL #4       ;9885
0002d0  4608              MOV      r0,r1                 ;9885
0002d2  4968              LDR      r1,|L95.1140|
0002d4  f7fffffe          BL       strcpy
0002d8  f04f0100          MOV      r1,#0                 ;9885
0002dc  4864              LDR      r0,|L95.1136|
0002de  f8d0014c          LDR      r0,[r0,#0x14c]        ;9885
0002e2  eb000080          ADD      r0,r0,r0,LSL #2       ;9885
0002e6  4a64              LDR      r2,|L95.1144|
0002e8  eb021000          ADD      r0,r2,r0,LSL #4       ;9885
0002ec  7001              STRB     r1,[r0,#0]            ;9885
0002ee  f04f00b8          MOV      r0,#0xb8              ;9885
0002f2  e70b              B        |L95.268|
                  |L95.756|
0002f4  e0f0              B        |L95.1240|
                  |L95.758|
0002f6  6821              LDR      r1,[r4,#0]            ;9888
0002f8  4429              ADD      r1,r1,r5              ;9888
0002fa  4608              MOV      r0,r1                 ;9888
0002fc  2204              MOVS     r2,#4                 ;9888
0002fe  a15f              ADR      r1,|L95.1148|
000300  f7fffffe          BL       strncmp
000304  b938              CBNZ     r0,|L95.790|
000306  f04f000a          MOV      r0,#0xa               ;9890
00030a  6030              STR      r0,[r6,#0]            ;9890
00030c  6820              LDR      r0,[r4,#0]            ;9891
00030e  f1000004          ADD      r0,r0,#4              ;9891
000312  6020              STR      r0,[r4,#0]            ;9891
000314  e025              B        |L95.866|
                  |L95.790|
000316  f04f0100          MOV      r1,#0                 ;9894
00031a  4855              LDR      r0,|L95.1136|
00031c  f8c0114c          STR      r1,[r0,#0x14c]        ;9894
000320  4601              MOV      r1,r0                 ;9894
000322  f8d1314c          LDR      r3,[r1,#0x14c]        ;9894
000326  f8d1114c          LDR      r1,[r1,#0x14c]        ;9894
00032a  f1010101          ADD      r1,r1,#1              ;9894
00032e  4602              MOV      r2,r0                 ;9894
000330  f8c2114c          STR      r1,[r2,#0x14c]        ;9894
000334  eb030183          ADD      r1,r3,r3,LSL #2       ;9894
000338  4a4f              LDR      r2,|L95.1144|
00033a  eb021101          ADD      r1,r2,r1,LSL #4       ;9894
00033e  4608              MOV      r0,r1                 ;9894
000340  494c              LDR      r1,|L95.1140|
000342  f7fffffe          BL       strcpy
000346  f04f0100          MOV      r1,#0                 ;9894
00034a  4849              LDR      r0,|L95.1136|
00034c  f8d0014c          LDR      r0,[r0,#0x14c]        ;9894
000350  eb000080          ADD      r0,r0,r0,LSL #2       ;9894
000354  4a48              LDR      r2,|L95.1144|
000356  eb021000          ADD      r0,r2,r0,LSL #4       ;9894
00035a  7001              STRB     r1,[r0,#0]            ;9894
00035c  f04f00b9          MOV      r0,#0xb9              ;9894
000360  e6d4              B        |L95.268|
                  |L95.866|
000362  e0b9              B        |L95.1240|
                  |L95.868|
000364  6820              LDR      r0,[r4,#0]            ;9897
000366  5c28              LDRB     r0,[r5,r0]            ;9897
000368  2869              CMP      r0,#0x69              ;9897
00036a  d10c              BNE      |L95.902|
00036c  6820              LDR      r0,[r4,#0]            ;9897
00036e  1c40              ADDS     r0,r0,#1              ;9897
000370  5c28              LDRB     r0,[r5,r0]            ;9897
000372  286e              CMP      r0,#0x6e              ;9897
000374  d107              BNE      |L95.902|
000376  f04f000b          MOV      r0,#0xb               ;9899
00037a  6030              STR      r0,[r6,#0]            ;9899
00037c  6820              LDR      r0,[r4,#0]            ;9900
00037e  f1000002          ADD      r0,r0,#2              ;9900
000382  6020              STR      r0,[r4,#0]            ;9900
000384  e035              B        |L95.1010|
                  |L95.902|
000386  6821              LDR      r1,[r4,#0]            ;9902
000388  4429              ADD      r1,r1,r5              ;9902
00038a  4608              MOV      r0,r1                 ;9902
00038c  2203              MOVS     r2,#3                 ;9902
00038e  a13d              ADR      r1,|L95.1156|
000390  f7fffffe          BL       strncmp
000394  b938              CBNZ     r0,|L95.934|
000396  f04f000c          MOV      r0,#0xc               ;9904
00039a  6030              STR      r0,[r6,#0]            ;9904
00039c  6820              LDR      r0,[r4,#0]            ;9905
00039e  f1000003          ADD      r0,r0,#3              ;9905
0003a2  6020              STR      r0,[r4,#0]            ;9905
0003a4  e025              B        |L95.1010|
                  |L95.934|
0003a6  f04f0100          MOV      r1,#0                 ;9908
0003aa  4831              LDR      r0,|L95.1136|
0003ac  f8c0114c          STR      r1,[r0,#0x14c]        ;9908
0003b0  4601              MOV      r1,r0                 ;9908
0003b2  f8d1314c          LDR      r3,[r1,#0x14c]        ;9908
0003b6  f8d1114c          LDR      r1,[r1,#0x14c]        ;9908
0003ba  f1010101          ADD      r1,r1,#1              ;9908
0003be  4602              MOV      r2,r0                 ;9908
0003c0  f8c2114c          STR      r1,[r2,#0x14c]        ;9908
0003c4  eb030183          ADD      r1,r3,r3,LSL #2       ;9908
0003c8  4a2b              LDR      r2,|L95.1144|
0003ca  eb021101          ADD      r1,r2,r1,LSL #4       ;9908
0003ce  4608              MOV      r0,r1                 ;9908
0003d0  4928              LDR      r1,|L95.1140|
0003d2  f7fffffe          BL       strcpy
0003d6  f04f0100          MOV      r1,#0                 ;9908
0003da  4825              LDR      r0,|L95.1136|
0003dc  f8d0014c          LDR      r0,[r0,#0x14c]        ;9908
0003e0  eb000080          ADD      r0,r0,r0,LSL #2       ;9908
0003e4  4a24              LDR      r2,|L95.1144|
0003e6  eb021000          ADD      r0,r2,r0,LSL #4       ;9908
0003ea  7001              STRB     r1,[r0,#0]            ;9908
0003ec  f04f00ba          MOV      r0,#0xba              ;9908
0003f0  e68c              B        |L95.268|
                  |L95.1010|
0003f2  e071              B        |L95.1240|
                  |L95.1012|
0003f4  6820              LDR      r0,[r4,#0]            ;9911
0003f6  5c28              LDRB     r0,[r5,r0]            ;9911
0003f8  2861              CMP      r0,#0x61              ;9911
0003fa  d10c              BNE      |L95.1046|
0003fc  6820              LDR      r0,[r4,#0]            ;9911
0003fe  1c40              ADDS     r0,r0,#1              ;9911
000400  5c28              LDRB     r0,[r5,r0]            ;9911
000402  286e              CMP      r0,#0x6e              ;9911
000404  d107              BNE      |L95.1046|
000406  f04f000d          MOV      r0,#0xd               ;9913
00040a  6030              STR      r0,[r6,#0]            ;9913
00040c  6820              LDR      r0,[r4,#0]            ;9914
00040e  f1000002          ADD      r0,r0,#2              ;9914
000412  6020              STR      r0,[r4,#0]            ;9914
000414  e038              B        |L95.1160|
                  |L95.1046|
000416  f04f0100          MOV      r1,#0                 ;9917
00041a  4815              LDR      r0,|L95.1136|
00041c  f8c0114c          STR      r1,[r0,#0x14c]        ;9917
000420  4601              MOV      r1,r0                 ;9917
000422  f8d1314c          LDR      r3,[r1,#0x14c]        ;9917
000426  f8d1114c          LDR      r1,[r1,#0x14c]        ;9917
00042a  f1010101          ADD      r1,r1,#1              ;9917
00042e  4602              MOV      r2,r0                 ;9917
000430  f8c2114c          STR      r1,[r2,#0x14c]        ;9917
000434  eb030183          ADD      r1,r3,r3,LSL #2       ;9917
000438  4a0f              LDR      r2,|L95.1144|
00043a  eb021101          ADD      r1,r2,r1,LSL #4       ;9917
00043e  4608              MOV      r0,r1                 ;9917
000440  490c              LDR      r1,|L95.1140|
000442  f7fffffe          BL       strcpy
000446  f04f0100          MOV      r1,#0                 ;9917
00044a  4809              LDR      r0,|L95.1136|
00044c  f8d0014c          LDR      r0,[r0,#0x14c]        ;9917
000450  eb000080          ADD      r0,r0,r0,LSL #2       ;9917
000454  4a08              LDR      r2,|L95.1144|
000456  eb021000          ADD      r0,r2,r0,LSL #4       ;9917
00045a  7001              STRB     r1,[r0,#0]            ;9917
00045c  f04f00bb          MOV      r0,#0xbb              ;9917
000460  e654              B        |L95.268|
000462  0000              DCW      0x0000
                  |L95.1124|
000464  636f7300          DCB      "cos",0
                  |L95.1128|
000468  73696e00          DCB      "sin",0
                  |L95.1132|
00046c  74616e00          DCB      "tan",0
                  |L95.1136|
                          DCD      _setup+0xc000
                  |L95.1140|
                          DCD      |symbol_number.503|
                  |L95.1144|
                          DCD      _setup+0xb1ac
                  |L95.1148|
00047c  6f756e64          DCB      "ound",0
000480  00      
000481  00                DCB      0
000482  00                DCB      0
000483  00                DCB      0
                  |L95.1156|
000484  71727400          DCB      "qrt",0
                  |L95.1160|
000488  e026              B        |L95.1240|
                  |L95.1162|
00048a  f04f0100          MOV      r1,#0                 ;9920
00048e  4814              LDR      r0,|L95.1248|
000490  f8c0114c          STR      r1,[r0,#0x14c]        ;9920
000494  4601              MOV      r1,r0                 ;9920
000496  f8d1314c          LDR      r3,[r1,#0x14c]        ;9920
00049a  f8d1114c          LDR      r1,[r1,#0x14c]        ;9920
00049e  f1010101          ADD      r1,r1,#1              ;9920
0004a2  4602              MOV      r2,r0                 ;9920
0004a4  f8c2114c          STR      r1,[r2,#0x14c]        ;9920
0004a8  eb030183          ADD      r1,r3,r3,LSL #2       ;9920
0004ac  f6a06254          SUB      r2,r0,#0xe54          ;9920
0004b0  eb021101          ADD      r1,r2,r1,LSL #4       ;9920
0004b4  4608              MOV      r0,r1                 ;9920
0004b6  490b              LDR      r1,|L95.1252|
0004b8  f7fffffe          BL       strcpy
0004bc  f04f0100          MOV      r1,#0                 ;9920
0004c0  4807              LDR      r0,|L95.1248|
0004c2  f8d0014c          LDR      r0,[r0,#0x14c]        ;9920
0004c6  eb000080          ADD      r0,r0,r0,LSL #2       ;9920
0004ca  4a07              LDR      r2,|L95.1256|
0004cc  eb021000          ADD      r0,r2,r0,LSL #4       ;9920
0004d0  7001              STRB     r1,[r0,#0]            ;9920
0004d2  f04f00bc          MOV      r0,#0xbc              ;9920
0004d6  e619              B        |L95.268|
                  |L95.1240|
0004d8  bf00              NOP                            ;9845
0004da  2000              MOVS     r0,#0                 ;9922
0004dc  e616              B        |L95.268|
;;;9924   
                          ENDP

0004de  0000              DCW      0x0000
                  |L95.1248|
                          DCD      _setup+0xc000
                  |L95.1252|
                          DCD      |symbol_number.503|
                  |L95.1256|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_p||, CODE, READONLY, ALIGN=2

                  read_p PROC
;;;9956   
;;;9957       static int read_p(                            /* ARGUMENTS                                      */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;9958       char * line,                                  /* string: line of RS274/NGC code being processed */
;;;9959       int * counter,                                /* pointer to a counter for position on the line  */
;;;9960       block_pointer block,                          /* pointer to a block being filled from the line  */
;;;9961       double * parameters)                          /* array of system parameters                     */
;;;9962       {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;9963           static char name[] SET_TO "read_p";
;;;9964           double value;
;;;9965           int status;
;;;9966   
;;;9967           CHK((line[*counter] ISNT 'p'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  2870              CMP      r0,#0x70
000014  d027              BEQ      |L96.102|
000016  f04f0100          MOV      r1,#0
00001a  4860              LDR      r0,|L96.412|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4957              LDR      r1,|L96.416|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4853              LDR      r0,|L96.412|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a53              LDR      r2,|L96.420|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L96.98|
;;;9968           *counter SET_TO (*counter + 1);
;;;9969           CHK((block->p_number > -1.0), NCE_MULTIPLE_P_WORDS_ON_ONE_LINE);
;;;9970           CHP(read_real_value(line, counter, &value, parameters));
;;;9971           CHK((value < 0.0), NCE_NEGATIVE_P_WORD_USED);
;;;9972           block->p_number SET_TO value;
;;;9973           return RS274NGC_OK;
;;;9974       }
000062  e8bd87fc          POP      {r2-r10,pc}
                  |L96.102|
000066  6820              LDR      r0,[r4,#0]            ;9968
000068  f1000001          ADD      r0,r0,#1              ;9968
00006c  6020              STR      r0,[r4,#0]            ;9968
00006e  f8d511b0          LDR      r1,[r5,#0x1b0]        ;9969
000072  460e              MOV      r6,r1                 ;9969
000074  f8d501b4          LDR      r0,[r5,#0x1b4]        ;9969
000078  4607              MOV      r7,r0                 ;9969
00007a  f04f0200          MOV      r2,#0                 ;9969
00007e  4b4a              LDR      r3,|L96.424|
000080  4630              MOV      r0,r6                 ;9969
000082  4639              MOV      r1,r7                 ;9969
000084  f7fffffe          BL       __aeabi_cdrcmple
000088  d225              BCS      |L96.214|
00008a  f04f0100          MOV      r1,#0                 ;9969
00008e  4843              LDR      r0,|L96.412|
000090  f8c0114c          STR      r1,[r0,#0x14c]        ;9969
000094  4601              MOV      r1,r0                 ;9969
000096  f8d1314c          LDR      r3,[r1,#0x14c]        ;9969
00009a  f8d1114c          LDR      r1,[r1,#0x14c]        ;9969
00009e  f1010101          ADD      r1,r1,#1              ;9969
0000a2  4602              MOV      r2,r0                 ;9969
0000a4  f8c2114c          STR      r1,[r2,#0x14c]        ;9969
0000a8  eb030183          ADD      r1,r3,r3,LSL #2       ;9969
0000ac  4a3d              LDR      r2,|L96.420|
0000ae  eb021101          ADD      r1,r2,r1,LSL #4       ;9969
0000b2  4608              MOV      r0,r1                 ;9969
0000b4  493a              LDR      r1,|L96.416|
0000b6  f7fffffe          BL       strcpy
0000ba  f04f0100          MOV      r1,#0                 ;9969
0000be  4837              LDR      r0,|L96.412|
0000c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;9969
0000c4  eb000080          ADD      r0,r0,r0,LSL #2       ;9969
0000c8  4a36              LDR      r2,|L96.420|
0000ca  eb021000          ADD      r0,r2,r0,LSL #4       ;9969
0000ce  7001              STRB     r1,[r0,#0]            ;9969
0000d0  f04f0070          MOV      r0,#0x70              ;9969
0000d4  e7c5              B        |L96.98|
                  |L96.214|
0000d6  464b              MOV      r3,r9                 ;9970
0000d8  466a              MOV      r2,sp                 ;9970
0000da  4621              MOV      r1,r4                 ;9970
0000dc  4640              MOV      r0,r8                 ;9970
0000de  f7fffffe          BL       read_real_value
0000e2  ea5f0a00          MOVS     r10,r0                ;9970
0000e6  d025              BEQ      |L96.308|
0000e8  482c              LDR      r0,|L96.412|
0000ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;9970
0000ee  2831              CMP      r0,#0x31              ;9970
0000f0  da1e              BGE      |L96.304|
0000f2  492a              LDR      r1,|L96.412|
0000f4  f8d1314c          LDR      r3,[r1,#0x14c]        ;9970
0000f8  f8d1114c          LDR      r1,[r1,#0x14c]        ;9970
0000fc  1c49              ADDS     r1,r1,#1              ;9970
0000fe  4a27              LDR      r2,|L96.412|
000100  f8c2114c          STR      r1,[r2,#0x14c]        ;9970
000104  eb030183          ADD      r1,r3,r3,LSL #2       ;9970
000108  4a26              LDR      r2,|L96.420|
00010a  eb021101          ADD      r1,r2,r1,LSL #4       ;9970
00010e  4608              MOV      r0,r1                 ;9970
000110  4923              LDR      r1,|L96.416|
000112  f7fffffe          BL       strcpy
000116  f04f0100          MOV      r1,#0                 ;9970
00011a  4820              LDR      r0,|L96.412|
00011c  f8d0014c          LDR      r0,[r0,#0x14c]        ;9970
000120  eb000080          ADD      r0,r0,r0,LSL #2       ;9970
000124  4a1f              LDR      r2,|L96.420|
000126  eb021000          ADD      r0,r2,r0,LSL #4       ;9970
00012a  7001              STRB     r1,[r0,#0]            ;9970
00012c  4650              MOV      r0,r10                ;9970
00012e  e798              B        |L96.98|
                  |L96.304|
000130  4650              MOV      r0,r10                ;9970
000132  e796              B        |L96.98|
                  |L96.308|
000134  2200              MOVS     r2,#0                 ;9971
000136  4613              MOV      r3,r2                 ;9971
000138  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9971
00013c  f7fffffe          BL       __aeabi_cdcmple
000140  d225              BCS      |L96.398|
000142  f04f0100          MOV      r1,#0                 ;9971
000146  4815              LDR      r0,|L96.412|
000148  f8c0114c          STR      r1,[r0,#0x14c]        ;9971
00014c  4601              MOV      r1,r0                 ;9971
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;9971
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;9971
000156  f1010101          ADD      r1,r1,#1              ;9971
00015a  4602              MOV      r2,r0                 ;9971
00015c  f8c2114c          STR      r1,[r2,#0x14c]        ;9971
000160  eb030183          ADD      r1,r3,r3,LSL #2       ;9971
000164  4a0f              LDR      r2,|L96.420|
000166  eb021101          ADD      r1,r2,r1,LSL #4       ;9971
00016a  4608              MOV      r0,r1                 ;9971
00016c  490c              LDR      r1,|L96.416|
00016e  f7fffffe          BL       strcpy
000172  f04f0100          MOV      r1,#0                 ;9971
000176  4809              LDR      r0,|L96.412|
000178  f8d0014c          LDR      r0,[r0,#0x14c]        ;9971
00017c  eb000080          ADD      r0,r0,r0,LSL #2       ;9971
000180  4a08              LDR      r2,|L96.420|
000182  eb021000          ADD      r0,r2,r0,LSL #4       ;9971
000186  7001              STRB     r1,[r0,#0]            ;9971
000188  f04f0081          MOV      r0,#0x81              ;9971
00018c  e769              B        |L96.98|
                  |L96.398|
00018e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;9972
000192  f50572d8          ADD      r2,r5,#0x1b0          ;9972
000196  c203              STM      r2!,{r0,r1}           ;9972
000198  2000              MOVS     r0,#0                 ;9973
00019a  e762              B        |L96.98|
;;;9975   
                          ENDP

                  |L96.412|
                          DCD      _setup+0xc000
                  |L96.416|
                          DCD      |symbol_number.504|
                  |L96.420|
                          DCD      _setup+0xb1ac
                  |L96.424|
                          DCD      0xbff00000

                          AREA ||i.read_parameter||, CODE, READONLY, ALIGN=2

                  read_parameter PROC
;;;10012  
;;;10013      static int read_parameter(                    /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;10014      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10015      int * counter,                                /* pointer to a counter for position on the line  */
;;;10016      double * double_ptr,                          /* pointer to double to be read                   */
;;;10017      double * parameters)                          /* array of system parameters                     */
;;;10018      {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;10019          static char name[] SET_TO "read_parameter";
;;;10020          int index;
;;;10021          int status;
;;;10022  
;;;10023          CHK((line[*counter] ISNT '#'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2823              CMP      r0,#0x23
000012  d027              BEQ      |L97.100|
000014  f04f0100          MOV      r1,#0
000018  4847              LDR      r0,|L97.312|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493e              LDR      r1,|L97.316|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483b              LDR      r0,|L97.312|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a3a              LDR      r2,|L97.320|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L97.96|
;;;10024          *counter SET_TO (*counter + 1);
;;;10025          CHP(read_integer_value(line, counter, &index, parameters));
;;;10026          CHK(((index < 1) OR (index >= RS274NGC_MAX_PARAMETERS)),
;;;10027              NCE_PARAMETER_NUMBER_OUT_OF_RANGE);
;;;10028          *double_ptr SET_TO parameters[index];
;;;10029          return RS274NGC_OK;
;;;10030      }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L97.100|
000064  6820              LDR      r0,[r4,#0]            ;10024
000066  f1000001          ADD      r0,r0,#1              ;10024
00006a  6020              STR      r0,[r4,#0]            ;10024
00006c  463b              MOV      r3,r7                 ;10025
00006e  466a              MOV      r2,sp                 ;10025
000070  4621              MOV      r1,r4                 ;10025
000072  4628              MOV      r0,r5                 ;10025
000074  f7fffffe          BL       read_integer_value
000078  ea5f0800          MOVS     r8,r0                 ;10025
00007c  d025              BEQ      |L97.202|
00007e  482e              LDR      r0,|L97.312|
000080  f8d0014c          LDR      r0,[r0,#0x14c]        ;10025
000084  2831              CMP      r0,#0x31              ;10025
000086  da1e              BGE      |L97.198|
000088  492b              LDR      r1,|L97.312|
00008a  f8d1314c          LDR      r3,[r1,#0x14c]        ;10025
00008e  f8d1114c          LDR      r1,[r1,#0x14c]        ;10025
000092  1c49              ADDS     r1,r1,#1              ;10025
000094  4a28              LDR      r2,|L97.312|
000096  f8c2114c          STR      r1,[r2,#0x14c]        ;10025
00009a  eb030183          ADD      r1,r3,r3,LSL #2       ;10025
00009e  4a28              LDR      r2,|L97.320|
0000a0  eb021101          ADD      r1,r2,r1,LSL #4       ;10025
0000a4  4608              MOV      r0,r1                 ;10025
0000a6  4925              LDR      r1,|L97.316|
0000a8  f7fffffe          BL       strcpy
0000ac  f04f0100          MOV      r1,#0                 ;10025
0000b0  4821              LDR      r0,|L97.312|
0000b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;10025
0000b6  eb000080          ADD      r0,r0,r0,LSL #2       ;10025
0000ba  4a21              LDR      r2,|L97.320|
0000bc  eb021000          ADD      r0,r2,r0,LSL #4       ;10025
0000c0  7001              STRB     r1,[r0,#0]            ;10025
0000c2  4640              MOV      r0,r8                 ;10025
0000c4  e7cc              B        |L97.96|
                  |L97.198|
0000c6  4640              MOV      r0,r8                 ;10025
0000c8  e7ca              B        |L97.96|
                  |L97.202|
0000ca  9800              LDR      r0,[sp,#0]            ;10026
0000cc  2801              CMP      r0,#1                 ;10026
0000ce  db04              BLT      |L97.218|
0000d0  f2415118          MOV      r1,#0x1518            ;10026
0000d4  9800              LDR      r0,[sp,#0]            ;10026
0000d6  4288              CMP      r0,r1                 ;10026
0000d8  db25              BLT      |L97.294|
                  |L97.218|
0000da  f04f0100          MOV      r1,#0                 ;10026
0000de  4816              LDR      r0,|L97.312|
0000e0  f8c0114c          STR      r1,[r0,#0x14c]        ;10026
0000e4  4601              MOV      r1,r0                 ;10026
0000e6  f8d1314c          LDR      r3,[r1,#0x14c]        ;10026
0000ea  f8d1114c          LDR      r1,[r1,#0x14c]        ;10026
0000ee  f1010101          ADD      r1,r1,#1              ;10026
0000f2  4602              MOV      r2,r0                 ;10026
0000f4  f8c2114c          STR      r1,[r2,#0x14c]        ;10026
0000f8  eb030183          ADD      r1,r3,r3,LSL #2       ;10026
0000fc  4a10              LDR      r2,|L97.320|
0000fe  eb021101          ADD      r1,r2,r1,LSL #4       ;10026
000102  4608              MOV      r0,r1                 ;10026
000104  490d              LDR      r1,|L97.316|
000106  f7fffffe          BL       strcpy
00010a  f04f0100          MOV      r1,#0                 ;10026
00010e  480a              LDR      r0,|L97.312|
000110  f8d0014c          LDR      r0,[r0,#0x14c]        ;10026
000114  eb000080          ADD      r0,r0,r0,LSL #2       ;10026
000118  4a09              LDR      r2,|L97.320|
00011a  eb021000          ADD      r0,r2,r0,LSL #4       ;10026
00011e  7001              STRB     r1,[r0,#0]            ;10026
000120  f04f008e          MOV      r0,#0x8e              ;10026
000124  e79c              B        |L97.96|
                  |L97.294|
000126  9800              LDR      r0,[sp,#0]            ;10028
000128  eb0701c0          ADD      r1,r7,r0,LSL #3       ;10028
00012c  c903              LDM      r1,{r0,r1}            ;10028
00012e  e9c60100          STRD     r0,r1,[r6,#0]         ;10028
000132  f04f0000          MOV      r0,#0                 ;10029
000136  e793              B        |L97.96|
;;;10031  
                          ENDP

                  |L97.312|
                          DCD      _setup+0xc000
                  |L97.316|
                          DCD      |symbol_number.505|
                  |L97.320|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_parameter_setting||, CODE, READONLY, ALIGN=2

                  read_parameter_setting PROC
;;;10098  
;;;10099      static int read_parameter_setting(            /* ARGUMENTS                        */
000000  e92d43fe          PUSH     {r1-r9,lr}
;;;10100      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10101      int * counter,                                /* pointer to a counter for position on the line  */
;;;10102      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;10103      double * parameters)                          /* array of system parameters                     */
;;;10104      {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4690              MOV      r8,r2
00000a  461e              MOV      r6,r3
;;;10105          static char name[] SET_TO "read_parameter_setting";
;;;10106          int index;
;;;10107          double value;
;;;10108          int status;
;;;10109  
;;;10110          CHK((line[*counter] ISNT '#'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  2823              CMP      r0,#0x23
000012  d027              BEQ      |L98.100|
000014  f04f0100          MOV      r1,#0
000018  487e              LDR      r0,|L98.532|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  4975              LDR      r1,|L98.536|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4872              LDR      r0,|L98.532|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a71              LDR      r2,|L98.540|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L98.96|
;;;10111          *counter SET_TO (*counter + 1);
;;;10112          CHP(read_integer_value(line, counter, &index, parameters));
;;;10113          CHK(((index < 1) OR (index >= RS274NGC_MAX_PARAMETERS)),
;;;10114              NCE_PARAMETER_NUMBER_OUT_OF_RANGE);
;;;10115          CHK((line[*counter] ISNT '='), NCE_EQUAL_SIGN_MISSING_IN_PARAMETER_SETTING);
;;;10116          *counter SET_TO (*counter + 1);
;;;10117          CHP(read_real_value(line, counter, &value, parameters));
;;;10118          _setup.parameter_numbers[_setup.parameter_occurrence] SET_TO index;
;;;10119          _setup.parameter_values[_setup.parameter_occurrence] SET_TO value;
;;;10120          _setup.parameter_occurrence++;
;;;10121          return RS274NGC_OK;
;;;10122      }
000060  e8bd83fe          POP      {r1-r9,pc}
                  |L98.100|
000064  6820              LDR      r0,[r4,#0]            ;10111
000066  f1000001          ADD      r0,r0,#1              ;10111
00006a  6020              STR      r0,[r4,#0]            ;10111
00006c  4633              MOV      r3,r6                 ;10112
00006e  aa02              ADD      r2,sp,#8              ;10112
000070  4621              MOV      r1,r4                 ;10112
000072  4628              MOV      r0,r5                 ;10112
000074  f7fffffe          BL       read_integer_value
000078  0007              MOVS     r7,r0                 ;10112
00007a  d025              BEQ      |L98.200|
00007c  4865              LDR      r0,|L98.532|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]        ;10112
000082  2831              CMP      r0,#0x31              ;10112
000084  da1e              BGE      |L98.196|
000086  4963              LDR      r1,|L98.532|
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;10112
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;10112
000090  1c49              ADDS     r1,r1,#1              ;10112
000092  4a60              LDR      r2,|L98.532|
000094  f8c2114c          STR      r1,[r2,#0x14c]        ;10112
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;10112
00009c  4a5f              LDR      r2,|L98.540|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;10112
0000a2  4608              MOV      r0,r1                 ;10112
0000a4  495c              LDR      r1,|L98.536|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;10112
0000ae  4859              LDR      r0,|L98.532|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10112
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;10112
0000b8  4a58              LDR      r2,|L98.540|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;10112
0000be  7001              STRB     r1,[r0,#0]            ;10112
0000c0  4638              MOV      r0,r7                 ;10112
0000c2  e7cd              B        |L98.96|
                  |L98.196|
0000c4  4638              MOV      r0,r7                 ;10112
0000c6  e7cb              B        |L98.96|
                  |L98.200|
0000c8  9802              LDR      r0,[sp,#8]            ;10113
0000ca  2801              CMP      r0,#1                 ;10113
0000cc  db04              BLT      |L98.216|
0000ce  f2415118          MOV      r1,#0x1518            ;10113
0000d2  9802              LDR      r0,[sp,#8]            ;10113
0000d4  4288              CMP      r0,r1                 ;10113
0000d6  db25              BLT      |L98.292|
                  |L98.216|
0000d8  f04f0100          MOV      r1,#0                 ;10113
0000dc  484d              LDR      r0,|L98.532|
0000de  f8c0114c          STR      r1,[r0,#0x14c]        ;10113
0000e2  4601              MOV      r1,r0                 ;10113
0000e4  f8d1314c          LDR      r3,[r1,#0x14c]        ;10113
0000e8  f8d1114c          LDR      r1,[r1,#0x14c]        ;10113
0000ec  f1010101          ADD      r1,r1,#1              ;10113
0000f0  4602              MOV      r2,r0                 ;10113
0000f2  f8c2114c          STR      r1,[r2,#0x14c]        ;10113
0000f6  eb030183          ADD      r1,r3,r3,LSL #2       ;10113
0000fa  4a48              LDR      r2,|L98.540|
0000fc  eb021101          ADD      r1,r2,r1,LSL #4       ;10113
000100  4608              MOV      r0,r1                 ;10113
000102  4945              LDR      r1,|L98.536|
000104  f7fffffe          BL       strcpy
000108  f04f0100          MOV      r1,#0                 ;10113
00010c  4841              LDR      r0,|L98.532|
00010e  f8d0014c          LDR      r0,[r0,#0x14c]        ;10113
000112  eb000080          ADD      r0,r0,r0,LSL #2       ;10113
000116  4a41              LDR      r2,|L98.540|
000118  eb021000          ADD      r0,r2,r0,LSL #4       ;10113
00011c  7001              STRB     r1,[r0,#0]            ;10113
00011e  f04f008e          MOV      r0,#0x8e              ;10113
000122  e79d              B        |L98.96|
                  |L98.292|
000124  6820              LDR      r0,[r4,#0]            ;10115
000126  5c28              LDRB     r0,[r5,r0]            ;10115
000128  283d              CMP      r0,#0x3d              ;10115
00012a  d025              BEQ      |L98.376|
00012c  f04f0100          MOV      r1,#0                 ;10115
000130  4838              LDR      r0,|L98.532|
000132  f8c0114c          STR      r1,[r0,#0x14c]        ;10115
000136  4601              MOV      r1,r0                 ;10115
000138  f8d1314c          LDR      r3,[r1,#0x14c]        ;10115
00013c  f8d1114c          LDR      r1,[r1,#0x14c]        ;10115
000140  f1010101          ADD      r1,r1,#1              ;10115
000144  4602              MOV      r2,r0                 ;10115
000146  f8c2114c          STR      r1,[r2,#0x14c]        ;10115
00014a  eb030183          ADD      r1,r3,r3,LSL #2       ;10115
00014e  4a33              LDR      r2,|L98.540|
000150  eb021101          ADD      r1,r2,r1,LSL #4       ;10115
000154  4608              MOV      r0,r1                 ;10115
000156  4930              LDR      r1,|L98.536|
000158  f7fffffe          BL       strcpy
00015c  f04f0100          MOV      r1,#0                 ;10115
000160  482c              LDR      r0,|L98.532|
000162  f8d0014c          LDR      r0,[r0,#0x14c]        ;10115
000166  eb000080          ADD      r0,r0,r0,LSL #2       ;10115
00016a  4a2c              LDR      r2,|L98.540|
00016c  eb021000          ADD      r0,r2,r0,LSL #4       ;10115
000170  7001              STRB     r1,[r0,#0]            ;10115
000172  f04f004d          MOV      r0,#0x4d              ;10115
000176  e773              B        |L98.96|
                  |L98.376|
000178  6820              LDR      r0,[r4,#0]            ;10116
00017a  f1000001          ADD      r0,r0,#1              ;10116
00017e  6020              STR      r0,[r4,#0]            ;10116
000180  4633              MOV      r3,r6                 ;10117
000182  466a              MOV      r2,sp                 ;10117
000184  4621              MOV      r1,r4                 ;10117
000186  4628              MOV      r0,r5                 ;10117
000188  f7fffffe          BL       read_real_value
00018c  0007              MOVS     r7,r0                 ;10117
00018e  d025              BEQ      |L98.476|
000190  4820              LDR      r0,|L98.532|
000192  f8d0014c          LDR      r0,[r0,#0x14c]        ;10117
000196  2831              CMP      r0,#0x31              ;10117
000198  da1e              BGE      |L98.472|
00019a  491e              LDR      r1,|L98.532|
00019c  f8d1314c          LDR      r3,[r1,#0x14c]        ;10117
0001a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;10117
0001a4  1c49              ADDS     r1,r1,#1              ;10117
0001a6  4a1b              LDR      r2,|L98.532|
0001a8  f8c2114c          STR      r1,[r2,#0x14c]        ;10117
0001ac  eb030183          ADD      r1,r3,r3,LSL #2       ;10117
0001b0  4a1a              LDR      r2,|L98.540|
0001b2  eb021101          ADD      r1,r2,r1,LSL #4       ;10117
0001b6  4608              MOV      r0,r1                 ;10117
0001b8  4917              LDR      r1,|L98.536|
0001ba  f7fffffe          BL       strcpy
0001be  f04f0100          MOV      r1,#0                 ;10117
0001c2  4814              LDR      r0,|L98.532|
0001c4  f8d0014c          LDR      r0,[r0,#0x14c]        ;10117
0001c8  eb000080          ADD      r0,r0,r0,LSL #2       ;10117
0001cc  4a13              LDR      r2,|L98.540|
0001ce  eb021000          ADD      r0,r2,r0,LSL #4       ;10117
0001d2  7001              STRB     r1,[r0,#0]            ;10117
0001d4  4638              MOV      r0,r7                 ;10117
0001d6  e743              B        |L98.96|
                  |L98.472|
0001d8  4638              MOV      r0,r7                 ;10117
0001da  e741              B        |L98.96|
                  |L98.476|
0001dc  4810              LDR      r0,|L98.544|
0001de  9902              LDR      r1,[sp,#8]            ;10118
0001e0  f8d00f08          LDR      r0,[r0,#0xf08]        ;10118
0001e4  4a0f              LDR      r2,|L98.548|
0001e6  f8421020          STR      r1,[r2,r0,LSL #2]     ;10118
0001ea  4a0d              LDR      r2,|L98.544|
0001ec  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10119
0001f0  f8d22f08          LDR      r2,[r2,#0xf08]        ;10119
0001f4  4b0b              LDR      r3,|L98.548|
0001f6  33cc              ADDS     r3,r3,#0xcc           ;10119
0001f8  eb0302c2          ADD      r2,r3,r2,LSL #3       ;10119
0001fc  c203              STM      r2!,{r0,r1}           ;10119
0001fe  4808              LDR      r0,|L98.544|
000200  f8d00f08          LDR      r0,[r0,#0xf08]        ;10120
000204  f1000001          ADD      r0,r0,#1              ;10120
000208  4905              LDR      r1,|L98.544|
00020a  f8c10f08          STR      r0,[r1,#0xf08]        ;10120
00020e  f04f0000          MOV      r0,#0                 ;10121
000212  e725              B        |L98.96|
;;;10123  
                          ENDP

                  |L98.532|
                          DCD      _setup+0xc000
                  |L98.536|
                          DCD      |symbol_number.506|
                  |L98.540|
                          DCD      _setup+0xb1ac
                  |L98.544|
                          DCD      _setup+0xa000
                  |L98.548|
                          DCD      _setup+0xaf0c

                          AREA ||i.read_q||, CODE, READONLY, ALIGN=2

                  read_q PROC
;;;10154  
;;;10155      static int read_q(                            /* ARGUMENTS                                      */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;10156      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10157      int * counter,                                /* pointer to a counter for position on the line  */
;;;10158      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;10159      double * parameters)                          /* array of system parameters                     */
;;;10160      {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;10161          static char name[] SET_TO "read_q";
;;;10162          double value;
;;;10163          int status;
;;;10164  
;;;10165          CHK((line[*counter] ISNT 'q'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  2871              CMP      r0,#0x71
000014  d027              BEQ      |L99.102|
000016  f04f0100          MOV      r1,#0
00001a  4860              LDR      r0,|L99.412|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4957              LDR      r1,|L99.416|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4853              LDR      r0,|L99.412|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a53              LDR      r2,|L99.420|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L99.98|
;;;10166          *counter SET_TO (*counter + 1);
;;;10167          CHK((block->q_number > -1.0), NCE_MULTIPLE_Q_WORDS_ON_ONE_LINE);
;;;10168          CHP(read_real_value(line, counter, &value, parameters));
;;;10169          CHK((value <= 0.0), NCE_NEGATIVE_OR_ZERO_Q_VALUE_USED);
;;;10170          block->q_number SET_TO value;
;;;10171          return RS274NGC_OK;
;;;10172      }
000062  e8bd87fc          POP      {r2-r10,pc}
                  |L99.102|
000066  6820              LDR      r0,[r4,#0]            ;10166
000068  f1000001          ADD      r0,r0,#1              ;10166
00006c  6020              STR      r0,[r4,#0]            ;10166
00006e  f8d511b8          LDR      r1,[r5,#0x1b8]        ;10167
000072  460e              MOV      r6,r1                 ;10167
000074  f8d501bc          LDR      r0,[r5,#0x1bc]        ;10167
000078  4607              MOV      r7,r0                 ;10167
00007a  f04f0200          MOV      r2,#0                 ;10167
00007e  4b4a              LDR      r3,|L99.424|
000080  4630              MOV      r0,r6                 ;10167
000082  4639              MOV      r1,r7                 ;10167
000084  f7fffffe          BL       __aeabi_cdrcmple
000088  d225              BCS      |L99.214|
00008a  f04f0100          MOV      r1,#0                 ;10167
00008e  4843              LDR      r0,|L99.412|
000090  f8c0114c          STR      r1,[r0,#0x14c]        ;10167
000094  4601              MOV      r1,r0                 ;10167
000096  f8d1314c          LDR      r3,[r1,#0x14c]        ;10167
00009a  f8d1114c          LDR      r1,[r1,#0x14c]        ;10167
00009e  f1010101          ADD      r1,r1,#1              ;10167
0000a2  4602              MOV      r2,r0                 ;10167
0000a4  f8c2114c          STR      r1,[r2,#0x14c]        ;10167
0000a8  eb030183          ADD      r1,r3,r3,LSL #2       ;10167
0000ac  4a3d              LDR      r2,|L99.420|
0000ae  eb021101          ADD      r1,r2,r1,LSL #4       ;10167
0000b2  4608              MOV      r0,r1                 ;10167
0000b4  493a              LDR      r1,|L99.416|
0000b6  f7fffffe          BL       strcpy
0000ba  f04f0100          MOV      r1,#0                 ;10167
0000be  4837              LDR      r0,|L99.412|
0000c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10167
0000c4  eb000080          ADD      r0,r0,r0,LSL #2       ;10167
0000c8  4a36              LDR      r2,|L99.420|
0000ca  eb021000          ADD      r0,r2,r0,LSL #4       ;10167
0000ce  7001              STRB     r1,[r0,#0]            ;10167
0000d0  f04f0071          MOV      r0,#0x71              ;10167
0000d4  e7c5              B        |L99.98|
                  |L99.214|
0000d6  464b              MOV      r3,r9                 ;10168
0000d8  466a              MOV      r2,sp                 ;10168
0000da  4621              MOV      r1,r4                 ;10168
0000dc  4640              MOV      r0,r8                 ;10168
0000de  f7fffffe          BL       read_real_value
0000e2  ea5f0a00          MOVS     r10,r0                ;10168
0000e6  d025              BEQ      |L99.308|
0000e8  482c              LDR      r0,|L99.412|
0000ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;10168
0000ee  2831              CMP      r0,#0x31              ;10168
0000f0  da1e              BGE      |L99.304|
0000f2  492a              LDR      r1,|L99.412|
0000f4  f8d1314c          LDR      r3,[r1,#0x14c]        ;10168
0000f8  f8d1114c          LDR      r1,[r1,#0x14c]        ;10168
0000fc  1c49              ADDS     r1,r1,#1              ;10168
0000fe  4a27              LDR      r2,|L99.412|
000100  f8c2114c          STR      r1,[r2,#0x14c]        ;10168
000104  eb030183          ADD      r1,r3,r3,LSL #2       ;10168
000108  4a26              LDR      r2,|L99.420|
00010a  eb021101          ADD      r1,r2,r1,LSL #4       ;10168
00010e  4608              MOV      r0,r1                 ;10168
000110  4923              LDR      r1,|L99.416|
000112  f7fffffe          BL       strcpy
000116  f04f0100          MOV      r1,#0                 ;10168
00011a  4820              LDR      r0,|L99.412|
00011c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10168
000120  eb000080          ADD      r0,r0,r0,LSL #2       ;10168
000124  4a1f              LDR      r2,|L99.420|
000126  eb021000          ADD      r0,r2,r0,LSL #4       ;10168
00012a  7001              STRB     r1,[r0,#0]            ;10168
00012c  4650              MOV      r0,r10                ;10168
00012e  e798              B        |L99.98|
                  |L99.304|
000130  4650              MOV      r0,r10                ;10168
000132  e796              B        |L99.98|
                  |L99.308|
000134  2200              MOVS     r2,#0                 ;10169
000136  4613              MOV      r3,r2                 ;10169
000138  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10169
00013c  f7fffffe          BL       __aeabi_cdcmple
000140  d825              BHI      |L99.398|
000142  f04f0100          MOV      r1,#0                 ;10169
000146  4815              LDR      r0,|L99.412|
000148  f8c0114c          STR      r1,[r0,#0x14c]        ;10169
00014c  4601              MOV      r1,r0                 ;10169
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10169
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;10169
000156  f1010101          ADD      r1,r1,#1              ;10169
00015a  4602              MOV      r2,r0                 ;10169
00015c  f8c2114c          STR      r1,[r2,#0x14c]        ;10169
000160  eb030183          ADD      r1,r3,r3,LSL #2       ;10169
000164  4a0f              LDR      r2,|L99.420|
000166  eb021101          ADD      r1,r2,r1,LSL #4       ;10169
00016a  4608              MOV      r0,r1                 ;10169
00016c  490c              LDR      r1,|L99.416|
00016e  f7fffffe          BL       strcpy
000172  f04f0100          MOV      r1,#0                 ;10169
000176  4809              LDR      r0,|L99.412|
000178  f8d0014c          LDR      r0,[r0,#0x14c]        ;10169
00017c  eb000080          ADD      r0,r0,r0,LSL #2       ;10169
000180  4a08              LDR      r2,|L99.420|
000182  eb021000          ADD      r0,r2,r0,LSL #4       ;10169
000186  7001              STRB     r1,[r0,#0]            ;10169
000188  f04f0080          MOV      r0,#0x80              ;10169
00018c  e769              B        |L99.98|
                  |L99.398|
00018e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10170
000192  f50572dc          ADD      r2,r5,#0x1b8          ;10170
000196  c203              STM      r2!,{r0,r1}           ;10170
000198  2000              MOVS     r0,#0                 ;10171
00019a  e762              B        |L99.98|
;;;10173  
                          ENDP

                  |L99.412|
                          DCD      _setup+0xc000
                  |L99.416|
                          DCD      |symbol_number.507|
                  |L99.420|
                          DCD      _setup+0xb1ac
                  |L99.424|
                          DCD      0xbff00000

                          AREA ||i.read_r||, CODE, READONLY, ALIGN=2

                  read_r PROC
;;;10208  
;;;10209      static int read_r(                            /* ARGUMENTS                                     */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;10210      char * line,                                  /* string: line of RS274 code being processed    */
;;;10211      int * counter,                                /* pointer to a counter for position on the line */
;;;10212      block_pointer block,                          /* pointer to a block being filled from the line */
;;;10213      double * parameters)                          /* array of system parameters                    */
;;;10214      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;10215          static char name[] SET_TO "read_r";
;;;10216          double value;
;;;10217          int status;
;;;10218  
;;;10219          CHK((line[*counter] ISNT 'r'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2872              CMP      r0,#0x72
000012  d027              BEQ      |L100.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L100.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L100.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L100.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L100.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L100.96|
;;;10220          *counter SET_TO (*counter + 1);
;;;10221          CHK((block->r_flag ISNT OFF), NCE_MULTIPLE_R_WORDS_ON_ONE_LINE);
;;;10222          CHP(read_real_value(line, counter, &value, parameters));
;;;10223          block->r_flag SET_TO ON;
;;;10224          block->r_number SET_TO value;
;;;10225          return RS274NGC_OK;
;;;10226      }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L100.100|
000064  6820              LDR      r0,[r4,#0]            ;10220
000066  f1000001          ADD      r0,r0,#1              ;10220
00006a  6020              STR      r0,[r4,#0]            ;10220
00006c  f8d501c0          LDR      r0,[r5,#0x1c0]        ;10221
000070  b328              CBZ      r0,|L100.190|
000072  f04f0100          MOV      r1,#0                 ;10221
000076  482f              LDR      r0,|L100.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;10221
00007c  4601              MOV      r1,r0                 ;10221
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10221
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;10221
000086  f1010101          ADD      r1,r1,#1              ;10221
00008a  4602              MOV      r2,r0                 ;10221
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;10221
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;10221
000094  4a29              LDR      r2,|L100.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;10221
00009a  4608              MOV      r0,r1                 ;10221
00009c  4926              LDR      r1,|L100.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;10221
0000a6  4823              LDR      r0,|L100.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;10221
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;10221
0000b0  4a22              LDR      r2,|L100.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;10221
0000b6  7001              STRB     r1,[r0,#0]            ;10221
0000b8  f04f0072          MOV      r0,#0x72              ;10221
0000bc  e7d0              B        |L100.96|
                  |L100.190|
0000be  463b              MOV      r3,r7                 ;10222
0000c0  466a              MOV      r2,sp                 ;10222
0000c2  4621              MOV      r1,r4                 ;10222
0000c4  4630              MOV      r0,r6                 ;10222
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;10222
0000ce  d025              BEQ      |L100.284|
0000d0  4818              LDR      r0,|L100.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;10222
0000d6  2831              CMP      r0,#0x31              ;10222
0000d8  da1e              BGE      |L100.280|
0000da  4916              LDR      r1,|L100.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;10222
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;10222
0000e4  1c49              ADDS     r1,r1,#1              ;10222
0000e6  4a13              LDR      r2,|L100.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;10222
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;10222
0000f0  4a12              LDR      r2,|L100.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;10222
0000f6  4608              MOV      r0,r1                 ;10222
0000f8  490f              LDR      r1,|L100.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;10222
000102  480c              LDR      r0,|L100.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;10222
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;10222
00010c  4a0b              LDR      r2,|L100.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;10222
000112  7001              STRB     r1,[r0,#0]            ;10222
000114  4640              MOV      r0,r8                 ;10222
000116  e7a3              B        |L100.96|
                  |L100.280|
000118  4640              MOV      r0,r8                 ;10222
00011a  e7a1              B        |L100.96|
                  |L100.284|
00011c  f04f0001          MOV      r0,#1                 ;10223
000120  f8c501c0          STR      r0,[r5,#0x1c0]        ;10223
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10224
000128  f50572e4          ADD      r2,r5,#0x1c8          ;10224
00012c  c203              STM      r2!,{r0,r1}           ;10224
00012e  f04f0000          MOV      r0,#0                 ;10225
000132  e795              B        |L100.96|
;;;10227  
                          ENDP

                  |L100.308|
                          DCD      _setup+0xc000
                  |L100.312|
                          DCD      |symbol_number.508|
                  |L100.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_real_expression||, CODE, READONLY, ALIGN=2

                  read_real_expression PROC
;;;10474  
;;;10475      static int read_real_expression(              /* ARGUMENTS                               */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;10476      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10477      int * counter,                                /* pointer to a counter for position on the line  */
;;;10478      double * value,                               /* pointer to double to be computed               */
;;;10479      double * parameters)                          /* array of system parameters                     */
;;;10480      {
000004  b090              SUB      sp,sp,#0x40
000006  4606              MOV      r6,r0
000008  460d              MOV      r5,r1
00000a  4617              MOV      r7,r2
00000c  4698              MOV      r8,r3
;;;10481          static char name[] SET_TO "read_real_expression";
;;;10482          double values[MAX_STACK];
;;;10483          int operators[MAX_STACK];
;;;10484          int stack_index;
;;;10485          int status;
;;;10486  
;;;10487          CHK((line[*counter] ISNT '['), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000e  6828              LDR      r0,[r5,#0]
000010  5c30              LDRB     r0,[r6,r0]
000012  285b              CMP      r0,#0x5b
000014  d028              BEQ      |L101.104|
000016  f04f0100          MOV      r1,#0
00001a  48bb              LDR      r0,|L101.776|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  49b2              LDR      r1,|L101.780|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  48ae              LDR      r0,|L101.776|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4aae              LDR      r2,|L101.784|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L101.98|
;;;10488          *counter SET_TO (*counter + 1);
;;;10489          CHP(read_real_value(line, counter, values, parameters));
;;;10490          CHP(read_operation(line, counter, operators));
;;;10491          stack_index SET_TO 1;
;;;10492          for(; operators[0] ISNT RIGHT_BRACKET ;)
;;;10493          {
;;;10494              CHP(read_real_value(line, counter, values+stack_index, parameters));
;;;10495              CHP(read_operation(line, counter, operators+stack_index));
;;;10496              if (precedence(operators[stack_index]) >
;;;10497                  precedence(operators[stack_index - 1]))
;;;10498                  stack_index++;
;;;10499              else                                  /* precedence of latest operator is <= previous precedence */
;;;10500              {
;;;10501                  for (;precedence(operators[stack_index]) <=
;;;10502                      precedence(operators[stack_index - 1]); )
;;;10503                  {
;;;10504                      CHP(execute_binary((values + stack_index - 1),
;;;10505                          operators[stack_index -1],
;;;10506                          (values + stack_index)));
;;;10507                      operators[stack_index - 1] SET_TO operators[stack_index];
;;;10508                      if ((stack_index > 1) AND
;;;10509                          (precedence(operators[stack_index - 1]) <=
;;;10510                          precedence(operators[stack_index - 2])))
;;;10511                          stack_index--;
;;;10512                      else
;;;10513                          break;
;;;10514                  }
;;;10515              }
;;;10516          }
;;;10517          *value SET_TO values[0];
;;;10518          return RS274NGC_OK;
;;;10519      }
000062  b010              ADD      sp,sp,#0x40
000064  e8bd87f0          POP      {r4-r10,pc}
                  |L101.104|
000068  6828              LDR      r0,[r5,#0]            ;10488
00006a  f1000001          ADD      r0,r0,#1              ;10488
00006e  6028              STR      r0,[r5,#0]            ;10488
000070  4643              MOV      r3,r8                 ;10489
000072  aa06              ADD      r2,sp,#0x18           ;10489
000074  4629              MOV      r1,r5                 ;10489
000076  4630              MOV      r0,r6                 ;10489
000078  f7fffffe          BL       read_real_value
00007c  ea5f0900          MOVS     r9,r0                 ;10489
000080  d025              BEQ      |L101.206|
000082  48a1              LDR      r0,|L101.776|
000084  f8d0014c          LDR      r0,[r0,#0x14c]        ;10489
000088  2831              CMP      r0,#0x31              ;10489
00008a  da1e              BGE      |L101.202|
00008c  499e              LDR      r1,|L101.776|
00008e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10489
000092  f8d1114c          LDR      r1,[r1,#0x14c]        ;10489
000096  1c49              ADDS     r1,r1,#1              ;10489
000098  4a9b              LDR      r2,|L101.776|
00009a  f8c2114c          STR      r1,[r2,#0x14c]        ;10489
00009e  eb030183          ADD      r1,r3,r3,LSL #2       ;10489
0000a2  4a9b              LDR      r2,|L101.784|
0000a4  eb021101          ADD      r1,r2,r1,LSL #4       ;10489
0000a8  4608              MOV      r0,r1                 ;10489
0000aa  4998              LDR      r1,|L101.780|
0000ac  f7fffffe          BL       strcpy
0000b0  f04f0100          MOV      r1,#0                 ;10489
0000b4  4894              LDR      r0,|L101.776|
0000b6  f8d0014c          LDR      r0,[r0,#0x14c]        ;10489
0000ba  eb000080          ADD      r0,r0,r0,LSL #2       ;10489
0000be  4a94              LDR      r2,|L101.784|
0000c0  eb021000          ADD      r0,r2,r0,LSL #4       ;10489
0000c4  7001              STRB     r1,[r0,#0]            ;10489
0000c6  4648              MOV      r0,r9                 ;10489
0000c8  e7cb              B        |L101.98|
                  |L101.202|
0000ca  4648              MOV      r0,r9                 ;10489
0000cc  e7c9              B        |L101.98|
                  |L101.206|
0000ce  aa01              ADD      r2,sp,#4              ;10490
0000d0  4629              MOV      r1,r5                 ;10490
0000d2  4630              MOV      r0,r6                 ;10490
0000d4  f7fffffe          BL       read_operation
0000d8  ea5f0900          MOVS     r9,r0                 ;10490
0000dc  d025              BEQ      |L101.298|
0000de  488a              LDR      r0,|L101.776|
0000e0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10490
0000e4  2831              CMP      r0,#0x31              ;10490
0000e6  da1e              BGE      |L101.294|
0000e8  4987              LDR      r1,|L101.776|
0000ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;10490
0000ee  f8d1114c          LDR      r1,[r1,#0x14c]        ;10490
0000f2  1c49              ADDS     r1,r1,#1              ;10490
0000f4  4a84              LDR      r2,|L101.776|
0000f6  f8c2114c          STR      r1,[r2,#0x14c]        ;10490
0000fa  eb030183          ADD      r1,r3,r3,LSL #2       ;10490
0000fe  4a84              LDR      r2,|L101.784|
000100  eb021101          ADD      r1,r2,r1,LSL #4       ;10490
000104  4608              MOV      r0,r1                 ;10490
000106  4981              LDR      r1,|L101.780|
000108  f7fffffe          BL       strcpy
00010c  f04f0100          MOV      r1,#0                 ;10490
000110  487d              LDR      r0,|L101.776|
000112  f8d0014c          LDR      r0,[r0,#0x14c]        ;10490
000116  eb000080          ADD      r0,r0,r0,LSL #2       ;10490
00011a  4a7d              LDR      r2,|L101.784|
00011c  eb021000          ADD      r0,r2,r0,LSL #4       ;10490
000120  7001              STRB     r1,[r0,#0]            ;10490
000122  4648              MOV      r0,r9                 ;10490
000124  e79d              B        |L101.98|
                  |L101.294|
000126  4648              MOV      r0,r9                 ;10490
000128  e79b              B        |L101.98|
                  |L101.298|
00012a  f04f0401          MOV      r4,#1                 ;10491
00012e  e0e1              B        |L101.756|
                  |L101.304|
000130  a806              ADD      r0,sp,#0x18           ;10494
000132  eb0000c4          ADD      r0,r0,r4,LSL #3       ;10494
000136  4602              MOV      r2,r0                 ;10494
000138  4643              MOV      r3,r8                 ;10494
00013a  4629              MOV      r1,r5                 ;10494
00013c  4630              MOV      r0,r6                 ;10494
00013e  f7fffffe          BL       read_real_value
000142  ea5f0900          MOVS     r9,r0                 ;10494
000146  d025              BEQ      |L101.404|
000148  486f              LDR      r0,|L101.776|
00014a  f8d0014c          LDR      r0,[r0,#0x14c]        ;10494
00014e  2831              CMP      r0,#0x31              ;10494
000150  da1e              BGE      |L101.400|
000152  496d              LDR      r1,|L101.776|
000154  f8d1314c          LDR      r3,[r1,#0x14c]        ;10494
000158  f8d1114c          LDR      r1,[r1,#0x14c]        ;10494
00015c  1c49              ADDS     r1,r1,#1              ;10494
00015e  4a6a              LDR      r2,|L101.776|
000160  f8c2114c          STR      r1,[r2,#0x14c]        ;10494
000164  eb030183          ADD      r1,r3,r3,LSL #2       ;10494
000168  4a69              LDR      r2,|L101.784|
00016a  eb021101          ADD      r1,r2,r1,LSL #4       ;10494
00016e  4608              MOV      r0,r1                 ;10494
000170  4966              LDR      r1,|L101.780|
000172  f7fffffe          BL       strcpy
000176  f04f0100          MOV      r1,#0                 ;10494
00017a  4863              LDR      r0,|L101.776|
00017c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10494
000180  eb000080          ADD      r0,r0,r0,LSL #2       ;10494
000184  4a62              LDR      r2,|L101.784|
000186  eb021000          ADD      r0,r2,r0,LSL #4       ;10494
00018a  7001              STRB     r1,[r0,#0]            ;10494
00018c  4648              MOV      r0,r9                 ;10494
00018e  e768              B        |L101.98|
                  |L101.400|
000190  4648              MOV      r0,r9                 ;10494
000192  e766              B        |L101.98|
                  |L101.404|
000194  a801              ADD      r0,sp,#4              ;10495
000196  eb000084          ADD      r0,r0,r4,LSL #2       ;10495
00019a  4602              MOV      r2,r0                 ;10495
00019c  4629              MOV      r1,r5                 ;10495
00019e  4630              MOV      r0,r6                 ;10495
0001a0  f7fffffe          BL       read_operation
0001a4  ea5f0900          MOVS     r9,r0                 ;10495
0001a8  d025              BEQ      |L101.502|
0001aa  4857              LDR      r0,|L101.776|
0001ac  f8d0014c          LDR      r0,[r0,#0x14c]        ;10495
0001b0  2831              CMP      r0,#0x31              ;10495
0001b2  da1e              BGE      |L101.498|
0001b4  4954              LDR      r1,|L101.776|
0001b6  f8d1314c          LDR      r3,[r1,#0x14c]        ;10495
0001ba  f8d1114c          LDR      r1,[r1,#0x14c]        ;10495
0001be  1c49              ADDS     r1,r1,#1              ;10495
0001c0  4a51              LDR      r2,|L101.776|
0001c2  f8c2114c          STR      r1,[r2,#0x14c]        ;10495
0001c6  eb030183          ADD      r1,r3,r3,LSL #2       ;10495
0001ca  4a51              LDR      r2,|L101.784|
0001cc  eb021101          ADD      r1,r2,r1,LSL #4       ;10495
0001d0  4608              MOV      r0,r1                 ;10495
0001d2  494e              LDR      r1,|L101.780|
0001d4  f7fffffe          BL       strcpy
0001d8  f04f0100          MOV      r1,#0                 ;10495
0001dc  484a              LDR      r0,|L101.776|
0001de  f8d0014c          LDR      r0,[r0,#0x14c]        ;10495
0001e2  eb000080          ADD      r0,r0,r0,LSL #2       ;10495
0001e6  4a4a              LDR      r2,|L101.784|
0001e8  eb021000          ADD      r0,r2,r0,LSL #4       ;10495
0001ec  7001              STRB     r1,[r0,#0]            ;10495
0001ee  4648              MOV      r0,r9                 ;10495
0001f0  e737              B        |L101.98|
                  |L101.498|
0001f2  4648              MOV      r0,r9                 ;10495
0001f4  e735              B        |L101.98|
                  |L101.502|
0001f6  a901              ADD      r1,sp,#4              ;10496
0001f8  f8511024          LDR      r1,[r1,r4,LSL #2]     ;10496
0001fc  4608              MOV      r0,r1                 ;10496
0001fe  f7fffffe          BL       precedence
000202  4682              MOV      r10,r0                ;10496
000204  1e61              SUBS     r1,r4,#1              ;10496
000206  aa01              ADD      r2,sp,#4              ;10496
000208  f8521021          LDR      r1,[r2,r1,LSL #2]     ;10496
00020c  4608              MOV      r0,r1                 ;10496
00020e  f7fffffe          BL       precedence
000212  4582              CMP      r10,r0                ;10496
000214  dd03              BLE      |L101.542|
000216  f1040001          ADD      r0,r4,#1              ;10498
00021a  4604              MOV      r4,r0                 ;10498
00021c  e06a              B        |L101.756|
                  |L101.542|
00021e  e058              B        |L101.722|
                  |L101.544|
000220  ab06              ADD      r3,sp,#0x18           ;10504
000222  eb0303c4          ADD      r3,r3,r4,LSL #3       ;10504
000226  461a              MOV      r2,r3                 ;10504
000228  1e63              SUBS     r3,r4,#1              ;10504
00022a  f10d0c04          ADD      r12,sp,#4             ;10504
00022e  f85c3023          LDR      r3,[r12,r3,LSL #2]    ;10504
000232  4619              MOV      r1,r3                 ;10504
000234  ab06              ADD      r3,sp,#0x18           ;10504
000236  eb0303c4          ADD      r3,r3,r4,LSL #3       ;10504
00023a  3b08              SUBS     r3,r3,#8              ;10504
00023c  4618              MOV      r0,r3                 ;10504
00023e  f7fffffe          BL       execute_binary
000242  ea5f0900          MOVS     r9,r0                 ;10504
000246  d025              BEQ      |L101.660|
000248  482f              LDR      r0,|L101.776|
00024a  f8d0014c          LDR      r0,[r0,#0x14c]        ;10504
00024e  2831              CMP      r0,#0x31              ;10504
000250  da1e              BGE      |L101.656|
000252  492d              LDR      r1,|L101.776|
000254  f8d1314c          LDR      r3,[r1,#0x14c]        ;10504
000258  f8d1114c          LDR      r1,[r1,#0x14c]        ;10504
00025c  1c49              ADDS     r1,r1,#1              ;10504
00025e  4a2a              LDR      r2,|L101.776|
000260  f8c2114c          STR      r1,[r2,#0x14c]        ;10504
000264  eb030183          ADD      r1,r3,r3,LSL #2       ;10504
000268  4a29              LDR      r2,|L101.784|
00026a  eb021101          ADD      r1,r2,r1,LSL #4       ;10504
00026e  4608              MOV      r0,r1                 ;10504
000270  4926              LDR      r1,|L101.780|
000272  f7fffffe          BL       strcpy
000276  f04f0100          MOV      r1,#0                 ;10504
00027a  4823              LDR      r0,|L101.776|
00027c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10504
000280  eb000080          ADD      r0,r0,r0,LSL #2       ;10504
000284  4a22              LDR      r2,|L101.784|
000286  eb021000          ADD      r0,r2,r0,LSL #4       ;10504
00028a  7001              STRB     r1,[r0,#0]            ;10504
00028c  4648              MOV      r0,r9                 ;10504
00028e  e6e8              B        |L101.98|
                  |L101.656|
000290  4648              MOV      r0,r9                 ;10504
000292  e6e6              B        |L101.98|
                  |L101.660|
000294  a801              ADD      r0,sp,#4              ;10507
000296  f8501024          LDR      r1,[r0,r4,LSL #2]     ;10507
00029a  f1a40001          SUB      r0,r4,#1              ;10507
00029e  aa01              ADD      r2,sp,#4              ;10507
0002a0  f8421020          STR      r1,[r2,r0,LSL #2]     ;10507
0002a4  2c01              CMP      r4,#1                 ;10508
0002a6  dd13              BLE      |L101.720|
0002a8  1e61              SUBS     r1,r4,#1              ;10509
0002aa  f8521021          LDR      r1,[r2,r1,LSL #2]     ;10509
0002ae  4608              MOV      r0,r1                 ;10509
0002b0  f7fffffe          BL       precedence
0002b4  4682              MOV      r10,r0                ;10509
0002b6  1ea1              SUBS     r1,r4,#2              ;10509
0002b8  aa01              ADD      r2,sp,#4              ;10509
0002ba  f8521021          LDR      r1,[r2,r1,LSL #2]     ;10509
0002be  4608              MOV      r0,r1                 ;10509
0002c0  f7fffffe          BL       precedence
0002c4  4582              CMP      r10,r0                ;10509
0002c6  dc03              BGT      |L101.720|
0002c8  f1a40001          SUB      r0,r4,#1              ;10511
0002cc  4604              MOV      r4,r0                 ;10511
0002ce  e000              B        |L101.722|
                  |L101.720|
0002d0  e00f              B        |L101.754|
                  |L101.722|
0002d2  a901              ADD      r1,sp,#4              ;10501
0002d4  f8511024          LDR      r1,[r1,r4,LSL #2]     ;10501
0002d8  4608              MOV      r0,r1                 ;10501
0002da  f7fffffe          BL       precedence
0002de  4682              MOV      r10,r0                ;10501
0002e0  1e61              SUBS     r1,r4,#1              ;10501
0002e2  aa01              ADD      r2,sp,#4              ;10501
0002e4  f8521021          LDR      r1,[r2,r1,LSL #2]     ;10501
0002e8  4608              MOV      r0,r1                 ;10501
0002ea  f7fffffe          BL       precedence
0002ee  4582              CMP      r10,r0                ;10501
0002f0  dd96              BLE      |L101.544|
                  |L101.754|
0002f2  bf00              NOP                            ;10513
                  |L101.756|
0002f4  9801              LDR      r0,[sp,#4]            ;10492
0002f6  280a              CMP      r0,#0xa               ;10492
0002f8  f47faf1a          BNE      |L101.304|
0002fc  e9dd0106          LDRD     r0,r1,[sp,#0x18]      ;10517
000300  e9c70100          STRD     r0,r1,[r7,#0]         ;10517
000304  2000              MOVS     r0,#0                 ;10518
000306  e6ac              B        |L101.98|
;;;10520  
                          ENDP

                  |L101.776|
                          DCD      _setup+0xc000
                  |L101.780|
                          DCD      |symbol_number.509|
                  |L101.784|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_real_number||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_real
                  read_real_number PROC
;;;10557  
;;;10558      static int read_real_number(                  /* ARGUMENTS                               */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;10559      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10560      int * counter,                                /* pointer to a counter for position on the line  */
;;;10561      double * double_ptr)                          /* pointer to double to be read                   */
;;;10562      {
000004  4606              MOV      r6,r0
000006  460f              MOV      r7,r1
000008  4690              MOV      r8,r2
;;;10563          static char name[] SET_TO "read_real_number";
;;;10564          char c;                                   /* for character being processed    */
;;;10565          int flag_digit;                           /* set to ON if digit found         */
;;;10566          int flag_point;                           /* set to ON if decimal point found */
;;;10567          int n;                                    /* for indexing line                */
;;;10568  
;;;10569          n SET_TO *counter;
00000a  6838              LDR      r0,[r7,#0]
00000c  4605              MOV      r5,r0
;;;10570          flag_point SET_TO OFF;
00000e  f04f0000          MOV      r0,#0
000012  4682              MOV      r10,r0
;;;10571          flag_digit SET_TO OFF;
000014  4681              MOV      r9,r0
;;;10572  
;;;10573     /* check first character */
;;;10574          c SET_TO line[n];
000016  5d70              LDRB     r0,[r6,r5]
000018  4604              MOV      r4,r0
;;;10575          if (c IS '+')
00001a  2c2b              CMP      r4,#0x2b
00001c  d107              BNE      |L102.46|
;;;10576          {
;;;10577              *counter SET_TO (*counter + 1);       /* skip plus sign */
00001e  6838              LDR      r0,[r7,#0]
000020  f1000001          ADD      r0,r0,#1
000024  6038              STR      r0,[r7,#0]
;;;10578              n++;
000026  f1050001          ADD      r0,r5,#1
00002a  4605              MOV      r5,r0
00002c  e033              B        |L102.150|
                  |L102.46|
;;;10579          }
;;;10580          else if (c IS '-')
00002e  2c2d              CMP      r4,#0x2d
000030  d103              BNE      |L102.58|
;;;10581          {
;;;10582              n++;
000032  f1050001          ADD      r0,r5,#1
000036  4605              MOV      r5,r0
000038  e02d              B        |L102.150|
                  |L102.58|
;;;10583          }
;;;10584          else if ((c ISNT '.') AND ((c < 48) OR (c > 57)))
00003a  2c2e              CMP      r4,#0x2e
00003c  d02b              BEQ      |L102.150|
00003e  2c30              CMP      r4,#0x30
000040  db01              BLT      |L102.70|
000042  2c39              CMP      r4,#0x39
000044  dd27              BLE      |L102.150|
                  |L102.70|
;;;10585              ERM(NCE_BAD_NUMBER_FORMAT);
000046  f04f0100          MOV      r1,#0
00004a  4850              LDR      r0,|L102.396|
00004c  f8c0114c          STR      r1,[r0,#0x14c]
000050  4601              MOV      r1,r0
000052  f8d1314c          LDR      r3,[r1,#0x14c]
000056  f8d1114c          LDR      r1,[r1,#0x14c]
00005a  f1010101          ADD      r1,r1,#1
00005e  4602              MOV      r2,r0
000060  f8c2114c          STR      r1,[r2,#0x14c]
000064  eb030183          ADD      r1,r3,r3,LSL #2
000068  f6a06254          SUB      r2,r0,#0xe54
00006c  eb021101          ADD      r1,r2,r1,LSL #4
000070  4608              MOV      r0,r1
000072  4947              LDR      r1,|L102.400|
000074  f7fffffe          BL       strcpy
000078  f04f0100          MOV      r1,#0
00007c  4843              LDR      r0,|L102.396|
00007e  f8d0014c          LDR      r0,[r0,#0x14c]
000082  eb000080          ADD      r0,r0,r0,LSL #2
000086  4a43              LDR      r2,|L102.404|
000088  eb021000          ADD      r0,r2,r0,LSL #4
00008c  7001              STRB     r1,[r0,#0]
00008e  f04f000e          MOV      r0,#0xe
                  |L102.146|
;;;10586  
;;;10587     /* check out rest of characters (must be digit or decimal point) */
;;;10588          for (; (c SET_TO line[n]) ISNT (char) NULL; n++)
;;;10589          {
;;;10590              if (( 47 < c) AND ( c < 58))
;;;10591              {
;;;10592                  flag_digit SET_TO ON;
;;;10593              }
;;;10594              else if (c IS '.')
;;;10595              {
;;;10596                  if (flag_point IS OFF)
;;;10597                  {
;;;10598                      flag_point SET_TO ON;
;;;10599                  }
;;;10600                  else
;;;10601                      break;                        /* two decimal points, error appears on reading next item */
;;;10602              }
;;;10603              else
;;;10604                  break;
;;;10605          }
;;;10606  
;;;10607          CHK((flag_digit IS OFF), NCE_NO_DIGITS_FOUND_WHERE_REAL_NUMBER_SHOULD_BE);
;;;10608          line[n] SET_TO (char) NULL;               /* temporary string termination for sscanf */
;;;10609          if (sscanf(line + *counter, "%lf", double_ptr) IS 0)
;;;10610          {
;;;10611              line[n] SET_TO c;
;;;10612              ERM(NCE_SSCANF_FAILED);
;;;10613          }
;;;10614          else
;;;10615          {
;;;10616              line[n] SET_TO c;
;;;10617              *counter SET_TO n;
;;;10618          }
;;;10619          return RS274NGC_OK;
;;;10620      }
000092  e8bd87f0          POP      {r4-r10,pc}
                  |L102.150|
000096  e015              B        |L102.196|
                  |L102.152|
000098  2c2f              CMP      r4,#0x2f              ;10590
00009a  dd05              BLE      |L102.168|
00009c  2c3a              CMP      r4,#0x3a              ;10590
00009e  da03              BGE      |L102.168|
0000a0  f04f0001          MOV      r0,#1                 ;10592
0000a4  4681              MOV      r9,r0                 ;10592
0000a6  e00a              B        |L102.190|
                  |L102.168|
0000a8  2c2e              CMP      r4,#0x2e              ;10594
0000aa  d107              BNE      |L102.188|
0000ac  f1ba0f00          CMP      r10,#0                ;10596
0000b0  d103              BNE      |L102.186|
0000b2  f04f0001          MOV      r0,#1                 ;10598
0000b6  4682              MOV      r10,r0                ;10598
0000b8  e001              B        |L102.190|
                  |L102.186|
0000ba  e006              B        |L102.202|
                  |L102.188|
0000bc  e005              B        |L102.202|
                  |L102.190|
0000be  f1050001          ADD      r0,r5,#1              ;10588
0000c2  4605              MOV      r5,r0                 ;10588
                  |L102.196|
0000c4  5d70              LDRB     r0,[r6,r5]            ;10588
0000c6  0004              MOVS     r4,r0                 ;10588
0000c8  d1e6              BNE      |L102.152|
                  |L102.202|
0000ca  bf00              NOP                            ;10601
0000cc  f1b90f00          CMP      r9,#0                 ;10607
0000d0  d125              BNE      |L102.286|
0000d2  f04f0100          MOV      r1,#0                 ;10607
0000d6  482d              LDR      r0,|L102.396|
0000d8  f8c0114c          STR      r1,[r0,#0x14c]        ;10607
0000dc  4601              MOV      r1,r0                 ;10607
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;10607
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;10607
0000e6  f1010101          ADD      r1,r1,#1              ;10607
0000ea  4602              MOV      r2,r0                 ;10607
0000ec  f8c2114c          STR      r1,[r2,#0x14c]        ;10607
0000f0  eb030183          ADD      r1,r3,r3,LSL #2       ;10607
0000f4  4a27              LDR      r2,|L102.404|
0000f6  eb021101          ADD      r1,r2,r1,LSL #4       ;10607
0000fa  4608              MOV      r0,r1                 ;10607
0000fc  4924              LDR      r1,|L102.400|
0000fe  f7fffffe          BL       strcpy
000102  f04f0100          MOV      r1,#0                 ;10607
000106  4821              LDR      r0,|L102.396|
000108  f8d0014c          LDR      r0,[r0,#0x14c]        ;10607
00010c  eb000080          ADD      r0,r0,r0,LSL #2       ;10607
000110  4a20              LDR      r2,|L102.404|
000112  eb021000          ADD      r0,r2,r0,LSL #4       ;10607
000116  7001              STRB     r1,[r0,#0]            ;10607
000118  f04f0086          MOV      r0,#0x86              ;10607
00011c  e7b9              B        |L102.146|
                  |L102.286|
00011e  f04f0000          MOV      r0,#0                 ;10608
000122  5570              STRB     r0,[r6,r5]            ;10608
000124  6839              LDR      r1,[r7,#0]            ;10609
000126  4431              ADD      r1,r1,r6              ;10609
000128  4608              MOV      r0,r1                 ;10609
00012a  4642              MOV      r2,r8                 ;10609
00012c  a11a              ADR      r1,|L102.408|
00012e  f7fffffe          BL       __0sscanf
000132  bb30              CBNZ     r0,|L102.386|
000134  5574              STRB     r4,[r6,r5]            ;10611
000136  f04f0100          MOV      r1,#0                 ;10612
00013a  4814              LDR      r0,|L102.396|
00013c  f8c0114c          STR      r1,[r0,#0x14c]        ;10612
000140  4601              MOV      r1,r0                 ;10612
000142  f8d1314c          LDR      r3,[r1,#0x14c]        ;10612
000146  f8d1114c          LDR      r1,[r1,#0x14c]        ;10612
00014a  f1010101          ADD      r1,r1,#1              ;10612
00014e  4602              MOV      r2,r0                 ;10612
000150  f8c2114c          STR      r1,[r2,#0x14c]        ;10612
000154  eb030183          ADD      r1,r3,r3,LSL #2       ;10612
000158  4a0e              LDR      r2,|L102.404|
00015a  eb021101          ADD      r1,r2,r1,LSL #4       ;10612
00015e  4608              MOV      r0,r1                 ;10612
000160  490b              LDR      r1,|L102.400|
000162  f7fffffe          BL       strcpy
000166  f04f0100          MOV      r1,#0                 ;10612
00016a  4808              LDR      r0,|L102.396|
00016c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10612
000170  eb000080          ADD      r0,r0,r0,LSL #2       ;10612
000174  4a07              LDR      r2,|L102.404|
000176  eb021000          ADD      r0,r2,r0,LSL #4       ;10612
00017a  7001              STRB     r1,[r0,#0]            ;10612
00017c  f04f00a1          MOV      r0,#0xa1              ;10612
000180  e787              B        |L102.146|
                  |L102.386|
000182  5574              STRB     r4,[r6,r5]            ;10616
000184  603d              STR      r5,[r7,#0]            ;10617
000186  2000              MOVS     r0,#0                 ;10619
000188  e783              B        |L102.146|
;;;10621  
                          ENDP

00018a  0000              DCW      0x0000
                  |L102.396|
                          DCD      _setup+0xc000
                  |L102.400|
                          DCD      |symbol_number.510|
                  |L102.404|
                          DCD      _setup+0xb1ac
                  |L102.408|
000198  256c6600          DCB      "%lf",0

                          AREA ||i.read_real_value||, CODE, READONLY, ALIGN=2

                  read_real_value PROC
;;;10668  
;;;10669      static int read_real_value(                   /* ARGUMENTS                               */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;10670      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10671      int * counter,                                /* pointer to a counter for position on the line  */
;;;10672      double * double_ptr,                          /* pointer to double to be read                   */
;;;10673      double * parameters)                          /* array of system parameters                     */
;;;10674      {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;10675          static char name[] SET_TO "read_real_value";
;;;10676          char c;
;;;10677          int status;
;;;10678  
;;;10679          c SET_TO line[*counter];
00000c  6830              LDR      r0,[r6,#0]
00000e  5c28              LDRB     r0,[r5,r0]
000010  4604              MOV      r4,r0
;;;10680          CHK((c IS 0), NCE_NO_CHARACTERS_FOUND_IN_READING_REAL_VALUE);
000012  bb3c              CBNZ     r4,|L103.100|
000014  f04f0100          MOV      r1,#0
000018  4876              LDR      r0,|L103.500|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  496d              LDR      r1,|L103.504|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  486a              LDR      r0,|L103.500|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a69              LDR      r2,|L103.508|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0085          MOV      r0,#0x85
                  |L103.96|
;;;10681          if (c IS '[')
;;;10682              CHP(read_real_expression (line, counter, double_ptr, parameters));
;;;10683          else if (c IS '#')
;;;10684              CHP(read_parameter(line, counter, double_ptr, parameters));
;;;10685          else if ((c >= 'a') AND (c <= 'z'))
;;;10686              CHP(read_unary(line, counter, double_ptr, parameters));
;;;10687          else
;;;10688              CHP(read_real_number(line, counter, double_ptr));
;;;10689  
;;;10690          return RS274NGC_OK;
;;;10691      }
000060  e8bd87f0          POP      {r4-r10,pc}
                  |L103.100|
000064  2c5b              CMP      r4,#0x5b              ;10681
000066  d12e              BNE      |L103.198|
000068  4643              MOV      r3,r8                 ;10682
00006a  463a              MOV      r2,r7                 ;10682
00006c  4631              MOV      r1,r6                 ;10682
00006e  4628              MOV      r0,r5                 ;10682
000070  f7fffffe          BL       read_real_expression
000074  ea5f0900          MOVS     r9,r0                 ;10682
                  |L103.120|
000078  d07e              BEQ      |L103.376|
00007a  485e              LDR      r0,|L103.500|
00007c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10682
000080  2831              CMP      r0,#0x31              ;10682
000082  da1e              BGE      |L103.194|
000084  495b              LDR      r1,|L103.500|
000086  f8d1314c          LDR      r3,[r1,#0x14c]        ;10682
00008a  f8d1114c          LDR      r1,[r1,#0x14c]        ;10682
00008e  1c49              ADDS     r1,r1,#1              ;10682
000090  4a58              LDR      r2,|L103.500|
000092  f8c2114c          STR      r1,[r2,#0x14c]        ;10682
000096  eb030183          ADD      r1,r3,r3,LSL #2       ;10682
00009a  4a58              LDR      r2,|L103.508|
00009c  eb021101          ADD      r1,r2,r1,LSL #4       ;10682
0000a0  4608              MOV      r0,r1                 ;10682
0000a2  4955              LDR      r1,|L103.504|
0000a4  f7fffffe          BL       strcpy
0000a8  f04f0100          MOV      r1,#0                 ;10682
0000ac  4851              LDR      r0,|L103.500|
0000ae  f8d0014c          LDR      r0,[r0,#0x14c]        ;10682
0000b2  eb000080          ADD      r0,r0,r0,LSL #2       ;10682
0000b6  4a51              LDR      r2,|L103.508|
0000b8  eb021000          ADD      r0,r2,r0,LSL #4       ;10682
0000bc  7001              STRB     r1,[r0,#0]            ;10682
0000be  4648              MOV      r0,r9                 ;10682
0000c0  e7ce              B        |L103.96|
                  |L103.194|
0000c2  4648              MOV      r0,r9                 ;10682
0000c4  e7cc              B        |L103.96|
                  |L103.198|
0000c6  2c23              CMP      r4,#0x23              ;10683
0000c8  d12e              BNE      |L103.296|
0000ca  4643              MOV      r3,r8                 ;10684
0000cc  463a              MOV      r2,r7                 ;10684
0000ce  4631              MOV      r1,r6                 ;10684
0000d0  4628              MOV      r0,r5                 ;10684
0000d2  f7fffffe          BL       read_parameter
0000d6  ea5f0900          MOVS     r9,r0                 ;10684
0000da  d0cd              BEQ      |L103.120|
0000dc  4845              LDR      r0,|L103.500|
0000de  f8d0014c          LDR      r0,[r0,#0x14c]        ;10684
0000e2  2831              CMP      r0,#0x31              ;10684
0000e4  da1e              BGE      |L103.292|
0000e6  4943              LDR      r1,|L103.500|
0000e8  f8d1314c          LDR      r3,[r1,#0x14c]        ;10684
0000ec  f8d1114c          LDR      r1,[r1,#0x14c]        ;10684
0000f0  1c49              ADDS     r1,r1,#1              ;10684
0000f2  4a40              LDR      r2,|L103.500|
0000f4  f8c2114c          STR      r1,[r2,#0x14c]        ;10684
0000f8  eb030183          ADD      r1,r3,r3,LSL #2       ;10684
0000fc  4a3f              LDR      r2,|L103.508|
0000fe  eb021101          ADD      r1,r2,r1,LSL #4       ;10684
000102  4608              MOV      r0,r1                 ;10684
000104  493c              LDR      r1,|L103.504|
000106  f7fffffe          BL       strcpy
00010a  f04f0100          MOV      r1,#0                 ;10684
00010e  4839              LDR      r0,|L103.500|
000110  f8d0014c          LDR      r0,[r0,#0x14c]        ;10684
000114  eb000080          ADD      r0,r0,r0,LSL #2       ;10684
000118  4a38              LDR      r2,|L103.508|
00011a  eb021000          ADD      r0,r2,r0,LSL #4       ;10684
00011e  7001              STRB     r1,[r0,#0]            ;10684
000120  4648              MOV      r0,r9                 ;10684
000122  e79d              B        |L103.96|
                  |L103.292|
000124  4648              MOV      r0,r9                 ;10684
000126  e79b              B        |L103.96|
                  |L103.296|
000128  2c61              CMP      r4,#0x61              ;10685
00012a  db32              BLT      |L103.402|
00012c  2c7a              CMP      r4,#0x7a              ;10685
00012e  dc30              BGT      |L103.402|
000130  4643              MOV      r3,r8                 ;10686
000132  463a              MOV      r2,r7                 ;10686
000134  4631              MOV      r1,r6                 ;10686
000136  4628              MOV      r0,r5                 ;10686
000138  f7fffffe          BL       read_unary
00013c  ea5f0900          MOVS     r9,r0                 ;10686
000140  d055              BEQ      |L103.494|
000142  482c              LDR      r0,|L103.500|
000144  f8d0014c          LDR      r0,[r0,#0x14c]        ;10686
000148  2831              CMP      r0,#0x31              ;10686
00014a  da20              BGE      |L103.398|
00014c  4929              LDR      r1,|L103.500|
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10686
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;10686
000156  1c49              ADDS     r1,r1,#1              ;10686
000158  4a26              LDR      r2,|L103.500|
00015a  f8c2114c          STR      r1,[r2,#0x14c]        ;10686
00015e  eb030183          ADD      r1,r3,r3,LSL #2       ;10686
000162  4a26              LDR      r2,|L103.508|
000164  eb021101          ADD      r1,r2,r1,LSL #4       ;10686
000168  4608              MOV      r0,r1                 ;10686
00016a  4923              LDR      r1,|L103.504|
00016c  f7fffffe          BL       strcpy
000170  f04f0100          MOV      r1,#0                 ;10686
000174  481f              LDR      r0,|L103.500|
000176  e000              B        |L103.378|
                  |L103.376|
000178  e039              B        |L103.494|
                  |L103.378|
00017a  f8d0014c          LDR      r0,[r0,#0x14c]        ;10686
00017e  eb000080          ADD      r0,r0,r0,LSL #2       ;10686
000182  4a1e              LDR      r2,|L103.508|
000184  eb021000          ADD      r0,r2,r0,LSL #4       ;10686
000188  7001              STRB     r1,[r0,#0]            ;10686
00018a  4648              MOV      r0,r9                 ;10686
00018c  e768              B        |L103.96|
                  |L103.398|
00018e  4648              MOV      r0,r9                 ;10686
000190  e766              B        |L103.96|
                  |L103.402|
000192  463a              MOV      r2,r7                 ;10688
000194  4631              MOV      r1,r6                 ;10688
000196  4628              MOV      r0,r5                 ;10688
000198  f7fffffe          BL       read_real_number
00019c  ea5f0900          MOVS     r9,r0                 ;10688
0001a0  d025              BEQ      |L103.494|
0001a2  4814              LDR      r0,|L103.500|
0001a4  f8d0014c          LDR      r0,[r0,#0x14c]        ;10688
0001a8  2831              CMP      r0,#0x31              ;10688
0001aa  da1e              BGE      |L103.490|
0001ac  4911              LDR      r1,|L103.500|
0001ae  f8d1314c          LDR      r3,[r1,#0x14c]        ;10688
0001b2  f8d1114c          LDR      r1,[r1,#0x14c]        ;10688
0001b6  1c49              ADDS     r1,r1,#1              ;10688
0001b8  4a0e              LDR      r2,|L103.500|
0001ba  f8c2114c          STR      r1,[r2,#0x14c]        ;10688
0001be  eb030183          ADD      r1,r3,r3,LSL #2       ;10688
0001c2  4a0e              LDR      r2,|L103.508|
0001c4  eb021101          ADD      r1,r2,r1,LSL #4       ;10688
0001c8  4608              MOV      r0,r1                 ;10688
0001ca  490b              LDR      r1,|L103.504|
0001cc  f7fffffe          BL       strcpy
0001d0  f04f0100          MOV      r1,#0                 ;10688
0001d4  4807              LDR      r0,|L103.500|
0001d6  f8d0014c          LDR      r0,[r0,#0x14c]        ;10688
0001da  eb000080          ADD      r0,r0,r0,LSL #2       ;10688
0001de  4a07              LDR      r2,|L103.508|
0001e0  eb021000          ADD      r0,r2,r0,LSL #4       ;10688
0001e4  7001              STRB     r1,[r0,#0]            ;10688
0001e6  4648              MOV      r0,r9                 ;10688
0001e8  e73a              B        |L103.96|
                  |L103.490|
0001ea  4648              MOV      r0,r9                 ;10688
0001ec  e738              B        |L103.96|
                  |L103.494|
0001ee  2000              MOVS     r0,#0                 ;10690
0001f0  e736              B        |L103.96|
;;;10692  
                          ENDP

0001f2  0000              DCW      0x0000
                  |L103.500|
                          DCD      _setup+0xc000
                  |L103.504|
                          DCD      |symbol_number.511|
                  |L103.508|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_s||, CODE, READONLY, ALIGN=2

                  read_s PROC
;;;10842  
;;;10843      static int read_s(                            /* ARGUMENTS                                     */
000000  e92d47fc          PUSH     {r2-r10,lr}
;;;10844      char * line,                                  /* string: line of RS274NGC code being processed */
;;;10845      int * counter,                                /* pointer to a counter for position on the line */
;;;10846      block_pointer block,                          /* pointer to a block being filled from the line */
;;;10847      double * parameters)                          /* array of system parameters                    */
;;;10848      {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  4699              MOV      r9,r3
;;;10849          static char name[] SET_TO "read_s";
;;;10850          double value;
;;;10851          int status;
;;;10852  
;;;10853          CHK((line[*counter] ISNT 's'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  f8180000          LDRB     r0,[r8,r0]
000012  2873              CMP      r0,#0x73
000014  d027              BEQ      |L104.102|
000016  f04f0100          MOV      r1,#0
00001a  4860              LDR      r0,|L104.412|
00001c  f8c0114c          STR      r1,[r0,#0x14c]
000020  4601              MOV      r1,r0
000022  f8d1314c          LDR      r3,[r1,#0x14c]
000026  f8d1114c          LDR      r1,[r1,#0x14c]
00002a  f1010101          ADD      r1,r1,#1
00002e  4602              MOV      r2,r0
000030  f8c2114c          STR      r1,[r2,#0x14c]
000034  eb030183          ADD      r1,r3,r3,LSL #2
000038  f6a06254          SUB      r2,r0,#0xe54
00003c  eb021101          ADD      r1,r2,r1,LSL #4
000040  4608              MOV      r0,r1
000042  4957              LDR      r1,|L104.416|
000044  f7fffffe          BL       strcpy
000048  f04f0100          MOV      r1,#0
00004c  4853              LDR      r0,|L104.412|
00004e  f8d0014c          LDR      r0,[r0,#0x14c]
000052  eb000080          ADD      r0,r0,r0,LSL #2
000056  4a53              LDR      r2,|L104.420|
000058  eb021000          ADD      r0,r2,r0,LSL #4
00005c  7001              STRB     r1,[r0,#0]
00005e  f04f0020          MOV      r0,#0x20
                  |L104.98|
;;;10854          *counter SET_TO (*counter + 1);
;;;10855          CHK((block->s_number > -1.0), NCE_MULTIPLE_S_WORDS_ON_ONE_LINE);
;;;10856          CHP(read_real_value(line, counter, &value, parameters));
;;;10857          CHK((value < 0.0), NCE_NEGATIVE_SPINDLE_SPEED_USED);
;;;10858          block->s_number SET_TO value;
;;;10859          return RS274NGC_OK;
;;;10860      }
000062  e8bd87fc          POP      {r2-r10,pc}
                  |L104.102|
000066  6820              LDR      r0,[r4,#0]            ;10854
000068  f1000001          ADD      r0,r0,#1              ;10854
00006c  6020              STR      r0,[r4,#0]            ;10854
00006e  f8d511d0          LDR      r1,[r5,#0x1d0]        ;10855
000072  460e              MOV      r6,r1                 ;10855
000074  f8d501d4          LDR      r0,[r5,#0x1d4]        ;10855
000078  4607              MOV      r7,r0                 ;10855
00007a  f04f0200          MOV      r2,#0                 ;10855
00007e  4b4a              LDR      r3,|L104.424|
000080  4630              MOV      r0,r6                 ;10855
000082  4639              MOV      r1,r7                 ;10855
000084  f7fffffe          BL       __aeabi_cdrcmple
000088  d225              BCS      |L104.214|
00008a  f04f0100          MOV      r1,#0                 ;10855
00008e  4843              LDR      r0,|L104.412|
000090  f8c0114c          STR      r1,[r0,#0x14c]        ;10855
000094  4601              MOV      r1,r0                 ;10855
000096  f8d1314c          LDR      r3,[r1,#0x14c]        ;10855
00009a  f8d1114c          LDR      r1,[r1,#0x14c]        ;10855
00009e  f1010101          ADD      r1,r1,#1              ;10855
0000a2  4602              MOV      r2,r0                 ;10855
0000a4  f8c2114c          STR      r1,[r2,#0x14c]        ;10855
0000a8  eb030183          ADD      r1,r3,r3,LSL #2       ;10855
0000ac  4a3d              LDR      r2,|L104.420|
0000ae  eb021101          ADD      r1,r2,r1,LSL #4       ;10855
0000b2  4608              MOV      r0,r1                 ;10855
0000b4  493a              LDR      r1,|L104.416|
0000b6  f7fffffe          BL       strcpy
0000ba  f04f0100          MOV      r1,#0                 ;10855
0000be  4837              LDR      r0,|L104.412|
0000c0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10855
0000c4  eb000080          ADD      r0,r0,r0,LSL #2       ;10855
0000c8  4a36              LDR      r2,|L104.420|
0000ca  eb021000          ADD      r0,r2,r0,LSL #4       ;10855
0000ce  7001              STRB     r1,[r0,#0]            ;10855
0000d0  f04f0073          MOV      r0,#0x73              ;10855
0000d4  e7c5              B        |L104.98|
                  |L104.214|
0000d6  464b              MOV      r3,r9                 ;10856
0000d8  466a              MOV      r2,sp                 ;10856
0000da  4621              MOV      r1,r4                 ;10856
0000dc  4640              MOV      r0,r8                 ;10856
0000de  f7fffffe          BL       read_real_value
0000e2  ea5f0a00          MOVS     r10,r0                ;10856
0000e6  d025              BEQ      |L104.308|
0000e8  482c              LDR      r0,|L104.412|
0000ea  f8d0014c          LDR      r0,[r0,#0x14c]        ;10856
0000ee  2831              CMP      r0,#0x31              ;10856
0000f0  da1e              BGE      |L104.304|
0000f2  492a              LDR      r1,|L104.412|
0000f4  f8d1314c          LDR      r3,[r1,#0x14c]        ;10856
0000f8  f8d1114c          LDR      r1,[r1,#0x14c]        ;10856
0000fc  1c49              ADDS     r1,r1,#1              ;10856
0000fe  4a27              LDR      r2,|L104.412|
000100  f8c2114c          STR      r1,[r2,#0x14c]        ;10856
000104  eb030183          ADD      r1,r3,r3,LSL #2       ;10856
000108  4a26              LDR      r2,|L104.420|
00010a  eb021101          ADD      r1,r2,r1,LSL #4       ;10856
00010e  4608              MOV      r0,r1                 ;10856
000110  4923              LDR      r1,|L104.416|
000112  f7fffffe          BL       strcpy
000116  f04f0100          MOV      r1,#0                 ;10856
00011a  4820              LDR      r0,|L104.412|
00011c  f8d0014c          LDR      r0,[r0,#0x14c]        ;10856
000120  eb000080          ADD      r0,r0,r0,LSL #2       ;10856
000124  4a1f              LDR      r2,|L104.420|
000126  eb021000          ADD      r0,r2,r0,LSL #4       ;10856
00012a  7001              STRB     r1,[r0,#0]            ;10856
00012c  4650              MOV      r0,r10                ;10856
00012e  e798              B        |L104.98|
                  |L104.304|
000130  4650              MOV      r0,r10                ;10856
000132  e796              B        |L104.98|
                  |L104.308|
000134  2200              MOVS     r2,#0                 ;10857
000136  4613              MOV      r3,r2                 ;10857
000138  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10857
00013c  f7fffffe          BL       __aeabi_cdcmple
000140  d225              BCS      |L104.398|
000142  f04f0100          MOV      r1,#0                 ;10857
000146  4815              LDR      r0,|L104.412|
000148  f8c0114c          STR      r1,[r0,#0x14c]        ;10857
00014c  4601              MOV      r1,r0                 ;10857
00014e  f8d1314c          LDR      r3,[r1,#0x14c]        ;10857
000152  f8d1114c          LDR      r1,[r1,#0x14c]        ;10857
000156  f1010101          ADD      r1,r1,#1              ;10857
00015a  4602              MOV      r2,r0                 ;10857
00015c  f8c2114c          STR      r1,[r2,#0x14c]        ;10857
000160  eb030183          ADD      r1,r3,r3,LSL #2       ;10857
000164  4a0f              LDR      r2,|L104.420|
000166  eb021101          ADD      r1,r2,r1,LSL #4       ;10857
00016a  4608              MOV      r0,r1                 ;10857
00016c  490c              LDR      r1,|L104.416|
00016e  f7fffffe          BL       strcpy
000172  f04f0100          MOV      r1,#0                 ;10857
000176  4809              LDR      r0,|L104.412|
000178  f8d0014c          LDR      r0,[r0,#0x14c]        ;10857
00017c  eb000080          ADD      r0,r0,r0,LSL #2       ;10857
000180  4a08              LDR      r2,|L104.420|
000182  eb021000          ADD      r0,r2,r0,LSL #4       ;10857
000186  7001              STRB     r1,[r0,#0]            ;10857
000188  f04f0082          MOV      r0,#0x82              ;10857
00018c  e769              B        |L104.98|
                  |L104.398|
00018e  e9dd0100          LDRD     r0,r1,[sp,#0]         ;10858
000192  f50572e8          ADD      r2,r5,#0x1d0          ;10858
000196  c203              STM      r2!,{r0,r1}           ;10858
000198  2000              MOVS     r0,#0                 ;10859
00019a  e762              B        |L104.98|
;;;10861  
                          ENDP

                  |L104.412|
                          DCD      _setup+0xc000
                  |L104.416|
                          DCD      |symbol_number.512|
                  |L104.420|
                          DCD      _setup+0xb1ac
                  |L104.424|
                          DCD      0xbff00000

                          AREA ||i.read_t||, CODE, READONLY, ALIGN=2

                  read_t PROC
;;;10892  
;;;10893      static int read_t(                            /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;10894      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;10895      int * counter,                                /* pointer to a counter for position on the line  */
;;;10896      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;10897      double * parameters)                          /* array of system parameters                     */
;;;10898      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;10899          static char name[] SET_TO "read_t";
;;;10900          int value;
;;;10901          int status;
;;;10902  
;;;10903          CHK((line[*counter] ISNT 't'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2874              CMP      r0,#0x74
000012  d027              BEQ      |L105.100|
000014  f04f0100          MOV      r1,#0
000018  4858              LDR      r0,|L105.380|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  494f              LDR      r1,|L105.384|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  484c              LDR      r0,|L105.380|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a4b              LDR      r2,|L105.388|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L105.96|
;;;10904          *counter SET_TO (*counter + 1);
;;;10905          CHK((block->t_number > -1), NCE_MULTIPLE_T_WORDS_ON_ONE_LINE);
;;;10906          CHP(read_integer_value(line, counter, &value, parameters));
;;;10907          CHK((value < 0), NCE_NEGATIVE_TOOL_ID_USED);
;;;10908          block->t_number SET_TO value;
;;;10909          return RS274NGC_OK;
;;;10910      }
000060  e8bd83f8          POP      {r3-r9,pc}
                  |L105.100|
000064  6820              LDR      r0,[r4,#0]            ;10904
000066  f1000001          ADD      r0,r0,#1              ;10904
00006a  6020              STR      r0,[r4,#0]            ;10904
00006c  f8d501d8          LDR      r0,[r5,#0x1d8]        ;10905
000070  2800              CMP      r0,#0                 ;10905
000072  db25              BLT      |L105.192|
000074  f04f0100          MOV      r1,#0                 ;10905
000078  4840              LDR      r0,|L105.380|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;10905
00007e  4601              MOV      r1,r0                 ;10905
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;10905
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;10905
000088  f1010101          ADD      r1,r1,#1              ;10905
00008c  4602              MOV      r2,r0                 ;10905
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;10905
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;10905
000096  4a3b              LDR      r2,|L105.388|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;10905
00009c  4608              MOV      r0,r1                 ;10905
00009e  4938              LDR      r1,|L105.384|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;10905
0000a8  4834              LDR      r0,|L105.380|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;10905
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;10905
0000b2  4a34              LDR      r2,|L105.388|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;10905
0000b8  7001              STRB     r1,[r0,#0]            ;10905
0000ba  f04f0074          MOV      r0,#0x74              ;10905
0000be  e7cf              B        |L105.96|
                  |L105.192|
0000c0  463b              MOV      r3,r7                 ;10906
0000c2  466a              MOV      r2,sp                 ;10906
0000c4  4621              MOV      r1,r4                 ;10906
0000c6  4630              MOV      r0,r6                 ;10906
0000c8  f7fffffe          BL       read_integer_value
0000cc  ea5f0800          MOVS     r8,r0                 ;10906
0000d0  d025              BEQ      |L105.286|
0000d2  482a              LDR      r0,|L105.380|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;10906
0000d8  2831              CMP      r0,#0x31              ;10906
0000da  da1e              BGE      |L105.282|
0000dc  4927              LDR      r1,|L105.380|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;10906
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;10906
0000e6  1c49              ADDS     r1,r1,#1              ;10906
0000e8  4a24              LDR      r2,|L105.380|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;10906
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;10906
0000f2  4a24              LDR      r2,|L105.388|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;10906
0000f8  4608              MOV      r0,r1                 ;10906
0000fa  4921              LDR      r1,|L105.384|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;10906
000104  481d              LDR      r0,|L105.380|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;10906
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;10906
00010e  4a1d              LDR      r2,|L105.388|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;10906
000114  7001              STRB     r1,[r0,#0]            ;10906
000116  4640              MOV      r0,r8                 ;10906
000118  e7a2              B        |L105.96|
                  |L105.282|
00011a  4640              MOV      r0,r8                 ;10906
00011c  e7a0              B        |L105.96|
                  |L105.286|
00011e  9800              LDR      r0,[sp,#0]            ;10907
000120  2800              CMP      r0,#0                 ;10907
000122  da25              BGE      |L105.368|
000124  f04f0100          MOV      r1,#0                 ;10907
000128  4814              LDR      r0,|L105.380|
00012a  f8c0114c          STR      r1,[r0,#0x14c]        ;10907
00012e  4601              MOV      r1,r0                 ;10907
000130  f8d1314c          LDR      r3,[r1,#0x14c]        ;10907
000134  f8d1114c          LDR      r1,[r1,#0x14c]        ;10907
000138  f1010101          ADD      r1,r1,#1              ;10907
00013c  4602              MOV      r2,r0                 ;10907
00013e  f8c2114c          STR      r1,[r2,#0x14c]        ;10907
000142  eb030183          ADD      r1,r3,r3,LSL #2       ;10907
000146  4a0f              LDR      r2,|L105.388|
000148  eb021101          ADD      r1,r2,r1,LSL #4       ;10907
00014c  4608              MOV      r0,r1                 ;10907
00014e  490c              LDR      r1,|L105.384|
000150  f7fffffe          BL       strcpy
000154  f04f0100          MOV      r1,#0                 ;10907
000158  4808              LDR      r0,|L105.380|
00015a  f8d0014c          LDR      r0,[r0,#0x14c]        ;10907
00015e  eb000080          ADD      r0,r0,r0,LSL #2       ;10907
000162  4a08              LDR      r2,|L105.388|
000164  eb021000          ADD      r0,r2,r0,LSL #4       ;10907
000168  7001              STRB     r1,[r0,#0]            ;10907
00016a  f04f0083          MOV      r0,#0x83              ;10907
00016e  e777              B        |L105.96|
                  |L105.368|
000170  9800              LDR      r0,[sp,#0]            ;10908
000172  f8c501d8          STR      r0,[r5,#0x1d8]        ;10908
000176  2000              MOVS     r0,#0                 ;10909
000178  e772              B        |L105.96|
;;;10911  
                          ENDP

00017a  0000              DCW      0x0000
                  |L105.380|
                          DCD      _setup+0xc000
                  |L105.384|
                          DCD      |symbol_number.513|
                  |L105.388|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_text||, CODE, READONLY, ALIGN=2

                  read_text PROC
;;;10976  
;;;10977      static int read_text(                         /* ARGUMENTS                                   */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;10978      const char * command,                         /* a string which may have input text, or null */
;;;10979      FILE * inport,                                /* a file pointer for an input file, or null   */
;;;10980      char * raw_line,                              /* array to write raw input line into          */
;;;10981      char * line,                                  /* array for input line to be processed in     */
;;;10982      int * length)                                 /* a pointer to an integer to be set           */
;;;10983      {
000004  4607              MOV      r7,r0
000006  4688              MOV      r8,r1
000008  4615              MOV      r5,r2
00000a  461c              MOV      r4,r3
00000c  f8dd9020          LDR      r9,[sp,#0x20]
;;;10984          static char name[] SET_TO "read_text";
;;;10985          int status;                               /* used in CHP */
;;;10986          int index;
;;;10987  
;;;10988          if (command IS NULL)
000010  2f00              CMP      r7,#0
000012  d17e              BNE      |L106.274|
;;;10989          {
;;;10990              if(fgets(raw_line, RS274NGC_TEXT_SIZE, inport) IS NULL)
000014  4642              MOV      r2,r8
000016  f44f7180          MOV      r1,#0x100
00001a  4628              MOV      r0,r5
00001c  f7fffffe          BL       fgets
000020  2800              CMP      r0,#0
000022  d150              BNE      |L106.198|
;;;10991              {
;;;10992                  if (_setup.percent_flag IS ON)
000024  48ad              LDR      r0,|L106.732|
000026  f8d00168          LDR      r0,[r0,#0x168]
00002a  2801              CMP      r0,#1
00002c  d126              BNE      |L106.124|
;;;10993                      ERM(NCE_FILE_ENDED_WITH_NO_PERCENT_SIGN);
00002e  f04f0100          MOV      r1,#0
000032  48ab              LDR      r0,|L106.736|
000034  f8c0114c          STR      r1,[r0,#0x14c]
000038  4601              MOV      r1,r0
00003a  f8d1314c          LDR      r3,[r1,#0x14c]
00003e  f8d1114c          LDR      r1,[r1,#0x14c]
000042  f1010101          ADD      r1,r1,#1
000046  4602              MOV      r2,r0
000048  f8c2114c          STR      r1,[r2,#0x14c]
00004c  eb030183          ADD      r1,r3,r3,LSL #2
000050  f6a06254          SUB      r2,r0,#0xe54
000054  eb021101          ADD      r1,r2,r1,LSL #4
000058  4608              MOV      r0,r1
00005a  49a2              LDR      r1,|L106.740|
00005c  f7fffffe          BL       strcpy
000060  4639              MOV      r1,r7
000062  489f              LDR      r0,|L106.736|
000064  f8d0014c          LDR      r0,[r0,#0x14c]
000068  eb000080          ADD      r0,r0,r0,LSL #2
00006c  4a9e              LDR      r2,|L106.744|
00006e  eb021000          ADD      r0,r2,r0,LSL #4
000072  7001              STRB     r1,[r0,#0]
000074  f04f0050          MOV      r0,#0x50
                  |L106.120|
;;;10994                  else
;;;10995                      ERM(NCE_FILE_ENDED_WITH_NO_PERCENT_SIGN_OR_PROGRAM_END);
;;;10996              }
;;;10997              if (strlen(raw_line) IS (RS274NGC_TEXT_SIZE - 1))
;;;10998              {                                     // line is too long. need to finish reading the line to recover
;;;10999                  for(;fgetc(inport) ISNT '\n';)    // could also look for EOF
;;;11000                  {
;;;11001                  }
;;;11002                  ERM(NCE_COMMAND_TOO_LONG);
;;;11003              }
;;;11004     // index set on last char
;;;11005              for(index SET_TO (strlen(raw_line) -1);
;;;11006                  (index >= 0) AND (isspace(raw_line[index]));
;;;11007                  index--)
;;;11008              {                                     // remove space at end of raw_line, especially CR & LF
;;;11009                  raw_line[index] SET_TO 0;
;;;11010              }
;;;11011              strcpy(line, raw_line);
;;;11012              CHP(close_and_downcase(line));
;;;11013              if ((line[0] IS '%') AND (line[1] IS 0) AND (_setup.percent_flag IS ON))
;;;11014                  return RS274NGC_ENDFILE;
;;;11015          }
;;;11016          else
;;;11017          {
;;;11018              CHK((strlen(command) >= RS274NGC_TEXT_SIZE), NCE_COMMAND_TOO_LONG);
;;;11019              strcpy(raw_line, command);
;;;11020              strcpy(line, command);
;;;11021              CHP(close_and_downcase(line));
;;;11022          }
;;;11023          _setup.sequence_number++;
;;;11024          _setup.parameter_occurrence SET_TO 0;     /* initialize parameter buffer */
;;;11025          if ((line[0] IS 0) OR ((line[0] IS '/') AND (line[1] IS 0)))
;;;11026              *length SET_TO 0;
;;;11027          else
;;;11028              *length SET_TO strlen(line);
;;;11029  
;;;11030          return ((line[0] IS '/')? RS274NGC_EXECUTE_FINISH : RS274NGC_OK);
;;;11031      }
000078  e8bd87f0          POP      {r4-r10,pc}
                  |L106.124|
00007c  f04f0100          MOV      r1,#0                 ;10995
000080  4897              LDR      r0,|L106.736|
000082  f8c0114c          STR      r1,[r0,#0x14c]        ;10995
000086  4601              MOV      r1,r0                 ;10995
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;10995
00008c  f8d1214c          LDR      r2,[r1,#0x14c]        ;10995
000090  f1020201          ADD      r2,r2,#1              ;10995
000094  f8c1214c          STR      r2,[r1,#0x14c]        ;10995
000098  eb030183          ADD      r1,r3,r3,LSL #2       ;10995
00009c  4a92              LDR      r2,|L106.744|
00009e  eb021101          ADD      r1,r2,r1,LSL #4       ;10995
0000a2  4608              MOV      r0,r1                 ;10995
0000a4  498f              LDR      r1,|L106.740|
0000a6  f7fffffe          BL       strcpy
0000aa  f04f0100          MOV      r1,#0                 ;10995
0000ae  488c              LDR      r0,|L106.736|
0000b0  f8d0014c          LDR      r0,[r0,#0x14c]        ;10995
0000b4  eb000080          ADD      r0,r0,r0,LSL #2       ;10995
0000b8  4a8b              LDR      r2,|L106.744|
0000ba  eb021000          ADD      r0,r2,r0,LSL #4       ;10995
0000be  7001              STRB     r1,[r0,#0]            ;10995
0000c0  f04f0051          MOV      r0,#0x51              ;10995
0000c4  e7d8              B        |L106.120|
                  |L106.198|
0000c6  4628              MOV      r0,r5                 ;10997
0000c8  f7fffffe          BL       strlen
0000cc  28ff              CMP      r0,#0xff              ;10997
0000ce  d12d              BNE      |L106.300|
0000d0  bf00              NOP                            ;10999
                  |L106.210|
0000d2  4640              MOV      r0,r8                 ;10999
0000d4  f7fffffe          BL       fgetc
0000d8  280a              CMP      r0,#0xa               ;10999
0000da  d1fa              BNE      |L106.210|
0000dc  f04f0100          MOV      r1,#0                 ;11002
0000e0  487f              LDR      r0,|L106.736|
0000e2  f8c0114c          STR      r1,[r0,#0x14c]        ;11002
0000e6  4601              MOV      r1,r0                 ;11002
0000e8  f8d1314c          LDR      r3,[r1,#0x14c]        ;11002
0000ec  f8d1114c          LDR      r1,[r1,#0x14c]        ;11002
0000f0  f1010101          ADD      r1,r1,#1              ;11002
0000f4  4602              MOV      r2,r0                 ;11002
0000f6  f8c2114c          STR      r1,[r2,#0x14c]        ;11002
0000fa  eb030183          ADD      r1,r3,r3,LSL #2       ;11002
0000fe  4a7a              LDR      r2,|L106.744|
000100  eb021101          ADD      r1,r2,r1,LSL #4       ;11002
000104  4608              MOV      r0,r1                 ;11002
000106  4977              LDR      r1,|L106.740|
000108  f7fffffe          BL       strcpy
00010c  f04f0100          MOV      r1,#0                 ;11002
000110  e000              B        |L106.276|
                  |L106.274|
000112  e05f              B        |L106.468|
                  |L106.276|
000114  4872              LDR      r0,|L106.736|
000116  f8d0014c          LDR      r0,[r0,#0x14c]        ;11002
00011a  eb000080          ADD      r0,r0,r0,LSL #2       ;11002
00011e  4a72              LDR      r2,|L106.744|
000120  eb021000          ADD      r0,r2,r0,LSL #4       ;11002
000124  7001              STRB     r1,[r0,#0]            ;11002
000126  f04f0042          MOV      r0,#0x42              ;11002
00012a  e7a5              B        |L106.120|
                  |L106.300|
00012c  4628              MOV      r0,r5                 ;11005
00012e  f7fffffe          BL       strlen
000132  f1a00001          SUB      r0,r0,#1              ;11005
000136  4606              MOV      r6,r0                 ;11005
000138  e005              B        |L106.326|
                  |L106.314|
00013a  f04f0000          MOV      r0,#0                 ;11009
00013e  55a8              STRB     r0,[r5,r6]            ;11009
000140  f1a60001          SUB      r0,r6,#1              ;11007
000144  4606              MOV      r6,r0                 ;11007
                  |L106.326|
000146  2e00              CMP      r6,#0                 ;11006
000148  db07              BLT      |L106.346|
00014a  f7fffffe          BL       __rt_ctype_table
00014e  6800              LDR      r0,[r0,#0]            ;11006
000150  5da9              LDRB     r1,[r5,r6]            ;11006
000152  5c40              LDRB     r0,[r0,r1]            ;11006
000154  f0100f01          TST      r0,#1                 ;11006
000158  d1ef              BNE      |L106.314|
                  |L106.346|
00015a  4629              MOV      r1,r5                 ;11011
00015c  4620              MOV      r0,r4                 ;11011
00015e  f7fffffe          BL       strcpy
000162  4620              MOV      r0,r4                 ;11012
000164  f7fffffe          BL       close_and_downcase
000168  ea5f0a00          MOVS     r10,r0                ;11012
00016c  d025              BEQ      |L106.442|
00016e  485c              LDR      r0,|L106.736|
000170  f8d0014c          LDR      r0,[r0,#0x14c]        ;11012
000174  2831              CMP      r0,#0x31              ;11012
000176  da1e              BGE      |L106.438|
000178  4959              LDR      r1,|L106.736|
00017a  f8d1314c          LDR      r3,[r1,#0x14c]        ;11012
00017e  f8d1114c          LDR      r1,[r1,#0x14c]        ;11012
000182  1c49              ADDS     r1,r1,#1              ;11012
000184  4a56              LDR      r2,|L106.736|
000186  f8c2114c          STR      r1,[r2,#0x14c]        ;11012
00018a  eb030183          ADD      r1,r3,r3,LSL #2       ;11012
00018e  4a56              LDR      r2,|L106.744|
000190  eb021101          ADD      r1,r2,r1,LSL #4       ;11012
000194  4608              MOV      r0,r1                 ;11012
000196  4953              LDR      r1,|L106.740|
000198  f7fffffe          BL       strcpy
00019c  f04f0100          MOV      r1,#0                 ;11012
0001a0  484f              LDR      r0,|L106.736|
0001a2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11012
0001a6  eb000080          ADD      r0,r0,r0,LSL #2       ;11012
0001aa  4a4f              LDR      r2,|L106.744|
0001ac  eb021000          ADD      r0,r2,r0,LSL #4       ;11012
0001b0  7001              STRB     r1,[r0,#0]            ;11012
0001b2  4650              MOV      r0,r10                ;11012
0001b4  e760              B        |L106.120|
                  |L106.438|
0001b6  4650              MOV      r0,r10                ;11012
0001b8  e75e              B        |L106.120|
                  |L106.442|
0001ba  7820              LDRB     r0,[r4,#0]            ;11013
0001bc  2825              CMP      r0,#0x25              ;11013
0001be  d167              BNE      |L106.656|
0001c0  7860              LDRB     r0,[r4,#1]            ;11013
0001c2  2800              CMP      r0,#0                 ;11013
0001c4  d164              BNE      |L106.656|
0001c6  4845              LDR      r0,|L106.732|
0001c8  f8d00168          LDR      r0,[r0,#0x168]        ;11013
0001cc  2801              CMP      r0,#1                 ;11013
0001ce  d15f              BNE      |L106.656|
0001d0  2003              MOVS     r0,#3                 ;11014
0001d2  e751              B        |L106.120|
                  |L106.468|
0001d4  4638              MOV      r0,r7                 ;11018
0001d6  f7fffffe          BL       strlen
0001da  28ff              CMP      r0,#0xff              ;11018
0001dc  d924              BLS      |L106.552|
0001de  f04f0100          MOV      r1,#0                 ;11018
0001e2  483f              LDR      r0,|L106.736|
0001e4  f8c0114c          STR      r1,[r0,#0x14c]        ;11018
0001e8  4601              MOV      r1,r0                 ;11018
0001ea  f8d1314c          LDR      r3,[r1,#0x14c]        ;11018
0001ee  f8d1214c          LDR      r2,[r1,#0x14c]        ;11018
0001f2  f1020201          ADD      r2,r2,#1              ;11018
0001f6  f8c1214c          STR      r2,[r1,#0x14c]        ;11018
0001fa  eb030183          ADD      r1,r3,r3,LSL #2       ;11018
0001fe  4a3a              LDR      r2,|L106.744|
000200  eb021101          ADD      r1,r2,r1,LSL #4       ;11018
000204  4608              MOV      r0,r1                 ;11018
000206  4937              LDR      r1,|L106.740|
000208  f7fffffe          BL       strcpy
00020c  f04f0100          MOV      r1,#0                 ;11018
000210  4833              LDR      r0,|L106.736|
000212  f8d0014c          LDR      r0,[r0,#0x14c]        ;11018
000216  eb000080          ADD      r0,r0,r0,LSL #2       ;11018
00021a  4a33              LDR      r2,|L106.744|
00021c  eb021000          ADD      r0,r2,r0,LSL #4       ;11018
000220  7001              STRB     r1,[r0,#0]            ;11018
000222  f04f0042          MOV      r0,#0x42              ;11018
000226  e727              B        |L106.120|
                  |L106.552|
000228  4639              MOV      r1,r7                 ;11019
00022a  4628              MOV      r0,r5                 ;11019
00022c  f7fffffe          BL       strcpy
000230  4639              MOV      r1,r7                 ;11020
000232  4620              MOV      r0,r4                 ;11020
000234  f7fffffe          BL       strcpy
000238  4620              MOV      r0,r4                 ;11021
00023a  f7fffffe          BL       close_and_downcase
00023e  ea5f0a00          MOVS     r10,r0                ;11021
000242  d025              BEQ      |L106.656|
000244  4826              LDR      r0,|L106.736|
000246  f8d0014c          LDR      r0,[r0,#0x14c]        ;11021
00024a  2831              CMP      r0,#0x31              ;11021
00024c  da1e              BGE      |L106.652|
00024e  4924              LDR      r1,|L106.736|
000250  f8d1314c          LDR      r3,[r1,#0x14c]        ;11021
000254  f8d1114c          LDR      r1,[r1,#0x14c]        ;11021
000258  1c49              ADDS     r1,r1,#1              ;11021
00025a  4a21              LDR      r2,|L106.736|
00025c  f8c2114c          STR      r1,[r2,#0x14c]        ;11021
000260  eb030183          ADD      r1,r3,r3,LSL #2       ;11021
000264  4a20              LDR      r2,|L106.744|
000266  eb021101          ADD      r1,r2,r1,LSL #4       ;11021
00026a  4608              MOV      r0,r1                 ;11021
00026c  491d              LDR      r1,|L106.740|
00026e  f7fffffe          BL       strcpy
000272  f04f0100          MOV      r1,#0                 ;11021
000276  481a              LDR      r0,|L106.736|
000278  f8d0014c          LDR      r0,[r0,#0x14c]        ;11021
00027c  eb000080          ADD      r0,r0,r0,LSL #2       ;11021
000280  4a19              LDR      r2,|L106.744|
000282  eb021000          ADD      r0,r2,r0,LSL #4       ;11021
000286  7001              STRB     r1,[r0,#0]            ;11021
000288  4650              MOV      r0,r10                ;11021
00028a  e6f5              B        |L106.120|
                  |L106.652|
00028c  4650              MOV      r0,r10                ;11021
00028e  e6f3              B        |L106.120|
                  |L106.656|
000290  4812              LDR      r0,|L106.732|
000292  f8d00190          LDR      r0,[r0,#0x190]        ;11023
000296  f1000001          ADD      r0,r0,#1              ;11023
00029a  4910              LDR      r1,|L106.732|
00029c  f8c10190          STR      r0,[r1,#0x190]        ;11023
0002a0  f04f0100          MOV      r1,#0                 ;11024
0002a4  4811              LDR      r0,|L106.748|
0002a6  f8c01f08          STR      r1,[r0,#0xf08]        ;11024
0002aa  7820              LDRB     r0,[r4,#0]            ;11025
0002ac  b120              CBZ      r0,|L106.696|
0002ae  7820              LDRB     r0,[r4,#0]            ;11025
0002b0  282f              CMP      r0,#0x2f              ;11025
0002b2  d106              BNE      |L106.706|
0002b4  7860              LDRB     r0,[r4,#1]            ;11025
0002b6  b920              CBNZ     r0,|L106.706|
                  |L106.696|
0002b8  f04f0000          MOV      r0,#0                 ;11026
0002bc  f8c90000          STR      r0,[r9,#0]            ;11026
0002c0  e004              B        |L106.716|
                  |L106.706|
0002c2  4620              MOV      r0,r4                 ;11028
0002c4  f7fffffe          BL       strlen
0002c8  f8c90000          STR      r0,[r9,#0]            ;11028
                  |L106.716|
0002cc  7820              LDRB     r0,[r4,#0]            ;11030
0002ce  282f              CMP      r0,#0x2f              ;11030
0002d0  d101              BNE      |L106.726|
0002d2  2002              MOVS     r0,#2                 ;11030
0002d4  e6d0              B        |L106.120|
                  |L106.726|
0002d6  2000              MOVS     r0,#0                 ;11030
0002d8  e6ce              B        |L106.120|
;;;11032  
                          ENDP

0002da  0000              DCW      0x0000
                  |L106.732|
                          DCD      _setup+0xb000
                  |L106.736|
                          DCD      _setup+0xc000
                  |L106.740|
                          DCD      |symbol_number.514|
                  |L106.744|
                          DCD      _setup+0xb1ac
                  |L106.748|
                          DCD      _setup+0xa000

                          AREA ||i.read_unary||, CODE, READONLY, ALIGN=2

                  read_unary PROC
;;;11061  
;;;11062      static int read_unary(                        /* ARGUMENTS                                      */
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;11063      char * line,                                  /* string: line of RS274/NGC code being processed */
;;;11064      int * counter,                                /* pointer to a counter for position on the line  */
;;;11065      double * double_ptr,                          /* pointer to double to be read                   */
;;;11066      double * parameters)                          /* array of system parameters                     */
;;;11067      {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
00000a  461f              MOV      r7,r3
;;;11068          static char name[] SET_TO "read_unary";
;;;11069          int operation;
;;;11070          int status;
;;;11071  
;;;11072          CHP(read_operation_unary (line, counter, &operation));
00000c  466a              MOV      r2,sp
00000e  4629              MOV      r1,r5
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       read_operation_unary
000016  ea5f0800          MOVS     r8,r0
00001a  d027              BEQ      |L107.108|
00001c  4870              LDR      r0,|L107.480|
00001e  f8d0014c          LDR      r0,[r0,#0x14c]
000022  2831              CMP      r0,#0x31
000024  da20              BGE      |L107.104|
000026  496e              LDR      r1,|L107.480|
000028  f8d1314c          LDR      r3,[r1,#0x14c]
00002c  f8d1114c          LDR      r1,[r1,#0x14c]
000030  1c49              ADDS     r1,r1,#1
000032  4a6b              LDR      r2,|L107.480|
000034  f8c2114c          STR      r1,[r2,#0x14c]
000038  eb030183          ADD      r1,r3,r3,LSL #2
00003c  f6a26254          SUB      r2,r2,#0xe54
000040  eb021101          ADD      r1,r2,r1,LSL #4
000044  4608              MOV      r0,r1
000046  4967              LDR      r1,|L107.484|
000048  f7fffffe          BL       strcpy
00004c  f04f0100          MOV      r1,#0
000050  4863              LDR      r0,|L107.480|
000052  f8d0014c          LDR      r0,[r0,#0x14c]
000056  eb000080          ADD      r0,r0,r0,LSL #2
00005a  4a63              LDR      r2,|L107.488|
00005c  eb021000          ADD      r0,r2,r0,LSL #4
000060  7001              STRB     r1,[r0,#0]
000062  4640              MOV      r0,r8
                  |L107.100|
;;;11073          CHK((line[*counter] ISNT '['),
;;;11074              NCE_LEFT_BRACKET_MISSING_AFTER_UNARY_OPERATION_NAME);
;;;11075          CHP(read_real_expression (line, counter, double_ptr, parameters));
;;;11076  
;;;11077          if (operation IS ATAN)
;;;11078              CHP(read_atan(line, counter, double_ptr, parameters));
;;;11079          else
;;;11080              CHP(execute_unary(double_ptr, operation));
;;;11081          return RS274NGC_OK;
;;;11082      }
000064  e8bd83f8          POP      {r3-r9,pc}
                  |L107.104|
000068  4640              MOV      r0,r8                 ;11072
00006a  e7fb              B        |L107.100|
                  |L107.108|
00006c  6828              LDR      r0,[r5,#0]            ;11073
00006e  5c20              LDRB     r0,[r4,r0]            ;11073
000070  285b              CMP      r0,#0x5b              ;11073
000072  d025              BEQ      |L107.192|
000074  f04f0100          MOV      r1,#0                 ;11073
000078  4859              LDR      r0,|L107.480|
00007a  f8c0114c          STR      r1,[r0,#0x14c]        ;11073
00007e  4601              MOV      r1,r0                 ;11073
000080  f8d1314c          LDR      r3,[r1,#0x14c]        ;11073
000084  f8d1114c          LDR      r1,[r1,#0x14c]        ;11073
000088  f1010101          ADD      r1,r1,#1              ;11073
00008c  4602              MOV      r2,r0                 ;11073
00008e  f8c2114c          STR      r1,[r2,#0x14c]        ;11073
000092  eb030183          ADD      r1,r3,r3,LSL #2       ;11073
000096  4a54              LDR      r2,|L107.488|
000098  eb021101          ADD      r1,r2,r1,LSL #4       ;11073
00009c  4608              MOV      r0,r1                 ;11073
00009e  4951              LDR      r1,|L107.484|
0000a0  f7fffffe          BL       strcpy
0000a4  f04f0100          MOV      r1,#0                 ;11073
0000a8  484d              LDR      r0,|L107.480|
0000aa  f8d0014c          LDR      r0,[r0,#0x14c]        ;11073
0000ae  eb000080          ADD      r0,r0,r0,LSL #2       ;11073
0000b2  4a4d              LDR      r2,|L107.488|
0000b4  eb021000          ADD      r0,r2,r0,LSL #4       ;11073
0000b8  7001              STRB     r1,[r0,#0]            ;11073
0000ba  f04f0061          MOV      r0,#0x61              ;11073
0000be  e7d1              B        |L107.100|
                  |L107.192|
0000c0  463b              MOV      r3,r7                 ;11075
0000c2  4632              MOV      r2,r6                 ;11075
0000c4  4629              MOV      r1,r5                 ;11075
0000c6  4620              MOV      r0,r4                 ;11075
0000c8  f7fffffe          BL       read_real_expression
0000cc  ea5f0800          MOVS     r8,r0                 ;11075
0000d0  d025              BEQ      |L107.286|
0000d2  4843              LDR      r0,|L107.480|
0000d4  f8d0014c          LDR      r0,[r0,#0x14c]        ;11075
0000d8  2831              CMP      r0,#0x31              ;11075
0000da  da1e              BGE      |L107.282|
0000dc  4940              LDR      r1,|L107.480|
0000de  f8d1314c          LDR      r3,[r1,#0x14c]        ;11075
0000e2  f8d1114c          LDR      r1,[r1,#0x14c]        ;11075
0000e6  1c49              ADDS     r1,r1,#1              ;11075
0000e8  4a3d              LDR      r2,|L107.480|
0000ea  f8c2114c          STR      r1,[r2,#0x14c]        ;11075
0000ee  eb030183          ADD      r1,r3,r3,LSL #2       ;11075
0000f2  4a3d              LDR      r2,|L107.488|
0000f4  eb021101          ADD      r1,r2,r1,LSL #4       ;11075
0000f8  4608              MOV      r0,r1                 ;11075
0000fa  493a              LDR      r1,|L107.484|
0000fc  f7fffffe          BL       strcpy
000100  f04f0100          MOV      r1,#0                 ;11075
000104  4836              LDR      r0,|L107.480|
000106  f8d0014c          LDR      r0,[r0,#0x14c]        ;11075
00010a  eb000080          ADD      r0,r0,r0,LSL #2       ;11075
00010e  4a36              LDR      r2,|L107.488|
000110  eb021000          ADD      r0,r2,r0,LSL #4       ;11075
000114  7001              STRB     r1,[r0,#0]            ;11075
000116  4640              MOV      r0,r8                 ;11075
000118  e7a4              B        |L107.100|
                  |L107.282|
00011a  4640              MOV      r0,r8                 ;11075
00011c  e7a2              B        |L107.100|
                  |L107.286|
00011e  9800              LDR      r0,[sp,#0]            ;11077
000120  2804              CMP      r0,#4                 ;11077
000122  d12e              BNE      |L107.386|
000124  463b              MOV      r3,r7                 ;11078
000126  4632              MOV      r2,r6                 ;11078
000128  4629              MOV      r1,r5                 ;11078
00012a  4620              MOV      r0,r4                 ;11078
00012c  f7fffffe          BL       read_atan
000130  ea5f0800          MOVS     r8,r0                 ;11078
000134  d052              BEQ      |L107.476|
000136  482a              LDR      r0,|L107.480|
000138  f8d0014c          LDR      r0,[r0,#0x14c]        ;11078
00013c  2831              CMP      r0,#0x31              ;11078
00013e  da1e              BGE      |L107.382|
000140  4927              LDR      r1,|L107.480|
000142  f8d1314c          LDR      r3,[r1,#0x14c]        ;11078
000146  f8d1114c          LDR      r1,[r1,#0x14c]        ;11078
00014a  1c49              ADDS     r1,r1,#1              ;11078
00014c  4a24              LDR      r2,|L107.480|
00014e  f8c2114c          STR      r1,[r2,#0x14c]        ;11078
000152  eb030183          ADD      r1,r3,r3,LSL #2       ;11078
000156  4a24              LDR      r2,|L107.488|
000158  eb021101          ADD      r1,r2,r1,LSL #4       ;11078
00015c  4608              MOV      r0,r1                 ;11078
00015e  4921              LDR      r1,|L107.484|
000160  f7fffffe          BL       strcpy
000164  f04f0100          MOV      r1,#0                 ;11078
000168  481d              LDR      r0,|L107.480|
00016a  f8d0014c          LDR      r0,[r0,#0x14c]        ;11078
00016e  eb000080          ADD      r0,r0,r0,LSL #2       ;11078
000172  4a1d              LDR      r2,|L107.488|
000174  eb021000          ADD      r0,r2,r0,LSL #4       ;11078
000178  7001              STRB     r1,[r0,#0]            ;11078
00017a  4640              MOV      r0,r8                 ;11078
00017c  e772              B        |L107.100|
                  |L107.382|
00017e  4640              MOV      r0,r8                 ;11078
000180  e770              B        |L107.100|
                  |L107.386|
000182  4630              MOV      r0,r6                 ;11080
000184  9900              LDR      r1,[sp,#0]            ;11080
000186  f7fffffe          BL       execute_unary
00018a  ea5f0800          MOVS     r8,r0                 ;11080
00018e  d025              BEQ      |L107.476|
000190  4813              LDR      r0,|L107.480|
000192  f8d0014c          LDR      r0,[r0,#0x14c]        ;11080
000196  2831              CMP      r0,#0x31              ;11080
000198  da1e              BGE      |L107.472|
00019a  4911              LDR      r1,|L107.480|
00019c  f8d1314c          LDR      r3,[r1,#0x14c]        ;11080
0001a0  f8d1114c          LDR      r1,[r1,#0x14c]        ;11080
0001a4  1c49              ADDS     r1,r1,#1              ;11080
0001a6  4a0e              LDR      r2,|L107.480|
0001a8  f8c2114c          STR      r1,[r2,#0x14c]        ;11080
0001ac  eb030183          ADD      r1,r3,r3,LSL #2       ;11080
0001b0  4a0d              LDR      r2,|L107.488|
0001b2  eb021101          ADD      r1,r2,r1,LSL #4       ;11080
0001b6  4608              MOV      r0,r1                 ;11080
0001b8  490a              LDR      r1,|L107.484|
0001ba  f7fffffe          BL       strcpy
0001be  f04f0100          MOV      r1,#0                 ;11080
0001c2  4807              LDR      r0,|L107.480|
0001c4  f8d0014c          LDR      r0,[r0,#0x14c]        ;11080
0001c8  eb000080          ADD      r0,r0,r0,LSL #2       ;11080
0001cc  4a06              LDR      r2,|L107.488|
0001ce  eb021000          ADD      r0,r2,r0,LSL #4       ;11080
0001d2  7001              STRB     r1,[r0,#0]            ;11080
0001d4  4640              MOV      r0,r8                 ;11080
0001d6  e745              B        |L107.100|
                  |L107.472|
0001d8  4640              MOV      r0,r8                 ;11080
0001da  e743              B        |L107.100|
                  |L107.476|
0001dc  2000              MOVS     r0,#0                 ;11081
0001de  e741              B        |L107.100|
;;;11083  
                          ENDP

                  |L107.480|
                          DCD      _setup+0xc000
                  |L107.484|
                          DCD      |symbol_number.515|
                  |L107.488|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_x||, CODE, READONLY, ALIGN=2

                  read_x PROC
;;;11116  
;;;11117      static int read_x(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;11118      char * line,                                  /* string: line of RS274 code being processed     */
;;;11119      int * counter,                                /* pointer to a counter for position on the line  */
;;;11120      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;11121      double * parameters)                          /* array of system parameters                     */
;;;11122      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;11123          static char name[] SET_TO "read_x";
;;;11124          double value;
;;;11125          int status;
;;;11126  
;;;11127          CHK((line[*counter] ISNT 'x'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2878              CMP      r0,#0x78
000012  d027              BEQ      |L108.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L108.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L108.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L108.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L108.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L108.96|
;;;11128          *counter SET_TO (*counter + 1);
;;;11129          CHK((block->x_flag ISNT OFF), NCE_MULTIPLE_X_WORDS_ON_ONE_LINE);
;;;11130          CHP(read_real_value(line, counter, &value, parameters));
;;;11131          block->x_flag SET_TO ON;
;;;11132          block->x_number SET_TO value;
;;;11133          return RS274NGC_OK;
;;;11134      }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L108.100|
000064  6820              LDR      r0,[r4,#0]            ;11128
000066  f1000001          ADD      r0,r0,#1              ;11128
00006a  6020              STR      r0,[r4,#0]            ;11128
00006c  f8d501dc          LDR      r0,[r5,#0x1dc]        ;11129
000070  b328              CBZ      r0,|L108.190|
000072  f04f0100          MOV      r1,#0                 ;11129
000076  482f              LDR      r0,|L108.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;11129
00007c  4601              MOV      r1,r0                 ;11129
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11129
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;11129
000086  f1010101          ADD      r1,r1,#1              ;11129
00008a  4602              MOV      r2,r0                 ;11129
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;11129
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;11129
000094  4a29              LDR      r2,|L108.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;11129
00009a  4608              MOV      r0,r1                 ;11129
00009c  4926              LDR      r1,|L108.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;11129
0000a6  4823              LDR      r0,|L108.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;11129
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;11129
0000b0  4a22              LDR      r2,|L108.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;11129
0000b6  7001              STRB     r1,[r0,#0]            ;11129
0000b8  f04f0075          MOV      r0,#0x75              ;11129
0000bc  e7d0              B        |L108.96|
                  |L108.190|
0000be  463b              MOV      r3,r7                 ;11130
0000c0  466a              MOV      r2,sp                 ;11130
0000c2  4621              MOV      r1,r4                 ;11130
0000c4  4630              MOV      r0,r6                 ;11130
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;11130
0000ce  d025              BEQ      |L108.284|
0000d0  4818              LDR      r0,|L108.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11130
0000d6  2831              CMP      r0,#0x31              ;11130
0000d8  da1e              BGE      |L108.280|
0000da  4916              LDR      r1,|L108.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;11130
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;11130
0000e4  1c49              ADDS     r1,r1,#1              ;11130
0000e6  4a13              LDR      r2,|L108.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;11130
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;11130
0000f0  4a12              LDR      r2,|L108.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;11130
0000f6  4608              MOV      r0,r1                 ;11130
0000f8  490f              LDR      r1,|L108.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;11130
000102  480c              LDR      r0,|L108.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;11130
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;11130
00010c  4a0b              LDR      r2,|L108.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;11130
000112  7001              STRB     r1,[r0,#0]            ;11130
000114  4640              MOV      r0,r8                 ;11130
000116  e7a3              B        |L108.96|
                  |L108.280|
000118  4640              MOV      r0,r8                 ;11130
00011a  e7a1              B        |L108.96|
                  |L108.284|
00011c  f04f0001          MOV      r0,#1                 ;11131
000120  f8c501dc          STR      r0,[r5,#0x1dc]        ;11131
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;11132
000128  f50572f0          ADD      r2,r5,#0x1e0          ;11132
00012c  c203              STM      r2!,{r0,r1}           ;11132
00012e  f04f0000          MOV      r0,#0                 ;11133
000132  e795              B        |L108.96|
;;;11135  
                          ENDP

                  |L108.308|
                          DCD      _setup+0xc000
                  |L108.312|
                          DCD      |symbol_number.516|
                  |L108.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_y||, CODE, READONLY, ALIGN=2

                  read_y PROC
;;;11168  
;;;11169      static int read_y(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;11170      char * line,                                  /* string: line of RS274 code being processed     */
;;;11171      int * counter,                                /* pointer to a counter for position on the line  */
;;;11172      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;11173      double * parameters)                          /* array of system parameters                     */
;;;11174      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;11175          static char name[] SET_TO "read_y";
;;;11176          double value;
;;;11177          int status;
;;;11178  
;;;11179          CHK((line[*counter] ISNT 'y'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  2879              CMP      r0,#0x79
000012  d027              BEQ      |L109.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L109.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L109.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L109.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L109.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L109.96|
;;;11180          *counter SET_TO (*counter + 1);
;;;11181          CHK((block->y_flag ISNT OFF), NCE_MULTIPLE_Y_WORDS_ON_ONE_LINE);
;;;11182          CHP(read_real_value(line, counter, &value, parameters));
;;;11183          block->y_flag SET_TO ON;
;;;11184          block->y_number SET_TO value;
;;;11185          return RS274NGC_OK;
;;;11186      }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L109.100|
000064  6820              LDR      r0,[r4,#0]            ;11180
000066  f1000001          ADD      r0,r0,#1              ;11180
00006a  6020              STR      r0,[r4,#0]            ;11180
00006c  f8d501e8          LDR      r0,[r5,#0x1e8]        ;11181
000070  b328              CBZ      r0,|L109.190|
000072  f04f0100          MOV      r1,#0                 ;11181
000076  482f              LDR      r0,|L109.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;11181
00007c  4601              MOV      r1,r0                 ;11181
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11181
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;11181
000086  f1010101          ADD      r1,r1,#1              ;11181
00008a  4602              MOV      r2,r0                 ;11181
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;11181
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;11181
000094  4a29              LDR      r2,|L109.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;11181
00009a  4608              MOV      r0,r1                 ;11181
00009c  4926              LDR      r1,|L109.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;11181
0000a6  4823              LDR      r0,|L109.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;11181
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;11181
0000b0  4a22              LDR      r2,|L109.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;11181
0000b6  7001              STRB     r1,[r0,#0]            ;11181
0000b8  f04f0076          MOV      r0,#0x76              ;11181
0000bc  e7d0              B        |L109.96|
                  |L109.190|
0000be  463b              MOV      r3,r7                 ;11182
0000c0  466a              MOV      r2,sp                 ;11182
0000c2  4621              MOV      r1,r4                 ;11182
0000c4  4630              MOV      r0,r6                 ;11182
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;11182
0000ce  d025              BEQ      |L109.284|
0000d0  4818              LDR      r0,|L109.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11182
0000d6  2831              CMP      r0,#0x31              ;11182
0000d8  da1e              BGE      |L109.280|
0000da  4916              LDR      r1,|L109.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;11182
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;11182
0000e4  1c49              ADDS     r1,r1,#1              ;11182
0000e6  4a13              LDR      r2,|L109.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;11182
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;11182
0000f0  4a12              LDR      r2,|L109.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;11182
0000f6  4608              MOV      r0,r1                 ;11182
0000f8  490f              LDR      r1,|L109.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;11182
000102  480c              LDR      r0,|L109.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;11182
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;11182
00010c  4a0b              LDR      r2,|L109.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;11182
000112  7001              STRB     r1,[r0,#0]            ;11182
000114  4640              MOV      r0,r8                 ;11182
000116  e7a3              B        |L109.96|
                  |L109.280|
000118  4640              MOV      r0,r8                 ;11182
00011a  e7a1              B        |L109.96|
                  |L109.284|
00011c  f04f0001          MOV      r0,#1                 ;11183
000120  f8c501e8          STR      r0,[r5,#0x1e8]        ;11183
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;11184
000128  f50572f8          ADD      r2,r5,#0x1f0          ;11184
00012c  c203              STM      r2!,{r0,r1}           ;11184
00012e  f04f0000          MOV      r0,#0                 ;11185
000132  e795              B        |L109.96|
;;;11187  
                          ENDP

                  |L109.308|
                          DCD      _setup+0xc000
                  |L109.312|
                          DCD      |symbol_number.517|
                  |L109.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.read_z||, CODE, READONLY, ALIGN=2

                  read_z PROC
;;;11220  
;;;11221      static int read_z(                            /* ARGUMENTS                                      */
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;11222      char * line,                                  /* string: line of RS274 code being processed     */
;;;11223      int * counter,                                /* pointer to a counter for position on the line  */
;;;11224      block_pointer block,                          /* pointer to a block being filled from the line  */
;;;11225      double * parameters)                          /* array of system parameters                     */
;;;11226      {
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
000008  4615              MOV      r5,r2
00000a  461f              MOV      r7,r3
;;;11227          static char name[] SET_TO "read_z";
;;;11228          double value;
;;;11229          int status;
;;;11230  
;;;11231          CHK((line[*counter] ISNT 'z'), NCE_BUG_FUNCTION_SHOULD_NOT_HAVE_BEEN_CALLED);
00000c  6820              LDR      r0,[r4,#0]
00000e  5c30              LDRB     r0,[r6,r0]
000010  287a              CMP      r0,#0x7a
000012  d027              BEQ      |L110.100|
000014  f04f0100          MOV      r1,#0
000018  4846              LDR      r0,|L110.308|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  493d              LDR      r1,|L110.312|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  483a              LDR      r0,|L110.308|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a39              LDR      r2,|L110.316|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0020          MOV      r0,#0x20
                  |L110.96|
;;;11232          *counter SET_TO (*counter + 1);
;;;11233          CHK((block->z_flag ISNT OFF), NCE_MULTIPLE_Z_WORDS_ON_ONE_LINE);
;;;11234          CHP(read_real_value(line, counter, &value, parameters));
;;;11235          block->z_flag SET_TO ON;
;;;11236          block->z_number SET_TO value;
;;;11237          return RS274NGC_OK;
;;;11238      }
000060  e8bd81fc          POP      {r2-r8,pc}
                  |L110.100|
000064  6820              LDR      r0,[r4,#0]            ;11232
000066  f1000001          ADD      r0,r0,#1              ;11232
00006a  6020              STR      r0,[r4,#0]            ;11232
00006c  f8d501f8          LDR      r0,[r5,#0x1f8]        ;11233
000070  b328              CBZ      r0,|L110.190|
000072  f04f0100          MOV      r1,#0                 ;11233
000076  482f              LDR      r0,|L110.308|
000078  f8c0114c          STR      r1,[r0,#0x14c]        ;11233
00007c  4601              MOV      r1,r0                 ;11233
00007e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11233
000082  f8d1114c          LDR      r1,[r1,#0x14c]        ;11233
000086  f1010101          ADD      r1,r1,#1              ;11233
00008a  4602              MOV      r2,r0                 ;11233
00008c  f8c2114c          STR      r1,[r2,#0x14c]        ;11233
000090  eb030183          ADD      r1,r3,r3,LSL #2       ;11233
000094  4a29              LDR      r2,|L110.316|
000096  eb021101          ADD      r1,r2,r1,LSL #4       ;11233
00009a  4608              MOV      r0,r1                 ;11233
00009c  4926              LDR      r1,|L110.312|
00009e  f7fffffe          BL       strcpy
0000a2  f04f0100          MOV      r1,#0                 ;11233
0000a6  4823              LDR      r0,|L110.308|
0000a8  f8d0014c          LDR      r0,[r0,#0x14c]        ;11233
0000ac  eb000080          ADD      r0,r0,r0,LSL #2       ;11233
0000b0  4a22              LDR      r2,|L110.316|
0000b2  eb021000          ADD      r0,r2,r0,LSL #4       ;11233
0000b6  7001              STRB     r1,[r0,#0]            ;11233
0000b8  f04f0077          MOV      r0,#0x77              ;11233
0000bc  e7d0              B        |L110.96|
                  |L110.190|
0000be  463b              MOV      r3,r7                 ;11234
0000c0  466a              MOV      r2,sp                 ;11234
0000c2  4621              MOV      r1,r4                 ;11234
0000c4  4630              MOV      r0,r6                 ;11234
0000c6  f7fffffe          BL       read_real_value
0000ca  ea5f0800          MOVS     r8,r0                 ;11234
0000ce  d025              BEQ      |L110.284|
0000d0  4818              LDR      r0,|L110.308|
0000d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11234
0000d6  2831              CMP      r0,#0x31              ;11234
0000d8  da1e              BGE      |L110.280|
0000da  4916              LDR      r1,|L110.308|
0000dc  f8d1314c          LDR      r3,[r1,#0x14c]        ;11234
0000e0  f8d1114c          LDR      r1,[r1,#0x14c]        ;11234
0000e4  1c49              ADDS     r1,r1,#1              ;11234
0000e6  4a13              LDR      r2,|L110.308|
0000e8  f8c2114c          STR      r1,[r2,#0x14c]        ;11234
0000ec  eb030183          ADD      r1,r3,r3,LSL #2       ;11234
0000f0  4a12              LDR      r2,|L110.316|
0000f2  eb021101          ADD      r1,r2,r1,LSL #4       ;11234
0000f6  4608              MOV      r0,r1                 ;11234
0000f8  490f              LDR      r1,|L110.312|
0000fa  f7fffffe          BL       strcpy
0000fe  f04f0100          MOV      r1,#0                 ;11234
000102  480c              LDR      r0,|L110.308|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;11234
000108  eb000080          ADD      r0,r0,r0,LSL #2       ;11234
00010c  4a0b              LDR      r2,|L110.316|
00010e  eb021000          ADD      r0,r2,r0,LSL #4       ;11234
000112  7001              STRB     r1,[r0,#0]            ;11234
000114  4640              MOV      r0,r8                 ;11234
000116  e7a3              B        |L110.96|
                  |L110.280|
000118  4640              MOV      r0,r8                 ;11234
00011a  e7a1              B        |L110.96|
                  |L110.284|
00011c  f04f0001          MOV      r0,#1                 ;11235
000120  f8c501f8          STR      r0,[r5,#0x1f8]        ;11235
000124  e9dd0100          LDRD     r0,r1,[sp,#0]         ;11236
000128  f5057200          ADD      r2,r5,#0x200          ;11236
00012c  c203              STM      r2!,{r0,r1}           ;11236
00012e  f04f0000          MOV      r0,#0                 ;11237
000132  e795              B        |L110.96|
;;;11239  
                          ENDP

                  |L110.308|
                          DCD      _setup+0xc000
                  |L110.312|
                          DCD      |symbol_number.518|
                  |L110.316|
                          DCD      _setup+0xb1ac

                          AREA ||i.rs274ngc_active_g_codes||, CODE, READONLY, ALIGN=2

                  rs274ngc_active_g_codes PROC
;;;12261  
;;;12262      void rs274ngc_active_g_codes(                 /* ARGUMENTS                   */
000000  4601              MOV      r1,r0
;;;12263      int * codes)                                  /* array of codes to copy into */
;;;12264      {
;;;12265          int n;
;;;12266  
;;;12267          for (n SET_TO 0; n < RS274NGC_ACTIVE_G_CODES; n++)
000002  f04f0200          MOV      r2,#0
000006  4610              MOV      r0,r2
000008  e007              B        |L111.26|
                  |L111.10|
;;;12268          {
;;;12269              codes[n] SET_TO _setup.active_g_codes[n];
00000a  4a05              LDR      r2,|L111.32|
00000c  f8522020          LDR      r2,[r2,r0,LSL #2]
000010  f8412020          STR      r2,[r1,r0,LSL #2]
000014  f1000201          ADD      r2,r0,#1              ;12267
000018  4610              MOV      r0,r2                 ;12267
                  |L111.26|
00001a  280c              CMP      r0,#0xc               ;12267
00001c  dbf5              BLT      |L111.10|
;;;12270          }
;;;12271      }
00001e  4770              BX       lr
;;;12272  
                          ENDP

                  |L111.32|
                          DCD      _setup

                          AREA ||i.rs274ngc_active_m_codes||, CODE, READONLY, ALIGN=2

                  rs274ngc_active_m_codes PROC
;;;12286  
;;;12287      void rs274ngc_active_m_codes(                 /* ARGUMENTS                   */
000000  4601              MOV      r1,r0
;;;12288      int * codes)                                  /* array of codes to copy into */
;;;12289      {
;;;12290          int n;
;;;12291  
;;;12292          for (n SET_TO 0; n < RS274NGC_ACTIVE_M_CODES; n++)
000002  f04f0200          MOV      r2,#0
000006  4610              MOV      r0,r2
000008  e007              B        |L112.26|
                  |L112.10|
;;;12293          {
;;;12294              codes[n] SET_TO _setup.active_m_codes[n];
00000a  4a05              LDR      r2,|L112.32|
00000c  f8522020          LDR      r2,[r2,r0,LSL #2]
000010  f8412020          STR      r2,[r1,r0,LSL #2]
000014  f1000201          ADD      r2,r0,#1              ;12292
000018  4610              MOV      r0,r2                 ;12292
                  |L112.26|
00001a  2807              CMP      r0,#7                 ;12292
00001c  dbf5              BLT      |L112.10|
;;;12295          }
;;;12296      }
00001e  4770              BX       lr
;;;12297  
                          ENDP

                  |L112.32|
                          DCD      _setup+0x30

                          AREA ||i.rs274ngc_active_settings||, CODE, READONLY, ALIGN=2

                  rs274ngc_active_settings PROC
;;;12311  
;;;12312      void rs274ngc_active_settings(                /* ARGUMENTS                      */
000000  b510              PUSH     {r4,lr}
;;;12313      double * settings)                            /* array of settings to copy into */
;;;12314      {
000002  4601              MOV      r1,r0
;;;12315          int n;
;;;12316  
;;;12317          for (n SET_TO 0; n < RS274NGC_ACTIVE_SETTINGS; n++)
000004  f04f0200          MOV      r2,#0
000008  4610              MOV      r0,r2
00000a  e009              B        |L113.32|
                  |L113.12|
;;;12318          {
;;;12319              settings[n] SET_TO _setup.active_settings[n];
00000c  4a06              LDR      r2,|L113.40|
00000e  eb0203c0          ADD      r3,r2,r0,LSL #3
000012  cb0c              LDM      r3,{r2,r3}
000014  eb0104c0          ADD      r4,r1,r0,LSL #3
000018  c40c              STM      r4!,{r2,r3}
00001a  f1000201          ADD      r2,r0,#1              ;12317
00001e  4610              MOV      r0,r2                 ;12317
                  |L113.32|
000020  2803              CMP      r0,#3                 ;12317
000022  dbf3              BLT      |L113.12|
;;;12320          }
;;;12321      }
000024  bd10              POP      {r4,pc}
;;;12322  
                          ENDP

000026  0000              DCW      0x0000
                  |L113.40|
                          DCD      _setup+0x50

                          AREA ||i.rs274ngc_close||, CODE, READONLY, ALIGN=2

                  rs274ngc_close PROC
;;;11471  
;;;11472      int rs274ngc_close()
000000  b510              PUSH     {r4,lr}
;;;11473      {
;;;11474          if (_setup.file_pointer ISNT NULL)
000002  4809              LDR      r0,|L114.40|
000004  f8d00510          LDR      r0,[r0,#0x510]  ; _setup
000008  b150              CBZ      r0,|L114.32|
;;;11475          {
;;;11476              fclose(_setup.file_pointer);
00000a  4907              LDR      r1,|L114.40|
00000c  f8d11510          LDR      r1,[r1,#0x510]  ; _setup
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       fclose
;;;11477              _setup.file_pointer SET_TO NULL;
000016  f04f0000          MOV      r0,#0
00001a  4903              LDR      r1,|L114.40|
00001c  f8c10510          STR      r0,[r1,#0x510]  ; _setup
                  |L114.32|
;;;11478          }
;;;11479          rs274ngc_reset();
000020  f7fffffe          BL       rs274ngc_reset
;;;11480  
;;;11481          return RS274NGC_OK;
000024  2000              MOVS     r0,#0
;;;11482      }
000026  bd10              POP      {r4,pc}
;;;11483  
                          ENDP

                  |L114.40|
                          DCD      _setup

                          AREA ||i.rs274ngc_error_text||, CODE, READONLY, ALIGN=2

                  rs274ngc_error_text PROC
;;;12340     */
;;;12341      void rs274ngc_error_text(                     /* ARGUMENTS                            */
000000  b570              PUSH     {r4-r6,lr}
;;;12342      int error_code,                               /* code number of error                 */
;;;12343      char * error_text,                            /* char array to copy error text into   */
;;;12344      unsigned int max_size)                                 /* maximum number of characters to copy */
;;;12345      {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;12346          if (((error_code >= RS274NGC_MIN_ERROR) AND
000008  2c03              CMP      r4,#3
00000a  db11              BLT      |L115.48|
;;;12347              (error_code <= RS274NGC_MAX_ERROR)) AND
00000c  2cc5              CMP      r4,#0xc5
00000e  dc0f              BGT      |L115.48|
;;;12348              (strlen(_rs274ngc_errors[error_code]) < max_size))
000010  4909              LDR      r1,|L115.56|
000012  f8511024          LDR      r1,[r1,r4,LSL #2]
000016  4608              MOV      r0,r1
000018  f7fffffe          BL       strlen
00001c  42b0              CMP      r0,r6
00001e  d207              BCS      |L115.48|
;;;12349          {
;;;12350              strcpy(error_text, _rs274ngc_errors[error_code]);
000020  4805              LDR      r0,|L115.56|
000022  f8500024          LDR      r0,[r0,r4,LSL #2]
000026  4601              MOV      r1,r0
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       strcpy
00002e  e002              B        |L115.54|
                  |L115.48|
;;;12351          }
;;;12352          else
;;;12353              error_text[0] SET_TO 0;
000030  f04f0000          MOV      r0,#0
000034  7028              STRB     r0,[r5,#0]
                  |L115.54|
;;;12354      }
000036  bd70              POP      {r4-r6,pc}
;;;12355  
                          ENDP

                  |L115.56|
                          DCD      _rs274ngc_errors

                          AREA ||i.rs274ngc_execute||, CODE, READONLY, ALIGN=2

                  rs274ngc_execute PROC
;;;11505  
;;;11506      int rs274ngc_execute()                        /* NO ARGUMENTS */
000000  b570              PUSH     {r4-r6,lr}
;;;11507      {
;;;11508          static char name[] SET_TO "rs274ngc_execute";
;;;11509          int status;
;;;11510          int n;
;;;11511  
;;;11512          for (n SET_TO 0; n < _setup.parameter_occurrence; n++)
000002  f04f0000          MOV      r0,#0
000006  4605              MOV      r5,r0
000008  e00f              B        |L116.42|
                  |L116.10|
;;;11513          {                                         // copy parameter settings from parameter buffer into parameter table
;;;11514              _setup.parameters[_setup.parameter_numbers[n]]
00000a  482e              LDR      r0,|L116.196|
00000c  eb0000c5          ADD      r0,r0,r5,LSL #3
000010  c806              LDM      r0!,{r1,r2}
000012  482c              LDR      r0,|L116.196|
000014  f1a000cc          SUB      r0,r0,#0xcc
000018  f8503025          LDR      r3,[r0,r5,LSL #2]
00001c  482a              LDR      r0,|L116.200|
00001e  eb0000c3          ADD      r0,r0,r3,LSL #3
000022  c006              STM      r0!,{r1,r2}
000024  f1050001          ADD      r0,r5,#1              ;11512
000028  4605              MOV      r5,r0                 ;11512
                  |L116.42|
00002a  4828              LDR      r0,|L116.204|
00002c  f8d00f08          LDR      r0,[r0,#0xf08]        ;11512
000030  42a8              CMP      r0,r5                 ;11512
000032  dcea              BGT      |L116.10|
;;;11515                  SET_TO _setup.parameter_values[n];
;;;11516          }
;;;11517          if (_setup.line_length ISNT 0)            /* line not blank */
000034  4826              LDR      r0,|L116.208|
000036  f8d00520          LDR      r0,[r0,#0x520]  ; _setup
00003a  2800              CMP      r0,#0
00003c  d03e              BEQ      |L116.188|
;;;11518          {
;;;11519              status SET_TO execute_block (&(_setup.block1), &_setup);
00003e  4924              LDR      r1,|L116.208|
000040  f1010080          ADD      r0,r1,#0x80
000044  f7fffffe          BL       execute_block
000048  4604              MOV      r4,r0
;;;11520              write_g_codes(&(_setup.block1), &_setup);
00004a  4921              LDR      r1,|L116.208|
00004c  f1010080          ADD      r0,r1,#0x80
000050  f7fffffe          BL       write_g_codes
;;;11521              write_m_codes(&(_setup.block1), &_setup);
000054  491e              LDR      r1,|L116.208|
000056  f1010080          ADD      r0,r1,#0x80
00005a  f7fffffe          BL       write_m_codes
;;;11522              write_settings(&_setup);
00005e  481c              LDR      r0,|L116.208|
000060  f7fffffe          BL       write_settings
;;;11523              if ((status ISNT RS274NGC_OK) AND
000064  b364              CBZ      r4,|L116.192|
;;;11524                  (status ISNT RS274NGC_EXECUTE_FINISH) AND
000066  2c02              CMP      r4,#2
000068  d02a              BEQ      |L116.192|
;;;11525                  (status ISNT RS274NGC_EXIT))
00006a  2c01              CMP      r4,#1
00006c  d028              BEQ      |L116.192|
;;;11526                  ERP(status);
00006e  4819              LDR      r0,|L116.212|
000070  f8d0014c          LDR      r0,[r0,#0x14c]
000074  2831              CMP      r0,#0x31
000076  da1f              BGE      |L116.184|
000078  4916              LDR      r1,|L116.212|
00007a  f8d1314c          LDR      r3,[r1,#0x14c]
00007e  f8d1114c          LDR      r1,[r1,#0x14c]
000082  1c49              ADDS     r1,r1,#1
000084  4a13              LDR      r2,|L116.212|
000086  f8c2114c          STR      r1,[r2,#0x14c]
00008a  eb030183          ADD      r1,r3,r3,LSL #2
00008e  f6a26254          SUB      r2,r2,#0xe54
000092  eb021101          ADD      r1,r2,r1,LSL #4
000096  4608              MOV      r0,r1
000098  490f              LDR      r1,|L116.216|
00009a  f7fffffe          BL       strcpy
00009e  f04f0100          MOV      r1,#0
0000a2  480c              LDR      r0,|L116.212|
0000a4  f8d0014c          LDR      r0,[r0,#0x14c]
0000a8  eb000080          ADD      r0,r0,r0,LSL #2
0000ac  4a0b              LDR      r2,|L116.220|
0000ae  eb021000          ADD      r0,r2,r0,LSL #4
0000b2  7001              STRB     r1,[r0,#0]
0000b4  4620              MOV      r0,r4
                  |L116.182|
;;;11527          }
;;;11528          else                                      /* blank line is OK */
;;;11529              status SET_TO RS274NGC_OK;
;;;11530          return status;
;;;11531      }
0000b6  bd70              POP      {r4-r6,pc}
                  |L116.184|
0000b8  4620              MOV      r0,r4                 ;11526
0000ba  e7fc              B        |L116.182|
                  |L116.188|
0000bc  f04f0400          MOV      r4,#0                 ;11529
                  |L116.192|
0000c0  4620              MOV      r0,r4                 ;11530
0000c2  e7f8              B        |L116.182|
;;;11532  
                          ENDP

                  |L116.196|
                          DCD      _setup+0xafd8
                  |L116.200|
                          DCD      _setup+0x648
                  |L116.204|
                          DCD      _setup+0xa000
                  |L116.208|
                          DCD      _setup
                  |L116.212|
                          DCD      _setup+0xc000
                  |L116.216|
                          DCD      |symbol_number.519|
                  |L116.220|
                          DCD      _setup+0xb1ac

                          AREA ||i.rs274ngc_exit||, CODE, READONLY, ALIGN=2

                  rs274ngc_exit PROC
;;;11549  
;;;11550      int rs274ngc_exit()                           /* NO ARGUMENTS */
000000  b500              PUSH     {lr}
;;;11551      {
000002  b0c1              SUB      sp,sp,#0x104
;;;11552          char file_name[RS274NGC_TEXT_SIZE];
;;;11553  
;;;11554          GET_EXTERNAL_PARAMETER_FILE_NAME(file_name, (RS274NGC_TEXT_SIZE - 1));
000004  21ff              MOVS     r1,#0xff
000006  a801              ADD      r0,sp,#4
000008  f7fffffe          BL       GET_EXTERNAL_PARAMETER_FILE_NAME
;;;11555          rs274ngc_save_parameters
00000c  f89d1004          LDRB     r1,[sp,#4]
000010  b909              CBNZ     r1,|L117.22|
;;;11556              (((file_name[0] IS 0) ? RS274NGC_PARAMETER_FILE_NAME_DEFAULT : file_name),
000012  a106              ADR      r1,|L117.44|
000014  e000              B        |L117.24|
                  |L117.22|
000016  a901              ADD      r1,sp,#4
                  |L117.24|
000018  4608              MOV      r0,r1
00001a  4908              LDR      r1,|L117.60|
00001c  f7fffffe          BL       rs274ngc_save_parameters
;;;11557              _setup.parameters);
;;;11558          rs274ngc_reset();
000020  f7fffffe          BL       rs274ngc_reset
;;;11559  
;;;11560          return RS274NGC_OK;
000024  2000              MOVS     r0,#0
;;;11561      }
000026  b041              ADD      sp,sp,#0x104
000028  bd00              POP      {pc}
;;;11562  
                          ENDP

00002a  0000              DCW      0x0000
                  |L117.44|
00002c  72733237          DCB      "rs274ngc.var",0
000030  346e6763
000034  2e766172
000038  00      
000039  00                DCB      0
00003a  00                DCB      0
00003b  00                DCB      0
                  |L117.60|
                          DCD      _setup+0x648

                          AREA ||i.rs274ngc_file_name||, CODE, READONLY, ALIGN=2

                  rs274ngc_file_name PROC
;;;12371  
;;;12372      void rs274ngc_file_name(                      /* ARGUMENTS                            */
000000  b570              PUSH     {r4-r6,lr}
;;;12373      char * file_name,                             /* string: to copy file name into       */
;;;12374      unsigned int max_size)                                 /* maximum number of characters to copy */
;;;12375      {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;12376          if (strlen(_setup.filename) < max_size)
000006  4807              LDR      r0,|L118.36|
000008  f7fffffe          BL       strlen
00000c  42a8              CMP      r0,r5
00000e  d204              BCS      |L118.26|
;;;12377              strcpy(file_name, _setup.filename);
000010  4904              LDR      r1,|L118.36|
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       strcpy
000018  e002              B        |L118.32|
                  |L118.26|
;;;12378          else
;;;12379              file_name[0] SET_TO 0;
00001a  f04f0000          MOV      r0,#0
00001e  7020              STRB     r0,[r4,#0]
                  |L118.32|
;;;12380      }
000020  bd70              POP      {r4-r6,pc}
;;;12381  
                          ENDP

000022  0000              DCW      0x0000
                  |L118.36|
                          DCD      _setup+0x410

                          AREA ||i.rs274ngc_init||, CODE, READONLY, ALIGN=2

                  rs274ngc_init PROC
;;;11589  
;;;11590      int rs274ngc_init()                           /* NO ARGUMENTS */
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;11591      {
000004  b0c7              SUB      sp,sp,#0x11c
;;;11592          static char name[] SET_TO "rs274ngc_init";
;;;11593          int k;                                    // starting index in parameters of origin offsets
;;;11594          int status;
;;;11595          char filename[RS274NGC_TEXT_SIZE];
;;;11596          double * pars;                            // short name for _setup.parameters
;;;11597  
;;;11598          INIT_CANON();
000006  f7fffffe          BL       INIT_CANON
;;;11599          _setup.length_units SET_TO GET_EXTERNAL_LENGTH_UNIT_TYPE();
00000a  f7fffffe          BL       GET_EXTERNAL_LENGTH_UNIT_TYPE
00000e  49b1              LDR      r1,|L119.724|
000010  f8c1051c          STR      r0,[r1,#0x51c]  ; _setup
;;;11600          USE_LENGTH_UNITS(_setup.length_units);
000014  f8d1151c          LDR      r1,[r1,#0x51c]  ; _setup
000018  4608              MOV      r0,r1
00001a  f7fffffe          BL       USE_LENGTH_UNITS
;;;11601          GET_EXTERNAL_PARAMETER_FILE_NAME(filename, RS274NGC_TEXT_SIZE);
00001e  f44f7180          MOV      r1,#0x100
000022  a806              ADD      r0,sp,#0x18
000024  f7fffffe          BL       GET_EXTERNAL_PARAMETER_FILE_NAME
;;;11602          if (filename[0] IS 0)
000028  f89d0018          LDRB     r0,[sp,#0x18]
00002c  b918              CBNZ     r0,|L119.54|
;;;11603              strcpy(filename, RS274NGC_PARAMETER_FILE_NAME_DEFAULT);
00002e  a1aa              ADR      r1,|L119.728|
000030  a806              ADD      r0,sp,#0x18
000032  f7fffffe          BL       strcpy
                  |L119.54|
;;;11604          CHP(rs274ngc_restore_parameters(filename));
000036  a806              ADD      r0,sp,#0x18
000038  f7fffffe          BL       rs274ngc_restore_parameters
00003c  9046              STR      r0,[sp,#0x118]
00003e  b340              CBZ      r0,|L119.146|
000040  48a9              LDR      r0,|L119.744|
000042  f8d0014c          LDR      r0,[r0,#0x14c]
000046  2831              CMP      r0,#0x31
000048  da21              BGE      |L119.142|
00004a  49a7              LDR      r1,|L119.744|
00004c  f8d1314c          LDR      r3,[r1,#0x14c]
000050  f8d1114c          LDR      r1,[r1,#0x14c]
000054  1c49              ADDS     r1,r1,#1
000056  4aa4              LDR      r2,|L119.744|
000058  f8c2114c          STR      r1,[r2,#0x14c]
00005c  eb030183          ADD      r1,r3,r3,LSL #2
000060  f6a26254          SUB      r2,r2,#0xe54
000064  eb021101          ADD      r1,r2,r1,LSL #4
000068  4608              MOV      r0,r1
00006a  49a0              LDR      r1,|L119.748|
00006c  f7fffffe          BL       strcpy
000070  f04f0100          MOV      r1,#0
000074  489c              LDR      r0,|L119.744|
000076  f8d0014c          LDR      r0,[r0,#0x14c]
00007a  eb000080          ADD      r0,r0,r0,LSL #2
00007e  4a9c              LDR      r2,|L119.752|
000080  eb021000          ADD      r0,r2,r0,LSL #4
000084  7001              STRB     r1,[r0,#0]
000086  9846              LDR      r0,[sp,#0x118]
                  |L119.136|
;;;11605          pars SET_TO _setup.parameters;
;;;11606          _setup.origin_index SET_TO (int)(pars[5220] + 0.0001);
;;;11607          CHK(((_setup.origin_index < 1) OR (_setup.origin_index > 9)),
;;;11608              NCE_COORDINATE_SYSTEM_INDEX_PARAMETER_5220_OUT_OF_RANGE);
;;;11609          k SET_TO (5200 + (_setup.origin_index * 20));
;;;11610          SET_ORIGIN_OFFSETS((pars[k + 1] + pars[5211]),
;;;11611              (pars[k + 2] + pars[5212]),
;;;11612              (pars[k + 3] + pars[5213])
;;;11613      #ifdef AA
;;;11614              ,            (pars[k + 4] + pars[5214])
;;;11615      #else
;;;11616      #ifdef ALL_AXES
;;;11617              , 0
;;;11618      #endif
;;;11619      #endif
;;;11620      #ifdef BB
;;;11621              ,            (pars[k + 5] + pars[5215])
;;;11622      #else
;;;11623      #ifdef ALL_AXES
;;;11624              , 0
;;;11625      #endif
;;;11626      #endif
;;;11627      #ifdef CC
;;;11628              ,            (pars[k + 6] + pars[5216])
;;;11629      #else
;;;11630      #ifdef ALL_AXES
;;;11631              , 0
;;;11632      #endif
;;;11633      #endif
;;;11634              );
;;;11635          SET_FEED_REFERENCE(CANON_XYZ);
;;;11636  #ifdef AA
;;;11637          _setup.AA_axis_offset SET_TO pars[5214];  /*AA*/
;;;11638  #endif
;;;11639     //_setup.Aa_current set in rs274ngc_synch
;;;11640  #ifdef AA
;;;11641     /*AA*/
;;;11642          _setup.AA_origin_offset SET_TO pars[k + 4];
;;;11643  #endif
;;;11644     //_setup.active_g_codes initialized below
;;;11645     //_setup.active_m_codes initialized below
;;;11646     //_setup.active_settings initialized below
;;;11647          _setup.axis_offset_x SET_TO pars[5211];
;;;11648          _setup.axis_offset_y SET_TO pars[5212];
;;;11649          _setup.axis_offset_z SET_TO pars[5213];
;;;11650  #ifdef BB
;;;11651          _setup.BB_axis_offset SET_TO pars[5215];  /*BB*/
;;;11652  #endif
;;;11653     //_setup.Bb_current set in rs274ngc_synch
;;;11654  #ifdef BB
;;;11655     /*BB*/
;;;11656          _setup.BB_origin_offset SET_TO pars[k + 5];
;;;11657  #endif
;;;11658     //_setup.block1 does not need initialization
;;;11659          _setup.blocktext[0] SET_TO 0;
;;;11660  #ifdef CC
;;;11661          _setup.CC_axis_offset SET_TO pars[5216];  /*CC*/
;;;11662  #endif
;;;11663     //_setup.Cc_current set in rs274ngc_synch
;;;11664  #ifdef CC
;;;11665     /*CC*/
;;;11666          _setup.CC_origin_offset SET_TO pars[k + 6];
;;;11667  #endif
;;;11668     //_setup.current_slot set in rs274ngc_synch
;;;11669     //_setup.current_x set in rs274ngc_synch
;;;11670     //_setup.current_y set in rs274ngc_synch
;;;11671     //_setup.current_z set in rs274ngc_synch
;;;11672          _setup.cutter_comp_side SET_TO OFF;
;;;11673     //_setup.cycle values do not need initialization
;;;11674          _setup.distance_mode SET_TO MODE_ABSOLUTE;
;;;11675          _setup.feed_mode SET_TO UNITS_PER_MINUTE;
;;;11676          _setup.feed_override SET_TO ON;
;;;11677     //_setup.feed_rate set in rs274ngc_synch
;;;11678          _setup.filename[0] SET_TO 0;
;;;11679          _setup.file_pointer SET_TO NULL;
;;;11680     //_setup.flood set in rs274ngc_synch
;;;11681          _setup.length_offset_index SET_TO 1;
;;;11682     //_setup.length_units set in rs274ngc_synch
;;;11683          _setup.line_length SET_TO 0;
;;;11684          _setup.linetext[0] SET_TO 0;
;;;11685     //_setup.mist set in rs274ngc_synch
;;;11686          _setup.motion_mode SET_TO G_80;
;;;11687     //_setup.origin_index set above
;;;11688          _setup.origin_offset_x SET_TO pars[k + 1];
;;;11689          _setup.origin_offset_y SET_TO pars[k + 2];
;;;11690          _setup.origin_offset_z SET_TO pars[k + 3];
;;;11691     //_setup.parameters set above
;;;11692     //_setup.parameter_occurrence does not need initialization
;;;11693     //_setup.parameter_numbers does not need initialization
;;;11694     //_setup.parameter_values does not need initialization
;;;11695     //_setup.percent_flag does not need initialization
;;;11696     //_setup.plane set in rs274ngc_synch
;;;11697          _setup.probe_flag SET_TO OFF;
;;;11698          _setup.program_x SET_TO UNKNOWN;          /* for cutter comp */
;;;11699          _setup.program_y SET_TO UNKNOWN;          /* for cutter comp */
;;;11700     //_setup.retract_mode does not need initialization
;;;11701     //_setup.selected_tool_slot set in rs274ngc_synch
;;;11702          _setup.sequence_number SET_TO 0;          /*DOES THIS NEED TO BE AT TOP? */
;;;11703     //_setup.speed set in rs274ngc_synch
;;;11704          _setup.speed_feed_mode SET_TO CANON_INDEPENDENT;
;;;11705          _setup.speed_override SET_TO ON;
;;;11706     //_setup.spindle_turning set in rs274ngc_synch
;;;11707     //_setup.stack does not need initialization
;;;11708     //_setup.stack_index does not need initialization
;;;11709          _setup.tool_length_offset SET_TO 0.0;
;;;11710     //_setup.tool_max set in rs274ngc_synch
;;;11711     //_setup.tool_table set in rs274ngc_synch
;;;11712          _setup.tool_table_index SET_TO 1;
;;;11713     //_setup.traverse_rate set in rs274ngc_synch
;;;11714  
;;;11715          write_g_codes((block_pointer)NULL, &_setup);
;;;11716          write_m_codes((block_pointer)NULL, &_setup);
;;;11717          write_settings(&_setup);
;;;11718  
;;;11719     // Synch rest of settings to external world
;;;11720          rs274ngc_synch();
;;;11721  
;;;11722          return RS274NGC_OK;
;;;11723      }
000088  b047              ADD      sp,sp,#0x11c
00008a  e8bd8ff0          POP      {r4-r11,pc}
                  |L119.142|
00008e  9846              LDR      r0,[sp,#0x118]        ;11604
000090  e7fa              B        |L119.136|
                  |L119.146|
000092  f8df8260          LDR      r8,|L119.756|
000096  f5084120          ADD      r1,r8,#0xa000         ;11606
00009a  f5017148          ADD      r1,r1,#0x320          ;11606
00009e  c903              LDM      r1,{r0,r1}            ;11606
0000a0  4604              MOV      r4,r0                 ;11606
0000a2  4a95              LDR      r2,|L119.760|
0000a4  4b95              LDR      r3,|L119.764|
0000a6  f7fffffe          BL       __aeabi_dadd
0000aa  4606              MOV      r6,r0                 ;11606
0000ac  f7fffffe          BL       __aeabi_d2iz
0000b0  4988              LDR      r1,|L119.724|
0000b2  f8c1062c          STR      r0,[r1,#0x62c]        ;11606  ; _setup
0000b6  4608              MOV      r0,r1                 ;11607
0000b8  f8d0062c          LDR      r0,[r0,#0x62c]        ;11607  ; _setup
0000bc  2801              CMP      r0,#1                 ;11607
0000be  db04              BLT      |L119.202|
0000c0  4608              MOV      r0,r1                 ;11607
0000c2  f8d0062c          LDR      r0,[r0,#0x62c]        ;11607  ; _setup
0000c6  2809              CMP      r0,#9                 ;11607
0000c8  dd25              BLE      |L119.278|
                  |L119.202|
0000ca  f04f0100          MOV      r1,#0                 ;11607
0000ce  4886              LDR      r0,|L119.744|
0000d0  f8c0114c          STR      r1,[r0,#0x14c]        ;11607
0000d4  4601              MOV      r1,r0                 ;11607
0000d6  f8d1314c          LDR      r3,[r1,#0x14c]        ;11607
0000da  f8d1114c          LDR      r1,[r1,#0x14c]        ;11607
0000de  f1010101          ADD      r1,r1,#1              ;11607
0000e2  4602              MOV      r2,r0                 ;11607
0000e4  f8c2114c          STR      r1,[r2,#0x14c]        ;11607
0000e8  eb030183          ADD      r1,r3,r3,LSL #2       ;11607
0000ec  4a80              LDR      r2,|L119.752|
0000ee  eb021101          ADD      r1,r2,r1,LSL #4       ;11607
0000f2  4608              MOV      r0,r1                 ;11607
0000f4  497d              LDR      r1,|L119.748|
0000f6  f7fffffe          BL       strcpy
0000fa  f04f0100          MOV      r1,#0                 ;11607
0000fe  487a              LDR      r0,|L119.744|
000100  f8d0014c          LDR      r0,[r0,#0x14c]        ;11607
000104  eb000080          ADD      r0,r0,r0,LSL #2       ;11607
000108  4a79              LDR      r2,|L119.752|
00010a  eb021000          ADD      r0,r2,r0,LSL #4       ;11607
00010e  7001              STRB     r1,[r0,#0]            ;11607
000110  f04f0044          MOV      r0,#0x44              ;11607
000114  e7b8              B        |L119.136|
                  |L119.278|
000116  486f              LDR      r0,|L119.724|
000118  f8d0062c          LDR      r0,[r0,#0x62c]        ;11609  ; _setup
00011c  eb000080          ADD      r0,r0,r0,LSL #2       ;11609
000120  f2414150          MOV      r1,#0x1450            ;11609
000124  eb010980          ADD      r9,r1,r0,LSL #2       ;11609
000128  f5084120          ADD      r1,r8,#0xa000         ;11610
00012c  f501713a          ADD      r1,r1,#0x2e8          ;11610
000130  c903              LDM      r1,{r0,r1}            ;11610
000132  4604              MOV      r4,r0                 ;11610
000134  460d              MOV      r5,r1                 ;11610
000136  f1090003          ADD      r0,r9,#3              ;11610
00013a  eb0801c0          ADD      r1,r8,r0,LSL #3       ;11610
00013e  c903              LDM      r1,{r0,r1}            ;11610
000140  4606              MOV      r6,r0                 ;11610
000142  4622              MOV      r2,r4                 ;11610
000144  462b              MOV      r3,r5                 ;11610
000146  f7fffffe          BL       __aeabi_dadd
00014a  4682              MOV      r10,r0                ;11610
00014c  468b              MOV      r11,r1                ;11610
00014e  f5084020          ADD      r0,r8,#0xa000         ;11610
000152  f8d012e0          LDR      r1,[r0,#0x2e0]        ;11610
000156  f8d002e4          LDR      r0,[r0,#0x2e4]        ;11610
00015a  460c              MOV      r4,r1                 ;11610
00015c  4605              MOV      r5,r0                 ;11610
00015e  f1090002          ADD      r0,r9,#2              ;11610
000162  eb0800c0          ADD      r0,r8,r0,LSL #3       ;11610
000166  e9d01000          LDRD     r1,r0,[r0,#0]         ;11610
00016a  460e              MOV      r6,r1                 ;11610
00016c  4607              MOV      r7,r0                 ;11610
00016e  4622              MOV      r2,r4                 ;11610
000170  462b              MOV      r3,r5                 ;11610
000172  4630              MOV      r0,r6                 ;11610
000174  4639              MOV      r1,r7                 ;11610
000176  f7fffffe          BL       __aeabi_dadd
00017a  e9cd0104          STRD     r0,r1,[sp,#0x10]      ;11610
00017e  f5084020          ADD      r0,r8,#0xa000         ;11610
000182  f8d012d8          LDR      r1,[r0,#0x2d8]        ;11610
000186  f8d002dc          LDR      r0,[r0,#0x2dc]        ;11610
00018a  460c              MOV      r4,r1                 ;11610
00018c  4605              MOV      r5,r0                 ;11610
00018e  f1090001          ADD      r0,r9,#1              ;11610
000192  eb0800c0          ADD      r0,r8,r0,LSL #3       ;11610
000196  e9d01000          LDRD     r1,r0,[r0,#0]         ;11610
00019a  460e              MOV      r6,r1                 ;11610
00019c  4607              MOV      r7,r0                 ;11610
00019e  4622              MOV      r2,r4                 ;11610
0001a0  462b              MOV      r3,r5                 ;11610
0001a2  4630              MOV      r0,r6                 ;11610
0001a4  4639              MOV      r1,r7                 ;11610
0001a6  f7fffffe          BL       __aeabi_dadd
0001aa  e9cdab00          STRD     r10,r11,[sp,#0]       ;11610
0001ae  e9cd0102          STRD     r0,r1,[sp,#8]         ;11610
0001b2  e9dd2304          LDRD     r2,r3,[sp,#0x10]      ;11610
0001b6  f7fffffe          BL       SET_ORIGIN_OFFSETS
0001ba  2002              MOVS     r0,#2                 ;11635
0001bc  f7fffffe          BL       SET_FEED_REFERENCE
0001c0  f5084120          ADD      r1,r8,#0xa000         ;11647
0001c4  f5017136          ADD      r1,r1,#0x2d8          ;11647
0001c8  c903              LDM      r1,{r0,r1}            ;11647
0001ca  4a42              LDR      r2,|L119.724|
0001cc  e9c2011a          STRD     r0,r1,[r2,#0x68]      ;11647
0001d0  f5084020          ADD      r0,r8,#0xa000         ;11648
0001d4  f8d012e0          LDR      r1,[r0,#0x2e0]        ;11648
0001d8  f8d002e4          LDR      r0,[r0,#0x2e4]        ;11648
0001dc  e9c2101c          STRD     r1,r0,[r2,#0x70]      ;11648
0001e0  f5084020          ADD      r0,r8,#0xa000         ;11649
0001e4  f8d012e8          LDR      r1,[r0,#0x2e8]        ;11649
0001e8  f8d002ec          LDR      r0,[r0,#0x2ec]        ;11649
0001ec  e9c2101e          STRD     r1,r0,[r2,#0x78]      ;11649
0001f0  f04f0000          MOV      r0,#0                 ;11659
0001f4  4611              MOV      r1,r2                 ;11659
0001f6  f8810288          STRB     r0,[r1,#0x288]        ;11659
0001fa  f8c103b0          STR      r0,[r1,#0x3b0]        ;11672  ; _setup
0001fe  f88103f8          STRB     r0,[r1,#0x3f8]        ;11674
000202  f8c103fc          STR      r0,[r1,#0x3fc]        ;11675  ; _setup
000206  f04f0001          MOV      r0,#1                 ;11676
00020a  f8c10400          STR      r0,[r1,#0x400]        ;11676  ; _setup
00020e  f04f0000          MOV      r0,#0                 ;11678
000212  f8810410          STRB     r0,[r1,#0x410]        ;11678
000216  f8c10510          STR      r0,[r1,#0x510]        ;11679  ; _setup
00021a  f04f0001          MOV      r0,#1                 ;11681
00021e  f8c10518          STR      r0,[r1,#0x518]        ;11681  ; _setup
000222  f04f0000          MOV      r0,#0                 ;11683
000226  f8c10520          STR      r0,[r1,#0x520]        ;11683  ; _setup
00022a  f8810524          STRB     r0,[r1,#0x524]        ;11684
00022e  f44f7048          MOV      r0,#0x320             ;11686
000232  f8c10628          STR      r0,[r1,#0x628]        ;11686  ; _setup
000236  f1090001          ADD      r0,r9,#1              ;11688
00023a  eb0800c0          ADD      r0,r8,r0,LSL #3       ;11688
00023e  e9d01000          LDRD     r1,r0,[r0,#0]         ;11688
000242  f8c21630          STR      r1,[r2,#0x630]        ;11688  ; _setup
000246  f8c20634          STR      r0,[r2,#0x634]        ;11688  ; _setup
00024a  f1090002          ADD      r0,r9,#2              ;11689
00024e  eb0800c0          ADD      r0,r8,r0,LSL #3       ;11689
000252  e9d01000          LDRD     r1,r0,[r0,#0]         ;11689
000256  f8c21638          STR      r1,[r2,#0x638]        ;11689  ; _setup
00025a  f8c2063c          STR      r0,[r2,#0x63c]        ;11689  ; _setup
00025e  f1090003          ADD      r0,r9,#3              ;11690
000262  eb0801c0          ADD      r1,r8,r0,LSL #3       ;11690
000266  c903              LDM      r1,{r0,r1}            ;11690
000268  f50262c8          ADD      r2,r2,#0x640          ;11690
00026c  c203              STM      r2!,{r0,r1}           ;11690
00026e  f04f0100          MOV      r1,#0                 ;11697
000272  4823              LDR      r0,|L119.768|
000274  f8c01170          STR      r1,[r0,#0x170]        ;11697
000278  4a22              LDR      r2,|L119.772|
00027a  4923              LDR      r1,|L119.776|
00027c  f8c02178          STR      r2,[r0,#0x178]        ;11698
000280  f8c0117c          STR      r1,[r0,#0x17c]        ;11698
000284  f8c02180          STR      r2,[r0,#0x180]        ;11699
000288  f8c01184          STR      r1,[r0,#0x184]        ;11699
00028c  f04f0100          MOV      r1,#0                 ;11702
000290  f8c01190          STR      r1,[r0,#0x190]        ;11702
000294  f04f0102          MOV      r1,#2                 ;11704
000298  f8c011a0          STR      r1,[r0,#0x1a0]        ;11704
00029c  f04f0101          MOV      r1,#1                 ;11705
0002a0  f8c011a4          STR      r1,[r0,#0x1a4]        ;11705
0002a4  f04f0200          MOV      r2,#0                 ;11709
0002a8  480f              LDR      r0,|L119.744|
0002aa  f8c02150          STR      r2,[r0,#0x150]        ;11709
0002ae  f8c02154          STR      r2,[r0,#0x154]        ;11709
0002b2  f8c01d78          STR      r1,[r0,#0xd78]        ;11712
0002b6  4907              LDR      r1,|L119.724|
0002b8  4610              MOV      r0,r2                 ;11715
0002ba  f7fffffe          BL       write_g_codes
0002be  4905              LDR      r1,|L119.724|
0002c0  2000              MOVS     r0,#0                 ;11716
0002c2  f7fffffe          BL       write_m_codes
0002c6  4803              LDR      r0,|L119.724|
0002c8  f7fffffe          BL       write_settings
0002cc  f7fffffe          BL       rs274ngc_synch
0002d0  2000              MOVS     r0,#0                 ;11722
0002d2  e6d9              B        |L119.136|
;;;11724  
                          ENDP

                  |L119.724|
                          DCD      _setup
                  |L119.728|
0002d8  72733237          DCB      "rs274ngc.var",0
0002dc  346e6763
0002e0  2e766172
0002e4  00      
0002e5  00                DCB      0
0002e6  00                DCB      0
0002e7  00                DCB      0
                  |L119.744|
                          DCD      _setup+0xc000
                  |L119.748|
                          DCD      |symbol_number.520|
                  |L119.752|
                          DCD      _setup+0xb1ac
                  |L119.756|
                          DCD      _setup+0x648
                  |L119.760|
                          DCD      0xeb1c432d
                  |L119.764|
                          DCD      0x3f1a36e2
                  |L119.768|
                          DCD      _setup+0xb000
                  |L119.772|
                          DCD      0x0c924223
                  |L119.776|
                          DCD      0x3bc79ca1

                          AREA ||i.rs274ngc_line_length||, CODE, READONLY, ALIGN=2

                  rs274ngc_line_length PROC
;;;12393  
;;;12394      int rs274ngc_line_length()
000000  4801              LDR      r0,|L120.8|
;;;12395      {
;;;12396          return _setup.line_length;
000002  f8d00520          LDR      r0,[r0,#0x520]  ; _setup
;;;12397      }
000006  4770              BX       lr
;;;12398  
                          ENDP

                  |L120.8|
                          DCD      _setup

                          AREA ||i.rs274ngc_line_text||, CODE, READONLY, ALIGN=2

                  rs274ngc_line_text PROC
;;;12414  
;;;12415      void rs274ngc_line_text(                      /* ARGUMENTS                            */
000000  b510              PUSH     {r4,lr}
;;;12416      char * line_text,                             /* string: to copy line into            */
;;;12417      int max_size)                                 /* maximum number of characters to copy */
;;;12418      {
000002  4602              MOV      r2,r0
;;;12419          int n;
;;;12420          char * the_text;
;;;12421  
;;;12422          the_text SET_TO _setup.linetext;
000004  4c0b              LDR      r4,|L121.52|
000006  4623              MOV      r3,r4
;;;12423          for (n SET_TO 0; n < (max_size - 1); n++)
000008  f04f0400          MOV      r4,#0
00000c  4620              MOV      r0,r4
00000e  e008              B        |L121.34|
                  |L121.16|
;;;12424          {
;;;12425              if (the_text[n] ISNT 0)
000010  5c1c              LDRB     r4,[r3,r0]
000012  b114              CBZ      r4,|L121.26|
;;;12426                  line_text[n] SET_TO the_text[n];
000014  5c1c              LDRB     r4,[r3,r0]
000016  5414              STRB     r4,[r2,r0]
000018  e000              B        |L121.28|
                  |L121.26|
;;;12427              else
;;;12428                  break;
00001a  e005              B        |L121.40|
                  |L121.28|
00001c  f1000401          ADD      r4,r0,#1              ;12423
000020  4620              MOV      r0,r4                 ;12423
                  |L121.34|
000022  1e4c              SUBS     r4,r1,#1              ;12423
000024  4284              CMP      r4,r0                 ;12423
000026  dcf3              BGT      |L121.16|
                  |L121.40|
000028  bf00              NOP      
;;;12429          }
;;;12430          line_text[n] SET_TO 0;
00002a  f04f0400          MOV      r4,#0
00002e  5414              STRB     r4,[r2,r0]
;;;12431      }
000030  bd10              POP      {r4,pc}
;;;12432  
                          ENDP

000032  0000              DCW      0x0000
                  |L121.52|
                          DCD      _setup+0x524

                          AREA ||i.rs274ngc_load_tool_table||, CODE, READONLY, ALIGN=2

                  rs274ngc_load_tool_table PROC
;;;11748  
;;;11749      int rs274ngc_load_tool_table()                /* NO ARGUMENTS */
000000  f04f0100          MOV      r1,#0
;;;11750      {
;;;11751  //        static char name[] SET_TO "rs274ngc_load_tool_table";
;;;11752  //        int n;
;;;11753  //
;;;11754  //        CHK((_setup.tool_max > CANON_TOOL_MAX), NCE_TOOL_MAX_TOO_LARGE);
;;;11755  //        for (n SET_TO 0; n <= _setup.tool_max; n++)
;;;11756  //        {
;;;11757  //            _setup.tool_table[n] SET_TO GET_EXTERNAL_TOOL_TABLE(n);
;;;11758  //        }
;;;11759  //        for(; n <= CANON_TOOL_MAX; n++)
;;;11760  //        {
;;;11761  //            _setup.tool_table[n].id SET_TO 0;
;;;11762  //            _setup.tool_table[n].length SET_TO 0;
;;;11763  //            _setup.tool_table[n].diameter SET_TO 0;
;;;11764  //        }
;;;11765  		_setup.tool_table[0].id SET_TO 0;
000004  4805              LDR      r0,|L122.28|
000006  f8c01160          STR      r1,[r0,#0x160]
;;;11766  		_setup.tool_table[0].length SET_TO 0;
00000a  f50072b0          ADD      r2,r0,#0x160
00000e  6091              STR      r1,[r2,#8]
000010  60d1              STR      r1,[r2,#0xc]
;;;11767  		_setup.tool_table[0].diameter SET_TO 0;
000012  6111              STR      r1,[r2,#0x10]
000014  6151              STR      r1,[r2,#0x14]
;;;11768          return RS274NGC_OK;
000016  4608              MOV      r0,r1
;;;11769      }
000018  4770              BX       lr
;;;11770  
                          ENDP

00001a  0000              DCW      0x0000
                  |L122.28|
                          DCD      _setup+0xc000

                          AREA ||i.rs274ngc_open||, CODE, READONLY, ALIGN=2

                  rs274ngc_open PROC
;;;11816  
;;;11817      int rs274ngc_open(                            /* ARGUMENTS                                     */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;11818      const char * filename)                        /* string: the name of the input NC-program file */
;;;11819      {
000004  4607              MOV      r7,r0
;;;11820          static char name[] SET_TO "rs274ngc_open";
;;;11821          char * line;
;;;11822          int index;
;;;11823          int length;
;;;11824  
;;;11825          CHK((_setup.file_pointer ISNT NULL), NCE_A_FILE_IS_ALREADY_OPEN);
000006  48a4              LDR      r0,|L123.664|
000008  f8d00510          LDR      r0,[r0,#0x510]  ; _setup
00000c  b338              CBZ      r0,|L123.94|
00000e  f04f0100          MOV      r1,#0
000012  48a2              LDR      r0,|L123.668|
000014  f8c0114c          STR      r1,[r0,#0x14c]
000018  4601              MOV      r1,r0
00001a  f8d1314c          LDR      r3,[r1,#0x14c]
00001e  f8d1114c          LDR      r1,[r1,#0x14c]
000022  f1010101          ADD      r1,r1,#1
000026  4602              MOV      r2,r0
000028  f8c2114c          STR      r1,[r2,#0x14c]
00002c  eb030183          ADD      r1,r3,r3,LSL #2
000030  f6a06254          SUB      r2,r0,#0xe54
000034  eb021101          ADD      r1,r2,r1,LSL #4
000038  4608              MOV      r0,r1
00003a  4999              LDR      r1,|L123.672|
00003c  f7fffffe          BL       strcpy
000040  f04f0100          MOV      r1,#0
000044  4895              LDR      r0,|L123.668|
000046  f8d0014c          LDR      r0,[r0,#0x14c]
00004a  eb000080          ADD      r0,r0,r0,LSL #2
00004e  4a95              LDR      r2,|L123.676|
000050  eb021000          ADD      r0,r2,r0,LSL #4
000054  7001              STRB     r1,[r0,#0]
000056  f04f0004          MOV      r0,#4
                  |L123.90|
;;;11826          CHK((strlen(filename) > (RS274NGC_TEXT_SIZE - 1)), NCE_FILE_NAME_TOO_LONG);
;;;11827          _setup.file_pointer SET_TO fopen(filename, "r");
;;;11828          CHK((_setup.file_pointer IS NULL), NCE_UNABLE_TO_OPEN_FILE);
;;;11829          line SET_TO _setup.linetext;
;;;11830          for(index SET_TO -1; index IS -1;)        /* skip blank lines */
;;;11831          {
;;;11832              CHK((fgets(line, RS274NGC_TEXT_SIZE, _setup.file_pointer) IS NULL),
;;;11833                  NCE_FILE_ENDED_WITH_NO_PERCENT_SIGN);
;;;11834              length SET_TO strlen(line);
;;;11835              if (length IS (RS274NGC_TEXT_SIZE - 1))
;;;11836              {                                     // line is too long. need to finish reading the line to recover
;;;11837     // could look for EOF
;;;11838                  for(;fgetc(_setup.file_pointer) ISNT '\n';);
;;;11839                  ERM(NCE_COMMAND_TOO_LONG);
;;;11840              }
;;;11841              for(index SET_TO (length -1);         // index set on last char
;;;11842                  (index >= 0) AND (isspace(line[index]));
;;;11843                  index--);
;;;11844          }
;;;11845          if(line[index] IS '%')
;;;11846          {
;;;11847              for(index--; (index >= 0) AND (isspace(line[index])); index--);
;;;11848              if (index IS -1)
;;;11849                  _setup.percent_flag SET_TO ON;
;;;11850              else
;;;11851              {
;;;11852                  fseek(_setup.file_pointer, 0, SEEK_SET);
;;;11853                  _setup.percent_flag SET_TO OFF;
;;;11854              }
;;;11855          }
;;;11856          else
;;;11857          {
;;;11858              fseek(_setup.file_pointer, 0, SEEK_SET);
;;;11859              _setup.percent_flag SET_TO OFF;
;;;11860          }
;;;11861          strcpy(_setup.filename, filename);
;;;11862          _setup.sequence_number SET_TO 0;
;;;11863          rs274ngc_reset();
;;;11864          return RS274NGC_OK;
;;;11865      }
00005a  e8bd81f0          POP      {r4-r8,pc}
                  |L123.94|
00005e  4638              MOV      r0,r7                 ;11826
000060  f7fffffe          BL       strlen
000064  28ff              CMP      r0,#0xff              ;11826
000066  d925              BLS      |L123.180|
000068  f04f0100          MOV      r1,#0                 ;11826
00006c  488b              LDR      r0,|L123.668|
00006e  f8c0114c          STR      r1,[r0,#0x14c]        ;11826
000072  4601              MOV      r1,r0                 ;11826
000074  f8d1314c          LDR      r3,[r1,#0x14c]        ;11826
000078  f8d1114c          LDR      r1,[r1,#0x14c]        ;11826
00007c  f1010101          ADD      r1,r1,#1              ;11826
000080  4602              MOV      r2,r0                 ;11826
000082  f8c2114c          STR      r1,[r2,#0x14c]        ;11826
000086  eb030183          ADD      r1,r3,r3,LSL #2       ;11826
00008a  4a86              LDR      r2,|L123.676|
00008c  eb021101          ADD      r1,r2,r1,LSL #4       ;11826
000090  4608              MOV      r0,r1                 ;11826
000092  4983              LDR      r1,|L123.672|
000094  f7fffffe          BL       strcpy
000098  f04f0100          MOV      r1,#0                 ;11826
00009c  487f              LDR      r0,|L123.668|
00009e  f8d0014c          LDR      r0,[r0,#0x14c]        ;11826
0000a2  eb000080          ADD      r0,r0,r0,LSL #2       ;11826
0000a6  4a7f              LDR      r2,|L123.676|
0000a8  eb021000          ADD      r0,r2,r0,LSL #4       ;11826
0000ac  7001              STRB     r1,[r0,#0]            ;11826
0000ae  f04f0052          MOV      r0,#0x52              ;11826
0000b2  e7d2              B        |L123.90|
                  |L123.180|
0000b4  a17c              ADR      r1,|L123.680|
0000b6  4638              MOV      r0,r7                 ;11827
0000b8  f7fffffe          BL       fopen
0000bc  4976              LDR      r1,|L123.664|
0000be  f8c10510          STR      r0,[r1,#0x510]        ;11827  ; _setup
0000c2  4608              MOV      r0,r1                 ;11828
0000c4  f8d00510          LDR      r0,[r0,#0x510]        ;11828  ; _setup
0000c8  bb28              CBNZ     r0,|L123.278|
0000ca  f04f0100          MOV      r1,#0                 ;11828
0000ce  4873              LDR      r0,|L123.668|
0000d0  f8c0114c          STR      r1,[r0,#0x14c]        ;11828
0000d4  4601              MOV      r1,r0                 ;11828
0000d6  f8d1314c          LDR      r3,[r1,#0x14c]        ;11828
0000da  f8d1114c          LDR      r1,[r1,#0x14c]        ;11828
0000de  f1010101          ADD      r1,r1,#1              ;11828
0000e2  4602              MOV      r2,r0                 ;11828
0000e4  f8c2114c          STR      r1,[r2,#0x14c]        ;11828
0000e8  eb030183          ADD      r1,r3,r3,LSL #2       ;11828
0000ec  4a6d              LDR      r2,|L123.676|
0000ee  eb021101          ADD      r1,r2,r1,LSL #4       ;11828
0000f2  4608              MOV      r0,r1                 ;11828
0000f4  496a              LDR      r1,|L123.672|
0000f6  f7fffffe          BL       strcpy
0000fa  f04f0100          MOV      r1,#0                 ;11828
0000fe  4867              LDR      r0,|L123.668|
000100  f8d0014c          LDR      r0,[r0,#0x14c]        ;11828
000104  eb000080          ADD      r0,r0,r0,LSL #2       ;11828
000108  4a66              LDR      r2,|L123.676|
00010a  eb021000          ADD      r0,r2,r0,LSL #4       ;11828
00010e  7001              STRB     r1,[r0,#0]            ;11828
000110  f04f00aa          MOV      r0,#0xaa              ;11828
000114  e7a1              B        |L123.90|
                  |L123.278|
000116  4d65              LDR      r5,|L123.684|
000118  f04f34ff          MOV      r4,#0xffffffff        ;11830
00011c  e075              B        |L123.522|
                  |L123.286|
00011e  485e              LDR      r0,|L123.664|
000120  f8d00510          LDR      r0,[r0,#0x510]        ;11832  ; _setup
000124  4602              MOV      r2,r0                 ;11832
000126  f44f7180          MOV      r1,#0x100             ;11832
00012a  4628              MOV      r0,r5                 ;11832
00012c  f7fffffe          BL       fgets
000130  bb28              CBNZ     r0,|L123.382|
000132  f04f0100          MOV      r1,#0                 ;11832
000136  4859              LDR      r0,|L123.668|
000138  f8c0114c          STR      r1,[r0,#0x14c]        ;11832
00013c  4601              MOV      r1,r0                 ;11832
00013e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11832
000142  f8d1114c          LDR      r1,[r1,#0x14c]        ;11832
000146  f1010101          ADD      r1,r1,#1              ;11832
00014a  4602              MOV      r2,r0                 ;11832
00014c  f8c2114c          STR      r1,[r2,#0x14c]        ;11832
000150  eb030183          ADD      r1,r3,r3,LSL #2       ;11832
000154  4a53              LDR      r2,|L123.676|
000156  eb021101          ADD      r1,r2,r1,LSL #4       ;11832
00015a  4608              MOV      r0,r1                 ;11832
00015c  4950              LDR      r1,|L123.672|
00015e  f7fffffe          BL       strcpy
000162  f04f0100          MOV      r1,#0                 ;11832
000166  484d              LDR      r0,|L123.668|
000168  f8d0014c          LDR      r0,[r0,#0x14c]        ;11832
00016c  eb000080          ADD      r0,r0,r0,LSL #2       ;11832
000170  4a4c              LDR      r2,|L123.676|
000172  eb021000          ADD      r0,r2,r0,LSL #4       ;11832
000176  7001              STRB     r1,[r0,#0]            ;11832
000178  f04f0050          MOV      r0,#0x50              ;11832
00017c  e76d              B        |L123.90|
                  |L123.382|
00017e  4628              MOV      r0,r5                 ;11834
000180  f7fffffe          BL       strlen
000184  4606              MOV      r6,r0                 ;11834
000186  2eff              CMP      r6,#0xff              ;11835
000188  d12e              BNE      |L123.488|
00018a  bf00              NOP                            ;11838
                  |L123.396|
00018c  4942              LDR      r1,|L123.664|
00018e  f8d11510          LDR      r1,[r1,#0x510]        ;11838  ; _setup
000192  4608              MOV      r0,r1                 ;11838
000194  f7fffffe          BL       fgetc
000198  280a              CMP      r0,#0xa               ;11838
00019a  d1f7              BNE      |L123.396|
00019c  f04f0100          MOV      r1,#0                 ;11839
0001a0  483e              LDR      r0,|L123.668|
0001a2  f8c0114c          STR      r1,[r0,#0x14c]        ;11839
0001a6  4601              MOV      r1,r0                 ;11839
0001a8  f8d1314c          LDR      r3,[r1,#0x14c]        ;11839
0001ac  f8d1114c          LDR      r1,[r1,#0x14c]        ;11839
0001b0  f1010101          ADD      r1,r1,#1              ;11839
0001b4  4602              MOV      r2,r0                 ;11839
0001b6  f8c2114c          STR      r1,[r2,#0x14c]        ;11839
0001ba  eb030183          ADD      r1,r3,r3,LSL #2       ;11839
0001be  4a39              LDR      r2,|L123.676|
0001c0  eb021101          ADD      r1,r2,r1,LSL #4       ;11839
0001c4  4608              MOV      r0,r1                 ;11839
0001c6  4936              LDR      r1,|L123.672|
0001c8  f7fffffe          BL       strcpy
0001cc  f04f0100          MOV      r1,#0                 ;11839
0001d0  4832              LDR      r0,|L123.668|
0001d2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11839
0001d6  eb000080          ADD      r0,r0,r0,LSL #2       ;11839
0001da  4a32              LDR      r2,|L123.676|
0001dc  eb021000          ADD      r0,r2,r0,LSL #4       ;11839
0001e0  7001              STRB     r1,[r0,#0]            ;11839
0001e2  f04f0042          MOV      r0,#0x42              ;11839
0001e6  e738              B        |L123.90|
                  |L123.488|
0001e8  f1a60001          SUB      r0,r6,#1              ;11841
0001ec  4604              MOV      r4,r0                 ;11841
0001ee  e002              B        |L123.502|
                  |L123.496|
0001f0  f1a40001          SUB      r0,r4,#1              ;11843
0001f4  4604              MOV      r4,r0                 ;11843
                  |L123.502|
0001f6  2c00              CMP      r4,#0                 ;11842
0001f8  db07              BLT      |L123.522|
0001fa  f7fffffe          BL       __rt_ctype_table
0001fe  6800              LDR      r0,[r0,#0]            ;11842
000200  5d29              LDRB     r1,[r5,r4]            ;11842
000202  5c40              LDRB     r0,[r0,r1]            ;11842
000204  f0100f01          TST      r0,#1                 ;11842
000208  d1f2              BNE      |L123.496|
                  |L123.522|
00020a  1c60              ADDS     r0,r4,#1              ;11830
00020c  d087              BEQ      |L123.286|
00020e  5d28              LDRB     r0,[r5,r4]            ;11845
000210  2825              CMP      r0,#0x25              ;11845
000212  d126              BNE      |L123.610|
000214  f1a40001          SUB      r0,r4,#1              ;11847
000218  4604              MOV      r4,r0                 ;11847
00021a  e002              B        |L123.546|
                  |L123.540|
00021c  f1a40001          SUB      r0,r4,#1              ;11847
000220  4604              MOV      r4,r0                 ;11847
                  |L123.546|
000222  2c00              CMP      r4,#0                 ;11847
000224  db07              BLT      |L123.566|
000226  f7fffffe          BL       __rt_ctype_table
00022a  6800              LDR      r0,[r0,#0]            ;11847
00022c  5d29              LDRB     r1,[r5,r4]            ;11847
00022e  5c40              LDRB     r0,[r0,r1]            ;11847
000230  f0100f01          TST      r0,#1                 ;11847
000234  d1f2              BNE      |L123.540|
                  |L123.566|
000236  1c60              ADDS     r0,r4,#1              ;11848
000238  d105              BNE      |L123.582|
00023a  f04f0101          MOV      r1,#1                 ;11849
00023e  481c              LDR      r0,|L123.688|
000240  f8c01168          STR      r1,[r0,#0x168]        ;11849
000244  e01a              B        |L123.636|
                  |L123.582|
000246  4914              LDR      r1,|L123.664|
000248  f8d11510          LDR      r1,[r1,#0x510]        ;11852  ; _setup
00024c  4608              MOV      r0,r1                 ;11852
00024e  2200              MOVS     r2,#0                 ;11852
000250  4611              MOV      r1,r2                 ;11852
000252  f7fffffe          BL       fseek
000256  f04f0100          MOV      r1,#0                 ;11853
00025a  4815              LDR      r0,|L123.688|
00025c  f8c01168          STR      r1,[r0,#0x168]        ;11853
000260  e00c              B        |L123.636|
                  |L123.610|
000262  490d              LDR      r1,|L123.664|
000264  f8d11510          LDR      r1,[r1,#0x510]        ;11858  ; _setup
000268  4608              MOV      r0,r1                 ;11858
00026a  2200              MOVS     r2,#0                 ;11858
00026c  4611              MOV      r1,r2                 ;11858
00026e  f7fffffe          BL       fseek
000272  f04f0100          MOV      r1,#0                 ;11859
000276  480e              LDR      r0,|L123.688|
000278  f8c01168          STR      r1,[r0,#0x168]        ;11859
                  |L123.636|
00027c  4639              MOV      r1,r7                 ;11861
00027e  480d              LDR      r0,|L123.692|
000280  f7fffffe          BL       strcpy
000284  f04f0100          MOV      r1,#0                 ;11862
000288  4809              LDR      r0,|L123.688|
00028a  f8c01190          STR      r1,[r0,#0x190]        ;11862
00028e  f7fffffe          BL       rs274ngc_reset
000292  2000              MOVS     r0,#0                 ;11864
000294  e6e1              B        |L123.90|
;;;11866  
                          ENDP

000296  0000              DCW      0x0000
                  |L123.664|
                          DCD      _setup
                  |L123.668|
                          DCD      _setup+0xc000
                  |L123.672|
                          DCD      |symbol_number.521|
                  |L123.676|
                          DCD      _setup+0xb1ac
                  |L123.680|
0002a8  7200              DCB      "r",0
0002aa  00                DCB      0
0002ab  00                DCB      0
                  |L123.684|
                          DCD      _setup+0x524
                  |L123.688|
                          DCD      _setup+0xb000
                  |L123.692|
                          DCD      _setup+0x410

                          AREA ||i.rs274ngc_read||, CODE, READONLY, ALIGN=2

                  rs274ngc_read PROC
;;;11897  
;;;11898      int rs274ngc_read(                            /* ARGUMENTS                       */
000000  b5f8              PUSH     {r3-r7,lr}
;;;11899      const char * command)                         /* may be NULL or a string to read */
;;;11900      {
000002  4605              MOV      r5,r0
;;;11901          static char name[] SET_TO "rs274ngc_read";
;;;11902          int status;
;;;11903          int read_status;
;;;11904  
;;;11905          if (_setup.probe_flag IS ON)
000004  4867              LDR      r0,|L124.420|
000006  f8d00170          LDR      r0,[r0,#0x170]
00000a  2801              CMP      r0,#1
00000c  d131              BNE      |L124.114|
;;;11906          {
;;;11907              CHK((GET_EXTERNAL_QUEUE_EMPTY() IS 0),
00000e  f7fffffe          BL       GET_EXTERNAL_QUEUE_EMPTY
000012  bb30              CBNZ     r0,|L124.98|
000014  f04f0100          MOV      r1,#0
000018  4863              LDR      r0,|L124.424|
00001a  f8c0114c          STR      r1,[r0,#0x14c]
00001e  4601              MOV      r1,r0
000020  f8d1314c          LDR      r3,[r1,#0x14c]
000024  f8d1114c          LDR      r1,[r1,#0x14c]
000028  f1010101          ADD      r1,r1,#1
00002c  4602              MOV      r2,r0
00002e  f8c2114c          STR      r1,[r2,#0x14c]
000032  eb030183          ADD      r1,r3,r3,LSL #2
000036  f6a06254          SUB      r2,r0,#0xe54
00003a  eb021101          ADD      r1,r2,r1,LSL #4
00003e  4608              MOV      r0,r1
000040  495a              LDR      r1,|L124.428|
000042  f7fffffe          BL       strcpy
000046  f04f0100          MOV      r1,#0
00004a  4857              LDR      r0,|L124.424|
00004c  f8d0014c          LDR      r0,[r0,#0x14c]
000050  eb000080          ADD      r0,r0,r0,LSL #2
000054  4a56              LDR      r2,|L124.432|
000056  eb021000          ADD      r0,r2,r0,LSL #4
00005a  7001              STRB     r1,[r0,#0]
00005c  f04f0091          MOV      r0,#0x91
                  |L124.96|
;;;11908                  NCE_QUEUE_IS_NOT_EMPTY_AFTER_PROBING);
;;;11909              set_probe_data(&_setup);
;;;11910              _setup.probe_flag SET_TO OFF;
;;;11911          }
;;;11912          CHK(((command IS NULL) AND (_setup.file_pointer IS NULL)),
;;;11913              NCE_FILE_NOT_OPEN);
;;;11914          read_status SET_TO read_text(command, _setup.file_pointer, _setup.linetext,
;;;11915              _setup.blocktext, &_setup.line_length);
;;;11916          if ((read_status IS RS274NGC_EXECUTE_FINISH) OR
;;;11917              (read_status IS RS274NGC_OK))
;;;11918          {
;;;11919              if (_setup.line_length ISNT 0)
;;;11920              {
;;;11921                  CHP(parse_line(_setup.blocktext, &(_setup.block1), &_setup));
;;;11922              }
;;;11923          }
;;;11924          else if (read_status IS RS274NGC_ENDFILE);
;;;11925          else
;;;11926              ERP(read_status);
;;;11927          return read_status;
;;;11928      }
000060  bdf8              POP      {r3-r7,pc}
                  |L124.98|
000062  4854              LDR      r0,|L124.436|
000064  f7fffffe          BL       set_probe_data
000068  f04f0100          MOV      r1,#0                 ;11910
00006c  484d              LDR      r0,|L124.420|
00006e  f8c01170          STR      r1,[r0,#0x170]        ;11910
                  |L124.114|
000072  bb4d              CBNZ     r5,|L124.200|
000074  484f              LDR      r0,|L124.436|
000076  f8d00510          LDR      r0,[r0,#0x510]        ;11912  ; _setup
00007a  bb28              CBNZ     r0,|L124.200|
00007c  f04f0100          MOV      r1,#0                 ;11912
000080  4849              LDR      r0,|L124.424|
000082  f8c0114c          STR      r1,[r0,#0x14c]        ;11912
000086  4601              MOV      r1,r0                 ;11912
000088  f8d1314c          LDR      r3,[r1,#0x14c]        ;11912
00008c  f8d1114c          LDR      r1,[r1,#0x14c]        ;11912
000090  f1010101          ADD      r1,r1,#1              ;11912
000094  4602              MOV      r2,r0                 ;11912
000096  f8c2114c          STR      r1,[r2,#0x14c]        ;11912
00009a  eb030183          ADD      r1,r3,r3,LSL #2       ;11912
00009e  4a44              LDR      r2,|L124.432|
0000a0  eb021101          ADD      r1,r2,r1,LSL #4       ;11912
0000a4  4608              MOV      r0,r1                 ;11912
0000a6  4941              LDR      r1,|L124.428|
0000a8  f7fffffe          BL       strcpy
0000ac  f04f0100          MOV      r1,#0                 ;11912
0000b0  483d              LDR      r0,|L124.424|
0000b2  f8d0014c          LDR      r0,[r0,#0x14c]        ;11912
0000b6  eb000080          ADD      r0,r0,r0,LSL #2       ;11912
0000ba  4a3d              LDR      r2,|L124.432|
0000bc  eb021000          ADD      r0,r2,r0,LSL #4       ;11912
0000c0  7001              STRB     r1,[r0,#0]            ;11912
0000c2  f04f0053          MOV      r0,#0x53              ;11912
0000c6  e7cb              B        |L124.96|
                  |L124.200|
0000c8  483b              LDR      r0,|L124.440|
0000ca  9000              STR      r0,[sp,#0]            ;11914
0000cc  4839              LDR      r0,|L124.436|
0000ce  f8d00510          LDR      r0,[r0,#0x510]        ;11914  ; _setup
0000d2  4601              MOV      r1,r0                 ;11914
0000d4  4b39              LDR      r3,|L124.444|
0000d6  f5037227          ADD      r2,r3,#0x29c          ;11914
0000da  4628              MOV      r0,r5                 ;11914
0000dc  f7fffffe          BL       read_text
0000e0  4604              MOV      r4,r0                 ;11914
0000e2  2c02              CMP      r4,#2                 ;11916
0000e4  d000              BEQ      |L124.232|
0000e6  bb84              CBNZ     r4,|L124.330|
                  |L124.232|
0000e8  4832              LDR      r0,|L124.436|
0000ea  f8d00520          LDR      r0,[r0,#0x520]        ;11919  ; _setup
0000ee  2800              CMP      r0,#0                 ;11919
0000f0  d056              BEQ      |L124.416|
0000f2  4a30              LDR      r2,|L124.436|
0000f4  f1020180          ADD      r1,r2,#0x80           ;11921
0000f8  4830              LDR      r0,|L124.444|
0000fa  f7fffffe          BL       parse_line
0000fe  0006              MOVS     r6,r0                 ;11921
000100  d04e              BEQ      |L124.416|
000102  4829              LDR      r0,|L124.424|
000104  f8d0014c          LDR      r0,[r0,#0x14c]        ;11921
000108  2831              CMP      r0,#0x31              ;11921
00010a  da1f              BGE      |L124.332|
00010c  4926              LDR      r1,|L124.424|
00010e  f8d1314c          LDR      r3,[r1,#0x14c]        ;11921
000112  f8d1114c          LDR      r1,[r1,#0x14c]        ;11921
000116  1c49              ADDS     r1,r1,#1              ;11921
000118  4a23              LDR      r2,|L124.424|
00011a  f8c2114c          STR      r1,[r2,#0x14c]        ;11921
00011e  eb030183          ADD      r1,r3,r3,LSL #2       ;11921
000122  4a23              LDR      r2,|L124.432|
000124  eb021101          ADD      r1,r2,r1,LSL #4       ;11921
000128  4608              MOV      r0,r1                 ;11921
00012a  4920              LDR      r1,|L124.428|
00012c  f7fffffe          BL       strcpy
000130  f04f0100          MOV      r1,#0                 ;11921
000134  481c              LDR      r0,|L124.424|
000136  f8d0014c          LDR      r0,[r0,#0x14c]        ;11921
00013a  eb000080          ADD      r0,r0,r0,LSL #2       ;11921
00013e  4a1c              LDR      r2,|L124.432|
000140  eb021000          ADD      r0,r2,r0,LSL #4       ;11921
000144  7001              STRB     r1,[r0,#0]            ;11921
000146  4630              MOV      r0,r6                 ;11921
000148  e78a              B        |L124.96|
                  |L124.330|
00014a  e001              B        |L124.336|
                  |L124.332|
00014c  4630              MOV      r0,r6                 ;11921
00014e  e787              B        |L124.96|
                  |L124.336|
000150  2c03              CMP      r4,#3                 ;11924
000152  d025              BEQ      |L124.416|
000154  4814              LDR      r0,|L124.424|
000156  f8d0014c          LDR      r0,[r0,#0x14c]        ;11926
00015a  2831              CMP      r0,#0x31              ;11926
00015c  da1e              BGE      |L124.412|
00015e  4912              LDR      r1,|L124.424|
000160  f8d1314c          LDR      r3,[r1,#0x14c]        ;11926
000164  f8d1114c          LDR      r1,[r1,#0x14c]        ;11926
000168  1c49              ADDS     r1,r1,#1              ;11926
00016a  4a0f              LDR      r2,|L124.424|
00016c  f8c2114c          STR      r1,[r2,#0x14c]        ;11926
000170  eb030183          ADD      r1,r3,r3,LSL #2       ;11926
000174  4a0e              LDR      r2,|L124.432|
000176  eb021101          ADD      r1,r2,r1,LSL #4       ;11926
00017a  4608              MOV      r0,r1                 ;11926
00017c  490b              LDR      r1,|L124.428|
00017e  f7fffffe          BL       strcpy
000182  f04f0100          MOV      r1,#0                 ;11926
000186  4808              LDR      r0,|L124.424|
000188  f8d0014c          LDR      r0,[r0,#0x14c]        ;11926
00018c  eb000080          ADD      r0,r0,r0,LSL #2       ;11926
000190  4a07              LDR      r2,|L124.432|
000192  eb021000          ADD      r0,r2,r0,LSL #4       ;11926
000196  7001              STRB     r1,[r0,#0]            ;11926
000198  4620              MOV      r0,r4                 ;11926
00019a  e761              B        |L124.96|
                  |L124.412|
00019c  4620              MOV      r0,r4                 ;11926
00019e  e75f              B        |L124.96|
                  |L124.416|
0001a0  4620              MOV      r0,r4                 ;11927
0001a2  e75d              B        |L124.96|
;;;11929  
                          ENDP

                  |L124.420|
                          DCD      _setup+0xb000
                  |L124.424|
                          DCD      _setup+0xc000
                  |L124.428|
                          DCD      |symbol_number.522|
                  |L124.432|
                          DCD      _setup+0xb1ac
                  |L124.436|
                          DCD      _setup
                  |L124.440|
                          DCD      _setup+0x520
                  |L124.444|
                          DCD      _setup+0x288

                          AREA ||i.rs274ngc_reset||, CODE, READONLY, ALIGN=2

                  rs274ngc_reset PROC
;;;11960  
;;;11961      int rs274ngc_reset()
000000  f04f0000          MOV      r0,#0
;;;11962      {
;;;11963          _setup.linetext[0] SET_TO 0;
000004  4903              LDR      r1,|L125.20|
000006  f8810524          STRB     r0,[r1,#0x524]
;;;11964          _setup.blocktext[0] SET_TO 0;
00000a  f8810288          STRB     r0,[r1,#0x288]
;;;11965          _setup.line_length SET_TO 0;
00000e  f8c10520          STR      r0,[r1,#0x520]  ; _setup
;;;11966  
;;;11967          return RS274NGC_OK;
;;;11968      }
000012  4770              BX       lr
;;;11969  
                          ENDP

                  |L125.20|
                          DCD      _setup

                          AREA ||i.rs274ngc_restore_parameters||, CODE, READONLY, ALIGN=2

                  rs274ngc_restore_parameters PROC
;;;12006     */
;;;12007      int rs274ngc_restore_parameters(              /* ARGUMENTS                        */
000000  b530              PUSH     {r4,r5,lr}
;;;12008      const char * filename)                        /* name of parameter file to read   */
;;;12009      {
000002  4603              MOV      r3,r0
;;;12010  //        static char name[] SET_TO "rs274ngc_restore_parameters";
;;;12011  //        FILE * infile;
;;;12012  //        char line[256];
;;;12013  //        int variable;
;;;12014  //        double value;
;;;12015  //        int required;                             // number of next required parameter
;;;12016  //        int index;                                // index into _required_parameters
;;;12017          double * pars;                            // short name for _setup.parameters
;;;12018          int k;
;;;12019  //
;;;12020  //   // open original for reading
;;;12021  //        infile SET_TO fopen(filename, "r");
;;;12022  //        CHK((infile IS NULL), NCE_UNABLE_TO_OPEN_FILE);
;;;12023  //
;;;12024          pars SET_TO _setup.parameters;
000004  480d              LDR      r0,|L126.60|
000006  4602              MOV      r2,r0
;;;12025  //        k SET_TO 0;
;;;12026  //        index SET_TO 0;
;;;12027  //        required SET_TO _required_parameters[index++];
;;;12028  //        while (feof(infile) IS 0)
;;;12029  //        {
;;;12030  //            if (fgets(line, 256, infile) IS NULL)
;;;12031  //            {
;;;12032  //                break;
;;;12033  //            }
;;;12034  //
;;;12035  //   // try for a variable-value match in the file
;;;12036  //            if (sscanf(line, "%d %lf", &variable, &value) IS 2)
;;;12037  //            {
;;;12038  //                CHK(((variable <= 0) OR (variable >= RS274NGC_MAX_PARAMETERS)),
;;;12039  //                    NCE_PARAMETER_NUMBER_OUT_OF_RANGE);
;;;12040  //                for (; k < RS274NGC_MAX_PARAMETERS; k++)
;;;12041  //                {
;;;12042  //                    if (k > variable)
;;;12043  //                        ERM(NCE_PARAMETER_FILE_OUT_OF_ORDER);
;;;12044  //                    else if (k IS variable)
;;;12045  //                    {
;;;12046  //                        pars[k] SET_TO value;
;;;12047  //                        if (k IS required)
;;;12048  //                            required SET_TO _required_parameters[index++];
;;;12049  //                        k++;
;;;12050  //                        break;
;;;12051  //                    }
;;;12052  //                    else                          // if (k < variable)
;;;12053  //                    {
;;;12054  //                        if (k IS required)
;;;12055  //                            ERM(NCE_REQUIRED_PARAMETER_MISSING);
;;;12056  //                        else
;;;12057  //                            pars[k] SET_TO 0;
;;;12058  //                    }
;;;12059  //                }
;;;12060  //            }
;;;12061  //        }
;;;12062  //        fclose(infile);
;;;12063  //        CHK((required ISNT RS274NGC_MAX_PARAMETERS), NCE_REQUIRED_PARAMETER_MISSING);
;;;12064          for (; k < RS274NGC_MAX_PARAMETERS; k++)
000008  e008              B        |L126.28|
                  |L126.10|
;;;12065          {
;;;12066              pars[k] SET_TO 0;
00000a  f04f0000          MOV      r0,#0
00000e  eb0205c1          ADD      r5,r2,r1,LSL #3
000012  6028              STR      r0,[r5,#0]
000014  6068              STR      r0,[r5,#4]
000016  f1010001          ADD      r0,r1,#1              ;12064
00001a  4601              MOV      r1,r0                 ;12064
                  |L126.28|
00001c  f2415018          MOV      r0,#0x1518            ;12064
000020  4281              CMP      r1,r0                 ;12064
000022  dbf2              BLT      |L126.10|
;;;12067          }
;;;12068  		pars[5220]=1.0;
000024  f04f0400          MOV      r4,#0
000028  4805              LDR      r0,|L126.64|
00002a  f5024520          ADD      r5,r2,#0xa000
00002e  f8c54320          STR      r4,[r5,#0x320]
000032  f8c50324          STR      r0,[r5,#0x324]
;;;12069          return RS274NGC_OK;
000036  f04f0000          MOV      r0,#0
;;;12070      }
00003a  bd30              POP      {r4,r5,pc}
;;;12071  
                          ENDP

                  |L126.60|
                          DCD      _setup+0x648
                  |L126.64|
                          DCD      0x3ff00000

                          AREA ||i.rs274ngc_save_parameters||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_int
                          REQUIRE _scanf_real
                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_f
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_fp_dec
                  rs274ngc_save_parameters PROC
;;;12105     */
;;;12106      int rs274ngc_save_parameters(                 /* ARGUMENTS             */
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;12107      const char * filename,                        /* name of file to write */
;;;12108      const double parameters[])                    /* parameters to save    */
;;;12109      {
000004  b0c6              SUB      sp,sp,#0x118
000006  4682              MOV      r10,r0
000008  460d              MOV      r5,r1
;;;12110          static char name[] SET_TO "rs274ngc_save_parameters";
;;;12111          FILE * infile;
;;;12112          FILE * outfile;
;;;12113          char line[256];
;;;12114          int variable;
;;;12115          double value;
;;;12116          int required;                             // number of next required parameter
;;;12117          int index;                                // index into _required_parameters
;;;12118          int k;
;;;12119  
;;;12120     // rename as .bak
;;;12121          strcpy(line, filename);
00000a  4651              MOV      r1,r10
00000c  a805              ADD      r0,sp,#0x14
00000e  f7fffffe          BL       strcpy
;;;12122          strcat(line, RS274NGC_PARAMETER_FILE_BACKUP_SUFFIX);
000012  a1b6              ADR      r1,|L127.748|
000014  a805              ADD      r0,sp,#0x14
000016  f7fffffe          BL       strcat
;;;12123          CHK((rename(filename, line) ISNT 0), NCE_CANNOT_CREATE_BACKUP_FILE);
00001a  a905              ADD      r1,sp,#0x14
00001c  4650              MOV      r0,r10
00001e  f7fffffe          BL       rename
000022  b340              CBZ      r0,|L127.118|
000024  f04f0100          MOV      r1,#0
000028  48b2              LDR      r0,|L127.756|
00002a  f8c0114c          STR      r1,[r0,#0x14c]
00002e  4601              MOV      r1,r0
000030  f8d1314c          LDR      r3,[r1,#0x14c]
000034  f8d1114c          LDR      r1,[r1,#0x14c]
000038  f1010101          ADD      r1,r1,#1
00003c  4602              MOV      r2,r0
00003e  f8c2114c          STR      r1,[r2,#0x14c]
000042  eb030183          ADD      r1,r3,r3,LSL #2
000046  f6a06254          SUB      r2,r0,#0xe54
00004a  eb021101          ADD      r1,r2,r1,LSL #4
00004e  4608              MOV      r0,r1
000050  49a9              LDR      r1,|L127.760|
000052  f7fffffe          BL       strcpy
000056  f04f0100          MOV      r1,#0
00005a  48a6              LDR      r0,|L127.756|
00005c  f8d0014c          LDR      r0,[r0,#0x14c]
000060  eb000080          ADD      r0,r0,r0,LSL #2
000064  4aa5              LDR      r2,|L127.764|
000066  eb021000          ADD      r0,r2,r0,LSL #4
00006a  7001              STRB     r1,[r0,#0]
00006c  f04f0028          MOV      r0,#0x28
                  |L127.112|
;;;12124  
;;;12125     // open backup for reading
;;;12126          infile SET_TO fopen(line, "r");
;;;12127          CHK((infile IS NULL), NCE_CANNOT_OPEN_BACKUP_FILE);
;;;12128  
;;;12129     // open original for writing
;;;12130          outfile SET_TO fopen(filename, "w");
;;;12131          CHK((outfile IS NULL), NCE_CANNOT_OPEN_VARIABLE_FILE);
;;;12132  
;;;12133          k SET_TO 0;
;;;12134          index SET_TO 0;
;;;12135          required SET_TO _required_parameters[index++];
;;;12136          while (feof(infile) IS 0)
;;;12137          {
;;;12138              if (fgets(line, 256, infile) IS NULL)
;;;12139              {
;;;12140                  break;
;;;12141              }
;;;12142     // try for a variable-value match
;;;12143              if (sscanf(line, "%d %f", &variable, &value) IS 2)
;;;12144              {
;;;12145                  CHK(((variable <= 0) OR (variable >= RS274NGC_MAX_PARAMETERS)),
;;;12146                      NCE_PARAMETER_NUMBER_OUT_OF_RANGE);
;;;12147                  for (; k < RS274NGC_MAX_PARAMETERS; k++)
;;;12148                  {
;;;12149                      if (k > variable)
;;;12150                          ERM(NCE_PARAMETER_FILE_OUT_OF_ORDER);
;;;12151                      else if (k IS variable)
;;;12152                      {
;;;12153                          sprintf(line, "%d\t%f\r\n", k, parameters[k]);
;;;12154                          fputs(line, outfile);
;;;12155                          if (k IS required)
;;;12156                              required SET_TO _required_parameters[index++];
;;;12157                          k++;
;;;12158                          break;
;;;12159                      }
;;;12160                      else if (k IS required)       // know (k < variable)
;;;12161                      {
;;;12162                          sprintf(line, "%d\t%f\r\n", k, parameters[k]);
;;;12163                          fputs(line, outfile);
;;;12164                          required SET_TO _required_parameters[index++];
;;;12165                      }
;;;12166                  }
;;;12167              }
;;;12168          }
;;;12169          fclose(infile);
;;;12170          for (; k < RS274NGC_MAX_PARAMETERS; k++)
;;;12171          {
;;;12172              if (k IS required)
;;;12173              {
;;;12174                  sprintf(line, "%d\t%f\r\n", k, parameters[k]);
;;;12175                  fputs(line, outfile);
;;;12176                  required SET_TO _required_parameters[index++];
;;;12177              }
;;;12178          }
;;;12179          fclose(outfile);
;;;12180  
;;;12181          return RS274NGC_OK;
;;;12182      }
000070  b046              ADD      sp,sp,#0x118
000072  e8bd87f0          POP      {r4-r10,pc}
                  |L127.118|
000076  a1a2              ADR      r1,|L127.768|
000078  a805              ADD      r0,sp,#0x14           ;12126
00007a  f7fffffe          BL       fopen
00007e  4606              MOV      r6,r0                 ;12126
000080  bb2e              CBNZ     r6,|L127.206|
000082  f04f0100          MOV      r1,#0                 ;12127
000086  489b              LDR      r0,|L127.756|
000088  f8c0114c          STR      r1,[r0,#0x14c]        ;12127
00008c  4601              MOV      r1,r0                 ;12127
00008e  f8d1314c          LDR      r3,[r1,#0x14c]        ;12127
000092  f8d1114c          LDR      r1,[r1,#0x14c]        ;12127
000096  f1010101          ADD      r1,r1,#1              ;12127
00009a  4602              MOV      r2,r0                 ;12127
00009c  f8c2114c          STR      r1,[r2,#0x14c]        ;12127
0000a0  eb030183          ADD      r1,r3,r3,LSL #2       ;12127
0000a4  4a95              LDR      r2,|L127.764|
0000a6  eb021101          ADD      r1,r2,r1,LSL #4       ;12127
0000aa  4608              MOV      r0,r1                 ;12127
0000ac  4992              LDR      r1,|L127.760|
0000ae  f7fffffe          BL       strcpy
0000b2  f04f0100          MOV      r1,#0                 ;12127
0000b6  488f              LDR      r0,|L127.756|
0000b8  f8d0014c          LDR      r0,[r0,#0x14c]        ;12127
0000bc  eb000080          ADD      r0,r0,r0,LSL #2       ;12127
0000c0  4a8e              LDR      r2,|L127.764|
0000c2  eb021000          ADD      r0,r2,r0,LSL #4       ;12127
0000c6  7001              STRB     r1,[r0,#0]            ;12127
0000c8  f04f002d          MOV      r0,#0x2d              ;12127
0000cc  e7d0              B        |L127.112|
                  |L127.206|
0000ce  a18d              ADR      r1,|L127.772|
0000d0  4650              MOV      r0,r10                ;12130
0000d2  f7fffffe          BL       fopen
0000d6  4607              MOV      r7,r0                 ;12130
0000d8  bb2f              CBNZ     r7,|L127.294|
0000da  f04f0100          MOV      r1,#0                 ;12131
0000de  4885              LDR      r0,|L127.756|
0000e0  f8c0114c          STR      r1,[r0,#0x14c]        ;12131
0000e4  4601              MOV      r1,r0                 ;12131
0000e6  f8d1314c          LDR      r3,[r1,#0x14c]        ;12131
0000ea  f8d1114c          LDR      r1,[r1,#0x14c]        ;12131
0000ee  f1010101          ADD      r1,r1,#1              ;12131
0000f2  4602              MOV      r2,r0                 ;12131
0000f4  f8c2114c          STR      r1,[r2,#0x14c]        ;12131
0000f8  eb030183          ADD      r1,r3,r3,LSL #2       ;12131
0000fc  4a7f              LDR      r2,|L127.764|
0000fe  eb021101          ADD      r1,r2,r1,LSL #4       ;12131
000102  4608              MOV      r0,r1                 ;12131
000104  497c              LDR      r1,|L127.760|
000106  f7fffffe          BL       strcpy
00010a  f04f0100          MOV      r1,#0                 ;12131
00010e  4879              LDR      r0,|L127.756|
000110  f8d0014c          LDR      r0,[r0,#0x14c]        ;12131
000114  eb000080          ADD      r0,r0,r0,LSL #2       ;12131
000118  4a78              LDR      r2,|L127.764|
00011a  eb021000          ADD      r0,r2,r0,LSL #4       ;12131
00011e  7001              STRB     r1,[r0,#0]            ;12131
000120  f04f002e          MOV      r0,#0x2e              ;12131
000124  e7a4              B        |L127.112|
                  |L127.294|
000126  f04f0400          MOV      r4,#0                 ;12133
00012a  4620              MOV      r0,r4                 ;12134
00012c  4681              MOV      r9,r0                 ;12134
00012e  4648              MOV      r0,r9                 ;12135
000130  f1090101          ADD      r1,r9,#1              ;12135
000134  4689              MOV      r9,r1                 ;12135
000136  4974              LDR      r1,|L127.776|
000138  f8518020          LDR      r8,[r1,r0,LSL #2]     ;12135
                  |L127.316|
00013c  e0a6              B        |L127.652|
                  |L127.318|
00013e  4632              MOV      r2,r6                 ;12138
000140  f44f7180          MOV      r1,#0x100             ;12138
000144  a805              ADD      r0,sp,#0x14           ;12138
000146  f7fffffe          BL       fgets
00014a  b900              CBNZ     r0,|L127.334|
00014c  e0a4              B        |L127.664|
                  |L127.334|
00014e  ab02              ADD      r3,sp,#8              ;12143
000150  aa04              ADD      r2,sp,#0x10           ;12143
000152  a16e              ADR      r1,|L127.780|
000154  a805              ADD      r0,sp,#0x14           ;12143
000156  f7fffffe          BL       __0sscanf
00015a  2802              CMP      r0,#2                 ;12143
00015c  d1ee              BNE      |L127.316|
00015e  9804              LDR      r0,[sp,#0x10]         ;12145
000160  2800              CMP      r0,#0                 ;12145
000162  dd04              BLE      |L127.366|
000164  f2415118          MOV      r1,#0x1518            ;12145
000168  9804              LDR      r0,[sp,#0x10]         ;12145
00016a  4288              CMP      r0,r1                 ;12145
00016c  db25              BLT      |L127.442|
                  |L127.366|
00016e  f04f0100          MOV      r1,#0                 ;12145
000172  4860              LDR      r0,|L127.756|
000174  f8c0114c          STR      r1,[r0,#0x14c]        ;12145
000178  4601              MOV      r1,r0                 ;12145
00017a  f8d1314c          LDR      r3,[r1,#0x14c]        ;12145
00017e  f8d1114c          LDR      r1,[r1,#0x14c]        ;12145
000182  f1010101          ADD      r1,r1,#1              ;12145
000186  4602              MOV      r2,r0                 ;12145
000188  f8c2114c          STR      r1,[r2,#0x14c]        ;12145
00018c  eb030183          ADD      r1,r3,r3,LSL #2       ;12145
000190  4a5a              LDR      r2,|L127.764|
000192  eb021101          ADD      r1,r2,r1,LSL #4       ;12145
000196  4608              MOV      r0,r1                 ;12145
000198  4957              LDR      r1,|L127.760|
00019a  f7fffffe          BL       strcpy
00019e  f04f0100          MOV      r1,#0                 ;12145
0001a2  4854              LDR      r0,|L127.756|
0001a4  f8d0014c          LDR      r0,[r0,#0x14c]        ;12145
0001a8  eb000080          ADD      r0,r0,r0,LSL #2       ;12145
0001ac  4a53              LDR      r2,|L127.764|
0001ae  eb021000          ADD      r0,r2,r0,LSL #4       ;12145
0001b2  7001              STRB     r1,[r0,#0]            ;12145
0001b4  f04f008e          MOV      r0,#0x8e              ;12145
0001b8  e75a              B        |L127.112|
                  |L127.442|
0001ba  e062              B        |L127.642|
                  |L127.444|
0001bc  9804              LDR      r0,[sp,#0x10]         ;12149
0001be  4284              CMP      r4,r0                 ;12149
0001c0  dd25              BLE      |L127.526|
0001c2  f04f0100          MOV      r1,#0                 ;12150
0001c6  484b              LDR      r0,|L127.756|
0001c8  f8c0114c          STR      r1,[r0,#0x14c]        ;12150
0001cc  4601              MOV      r1,r0                 ;12150
0001ce  f8d1314c          LDR      r3,[r1,#0x14c]        ;12150
0001d2  f8d1114c          LDR      r1,[r1,#0x14c]        ;12150
0001d6  f1010101          ADD      r1,r1,#1              ;12150
0001da  4602              MOV      r2,r0                 ;12150
0001dc  f8c2114c          STR      r1,[r2,#0x14c]        ;12150
0001e0  eb030183          ADD      r1,r3,r3,LSL #2       ;12150
0001e4  4a45              LDR      r2,|L127.764|
0001e6  eb021101          ADD      r1,r2,r1,LSL #4       ;12150
0001ea  4608              MOV      r0,r1                 ;12150
0001ec  4942              LDR      r1,|L127.760|
0001ee  f7fffffe          BL       strcpy
0001f2  f04f0100          MOV      r1,#0                 ;12150
0001f6  483f              LDR      r0,|L127.756|
0001f8  f8d0014c          LDR      r0,[r0,#0x14c]        ;12150
0001fc  eb000080          ADD      r0,r0,r0,LSL #2       ;12150
000200  4a3e              LDR      r2,|L127.764|
000202  eb021000          ADD      r0,r2,r0,LSL #4       ;12150
000206  7001              STRB     r1,[r0,#0]            ;12150
000208  f04f008d          MOV      r0,#0x8d              ;12150
00020c  e730              B        |L127.112|
                  |L127.526|
00020e  9804              LDR      r0,[sp,#0x10]         ;12151
000210  4284              CMP      r4,r0                 ;12151
000212  d11b              BNE      |L127.588|
000214  eb0501c4          ADD      r1,r5,r4,LSL #3       ;12153
000218  c903              LDM      r1,{r0,r1}            ;12153
00021a  4622              MOV      r2,r4                 ;12153
00021c  e9cd0100          STRD     r0,r1,[sp,#0]         ;12153
000220  a13c              ADR      r1,|L127.788|
000222  a805              ADD      r0,sp,#0x14           ;12153
000224  f7fffffe          BL       __2sprintf
000228  4639              MOV      r1,r7                 ;12154
00022a  a805              ADD      r0,sp,#0x14           ;12154
00022c  f7fffffe          BL       fputs
000230  4544              CMP      r4,r8                 ;12155
000232  d107              BNE      |L127.580|
000234  4648              MOV      r0,r9                 ;12156
000236  f1090101          ADD      r1,r9,#1              ;12156
00023a  4689              MOV      r9,r1                 ;12156
00023c  4932              LDR      r1,|L127.776|
00023e  f8510020          LDR      r0,[r1,r0,LSL #2]     ;12156
000242  4680              MOV      r8,r0                 ;12156
                  |L127.580|
000244  f1040001          ADD      r0,r4,#1              ;12157
000248  4604              MOV      r4,r0                 ;12157
00024a  e01e              B        |L127.650|
                  |L127.588|
00024c  4544              CMP      r4,r8                 ;12160
00024e  d115              BNE      |L127.636|
000250  eb0500c4          ADD      r0,r5,r4,LSL #3       ;12162
000254  c803              LDM      r0,{r0,r1}            ;12162
000256  4622              MOV      r2,r4                 ;12162
000258  e9cd0100          STRD     r0,r1,[sp,#0]         ;12162
00025c  a12d              ADR      r1,|L127.788|
00025e  a805              ADD      r0,sp,#0x14           ;12162
000260  f7fffffe          BL       __2sprintf
000264  4639              MOV      r1,r7                 ;12163
000266  a805              ADD      r0,sp,#0x14           ;12163
000268  f7fffffe          BL       fputs
00026c  4648              MOV      r0,r9                 ;12164
00026e  f1090101          ADD      r1,r9,#1              ;12164
000272  4689              MOV      r9,r1                 ;12164
000274  4924              LDR      r1,|L127.776|
000276  f8510020          LDR      r0,[r1,r0,LSL #2]     ;12164
00027a  4680              MOV      r8,r0                 ;12164
                  |L127.636|
00027c  f1040001          ADD      r0,r4,#1              ;12147
000280  4604              MOV      r4,r0                 ;12147
                  |L127.642|
000282  f2415018          MOV      r0,#0x1518            ;12147
000286  4284              CMP      r4,r0                 ;12147
000288  db98              BLT      |L127.444|
                  |L127.650|
00028a  bf00              NOP                            ;12158
                  |L127.652|
00028c  4630              MOV      r0,r6                 ;12136
00028e  f7fffffe          BL       feof
000292  2800              CMP      r0,#0                 ;12136
000294  f43faf53          BEQ      |L127.318|
                  |L127.664|
000298  bf00              NOP                            ;12140
00029a  4630              MOV      r0,r6                 ;12169
00029c  f7fffffe          BL       fclose
0002a0  e01a              B        |L127.728|
                  |L127.674|
0002a2  4544              CMP      r4,r8                 ;12172
0002a4  d115              BNE      |L127.722|
0002a6  eb0501c4          ADD      r1,r5,r4,LSL #3       ;12174
0002aa  c903              LDM      r1,{r0,r1}            ;12174
0002ac  4622              MOV      r2,r4                 ;12174
0002ae  e9cd0100          STRD     r0,r1,[sp,#0]         ;12174
0002b2  a118              ADR      r1,|L127.788|
0002b4  a805              ADD      r0,sp,#0x14           ;12174
0002b6  f7fffffe          BL       __2sprintf
0002ba  4639              MOV      r1,r7                 ;12175
0002bc  a805              ADD      r0,sp,#0x14           ;12175
0002be  f7fffffe          BL       fputs
0002c2  4648              MOV      r0,r9                 ;12176
0002c4  f1090101          ADD      r1,r9,#1              ;12176
0002c8  4689              MOV      r9,r1                 ;12176
0002ca  490f              LDR      r1,|L127.776|
0002cc  f8510020          LDR      r0,[r1,r0,LSL #2]     ;12176
0002d0  4680              MOV      r8,r0                 ;12176
                  |L127.722|
0002d2  f1040001          ADD      r0,r4,#1              ;12170
0002d6  4604              MOV      r4,r0                 ;12170
                  |L127.728|
0002d8  f2415018          MOV      r0,#0x1518            ;12170
0002dc  4284              CMP      r4,r0                 ;12170
0002de  dbe0              BLT      |L127.674|
0002e0  4638              MOV      r0,r7                 ;12179
0002e2  f7fffffe          BL       fclose
0002e6  2000              MOVS     r0,#0                 ;12181
0002e8  e6c2              B        |L127.112|
;;;12183  
                          ENDP

0002ea  0000              DCW      0x0000
                  |L127.748|
0002ec  2e62616b          DCB      ".bak",0
0002f0  00      
0002f1  00                DCB      0
0002f2  00                DCB      0
0002f3  00                DCB      0
                  |L127.756|
                          DCD      _setup+0xc000
                  |L127.760|
                          DCD      |symbol_number.523|
                  |L127.764|
                          DCD      _setup+0xb1ac
                  |L127.768|
000300  7200              DCB      "r",0
000302  00                DCB      0
000303  00                DCB      0
                  |L127.772|
000304  7700              DCB      "w",0
000306  00                DCB      0
000307  00                DCB      0
                  |L127.776|
                          DCD      _required_parameters
                  |L127.780|
00030c  25642025          DCB      "%d %f",0
000310  6600    
000312  00                DCB      0
000313  00                DCB      0
                  |L127.788|
000314  25640925          DCB      "%d\t%f\r\n",0
000318  660d0a00

                          AREA ||i.rs274ngc_sequence_number||, CODE, READONLY, ALIGN=2

                  rs274ngc_sequence_number PROC
;;;12446  
;;;12447      int rs274ngc_sequence_number()
000000  4801              LDR      r0,|L128.8|
;;;12448      {
;;;12449          return _setup.sequence_number;
000002  f8d00190          LDR      r0,[r0,#0x190]
;;;12450      }
000006  4770              BX       lr
;;;12451  
                          ENDP

                  |L128.8|
                          DCD      _setup+0xb000

                          AREA ||i.rs274ngc_stack_name||, CODE, READONLY, ALIGN=2

                  rs274ngc_stack_name PROC
;;;12475  
;;;12476      void rs274ngc_stack_name(                     /* ARGUMENTS                            */
000000  b5f0              PUSH     {r4-r7,lr}
;;;12477      int stack_index,                              /* index into stack of function names   */
;;;12478      char * function_name,                         /* string: to copy function name into   */
;;;12479      int max_size)                                 /* maximum number of characters to copy */
;;;12480      {
000002  4603              MOV      r3,r0
000004  4614              MOV      r4,r2
;;;12481          int n;
;;;12482          char * the_name;
;;;12483  
;;;12484          if ((stack_index > -1) AND (stack_index < 20))
000006  2b00              CMP      r3,#0
000008  db1a              BLT      |L129.64|
00000a  2b14              CMP      r3,#0x14
00000c  da18              BGE      |L129.64|
;;;12485          {
;;;12486              the_name SET_TO _setup.stack[stack_index];
00000e  eb030583          ADD      r5,r3,r3,LSL #2
000012  4e0d              LDR      r6,|L129.72|
000014  eb061205          ADD      r2,r6,r5,LSL #4
;;;12487              for (n SET_TO 0; n < (max_size - 1); n++)
000018  f04f0000          MOV      r0,#0
00001c  e008              B        |L129.48|
                  |L129.30|
;;;12488              {
;;;12489                  if (the_name[n] ISNT 0)
00001e  5c15              LDRB     r5,[r2,r0]
000020  b115              CBZ      r5,|L129.40|
;;;12490                      function_name[n] SET_TO the_name[n];
000022  5c15              LDRB     r5,[r2,r0]
000024  540d              STRB     r5,[r1,r0]
000026  e000              B        |L129.42|
                  |L129.40|
;;;12491                  else
;;;12492                      break;
000028  e005              B        |L129.54|
                  |L129.42|
00002a  f1000501          ADD      r5,r0,#1              ;12487
00002e  4628              MOV      r0,r5                 ;12487
                  |L129.48|
000030  1e65              SUBS     r5,r4,#1              ;12487
000032  4285              CMP      r5,r0                 ;12487
000034  dcf3              BGT      |L129.30|
                  |L129.54|
000036  bf00              NOP      
;;;12493              }
;;;12494              function_name[n] SET_TO 0;
000038  f04f0500          MOV      r5,#0
00003c  540d              STRB     r5,[r1,r0]
00003e  e002              B        |L129.70|
                  |L129.64|
;;;12495          }
;;;12496          else
;;;12497              function_name[0] SET_TO 0;
000040  f04f0500          MOV      r5,#0
000044  700d              STRB     r5,[r1,#0]
                  |L129.70|
;;;12498      }
000046  bdf0              POP      {r4-r7,pc}
;;;12499  
                          ENDP

                  |L129.72|
                          DCD      _setup+0xb1ac

                          AREA ||i.rs274ngc_synch||, CODE, READONLY, ALIGN=2

                  rs274ngc_synch PROC
;;;12202  
;;;12203      int rs274ngc_synch()                          /* NO ARGUMENTS */
000000  b510              PUSH     {r4,lr}
;;;12204      {
;;;12205          _setup.control_mode SET_TO GET_EXTERNAL_MOTION_CONTROL_MODE();
000002  f7fffffe          BL       GET_EXTERNAL_MOTION_CONTROL_MODE
000006  492e              LDR      r1,|L130.192|
000008  f8c10388          STR      r0,[r1,#0x388]  ; _setup
;;;12206  		#ifdef AA
;;;12207  		   /*AA*/
;;;12208  		        _setup.AA_current SET_TO GET_EXTERNAL_POSITION_A();
;;;12209  		#endif
;;;12210  		#ifdef BB
;;;12211  		   /*BB*/
;;;12212  		        _setup.BB_current SET_TO GET_EXTERNAL_POSITION_B();
;;;12213  		#endif
;;;12214  		#ifdef CC
;;;12215  		   /*CC*/
;;;12216  		        _setup.CC_current SET_TO GET_EXTERNAL_POSITION_C();
;;;12217  		#endif
;;;12218          _setup.current_slot SET_TO GET_EXTERNAL_TOOL_SLOT();
00000c  f7fffffe          BL       GET_EXTERNAL_TOOL_SLOT
000010  492b              LDR      r1,|L130.192|
000012  f8c1038c          STR      r0,[r1,#0x38c]  ; _setup
;;;12219          _setup.current_x SET_TO GET_EXTERNAL_POSITION_X();
000016  f7fffffe          BL       GET_EXTERNAL_POSITION_X
00001a  4a29              LDR      r2,|L130.192|
00001c  f5027264          ADD      r2,r2,#0x390
000020  c203              STM      r2!,{r0,r1}
;;;12220          _setup.current_y SET_TO GET_EXTERNAL_POSITION_Y();
000022  f7fffffe          BL       GET_EXTERNAL_POSITION_Y
000026  4a26              LDR      r2,|L130.192|
000028  f5027266          ADD      r2,r2,#0x398
00002c  c203              STM      r2!,{r0,r1}
;;;12221          _setup.current_z SET_TO GET_EXTERNAL_POSITION_Z();
00002e  f7fffffe          BL       GET_EXTERNAL_POSITION_Z
000032  4a23              LDR      r2,|L130.192|
000034  f5027268          ADD      r2,r2,#0x3a0
000038  c203              STM      r2!,{r0,r1}
;;;12222          _setup.feed_rate SET_TO GET_EXTERNAL_FEED_RATE();
00003a  f7fffffe          BL       GET_EXTERNAL_FEED_RATE
00003e  4a20              LDR      r2,|L130.192|
000040  f5026281          ADD      r2,r2,#0x408
000044  c203              STM      r2!,{r0,r1}
;;;12223          _setup.flood SET_TO (GET_EXTERNAL_FLOOD() ISNT 0) ? ON : OFF;
000046  f7fffffe          BL       GET_EXTERNAL_FLOOD
00004a  b110              CBZ      r0,|L130.82|
00004c  f04f0001          MOV      r0,#1
000050  e001              B        |L130.86|
                  |L130.82|
000052  f04f0000          MOV      r0,#0
                  |L130.86|
000056  491a              LDR      r1,|L130.192|
000058  f8c10514          STR      r0,[r1,#0x514]  ; _setup
;;;12224          _setup.length_units SET_TO GET_EXTERNAL_LENGTH_UNIT_TYPE();
00005c  f7fffffe          BL       GET_EXTERNAL_LENGTH_UNIT_TYPE
000060  4917              LDR      r1,|L130.192|
000062  f8c1051c          STR      r0,[r1,#0x51c]  ; _setup
;;;12225          _setup.mist SET_TO (GET_EXTERNAL_MIST() ISNT 0) ? ON : OFF;
000066  f7fffffe          BL       GET_EXTERNAL_MIST
00006a  b110              CBZ      r0,|L130.114|
00006c  f04f0001          MOV      r0,#1
000070  e001              B        |L130.118|
                  |L130.114|
000072  f04f0000          MOV      r0,#0
                  |L130.118|
000076  4912              LDR      r1,|L130.192|
000078  f8c10624          STR      r0,[r1,#0x624]  ; _setup
;;;12226          _setup.plane SET_TO GET_EXTERNAL_PLANE();
00007c  f7fffffe          BL       GET_EXTERNAL_PLANE
000080  4910              LDR      r1,|L130.196|
000082  f8c1016c          STR      r0,[r1,#0x16c]
;;;12227          _setup.selected_tool_slot SET_TO GET_EXTERNAL_TOOL_SLOT();
000086  f7fffffe          BL       GET_EXTERNAL_TOOL_SLOT
00008a  490e              LDR      r1,|L130.196|
00008c  f8c1018c          STR      r0,[r1,#0x18c]
;;;12228          _setup.speed SET_TO GET_EXTERNAL_SPEED();
000090  f7fffffe          BL       GET_EXTERNAL_SPEED
000094  4a0b              LDR      r2,|L130.196|
000096  f50272cc          ADD      r2,r2,#0x198
00009a  c203              STM      r2!,{r0,r1}
;;;12229          _setup.spindle_turning SET_TO GET_EXTERNAL_SPINDLE();
00009c  f7fffffe          BL       GET_EXTERNAL_SPINDLE
0000a0  4908              LDR      r1,|L130.196|
0000a2  f8c101a8          STR      r0,[r1,#0x1a8]
;;;12230          _setup.tool_max SET_TO GET_EXTERNAL_TOOL_MAX();
0000a6  f7fffffe          BL       GET_EXTERNAL_TOOL_MAX
0000aa  4907              LDR      r1,|L130.200|
0000ac  f8c10158          STR      r0,[r1,#0x158]
;;;12231          _setup.traverse_rate SET_TO GET_EXTERNAL_TRAVERSE_RATE();
0000b0  f7fffffe          BL       GET_EXTERNAL_TRAVERSE_RATE
0000b4  4a04              LDR      r2,|L130.200|
0000b6  f5026258          ADD      r2,r2,#0xd80
0000ba  c203              STM      r2!,{r0,r1}
;;;12232  
;;;12233  		//rs274ngc_load_tool_table();               /*  must set  _setup.tool_max first */
;;;12234  
;;;12235          return RS274NGC_OK;
0000bc  2000              MOVS     r0,#0
;;;12236      }
0000be  bd10              POP      {r4,pc}
;;;12237  
                          ENDP

                  |L130.192|
                          DCD      _setup
                  |L130.196|
                          DCD      _setup+0xb000
                  |L130.200|
                          DCD      _setup+0xc000

                          AREA ||i.set_probe_data||, CODE, READONLY, ALIGN=1

                  set_probe_data PROC
;;;11253  
;;;11254      static int set_probe_data(                    /* ARGUMENTS                   */
000000  b510              PUSH     {r4,lr}
;;;11255      setup_pointer settings)                       /* pointer to machine settings */
;;;11256      {
000002  4604              MOV      r4,r0
;;;11257  //        static char name[] SET_TO "set_probe_data";
;;;11258  
;;;11259          settings->current_x SET_TO GET_EXTERNAL_POSITION_X();
000004  f7fffffe          BL       GET_EXTERNAL_POSITION_X
000008  f5047464          ADD      r4,r4,#0x390
00000c  e9c40100          STRD     r0,r1,[r4,#0]
;;;11260          settings->current_y SET_TO GET_EXTERNAL_POSITION_Y();
000010  f7fffffe          BL       GET_EXTERNAL_POSITION_Y
000014  e9c40102          STRD     r0,r1,[r4,#8]
;;;11261          settings->current_z SET_TO GET_EXTERNAL_POSITION_Z();
000018  f7fffffe          BL       GET_EXTERNAL_POSITION_Z
00001c  e9c40104          STRD     r0,r1,[r4,#0x10]
000020  f5a47464          SUB      r4,r4,#0x390
;;;11262  #ifdef AA
;;;11263     /*AA*/
;;;11264          settings->AA_current SET_TO GET_EXTERNAL_POSITION_A();
;;;11265  #endif
;;;11266  #ifdef BB
;;;11267     /*BB*/
;;;11268          settings->BB_current SET_TO GET_EXTERNAL_POSITION_B();
;;;11269  #endif
;;;11270  #ifdef CC
;;;11271     /*CC*/
;;;11272          settings->CC_current SET_TO GET_EXTERNAL_POSITION_C();
;;;11273  #endif
;;;11274          settings->parameters[5061] SET_TO GET_EXTERNAL_PROBE_POSITION_X();
000024  f7fffffe          BL       GET_EXTERNAL_PROBE_POSITION_X
000028  f50462c9          ADD      r2,r4,#0x648
00002c  f5024210          ADD      r2,r2,#0x9000
000030  f6026228          ADD      r2,r2,#0xe28
000034  c203              STM      r2!,{r0,r1}
;;;11275          settings->parameters[5062] SET_TO GET_EXTERNAL_PROBE_POSITION_Y();
000036  f7fffffe          BL       GET_EXTERNAL_PROBE_POSITION_Y
00003a  f50462c9          ADD      r2,r4,#0x648
00003e  f5024210          ADD      r2,r2,#0x9000
000042  f5026263          ADD      r2,r2,#0xe30
000046  c203              STM      r2!,{r0,r1}
;;;11276          settings->parameters[5063] SET_TO GET_EXTERNAL_PROBE_POSITION_Z();
000048  f7fffffe          BL       GET_EXTERNAL_PROBE_POSITION_Z
00004c  f50462c9          ADD      r2,r4,#0x648
000050  f5024210          ADD      r2,r2,#0x9000
000054  f6026238          ADD      r2,r2,#0xe38
000058  c203              STM      r2!,{r0,r1}
;;;11277  #ifdef AA
;;;11278     /*AA*/
;;;11279          settings->parameters[5064] SET_TO GET_EXTERNAL_PROBE_POSITION_A();
;;;11280  #endif
;;;11281  #ifdef BB
;;;11282     /*BB*/
;;;11283          settings->parameters[5065] SET_TO GET_EXTERNAL_PROBE_POSITION_B();
;;;11284  #endif
;;;11285  #ifdef CC
;;;11286     /*CC*/
;;;11287          settings->parameters[5066] SET_TO GET_EXTERNAL_PROBE_POSITION_C();
;;;11288  #endif
;;;11289          settings->parameters[5067] SET_TO GET_EXTERNAL_PROBE_VALUE();
00005a  f7fffffe          BL       GET_EXTERNAL_PROBE_VALUE
00005e  f50462c9          ADD      r2,r4,#0x648
000062  f5024210          ADD      r2,r2,#0x9000
000066  f6026258          ADD      r2,r2,#0xe58
00006a  c203              STM      r2!,{r0,r1}
;;;11290          return RS274NGC_OK;
00006c  f04f0000          MOV      r0,#0
;;;11291      }
000070  bd10              POP      {r4,pc}
;;;11292  
                          ENDP


                          AREA ||i.write_g_codes||, CODE, READONLY, ALIGN=1

                  write_g_codes PROC
;;;11336  
;;;11337      static int write_g_codes(                     /* ARGUMENTS                                    */
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;11338      block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;11339      setup_pointer settings)                       /* pointer to machine settings                  */
;;;11340      {
000004  4680              MOV      r8,r0
000006  460c              MOV      r4,r1
;;;11341          int * gez;
;;;11342  
;;;11343          gez SET_TO settings->active_g_codes;
000008  4625              MOV      r5,r4
;;;11344          gez[0] SET_TO settings->sequence_number;
00000a  f24b1090          MOV      r0,#0xb190
00000e  5900              LDR      r0,[r0,r4]
000010  6028              STR      r0,[r5,#0]
;;;11345          gez[1] SET_TO settings->motion_mode;
000012  f8d40628          LDR      r0,[r4,#0x628]
000016  6068              STR      r0,[r5,#4]
;;;11346          gez[2] SET_TO ((block IS NULL) ? -1 : block->g_modes[0]);
000018  f1b80f00          CMP      r8,#0
00001c  d102              BNE      |L132.36|
00001e  f04f30ff          MOV      r0,#0xffffffff
000022  e001              B        |L132.40|
                  |L132.36|
000024  f8d80110          LDR      r0,[r8,#0x110]
                  |L132.40|
000028  60a8              STR      r0,[r5,#8]
;;;11347          gez[3] SET_TO
00002a  f24b106c          MOV      r0,#0xb16c
00002e  5900              LDR      r0,[r0,r4]
000030  2801              CMP      r0,#1
000032  d102              BNE      |L132.58|
;;;11348              (settings->plane IS CANON_PLANE_XY) ? G_17 :
000034  f04f00aa          MOV      r0,#0xaa
000038  e009              B        |L132.78|
                  |L132.58|
;;;11349          (settings->plane IS CANON_PLANE_XZ) ? G_18 : G_19;
00003a  f24b106c          MOV      r0,#0xb16c
00003e  5900              LDR      r0,[r0,r4]
000040  2803              CMP      r0,#3
000042  d102              BNE      |L132.74|
000044  f04f00b4          MOV      r0,#0xb4
000048  e001              B        |L132.78|
                  |L132.74|
00004a  f04f00be          MOV      r0,#0xbe
                  |L132.78|
00004e  60e8              STR      r0,[r5,#0xc]
;;;11350          gez[4] SET_TO
000050  f8d403b0          LDR      r0,[r4,#0x3b0]
000054  2801              CMP      r0,#1
000056  d102              BNE      |L132.94|
;;;11351              (settings->cutter_comp_side IS RIGHT) ? G_42 :
000058  f44f70d2          MOV      r0,#0x1a4
00005c  e008              B        |L132.112|
                  |L132.94|
;;;11352          (settings->cutter_comp_side IS LEFT) ? G_41 : G_40;
00005e  f8d403b0          LDR      r0,[r4,#0x3b0]
000062  2802              CMP      r0,#2
000064  d102              BNE      |L132.108|
000066  f44f70cd          MOV      r0,#0x19a
00006a  e001              B        |L132.112|
                  |L132.108|
00006c  f44f70c8          MOV      r0,#0x190
                  |L132.112|
000070  6128              STR      r0,[r5,#0x10]
;;;11353          gez[5] SET_TO
000072  f8d4051c          LDR      r0,[r4,#0x51c]
000076  2801              CMP      r0,#1
000078  d102              BNE      |L132.128|
;;;11354              (settings->length_units IS CANON_UNITS_INCHES) ? G_20 : G_21;
00007a  f04f00c8          MOV      r0,#0xc8
00007e  e001              B        |L132.132|
                  |L132.128|
000080  f04f00d2          MOV      r0,#0xd2
                  |L132.132|
000084  6168              STR      r0,[r5,#0x14]
;;;11355          gez[6] SET_TO
000086  f89403f8          LDRB     r0,[r4,#0x3f8]
00008a  b910              CBNZ     r0,|L132.146|
;;;11356              (settings->distance_mode IS MODE_ABSOLUTE) ? G_90 : G_91;
00008c  f44f7061          MOV      r0,#0x384
000090  e001              B        |L132.150|
                  |L132.146|
000092  f240308e          MOV      r0,#0x38e
                  |L132.150|
000096  61a8              STR      r0,[r5,#0x18]
;;;11357          gez[7] SET_TO
000098  f8d403fc          LDR      r0,[r4,#0x3fc]
00009c  2801              CMP      r0,#1
00009e  d102              BNE      |L132.166|
;;;11358              (settings->feed_mode IS INVERSE_TIME) ? G_93 : G_98;
0000a0  f24030a2          MOV      r0,#0x3a2
0000a4  e001              B        |L132.170|
                  |L132.166|
0000a6  f44f7075          MOV      r0,#0x3d4
                  |L132.170|
0000aa  61e8              STR      r0,[r5,#0x1c]
;;;11359          gez[8] SET_TO
0000ac  f8d4062c          LDR      r0,[r4,#0x62c]
0000b0  2807              CMP      r0,#7
0000b2  da08              BGE      |L132.198|
;;;11360              (settings->origin_index < 7) ? (530 + (10 * settings->origin_index)) :
0000b4  f8d4062c          LDR      r0,[r4,#0x62c]
0000b8  eb000080          ADD      r0,r0,r0,LSL #2
0000bc  ea4f0040          LSL      r0,r0,#1
0000c0  f2002012          ADD      r0,r0,#0x212
0000c4  e003              B        |L132.206|
                  |L132.198|
;;;11361          (584 + settings->origin_index);
0000c6  f8d4062c          LDR      r0,[r4,#0x62c]
0000ca  f5007012          ADD      r0,r0,#0x248
                  |L132.206|
0000ce  6228              STR      r0,[r5,#0x20]
;;;11362          gez[9] SET_TO
0000d0  f5044140          ADD      r1,r4,#0xc000
0000d4  f50171a8          ADD      r1,r1,#0x150
0000d8  c903              LDM      r1,{r0,r1}
0000da  4606              MOV      r6,r0
0000dc  2200              MOVS     r2,#0
0000de  4613              MOV      r3,r2
0000e0  f7fffffe          BL       __aeabi_cdcmpeq
0000e4  d102              BNE      |L132.236|
;;;11363              (settings->tool_length_offset IS 0.0) ? G_49 : G_43;
0000e6  f44f70f5          MOV      r0,#0x1ea
0000ea  e001              B        |L132.240|
                  |L132.236|
0000ec  f44f70d7          MOV      r0,#0x1ae
                  |L132.240|
0000f0  6268              STR      r0,[r5,#0x24]
;;;11364  //        gez[10] SET_TO
;;;11365  //            (settings->retract_mode IS OLD_Z) ? G_98 : G_99;
;;;11366          gez[11] SET_TO
0000f2  f8d40388          LDR      r0,[r4,#0x388]
0000f6  2803              CMP      r0,#3
0000f8  d102              BNE      |L132.256|
;;;11367              (settings->control_mode IS CANON_CONTINUOUS) ? G_64 :
0000fa  f44f7020          MOV      r0,#0x280
0000fe  e008              B        |L132.274|
                  |L132.256|
;;;11368          (settings->control_mode IS CANON_EXACT_PATH) ? G_61 : G_61_1;
000100  f8d40388          LDR      r0,[r4,#0x388]
000104  2802              CMP      r0,#2
000106  d102              BNE      |L132.270|
000108  f2402062          MOV      r0,#0x262
00010c  e001              B        |L132.274|
                  |L132.270|
00010e  f2402063          MOV      r0,#0x263
                  |L132.274|
000112  62e8              STR      r0,[r5,#0x2c]
;;;11369  
;;;11370          return RS274NGC_OK;
000114  2000              MOVS     r0,#0
;;;11371      }
000116  e8bd81f0          POP      {r4-r8,pc}
;;;11372  
                          ENDP


                          AREA ||i.write_m_codes||, CODE, READONLY, ALIGN=1

                  write_m_codes PROC
;;;11390  
;;;11391      static int write_m_codes(                     /* ARGUMENTS                                    */
000000  4603              MOV      r3,r0
;;;11392      block_pointer block,                          /* pointer to a block of RS274/NGC instructions */
;;;11393      setup_pointer settings)                       /* pointer to machine settings                  */
;;;11394      {
;;;11395          int * emz;
;;;11396  
;;;11397          emz SET_TO settings->active_m_codes;
000002  f1010030          ADD      r0,r1,#0x30
000006  4602              MOV      r2,r0
;;;11398          emz[0] SET_TO settings->sequence_number;  /* 0 seq number  */
000008  f24b1090          MOV      r0,#0xb190
00000c  5840              LDR      r0,[r0,r1]
00000e  6010              STR      r0,[r2,#0]
;;;11399          emz[1] SET_TO
000010  b913              CBNZ     r3,|L133.24|
;;;11400              (block IS NULL) ? -1 : block->m_modes[4];/* 1 stopping    */
000012  f04f30ff          MOV      r0,#0xffffffff
000016  e002              B        |L133.30|
                  |L133.24|
000018  f44f70cc          MOV      r0,#0x198
00001c  58c0              LDR      r0,[r0,r3]
                  |L133.30|
00001e  6050              STR      r0,[r2,#4]
;;;11401          emz[2] SET_TO
000020  f24b10a8          MOV      r0,#0xb1a8
000024  5840              LDR      r0,[r0,r1]
000026  2801              CMP      r0,#1
000028  d102              BNE      |L133.48|
;;;11402     /* 2 spindle     */
;;;11403              (settings->spindle_turning IS CANON_STOPPED) ? 5 :
00002a  f04f0005          MOV      r0,#5
00002e  e009              B        |L133.68|
                  |L133.48|
;;;11404          (settings->spindle_turning IS CANON_CLOCKWISE) ? 3 : 4;
000030  f24b10a8          MOV      r0,#0xb1a8
000034  5840              LDR      r0,[r0,r1]
000036  2802              CMP      r0,#2
000038  d102              BNE      |L133.64|
00003a  f04f0003          MOV      r0,#3
00003e  e001              B        |L133.68|
                  |L133.64|
000040  f04f0004          MOV      r0,#4
                  |L133.68|
000044  6090              STR      r0,[r2,#8]
;;;11405          emz[3] SET_TO                             /* 3 tool change */
000046  b913              CBNZ     r3,|L133.78|
;;;11406              (block IS NULL) ? -1 : block->m_modes[6];
000048  f04f30ff          MOV      r0,#0xffffffff
00004c  e002              B        |L133.84|
                  |L133.78|
00004e  f44f70d0          MOV      r0,#0x1a0
000052  58c0              LDR      r0,[r0,r3]
                  |L133.84|
000054  60d0              STR      r0,[r2,#0xc]
;;;11407          emz[4] SET_TO                             /* 4 mist        */
000056  f8d10624          LDR      r0,[r1,#0x624]
00005a  2801              CMP      r0,#1
00005c  d102              BNE      |L133.100|
;;;11408              (settings->mist IS ON) ? 7 :
00005e  f04f0007          MOV      r0,#7
000062  e008              B        |L133.118|
                  |L133.100|
;;;11409          (settings->flood IS ON) ? -1 : 9;
000064  f8d10514          LDR      r0,[r1,#0x514]
000068  2801              CMP      r0,#1
00006a  d102              BNE      |L133.114|
00006c  f04f30ff          MOV      r0,#0xffffffff
000070  e001              B        |L133.118|
                  |L133.114|
000072  f04f0009          MOV      r0,#9
                  |L133.118|
000076  6110              STR      r0,[r2,#0x10]
;;;11410          emz[5] SET_TO                             /* 5 flood       */
000078  f8d10514          LDR      r0,[r1,#0x514]
00007c  2801              CMP      r0,#1
00007e  d102              BNE      |L133.134|
;;;11411              (settings->flood IS ON) ? 8 : -1;
000080  f04f0008          MOV      r0,#8
000084  e001              B        |L133.138|
                  |L133.134|
000086  f04f30ff          MOV      r0,#0xffffffff
                  |L133.138|
00008a  6150              STR      r0,[r2,#0x14]
;;;11412          emz[6] SET_TO                             /* 6 overrides   */
00008c  f8d10400          LDR      r0,[r1,#0x400]
000090  2801              CMP      r0,#1
000092  d102              BNE      |L133.154|
;;;11413              (settings->feed_override IS ON) ? 48 : 49;
000094  f04f0030          MOV      r0,#0x30
000098  e001              B        |L133.158|
                  |L133.154|
00009a  f04f0031          MOV      r0,#0x31
                  |L133.158|
00009e  6190              STR      r0,[r2,#0x18]
;;;11414  
;;;11415          return RS274NGC_OK;
0000a0  2000              MOVS     r0,#0
;;;11416      }
0000a2  4770              BX       lr
;;;11417  
                          ENDP


                          AREA ||i.write_settings||, CODE, READONLY, ALIGN=1

                  write_settings PROC
;;;11433  
;;;11434      static int write_settings(                    /* ARGUMENTS                   */
000000  b570              PUSH     {r4-r6,lr}
;;;11435      setup_pointer settings)                       /* pointer to machine settings */
;;;11436      {
000002  4604              MOV      r4,r0
;;;11437          double * vals;
;;;11438  
;;;11439          vals SET_TO settings->active_settings;
000004  f1040050          ADD      r0,r4,#0x50
000008  4605              MOV      r5,r0
;;;11440          vals[0] SET_TO settings->sequence_number; /* 0 sequence number */
00000a  f24b1190          MOV      r1,#0xb190
00000e  5909              LDR      r1,[r1,r4]
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       __aeabi_i2d
000016  e9c50100          STRD     r0,r1,[r5,#0]
;;;11441          vals[1] SET_TO settings->feed_rate;       /* 1 feed rate       */
00001a  f5046081          ADD      r0,r4,#0x408
00001e  c803              LDM      r0,{r0,r1}
000020  e9c50102          STRD     r0,r1,[r5,#8]
;;;11442          vals[2] SET_TO settings->speed;           /* 2 spindle speed   */
000024  f5044030          ADD      r0,r4,#0xb000
000028  f50070cc          ADD      r0,r0,#0x198
00002c  c803              LDM      r0,{r0,r1}
00002e  e9c50104          STRD     r0,r1,[r5,#0x10]
;;;11443  
;;;11444          return RS274NGC_OK;
000032  f04f0000          MOV      r0,#0
;;;11445      }
000036  bd70              POP      {r4-r6,pc}
;;;11446  
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  _setup
                          %        52616

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _gees
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000000
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000000
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000000
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000001
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000002
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000002
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000003
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000003
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                  _ems
                          DCD      0x00000004
                          DCD      0x00000004
                          DCD      0x00000004
                          DCD      0x00000007
                          DCD      0x00000007
                          DCD      0x00000007
                          DCD      0x00000006
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000004
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000009
                          DCD      0x00000009
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0x00000004
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                          DCD      0xffffffff
                  _required_parameters
                          DCD      0x00001429
                          DCD      0x0000142a
                          DCD      0x0000142b
                          DCD      0x0000143d
                          DCD      0x0000143e
                          DCD      0x0000143f
                          DCD      0x0000145b
                          DCD      0x0000145c
                          DCD      0x0000145d
                          DCD      0x00001464
                          DCD      0x00001465
                          DCD      0x00001466
                          DCD      0x00001467
                          DCD      0x00001479
                          DCD      0x0000147a
                          DCD      0x0000147b
                          DCD      0x0000148d
                          DCD      0x0000148e
                          DCD      0x0000148f
                          DCD      0x000014a1
                          DCD      0x000014a2
                          DCD      0x000014a3
                          DCD      0x000014b5
                          DCD      0x000014b6
                          DCD      0x000014b7
                          DCD      0x000014c9
                          DCD      0x000014ca
                          DCD      0x000014cb
                          DCD      0x000014dd
                          DCD      0x000014de
                          DCD      0x000014df
                          DCD      0x000014f1
                          DCD      0x000014f2
                          DCD      0x000014f3
                          DCD      0x00001505
                          DCD      0x00001506
                          DCD      0x00001507
                          DCD      0x00001518
                  _readers
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_parameter_setting
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_comment
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_a
                          DCD      read_b
                          DCD      read_c
                          DCD      read_d
                          DCD      0x00000000
                          DCD      read_f
                          DCD      read_g
                          DCD      read_h
                          DCD      read_i
                          DCD      read_j
                          DCD      read_k
                          DCD      read_l
                          DCD      read_m
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_p
                          DCD      read_q
                          DCD      read_r
                          DCD      read_s
                          DCD      read_t
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      read_x
                          DCD      read_y
                          DCD      read_z

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  4e6f2065          DCB      "No error",0
000004  72726f72
000008  00      
000009  41206669          DCB      "A file is already open",0
00000d  6c652069
000011  7320616c
000015  72656164
000019  79206f70
00001d  656e00  
000020  416c6c20          DCB      "All axes missing with g92",0
000024  61786573
000028  206d6973
00002c  73696e67
000030  20776974
000034  68206739
000038  3200    
00003a  416c6c20          DCB      "All axes missing with motion code",0
00003e  61786573
000042  206d6973
000046  73696e67
00004a  20776974
00004e  68206d6f
000052  74696f6e
000056  20636f64
00005a  6500    
00005c  41726320          DCB      "Arc radius too small to reach end point",0
000060  72616469
000064  75732074
000068  6f6f2073
00006c  6d616c6c
000070  20746f20
000074  72656163
000078  6820656e
00007c  6420706f
000080  696e7400
000084  41726775          DCB      "Argument to acos out of range",0
000088  6d656e74
00008c  20746f20
000090  61636f73
000094  206f7574
000098  206f6620
00009c  72616e67
0000a0  6500    
0000a2  41726775          DCB      "Argument to asin out of range",0
0000a6  6d656e74
0000aa  20746f20
0000ae  6173696e
0000b2  206f7574
0000b6  206f6620
0000ba  72616e67
0000be  6500    
0000c0  41747465          DCB      "Attempt to divide by zero",0
0000c4  6d707420
0000c8  746f2064
0000cc  69766964
0000d0  65206279
0000d4  207a6572
0000d8  6f00    
0000da  41747465          DCB      "Attempt to raise negative to non integer power",0
0000de  6d707420
0000e2  746f2072
0000e6  61697365
0000ea  206e6567
0000ee  61746976
0000f2  6520746f
0000f6  206e6f6e
0000fa  20696e74
0000fe  65676572
000102  20706f77
000106  657200  
000109  42616420          DCB      "Bad character used",0
00010d  63686172
000111  61637465
000115  72207573
000119  656400  
00011c  42616420          DCB      "Bad format unsigned integer",0
000120  666f726d
000124  61742075
000128  6e736967
00012c  6e656420
000130  696e7465
000134  67657200
000138  42616420          DCB      "Bad number format",0
00013c  6e756d62
000140  65722066
000144  6f726d61
000148  7400    
00014a  42756720          DCB      "Bug bad g code modal group 0",0
00014e  62616420
000152  6720636f
000156  6465206d
00015a  6f64616c
00015e  2067726f
000162  75702030
000166  00      
000167  42756720          DCB      "Bug code not g0 or g1",0
00016b  636f6465
00016f  206e6f74
000173  20673020
000177  6f722067
00017b  3100    
00017d  42756720          DCB      "Bug code not g17 g18 or g19",0
000181  636f6465
000185  206e6f74
000189  20673137
00018d  20673138
000191  206f7220
000195  67313900
000199  42756720          DCB      "Bug code not g20 or g21",0
00019d  636f6465
0001a1  206e6f74
0001a5  20673230
0001a9  206f7220
0001ad  67323100
0001b1  42756720          DCB      "Bug code not g28 or g30",0
0001b5  636f6465
0001b9  206e6f74
0001bd  20673238
0001c1  206f7220
0001c5  67333000
0001c9  42756720          DCB      "Bug code not g2 or g3",0
0001cd  636f6465
0001d1  206e6f74
0001d5  20673220
0001d9  6f722067
0001dd  3300    
0001df  42756720          DCB      "Bug code not g40 g41 or g42",0
0001e3  636f6465
0001e7  206e6f74
0001eb  20673430
0001ef  20673431
0001f3  206f7220
0001f7  67343200
0001fb  42756720          DCB      "Bug code not g43 or g49",0
0001ff  636f6465
000203  206e6f74
000207  20673433
00020b  206f7220
00020f  67343900
000213  42756720          DCB      "Bug code not g4 g50 g28 g30 g53 or g92 series",0
000217  636f6465
00021b  206e6f74
00021f  20673420
000223  67353020
000227  67323820
00022b  67333020
00022f  67353320
000233  6f722067
000237  39322073
00023b  65726965
00023f  7300    
000241  42756720          DCB      "Bug code not g61 g61 1 or g64",0
000245  636f6465
000249  206e6f74
00024d  20673631
000251  20673631
000255  2031206f
000259  72206736
00025d  3400    
00025f  42756720          DCB      "Bug code not g90 or g91",0
000263  636f6465
000267  206e6f74
00026b  20673930
00026f  206f7220
000273  67393100
000277  42756720          DCB      "Bug code not g93 or g98",0
00027b  636f6465
00027f  206e6f74
000283  20673933
000287  206f7220
00028b  67393800
00028f  42756720          DCB      "Bug code not g98 or g99",0
000293  636f6465
000297  206e6f74
00029b  20673938
00029f  206f7220
0002a3  67393900
0002a7  42756720          DCB      "Bug code not in g92 series",0
0002ab  636f6465
0002af  206e6f74
0002b3  20696e20
0002b7  67393220
0002bb  73657269
0002bf  657300  
0002c2  42756720          DCB      "Bug code not in range g54 to g593",0
0002c6  636f6465
0002ca  206e6f74
0002ce  20696e20
0002d2  72616e67
0002d6  65206735
0002da  3420746f
0002de  20673539
0002e2  3300    
0002e4  42756720          DCB      "Bug code not m0 m1 m2 m30 m60",0
0002e8  636f6465
0002ec  206e6f74
0002f0  206d3020
0002f4  6d31206d
0002f8  32206d33
0002fc  30206d36
000300  3000    
000302  42756720          DCB      "Bug distance mode not g90 or g91",0
000306  64697374
00030a  616e6365
00030e  206d6f64
000312  65206e6f
000316  74206739
00031a  30206f72
00031e  20673931
000322  00      
000323  42756720          DCB      "Bug function should not have been called",0
000327  66756e63
00032b  74696f6e
00032f  2073686f
000333  756c6420
000337  6e6f7420
00033b  68617665
00033f  20626565
000343  6e206361
000347  6c6c6564
00034b  00      
00034c  42756720          DCB      "Bug in tool radius comp",0
000350  696e2074
000354  6f6f6c20
000358  72616469
00035c  75732063
000360  6f6d7000
000364  42756720          DCB      "Bug plane not xy yz or xz",0
000368  706c616e
00036c  65206e6f
000370  74207879
000374  20797a20
000378  6f722078
00037c  7a00    
00037e  42756720          DCB      "Bug side not right or left",0
000382  73696465
000386  206e6f74
00038a  20726967
00038e  6874206f
000392  72206c65
000396  667400  
000399  42756720          DCB      "Bug unknown motion code",0
00039d  756e6b6e
0003a1  6f776e20
0003a5  6d6f7469
0003a9  6f6e2063
0003ad  6f646500
0003b1  42756720          DCB      "Bug unknown operation",0
0003b5  756e6b6e
0003b9  6f776e20
0003bd  6f706572
0003c1  6174696f
0003c5  6e00    
0003c7  43616e6e          DCB      "Cannot change axis offsets with cutter radius comp",0
0003cb  6f742063
0003cf  68616e67
0003d3  65206178
0003d7  6973206f
0003db  66667365
0003df  74732077
0003e3  69746820
0003e7  63757474
0003eb  65722072
0003ef  61646975
0003f3  7320636f
0003f7  6d7000  
0003fa  43616e6e          DCB      "Cannot change units with cutter radius comp",0
0003fe  6f742063
000402  68616e67
000406  6520756e
00040a  69747320
00040e  77697468
000412  20637574
000416  74657220
00041a  72616469
00041e  75732063
000422  6f6d7000
000426  43616e6e          DCB      "Cannot create backup file",0
00042a  6f742063
00042e  72656174
000432  65206261
000436  636b7570
00043a  2066696c
00043e  6500    
000440  43616e6e          DCB      "Cannot do g1 with zero feed rate",0
000444  6f742064
000448  6f206731
00044c  20776974
000450  68207a65
000454  726f2066
000458  65656420
00045c  72617465
000460  00      
000461  43616e6e          DCB      "Cannot do zero repeats of cycle",0
000465  6f742064
000469  6f207a65
00046d  726f2072
000471  65706561
000475  7473206f
000479  66206379
00047d  636c6500
000481  43616e6e          DCB      "Cannot make arc with zero feed rate",0
000485  6f74206d
000489  616b6520
00048d  61726320
000491  77697468
000495  207a6572
000499  6f206665
00049d  65642072
0004a1  61746500
0004a5  43616e6e          DCB      "Cannot move rotary axes during probing",0
0004a9  6f74206d
0004ad  6f766520
0004b1  726f7461
0004b5  72792061
0004b9  78657320
0004bd  64757269
0004c1  6e672070
0004c5  726f6269
0004c9  6e6700  
0004cc  43616e6e          DCB      "Cannot open backup file",0
0004d0  6f74206f
0004d4  70656e20
0004d8  6261636b
0004dc  75702066
0004e0  696c6500
0004e4  43616e6e          DCB      "Cannot open variable file",0
0004e8  6f74206f
0004ec  70656e20
0004f0  76617269
0004f4  61626c65
0004f8  2066696c
0004fc  6500    
0004fe  43616e6e          DCB      "Cannot probe in inverse time feed mode",0
000502  6f742070
000506  726f6265
00050a  20696e20
00050e  696e7665
000512  72736520
000516  74696d65
00051a  20666565
00051e  64206d6f
000522  646500  
000525  43616e6e          DCB      "Cannot probe with cutter radius comp on",0
000529  6f742070
00052d  726f6265
000531  20776974
000535  68206375
000539  74746572
00053d  20726164
000541  69757320
000545  636f6d70
000549  206f6e00
00054d  43616e6e          DCB      "Cannot probe with zero feed rate",0
000551  6f742070
000555  726f6265
000559  20776974
00055d  68207a65
000561  726f2066
000565  65656420
000569  72617465
00056d  00      
00056e  43616e6e          DCB      "Cannot put a b in canned cycle",0
000572  6f742070
000576  75742061
00057a  20622069
00057e  6e206361
000582  6e6e6564
000586  20637963
00058a  6c6500  
00058d  43616e6e          DCB      "Cannot put a c in canned cycle",0
000591  6f742070
000595  75742061
000599  20632069
00059d  6e206361
0005a1  6e6e6564
0005a5  20637963
0005a9  6c6500  
0005ac  43616e6e          DCB      "Cannot put an a in canned cycle",0
0005b0  6f742070
0005b4  75742061
0005b8  6e206120
0005bc  696e2063
0005c0  616e6e65
0005c4  64206379
0005c8  636c6500
0005cc  43616e6e          DCB      "Cannot turn cutter radius comp on out of xy plane",0
0005d0  6f742074
0005d4  75726e20
0005d8  63757474
0005dc  65722072
0005e0  61646975
0005e4  7320636f
0005e8  6d70206f
0005ec  6e206f75
0005f0  74206f66
0005f4  20787920
0005f8  706c616e
0005fc  6500    
0005fe  43616e6e          DCB      "Cannot turn cutter radius comp on when on",0
000602  6f742074
000606  75726e20
00060a  63757474
00060e  65722072
000612  61646975
000616  7320636f
00061a  6d70206f
00061e  6e207768
000622  656e206f
000626  6e00    
000628  43616e6e          DCB      "Cannot use a word",0
00062c  6f742075
000630  73652061
000634  20776f72
000638  6400    
00063a  43616e6e          DCB      "Cannot use axis values with g80",0
00063e  6f742075
000642  73652061
000646  78697320
00064a  76616c75
00064e  65732077
000652  69746820
000656  67383000
00065a  43616e6e          DCB      "Cannot use axis values without a g code that uses them",0
00065e  6f742075
000662  73652061
000666  78697320
00066a  76616c75
00066e  65732077
000672  6974686f
000676  75742061
00067a  20672063
00067e  6f646520
000682  74686174
000686  20757365
00068a  73207468
00068e  656d00  
000691  43616e6e          DCB      "Cannot use b word",0
000695  6f742075
000699  73652062
00069d  20776f72
0006a1  6400    
0006a3  43616e6e          DCB      "Cannot use c word",0
0006a7  6f742075
0006ab  73652063
0006af  20776f72
0006b3  6400    
0006b5  43616e6e          DCB      "Cannot use g28 or g30 with cutter radius comp",0
0006b9  6f742075
0006bd  73652067
0006c1  3238206f
0006c5  72206733
0006c9  30207769
0006cd  74682063
0006d1  75747465
0006d5  72207261
0006d9  64697573
0006dd  20636f6d
0006e1  7000    
0006e3  43616e6e          DCB      "Cannot use g53 incremental",0
0006e7  6f742075
0006eb  73652067
0006ef  35332069
0006f3  6e637265
0006f7  6d656e74
0006fb  616c00  
0006fe  43616e6e          DCB      "Cannot use g53 with cutter radius comp",0
000702  6f742075
000706  73652067
00070a  35332077
00070e  69746820
000712  63757474
000716  65722072
00071a  61646975
00071e  7320636f
000722  6d7000  
000725  43616e6e          DCB      "Cannot use two g codes that both use axis values",0
000729  6f742075
00072d  73652074
000731  776f2067
000735  20636f64
000739  65732074
00073d  68617420
000741  626f7468
000745  20757365
000749  20617869
00074d  73207661
000751  6c756573
000755  00      
000756  43616e6e          DCB      "Cannot use xz plane with cutter radius comp",0
00075a  6f742075
00075e  73652078
000762  7a20706c
000766  616e6520
00076a  77697468
00076e  20637574
000772  74657220
000776  72616469
00077a  75732063
00077e  6f6d7000
000782  43616e6e          DCB      "Cannot use yz plane with cutter radius comp",0
000786  6f742075
00078a  73652079
00078e  7a20706c
000792  616e6520
000796  77697468
00079a  20637574
00079e  74657220
0007a2  72616469
0007a6  75732063
0007aa  6f6d7000
0007ae  436f6d6d          DCB      "Command too long",0
0007b2  616e6420
0007b6  746f6f20
0007ba  6c6f6e67
0007be  00      
0007bf  436f6e63          DCB      "Concave corner with cutter radius comp",0
0007c3  61766520
0007c7  636f726e
0007cb  65722077
0007cf  69746820
0007d3  63757474
0007d7  65722072
0007db  61646975
0007df  7320636f
0007e3  6d7000  
0007e6  436f6f72          DCB      "Coordinate system index parameter 5220 out of range",0
0007ea  64696e61
0007ee  74652073
0007f2  79737465
0007f6  6d20696e
0007fa  64657820
0007fe  70617261
000802  6d657465
000806  72203532
00080a  3230206f
00080e  7574206f
000812  66207261
000816  6e676500
00081a  43757272          DCB      "Current point same as end point of arc",0
00081e  656e7420
000822  706f696e
000826  74207361
00082a  6d652061
00082e  7320656e
000832  6420706f
000836  696e7420
00083a  6f662061
00083e  726300  
000841  43757474          DCB      "Cutter gouging with cutter radius comp",0
000845  65722067
000849  6f756769
00084d  6e672077
000851  69746820
000855  63757474
000859  65722072
00085d  61646975
000861  7320636f
000865  6d7000  
000868  4420776f          DCB      "D word with no g41 or g42",0
00086c  72642077
000870  69746820
000874  6e6f2067
000878  3431206f
00087c  72206734
000880  3200    
000882  4477656c          DCB      "Dwell time missing with g4",0
000886  6c207469
00088a  6d65206d
00088e  69737369
000892  6e672077
000896  69746820
00089a  673400  
00089d  4477656c          DCB      "Dwell time p word missing with g82",0
0008a1  6c207469
0008a5  6d652070
0008a9  20776f72
0008ad  64206d69
0008b1  7373696e
0008b5  67207769
0008b9  74682067
0008bd  383200  
0008c0  4477656c          DCB      "Dwell time p word missing with g86",0
0008c4  6c207469
0008c8  6d652070
0008cc  20776f72
0008d0  64206d69
0008d4  7373696e
0008d8  67207769
0008dc  74682067
0008e0  383600  
0008e3  4477656c          DCB      "Dwell time p word missing with g88",0
0008e7  6c207469
0008eb  6d652070
0008ef  20776f72
0008f3  64206d69
0008f7  7373696e
0008fb  67207769
0008ff  74682067
000903  383800  
000906  4477656c          DCB      "Dwell time p word missing with g89",0
00090a  6c207469
00090e  6d652070
000912  20776f72
000916  64206d69
00091a  7373696e
00091e  67207769
000922  74682067
000926  383900  
000929  45717561          DCB      "Equal sign missing in parameter setting",0
00092d  6c207369
000931  676e206d
000935  69737369
000939  6e672069
00093d  6e207061
000941  72616d65
000945  74657220
000949  73657474
00094d  696e6700
000951  4620776f          DCB      "F word missing with inverse time arc move",0
000955  7264206d
000959  69737369
00095d  6e672077
000961  69746820
000965  696e7665
000969  72736520
00096d  74696d65
000971  20617263
000975  206d6f76
000979  6500    
00097b  4620776f          DCB      "F word missing with inverse time g1 move",0
00097f  7264206d
000983  69737369
000987  6e672077
00098b  69746820
00098f  696e7665
000993  72736520
000997  74696d65
00099b  20673120
00099f  6d6f7665
0009a3  00      
0009a4  46696c65          DCB      "File ended with no percent sign",0
0009a8  20656e64
0009ac  65642077
0009b0  69746820
0009b4  6e6f2070
0009b8  65726365
0009bc  6e742073
0009c0  69676e00
0009c4  46696c65          DCB      "File ended with no percent sign or program end",0
0009c8  20656e64
0009cc  65642077
0009d0  69746820
0009d4  6e6f2070
0009d8  65726365
0009dc  6e742073
0009e0  69676e20
0009e4  6f722070
0009e8  726f6772
0009ec  616d2065
0009f0  6e6400  
0009f3  46696c65          DCB      "File name too long",0
0009f7  206e616d
0009fb  6520746f
0009ff  6f206c6f
000a03  6e6700  
000a06  46696c65          DCB      "File not open",0
000a0a  206e6f74
000a0e  206f7065
000a12  6e00    
000a14  4720636f          DCB      "G code out of range",0
000a18  6465206f
000a1c  7574206f
000a20  66207261
000a24  6e676500
000a28  4820776f          DCB      "H word with no g43",0
000a2c  72642077
000a30  69746820
000a34  6e6f2067
000a38  343300  
000a3b  4920776f          DCB      "I word given for arc in yz plane",0
000a3f  72642067
000a43  6976656e
000a47  20666f72
000a4b  20617263
000a4f  20696e20
000a53  797a2070
000a57  6c616e65
000a5b  00      
000a5c  4920776f          DCB      "I word missing with g87",0
000a60  7264206d
000a64  69737369
000a68  6e672077
000a6c  69746820
000a70  67383700
000a74  4920776f          DCB      "I word with no g2 or g3 or g87 to use it",0
000a78  72642077
000a7c  69746820
000a80  6e6f2067
000a84  32206f72
000a88  20673320
000a8c  6f722067
000a90  38372074
000a94  6f207573
000a98  65206974
000a9c  00      
000a9d  4a20776f          DCB      "J word given for arc in xz plane",0
000aa1  72642067
000aa5  6976656e
000aa9  20666f72
000aad  20617263
000ab1  20696e20
000ab5  787a2070
000ab9  6c616e65
000abd  00      
000abe  4a20776f          DCB      "J word missing with g87",0
000ac2  7264206d
000ac6  69737369
000aca  6e672077
000ace  69746820
000ad2  67383700
000ad6  4a20776f          DCB      "J word with no g2 or g3 or g87 to use it",0
000ada  72642077
000ade  69746820
000ae2  6e6f2067
000ae6  32206f72
000aea  20673320
000aee  6f722067
000af2  38372074
000af6  6f207573
000afa  65206974
000afe  00      
000aff  4b20776f          DCB      "K word given for arc in xy plane",0
000b03  72642067
000b07  6976656e
000b0b  20666f72
000b0f  20617263
000b13  20696e20
000b17  78792070
000b1b  6c616e65
000b1f  00      
000b20  4b20776f          DCB      "K word missing with g87",0
000b24  7264206d
000b28  69737369
000b2c  6e672077
000b30  69746820
000b34  67383700
000b38  4b20776f          DCB      "K word with no g2 or g3 or g87 to use it",0
000b3c  72642077
000b40  69746820
000b44  6e6f2067
000b48  32206f72
000b4c  20673320
000b50  6f722067
000b54  38372074
000b58  6f207573
000b5c  65206974
000b60  00      
000b61  4c20776f          DCB      "L word with no canned cycle or g50",0
000b65  72642077
000b69  69746820
000b6d  6e6f2063
000b71  616e6e65
000b75  64206379
000b79  636c6520
000b7d  6f722067
000b81  353000  
000b84  4c656674          DCB      "Left bracket missing after slash with atan",0
000b88  20627261
000b8c  636b6574
000b90  206d6973
000b94  73696e67
000b98  20616674
000b9c  65722073
000ba0  6c617368
000ba4  20776974
000ba8  68206174
000bac  616e00  
000baf  4c656674          DCB      "Left bracket missing after unary operation name",0
000bb3  20627261
000bb7  636b6574
000bbb  206d6973
000bbf  73696e67
000bc3  20616674
000bc7  65722075
000bcb  6e617279
000bcf  206f7065
000bd3  72617469
000bd7  6f6e206e
000bdb  616d6500
000bdf  4c696e65          DCB      "Line number greater than 99999",0
000be3  206e756d
000be7  62657220
000beb  67726561
000bef  74657220
000bf3  7468616e
000bf7  20393939
000bfb  393900  
000bfe  4c696e65          DCB      "Line with g50 does not have l2",0
000c02  20776974
000c06  68206735
000c0a  3020646f
000c0e  6573206e
000c12  6f742068
000c16  61766520
000c1a  6c3200  
000c1d  4d20636f          DCB      "M code greater than 99",0
000c21  64652067
000c25  72656174
000c29  65722074
000c2d  68616e20
000c31  393900  
000c34  4d697865          DCB      "Mixed radius ijk format for arc",0
000c38  64207261
000c3c  64697573
000c40  20696a6b
000c44  20666f72
000c48  6d617420
000c4c  666f7220
000c50  61726300
000c54  4d756c74          DCB      "Multiple a words on one line",0
000c58  69706c65
000c5c  20612077
000c60  6f726473
000c64  206f6e20
000c68  6f6e6520
000c6c  6c696e65
000c70  00      
000c71  4d756c74          DCB      "Multiple b words on one line",0
000c75  69706c65
000c79  20622077
000c7d  6f726473
000c81  206f6e20
000c85  6f6e6520
000c89  6c696e65
000c8d  00      
000c8e  4d756c74          DCB      "Multiple c words on one line",0
000c92  69706c65
000c96  20632077
000c9a  6f726473
000c9e  206f6e20
000ca2  6f6e6520
000ca6  6c696e65
000caa  00      
000cab  4d756c74          DCB      "Multiple d words on one line",0
000caf  69706c65
000cb3  20642077
000cb7  6f726473
000cbb  206f6e20
000cbf  6f6e6520
000cc3  6c696e65
000cc7  00      
000cc8  4d756c74          DCB      "Multiple f words on one line",0
000ccc  69706c65
000cd0  20662077
000cd4  6f726473
000cd8  206f6e20
000cdc  6f6e6520
000ce0  6c696e65
000ce4  00      
000ce5  4d756c74          DCB      "Multiple h words on one line",0
000ce9  69706c65
000ced  20682077
000cf1  6f726473
000cf5  206f6e20
000cf9  6f6e6520
000cfd  6c696e65
000d01  00      
000d02  4d756c74          DCB      "Multiple i words on one line",0
000d06  69706c65
000d0a  20692077
000d0e  6f726473
000d12  206f6e20
000d16  6f6e6520
000d1a  6c696e65
000d1e  00      
000d1f  4d756c74          DCB      "Multiple j words on one line",0
000d23  69706c65
000d27  206a2077
000d2b  6f726473
000d2f  206f6e20
000d33  6f6e6520
000d37  6c696e65
000d3b  00      
000d3c  4d756c74          DCB      "Multiple k words on one line",0
000d40  69706c65
000d44  206b2077
000d48  6f726473
000d4c  206f6e20
000d50  6f6e6520
000d54  6c696e65
000d58  00      
000d59  4d756c74          DCB      "Multiple l words on one line",0
000d5d  69706c65
000d61  206c2077
000d65  6f726473
000d69  206f6e20
000d6d  6f6e6520
000d71  6c696e65
000d75  00      
000d76  4d756c74          DCB      "Multiple p words on one line",0
000d7a  69706c65
000d7e  20702077
000d82  6f726473
000d86  206f6e20
000d8a  6f6e6520
000d8e  6c696e65
000d92  00      
000d93  4d756c74          DCB      "Multiple q words on one line",0
000d97  69706c65
000d9b  20712077
000d9f  6f726473
000da3  206f6e20
000da7  6f6e6520
000dab  6c696e65
000daf  00      
000db0  4d756c74          DCB      "Multiple r words on one line",0
000db4  69706c65
000db8  20722077
000dbc  6f726473
000dc0  206f6e20
000dc4  6f6e6520
000dc8  6c696e65
000dcc  00      
000dcd  4d756c74          DCB      "Multiple s words on one line",0
000dd1  69706c65
000dd5  20732077
000dd9  6f726473
000ddd  206f6e20
000de1  6f6e6520
000de5  6c696e65
000de9  00      
000dea  4d756c74          DCB      "Multiple t words on one line",0
000dee  69706c65
000df2  20742077
000df6  6f726473
000dfa  206f6e20
000dfe  6f6e6520
000e02  6c696e65
000e06  00      
000e07  4d756c74          DCB      "Multiple x words on one line",0
000e0b  69706c65
000e0f  20782077
000e13  6f726473
000e17  206f6e20
000e1b  6f6e6520
000e1f  6c696e65
000e23  00      
000e24  4d756c74          DCB      "Multiple y words on one line",0
000e28  69706c65
000e2c  20792077
000e30  6f726473
000e34  206f6e20
000e38  6f6e6520
000e3c  6c696e65
000e40  00      
000e41  4d756c74          DCB      "Multiple z words on one line",0
000e45  69706c65
000e49  207a2077
000e4d  6f726473
000e51  206f6e20
000e55  6f6e6520
000e59  6c696e65
000e5d  00      
000e5e  4d757374          DCB      "Must use g0 or g1 with g53",0
000e62  20757365
000e66  20673020
000e6a  6f722067
000e6e  31207769
000e72  74682067
000e76  353300  
000e79  4e656761          DCB      "Negative argument to sqrt",0
000e7d  74697665
000e81  20617267
000e85  756d656e
000e89  7420746f
000e8d  20737172
000e91  7400    
000e93  4e656761          DCB      "Negative d word tool radius index used",0
000e97  74697665
000e9b  20642077
000e9f  6f726420
000ea3  746f6f6c
000ea7  20726164
000eab  69757320
000eaf  696e6465
000eb3  78207573
000eb7  656400  
000eba  4e656761          DCB      "Negative f word used",0
000ebe  74697665
000ec2  20662077
000ec6  6f726420
000eca  75736564
000ece  00      
000ecf  4e656761          DCB      "Negative g code used",0
000ed3  74697665
000ed7  20672063
000edb  6f646520
000edf  75736564
000ee3  00      
000ee4  4e656761          DCB      "Negative h word tool length offset index used",0
000ee8  74697665
000eec  20682077
000ef0  6f726420
000ef4  746f6f6c
000ef8  206c656e
000efc  67746820
000f00  6f666673
000f04  65742069
000f08  6e646578
000f0c  20757365
000f10  6400    
000f12  4e656761          DCB      "Negative l word used",0
000f16  74697665
000f1a  206c2077
000f1e  6f726420
000f22  75736564
000f26  00      
000f27  4e656761          DCB      "Negative m code used",0
000f2b  74697665
000f2f  206d2063
000f33  6f646520
000f37  75736564
000f3b  00      
000f3c  4e656761          DCB      "Negative or zero q value used",0
000f40  74697665
000f44  206f7220
000f48  7a65726f
000f4c  20712076
000f50  616c7565
000f54  20757365
000f58  6400    
000f5a  4e656761          DCB      "Negative p word used",0
000f5e  74697665
000f62  20702077
000f66  6f726420
000f6a  75736564
000f6e  00      
000f6f  4e656761          DCB      "Negative spindle speed used",0
000f73  74697665
000f77  20737069
000f7b  6e646c65
000f7f  20737065
000f83  65642075
000f87  73656400
000f8b  4e656761          DCB      "Negative tool id used",0
000f8f  74697665
000f93  20746f6f
000f97  6c206964
000f9b  20757365
000f9f  6400    
000fa1  4e657374          DCB      "Nested comment found",0
000fa5  65642063
000fa9  6f6d6d65
000fad  6e742066
000fb1  6f756e64
000fb5  00      
000fb6  4e6f2063          DCB      "No characters found in reading real value",0
000fba  68617261
000fbe  63746572
000fc2  7320666f
000fc6  756e6420
000fca  696e2072
000fce  65616469
000fd2  6e672072
000fd6  65616c20
000fda  76616c75
000fde  6500    
000fe0  4e6f2064          DCB      "No digits found where real number should be",0
000fe4  69676974
000fe8  7320666f
000fec  756e6420
000ff0  77686572
000ff4  65207265
000ff8  616c206e
000ffc  756d6265
001000  72207368
001004  6f756c64
001008  20626500
00100c  4e6f6e20          DCB      "Non integer value for integer",0
001010  696e7465
001014  67657220
001018  76616c75
00101c  6520666f
001020  7220696e
001024  74656765
001028  7200    
00102a  4e756c6c          DCB      "Null missing after newline",0
00102e  206d6973
001032  73696e67
001036  20616674
00103a  6572206e
00103e  65776c69
001042  6e6500  
001045  4f666673          DCB      "Offset index missing",0
001049  65742069
00104d  6e646578
001051  206d6973
001055  73696e67
001059  00      
00105a  50207661          DCB      "P value not an integer with g50 l2",0
00105e  6c756520
001062  6e6f7420
001066  616e2069
00106a  6e746567
00106e  65722077
001072  69746820
001076  67353020
00107a  6c3200  
00107d  50207661          DCB      "P value out of range with g50 l2",0
001081  6c756520
001085  6f757420
001089  6f662072
00108d  616e6765
001091  20776974
001095  68206735
001099  30206c32
00109d  00      
00109e  5020776f          DCB      "P word with no g4 g50 g82 g86 g88 g89",0
0010a2  72642077
0010a6  69746820
0010aa  6e6f2067
0010ae  34206735
0010b2  30206738
0010b6  32206738
0010ba  36206738
0010be  38206738
0010c2  3900    
0010c4  50617261          DCB      "Parameter file out of order",0
0010c8  6d657465
0010cc  72206669
0010d0  6c65206f
0010d4  7574206f
0010d8  66206f72
0010dc  64657200
0010e0  50617261          DCB      "Parameter number out of range",0
0010e4  6d657465
0010e8  72206e75
0010ec  6d626572
0010f0  206f7574
0010f4  206f6620
0010f8  72616e67
0010fc  6500    
0010fe  5120776f          DCB      "Q word missing with g83",0
001102  7264206d
001106  69737369
00110a  6e672077
00110e  69746820
001112  67383300
001116  5120776f          DCB      "Q word with no g83",0
00111a  72642077
00111e  69746820
001122  6e6f2067
001126  383300  
001129  51756575          DCB      "Queue is not empty after probing",0
00112d  65206973
001131  206e6f74
001135  20656d70
001139  74792061
00113d  66746572
001141  2070726f
001145  62696e67
001149  00      
00114a  5220636c          DCB      "R clearance plane unspecified in cycle",0
00114e  65617261
001152  6e636520
001156  706c616e
00115a  6520756e
00115e  73706563
001162  69666965
001166  6420696e
00116a  20637963
00116e  6c6500  
001171  52206920          DCB      "R i j k words all missing for arc",0
001175  6a206b20
001179  776f7264
00117d  7320616c
001181  6c206d69
001185  7373696e
001189  6720666f
00118d  72206172
001191  6300    
001193  52206c65          DCB      "R less than x in cycle in yz plane",0
001197  73732074
00119b  68616e20
00119f  7820696e
0011a3  20637963
0011a7  6c652069
0011ab  6e20797a
0011af  20706c61
0011b3  6e6500  
0011b6  52206c65          DCB      "R less than y in cycle in xz plane",0
0011ba  73732074
0011be  68616e20
0011c2  7920696e
0011c6  20637963
0011ca  6c652069
0011ce  6e20787a
0011d2  20706c61
0011d6  6e6500  
0011d9  52206c65          DCB      "R less than z in cycle in xy plane",0
0011dd  73732074
0011e1  68616e20
0011e5  7a20696e
0011e9  20637963
0011ed  6c652069
0011f1  6e207879
0011f5  20706c61
0011f9  6e6500  
0011fc  5220776f          DCB      "R word with no g code that uses it",0
001200  72642077
001204  69746820
001208  6e6f2067
00120c  20636f64
001210  65207468
001214  61742075
001218  73657320
00121c  697400  
00121f  52616469          DCB      "Radius to end of arc differs from radius to start",0
001223  75732074
001227  6f20656e
00122b  64206f66
00122f  20617263
001233  20646966
001237  66657273
00123b  2066726f
00123f  6d207261
001243  64697573
001247  20746f20
00124b  73746172
00124f  7400    
001251  52616469          DCB      "Radius too small to reach end point",0
001255  75732074
001259  6f6f2073
00125d  6d616c6c
001261  20746f20
001265  72656163
001269  6820656e
00126d  6420706f
001271  696e7400
001275  52657175          DCB      "Required parameter missing",0
001279  69726564
00127d  20706172
001281  616d6574
001285  6572206d
001289  69737369
00128d  6e6700  
001290  53656c65          DCB      "Selected tool slot number too large",0
001294  63746564
001298  20746f6f
00129c  6c20736c
0012a0  6f74206e
0012a4  756d6265
0012a8  7220746f
0012ac  6f206c61
0012b0  72676500
0012b4  536c6173          DCB      "Slash missing after first atan argument",0
0012b8  68206d69
0012bc  7373696e
0012c0  67206166
0012c4  74657220
0012c8  66697273
0012cc  74206174
0012d0  616e2061
0012d4  7267756d
0012d8  656e7400
0012dc  5370696e          DCB      "Spindle not turning clockwise in g84",0
0012e0  646c6520
0012e4  6e6f7420
0012e8  7475726e
0012ec  696e6720
0012f0  636c6f63
0012f4  6b776973
0012f8  6520696e
0012fc  20673834
001300  00      
001301  5370696e          DCB      "Spindle not turning in g86",0
001305  646c6520
001309  6e6f7420
00130d  7475726e
001311  696e6720
001315  696e2067
001319  383600  
00131c  5370696e          DCB      "Spindle not turning in g87",0
001320  646c6520
001324  6e6f7420
001328  7475726e
00132c  696e6720
001330  696e2067
001334  383700  
001337  5370696e          DCB      "Spindle not turning in g88",0
00133b  646c6520
00133f  6e6f7420
001343  7475726e
001347  696e6720
00134b  696e2067
00134f  383800  
001352  53736361          DCB      "Sscanf failed",0
001356  6e662066
00135a  61696c65
00135e  6400    
001360  53746172          DCB      "Start point too close to probe point",0
001364  7420706f
001368  696e7420
00136c  746f6f20
001370  636c6f73
001374  6520746f
001378  2070726f
00137c  62652070
001380  6f696e74
001384  00      
001385  546f6f20          DCB      "Too many m codes on line",0
001389  6d616e79
00138d  206d2063
001391  6f646573
001395  206f6e20
001399  6c696e65
00139d  00      
00139e  546f6f6c          DCB      "Tool length offset index too big",0
0013a2  206c656e
0013a6  67746820
0013aa  6f666673
0013ae  65742069
0013b2  6e646578
0013b6  20746f6f
0013ba  20626967
0013be  00      
0013bf  546f6f6c          DCB      "Tool max too large",0
0013c3  206d6178
0013c7  20746f6f
0013cb  206c6172
0013cf  676500  
0013d2  546f6f6c          DCB      "Tool radius index too big",0
0013d6  20726164
0013da  69757320
0013de  696e6465
0013e2  7820746f
0013e6  6f206269
0013ea  6700    
0013ec  546f6f6c          DCB      "Tool radius not less than arc radius with comp",0
0013f0  20726164
0013f4  69757320
0013f8  6e6f7420
0013fc  6c657373
001400  20746861
001404  6e206172
001408  63207261
00140c  64697573
001410  20776974
001414  6820636f
001418  6d7000  
00141b  54776f20          DCB      "Two g codes used from same modal group",0
00141f  6720636f
001423  64657320
001427  75736564
00142b  2066726f
00142f  6d207361
001433  6d65206d
001437  6f64616c
00143b  2067726f
00143f  757000  
001442  54776f20          DCB      "Two m codes used from same modal group",0
001446  6d20636f
00144a  64657320
00144e  75736564
001452  2066726f
001456  6d207361
00145a  6d65206d
00145e  6f64616c
001462  2067726f
001466  757000  
001469  556e6162          DCB      "Unable to open file",0
00146d  6c652074
001471  6f206f70
001475  656e2066
001479  696c6500
00147d  556e636c          DCB      "Unclosed comment found",0
001481  6f736564
001485  20636f6d
001489  6d656e74
00148d  20666f75
001491  6e6400  
001494  556e636c          DCB      "Unclosed expression",0
001498  6f736564
00149c  20657870
0014a0  72657373
0014a4  696f6e00
0014a8  556e6b6e          DCB      "Unknown g code used",0
0014ac  6f776e20
0014b0  6720636f
0014b4  64652075
0014b8  73656400
0014bc  556e6b6e          DCB      "Unknown m code used",0
0014c0  6f776e20
0014c4  6d20636f
0014c8  64652075
0014cc  73656400
0014d0  556e6b6e          DCB      "Unknown operation",0
0014d4  6f776e20
0014d8  6f706572
0014dc  6174696f
0014e0  6e00    
0014e2  556e6b6e          DCB      "Unknown operation name starting with a",0
0014e6  6f776e20
0014ea  6f706572
0014ee  6174696f
0014f2  6e206e61
0014f6  6d652073
0014fa  74617274
0014fe  696e6720
001502  77697468
001506  206100  
001509  556e6b6e          DCB      "Unknown operation name starting with m",0
00150d  6f776e20
001511  6f706572
001515  6174696f
001519  6e206e61
00151d  6d652073
001521  74617274
001525  696e6720
001529  77697468
00152d  206d00  
001530  556e6b6e          DCB      "Unknown operation name starting with o",0
001534  6f776e20
001538  6f706572
00153c  6174696f
001540  6e206e61
001544  6d652073
001548  74617274
00154c  696e6720
001550  77697468
001554  206f00  
001557  556e6b6e          DCB      "Unknown operation name starting with x",0
00155b  6f776e20
00155f  6f706572
001563  6174696f
001567  6e206e61
00156b  6d652073
00156f  74617274
001573  696e6720
001577  77697468
00157b  207800  
00157e  556e6b6e          DCB      "Unknown word starting with a",0
001582  6f776e20
001586  776f7264
00158a  20737461
00158e  7274696e
001592  67207769
001596  74682061
00159a  00      
00159b  556e6b6e          DCB      "Unknown word starting with c",0
00159f  6f776e20
0015a3  776f7264
0015a7  20737461
0015ab  7274696e
0015af  67207769
0015b3  74682063
0015b7  00      
0015b8  556e6b6e          DCB      "Unknown word starting with e",0
0015bc  6f776e20
0015c0  776f7264
0015c4  20737461
0015c8  7274696e
0015cc  67207769
0015d0  74682065
0015d4  00      
0015d5  556e6b6e          DCB      "Unknown word starting with f",0
0015d9  6f776e20
0015dd  776f7264
0015e1  20737461
0015e5  7274696e
0015e9  67207769
0015ed  74682066
0015f1  00      
0015f2  556e6b6e          DCB      "Unknown word starting with l",0
0015f6  6f776e20
0015fa  776f7264
0015fe  20737461
001602  7274696e
001606  67207769
00160a  7468206c
00160e  00      
00160f  556e6b6e          DCB      "Unknown word starting with r",0
001613  6f776e20
001617  776f7264
00161b  20737461
00161f  7274696e
001623  67207769
001627  74682072
00162b  00      
00162c  556e6b6e          DCB      "Unknown word starting with s",0
001630  6f776e20
001634  776f7264
001638  20737461
00163c  7274696e
001640  67207769
001644  74682073
001648  00      
001649  556e6b6e          DCB      "Unknown word starting with t",0
00164d  6f776e20
001651  776f7264
001655  20737461
001659  7274696e
00165d  67207769
001661  74682074
001665  00      
001666  556e6b6e          DCB      "Unknown word where unary operation could be",0
00166a  6f776e20
00166e  776f7264
001672  20776865
001676  72652075
00167a  6e617279
00167e  206f7065
001682  72617469
001686  6f6e2063
00168a  6f756c64
00168e  20626500
001692  5820616e          DCB      "X and y words missing for arc in xy plane",0
001696  64207920
00169a  776f7264
00169e  73206d69
0016a2  7373696e
0016a6  6720666f
0016aa  72206172
0016ae  6320696e
0016b2  20787920
0016b6  706c616e
0016ba  6500    
0016bc  5820616e          DCB      "X and z words missing for arc in xz plane",0
0016c0  64207a20
0016c4  776f7264
0016c8  73206d69
0016cc  7373696e
0016d0  6720666f
0016d4  72206172
0016d8  6320696e
0016dc  20787a20
0016e0  706c616e
0016e4  6500    
0016e6  58207661          DCB      "X value unspecified in yz plane canned cycle",0
0016ea  6c756520
0016ee  756e7370
0016f2  65636966
0016f6  69656420
0016fa  696e2079
0016fe  7a20706c
001702  616e6520
001706  63616e6e
00170a  65642063
00170e  79636c65
001712  00      
001713  58207920          DCB      "X y and z words all missing with g38 2",0
001717  616e6420
00171b  7a20776f
00171f  72647320
001723  616c6c20
001727  6d697373
00172b  696e6720
00172f  77697468
001733  20673338
001737  203200  
00173a  5920616e          DCB      "Y and z words missing for arc in yz plane",0
00173e  64207a20
001742  776f7264
001746  73206d69
00174a  7373696e
00174e  6720666f
001752  72206172
001756  6320696e
00175a  20797a20
00175e  706c616e
001762  6500    
001764  59207661          DCB      "Y value unspecified in xz plane canned cycle",0
001768  6c756520
00176c  756e7370
001770  65636966
001774  69656420
001778  696e2078
00177c  7a20706c
001780  616e6520
001784  63616e6e
001788  65642063
00178c  79636c65
001790  00      
001791  5a207661          DCB      "Z value unspecified in xy plane canned cycle",0
001795  6c756520
001799  756e7370
00179d  65636966
0017a1  69656420
0017a5  696e2078
0017a9  7920706c
0017ad  616e6520
0017b1  63616e6e
0017b5  65642063
0017b9  79636c65
0017bd  00      
0017be  5a65726f          DCB      "Zero or negative argument to ln",0
0017c2  206f7220
0017c6  6e656761
0017ca  74697665
0017ce  20617267
0017d2  756d656e
0017d6  7420746f
0017da  206c6e00
0017de  5a65726f          DCB      "Zero radius arc",0
0017e2  20726164
0017e6  69757320
0017ea  61726300
0017ee  54686520          DCB      "The End",0
0017f2  456e6400

                          AREA ||.data||, DATA, ALIGN=2

                  _rs274ngc_errors
                          DCD      ||.conststring||
                          DCD      ||.conststring||
                          DCD      ||.conststring||
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x9
                          DCD      ||.conststring||+0x20
                          DCD      ||.conststring||+0x3a
                          DCD      ||.conststring||+0x5c
                          DCD      ||.conststring||+0x84
                          DCD      ||.conststring||+0xa2
                          DCD      ||.conststring||+0xc0
                          DCD      ||.conststring||+0xda
                          DCD      ||.conststring||+0x109
                          DCD      ||.conststring||+0x11c
                          DCD      ||.conststring||+0x138
                          DCD      ||.conststring||+0x14a
                          DCD      ||.conststring||+0x167
                          DCD      ||.conststring||+0x17d
                          DCD      ||.conststring||+0x199
                          DCD      ||.conststring||+0x1b1
                          DCD      ||.conststring||+0x1c9
                          DCD      ||.conststring||+0x1df
                          DCD      ||.conststring||+0x1fb
                          DCD      ||.conststring||+0x213
                          DCD      ||.conststring||+0x241
                          DCD      ||.conststring||+0x25f
                          DCD      ||.conststring||+0x277
                          DCD      ||.conststring||+0x28f
                          DCD      ||.conststring||+0x2a7
                          DCD      ||.conststring||+0x2c2
                          DCD      ||.conststring||+0x2e4
                          DCD      ||.conststring||+0x302
                          DCD      ||.conststring||+0x323
                          DCD      ||.conststring||+0x34c
                          DCD      ||.conststring||+0x364
                          DCD      ||.conststring||+0x37e
                          DCD      ||.conststring||+0x399
                          DCD      ||.conststring||+0x3b1
                          DCD      ||.conststring||+0x3c7
                          DCD      ||.conststring||+0x3fa
                          DCD      ||.conststring||+0x426
                          DCD      ||.conststring||+0x440
                          DCD      ||.conststring||+0x461
                          DCD      ||.conststring||+0x481
                          DCD      ||.conststring||+0x4a5
                          DCD      ||.conststring||+0x4cc
                          DCD      ||.conststring||+0x4e4
                          DCD      ||.conststring||+0x4fe
                          DCD      ||.conststring||+0x525
                          DCD      ||.conststring||+0x54d
                          DCD      ||.conststring||+0x56e
                          DCD      ||.conststring||+0x58d
                          DCD      ||.conststring||+0x5ac
                          DCD      ||.conststring||+0x5cc
                          DCD      ||.conststring||+0x5fe
                          DCD      ||.conststring||+0x628
                          DCD      ||.conststring||+0x63a
                          DCD      ||.conststring||+0x65a
                          DCD      ||.conststring||+0x691
                          DCD      ||.conststring||+0x6a3
                          DCD      ||.conststring||+0x6b5
                          DCD      ||.conststring||+0x6e3
                          DCD      ||.conststring||+0x6fe
                          DCD      ||.conststring||+0x725
                          DCD      ||.conststring||+0x756
                          DCD      ||.conststring||+0x782
                          DCD      ||.conststring||+0x7ae
                          DCD      ||.conststring||+0x7bf
                          DCD      ||.conststring||+0x7e6
                          DCD      ||.conststring||+0x81a
                          DCD      ||.conststring||+0x841
                          DCD      ||.conststring||+0x868
                          DCD      ||.conststring||+0x882
                          DCD      ||.conststring||+0x89d
                          DCD      ||.conststring||+0x8c0
                          DCD      ||.conststring||+0x8e3
                          DCD      ||.conststring||+0x906
                          DCD      ||.conststring||+0x929
                          DCD      ||.conststring||+0x951
                          DCD      ||.conststring||+0x97b
                          DCD      ||.conststring||+0x9a4
                          DCD      ||.conststring||+0x9c4
                          DCD      ||.conststring||+0x9f3
                          DCD      ||.conststring||+0xa06
                          DCD      ||.conststring||+0xa14
                          DCD      ||.conststring||+0xa28
                          DCD      ||.conststring||+0xa3b
                          DCD      ||.conststring||+0xa5c
                          DCD      ||.conststring||+0xa74
                          DCD      ||.conststring||+0xa9d
                          DCD      ||.conststring||+0xabe
                          DCD      ||.conststring||+0xad6
                          DCD      ||.conststring||+0xaff
                          DCD      ||.conststring||+0xb20
                          DCD      ||.conststring||+0xb38
                          DCD      ||.conststring||+0xb61
                          DCD      ||.conststring||+0xb84
                          DCD      ||.conststring||+0xbaf
                          DCD      ||.conststring||+0xbdf
                          DCD      ||.conststring||+0xbfe
                          DCD      ||.conststring||+0xc1d
                          DCD      ||.conststring||+0xc34
                          DCD      ||.conststring||+0xc54
                          DCD      ||.conststring||+0xc71
                          DCD      ||.conststring||+0xc8e
                          DCD      ||.conststring||+0xcab
                          DCD      ||.conststring||+0xcc8
                          DCD      ||.conststring||+0xce5
                          DCD      ||.conststring||+0xd02
                          DCD      ||.conststring||+0xd1f
                          DCD      ||.conststring||+0xd3c
                          DCD      ||.conststring||+0xd59
                          DCD      ||.conststring||+0xd76
                          DCD      ||.conststring||+0xd93
                          DCD      ||.conststring||+0xdb0
                          DCD      ||.conststring||+0xdcd
                          DCD      ||.conststring||+0xdea
                          DCD      ||.conststring||+0xe07
                          DCD      ||.conststring||+0xe24
                          DCD      ||.conststring||+0xe41
                          DCD      ||.conststring||+0xe5e
                          DCD      ||.conststring||+0xe79
                          DCD      ||.conststring||+0xe93
                          DCD      ||.conststring||+0xeba
                          DCD      ||.conststring||+0xecf
                          DCD      ||.conststring||+0xee4
                          DCD      ||.conststring||+0xf12
                          DCD      ||.conststring||+0xf27
                          DCD      ||.conststring||+0xf3c
                          DCD      ||.conststring||+0xf5a
                          DCD      ||.conststring||+0xf6f
                          DCD      ||.conststring||+0xf8b
                          DCD      ||.conststring||+0xfa1
                          DCD      ||.conststring||+0xfb6
                          DCD      ||.conststring||+0xfe0
                          DCD      ||.conststring||+0x100c
                          DCD      ||.conststring||+0x102a
                          DCD      ||.conststring||+0x1045
                          DCD      ||.conststring||+0x105a
                          DCD      ||.conststring||+0x107d
                          DCD      ||.conststring||+0x109e
                          DCD      ||.conststring||+0x10c4
                          DCD      ||.conststring||+0x10e0
                          DCD      ||.conststring||+0x10fe
                          DCD      ||.conststring||+0x1116
                          DCD      ||.conststring||+0x1129
                          DCD      ||.conststring||+0x114a
                          DCD      ||.conststring||+0x1171
                          DCD      ||.conststring||+0x1193
                          DCD      ||.conststring||+0x11b6
                          DCD      ||.conststring||+0x11d9
                          DCD      ||.conststring||+0x11fc
                          DCD      ||.conststring||+0x121f
                          DCD      ||.conststring||+0x1251
                          DCD      ||.conststring||+0x1275
                          DCD      ||.conststring||+0x1290
                          DCD      ||.conststring||+0x12b4
                          DCD      ||.conststring||+0x12dc
                          DCD      ||.conststring||+0x1301
                          DCD      ||.conststring||+0x131c
                          DCD      ||.conststring||+0x1337
                          DCD      ||.conststring||+0x1352
                          DCD      ||.conststring||+0x1360
                          DCD      ||.conststring||+0x1385
                          DCD      ||.conststring||+0x139e
                          DCD      ||.conststring||+0x13bf
                          DCD      ||.conststring||+0x13d2
                          DCD      ||.conststring||+0x13ec
                          DCD      ||.conststring||+0x141b
                          DCD      ||.conststring||+0x1442
                          DCD      ||.conststring||+0x1469
                          DCD      ||.conststring||+0x147d
                          DCD      ||.conststring||+0x1494
                          DCD      ||.conststring||+0x14a8
                          DCD      ||.conststring||+0x14bc
                          DCD      ||.conststring||+0x14d0
                          DCD      ||.conststring||+0x14e2
                          DCD      ||.conststring||+0x1509
                          DCD      ||.conststring||+0x1530
                          DCD      ||.conststring||+0x1557
                          DCD      ||.conststring||+0x157e
                          DCD      ||.conststring||+0x159b
                          DCD      ||.conststring||+0x15b8
                          DCD      ||.conststring||+0x15d5
                          DCD      ||.conststring||+0x15f2
                          DCD      ||.conststring||+0x160f
                          DCD      ||.conststring||+0x162c
                          DCD      ||.conststring||+0x1649
                          DCD      ||.conststring||+0x1666
                          DCD      ||.conststring||+0x1692
                          DCD      ||.conststring||+0x16bc
                          DCD      ||.conststring||+0x16e6
                          DCD      ||.conststring||+0x1713
                          DCD      ||.conststring||+0x173a
                          DCD      ||.conststring||+0x1764
                          DCD      ||.conststring||+0x1791
                          DCD      ||.conststring||+0x17be
                          DCD      ||.conststring||+0x17de
                          DCD      ||.conststring||+0x17ee
                  name
00031c  6172635f          DCB      0x61,0x72,0x63,0x5f
000320  64617461          DCB      0x64,0x61,0x74,0x61
000324  5f636f6d          DCB      0x5f,0x63,0x6f,0x6d
000328  705f696a          DCB      0x70,0x5f,0x69,0x6a
00032c  6b00              DCB      0x6b,0x00
                  |symbol_number.436|
00032e  6172              DCB      0x61,0x72
000330  635f6461          DCB      0x63,0x5f,0x64,0x61
000334  74615f63          DCB      0x74,0x61,0x5f,0x63
000338  6f6d705f          DCB      0x6f,0x6d,0x70,0x5f
00033c  7200              DCB      0x72,0x00
                  |symbol_number.437|
00033e  6172              DCB      0x61,0x72
000340  635f6461          DCB      0x63,0x5f,0x64,0x61
000344  74615f69          DCB      0x74,0x61,0x5f,0x69
000348  6a6b00            DCB      0x6a,0x6b,0x00
                  |symbol_number.438|
00034b  61                DCB      0x61
00034c  72635f64          DCB      0x72,0x63,0x5f,0x64
000350  6174615f          DCB      0x61,0x74,0x61,0x5f
000354  7200              DCB      0x72,0x00
                  |symbol_number.439|
000356  6368              DCB      0x63,0x68
000358  65636b5f          DCB      0x65,0x63,0x6b,0x5f
00035c  675f636f          DCB      0x67,0x5f,0x63,0x6f
000360  64657300          DCB      0x64,0x65,0x73,0x00
                  |symbol_number.440|
000364  63686563          DCB      0x63,0x68,0x65,0x63
000368  6b5f6974          DCB      0x6b,0x5f,0x69,0x74
00036c  656d7300          DCB      0x65,0x6d,0x73,0x00
                  |symbol_number.441|
000370  63686563          DCB      0x63,0x68,0x65,0x63
000374  6b5f6d5f          DCB      0x6b,0x5f,0x6d,0x5f
000378  636f6465          DCB      0x63,0x6f,0x64,0x65
00037c  7300              DCB      0x73,0x00
                  |symbol_number.442|
00037e  6368              DCB      0x63,0x68
000380  65636b5f          DCB      0x65,0x63,0x6b,0x5f
000384  6f746865          DCB      0x6f,0x74,0x68,0x65
000388  725f636f          DCB      0x72,0x5f,0x63,0x6f
00038c  64657300          DCB      0x64,0x65,0x73,0x00
                  |symbol_number.443|
000390  636c6f73          DCB      0x63,0x6c,0x6f,0x73
000394  655f616e          DCB      0x65,0x5f,0x61,0x6e
000398  645f646f          DCB      0x64,0x5f,0x64,0x6f
00039c  776e6361          DCB      0x77,0x6e,0x63,0x61
0003a0  736500            DCB      0x73,0x65,0x00
                  |symbol_number.444|
0003a3  63                DCB      0x63
0003a4  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0003a8  72745f61          DCB      0x72,0x74,0x5f,0x61
0003ac  726300            DCB      0x72,0x63,0x00
                  |symbol_number.445|
0003af  63                DCB      0x63
0003b0  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0003b4  72745f61          DCB      0x72,0x74,0x5f,0x61
0003b8  72633200          DCB      0x72,0x63,0x32,0x00
                  |symbol_number.446|
0003bc  636f6e76          DCB      0x63,0x6f,0x6e,0x76
0003c0  6572745f          DCB      0x65,0x72,0x74,0x5f
0003c4  6172635f          DCB      0x61,0x72,0x63,0x5f
0003c8  636f6d70          DCB      0x63,0x6f,0x6d,0x70
0003cc  3100              DCB      0x31,0x00
                  |symbol_number.447|
0003ce  636f              DCB      0x63,0x6f
0003d0  6e766572          DCB      0x6e,0x76,0x65,0x72
0003d4  745f6172          DCB      0x74,0x5f,0x61,0x72
0003d8  635f636f          DCB      0x63,0x5f,0x63,0x6f
0003dc  6d703200          DCB      0x6d,0x70,0x32,0x00
                  |symbol_number.448|
0003e0  636f6e76          DCB      0x63,0x6f,0x6e,0x76
0003e4  6572745f          DCB      0x65,0x72,0x74,0x5f
0003e8  61786973          DCB      0x61,0x78,0x69,0x73
0003ec  5f6f6666          DCB      0x5f,0x6f,0x66,0x66
0003f0  73657473          DCB      0x73,0x65,0x74,0x73
0003f4  00                DCB      0x00
                  |symbol_number.449|
0003f5  636f6e            DCB      0x63,0x6f,0x6e
0003f8  76657274          DCB      0x76,0x65,0x72,0x74
0003fc  5f636f6e          DCB      0x5f,0x63,0x6f,0x6e
000400  74726f6c          DCB      0x74,0x72,0x6f,0x6c
000404  5f6d6f64          DCB      0x5f,0x6d,0x6f,0x64
000408  6500              DCB      0x65,0x00
                  |symbol_number.450|
00040a  636f              DCB      0x63,0x6f
00040c  6e766572          DCB      0x6e,0x76,0x65,0x72
000410  745f636f          DCB      0x74,0x5f,0x63,0x6f
000414  6f726469          DCB      0x6f,0x72,0x64,0x69
000418  6e617465          DCB      0x6e,0x61,0x74,0x65
00041c  5f737973          DCB      0x5f,0x73,0x79,0x73
000420  74656d00          DCB      0x74,0x65,0x6d,0x00
                  |symbol_number.451|
000424  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000428  6572745f          DCB      0x65,0x72,0x74,0x5f
00042c  63757474          DCB      0x63,0x75,0x74,0x74
000430  65725f63          DCB      0x65,0x72,0x5f,0x63
000434  6f6d7065          DCB      0x6f,0x6d,0x70,0x65
000438  6e736174          DCB      0x6e,0x73,0x61,0x74
00043c  696f6e00          DCB      0x69,0x6f,0x6e,0x00
                  |symbol_number.452|
000440  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000444  6572745f          DCB      0x65,0x72,0x74,0x5f
000448  63757474          DCB      0x63,0x75,0x74,0x74
00044c  65725f63          DCB      0x65,0x72,0x5f,0x63
000450  6f6d7065          DCB      0x6f,0x6d,0x70,0x65
000454  6e736174          DCB      0x6e,0x73,0x61,0x74
000458  696f6e5f          DCB      0x69,0x6f,0x6e,0x5f
00045c  6f6e00            DCB      0x6f,0x6e,0x00
                  |symbol_number.453|
00045f  63                DCB      0x63
000460  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
000464  72745f63          DCB      0x72,0x74,0x5f,0x63
000468  79636c65          DCB      0x79,0x63,0x6c,0x65
00046c  00                DCB      0x00
                  |symbol_number.454|
00046d  636f6e            DCB      0x63,0x6f,0x6e
000470  76657274          DCB      0x76,0x65,0x72,0x74
000474  5f637963          DCB      0x5f,0x63,0x79,0x63
000478  6c655f67          DCB      0x6c,0x65,0x5f,0x67
00047c  383400            DCB      0x38,0x34,0x00
                  |symbol_number.455|
00047f  63                DCB      0x63
000480  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
000484  72745f63          DCB      0x72,0x74,0x5f,0x63
000488  79636c65          DCB      0x79,0x63,0x6c,0x65
00048c  5f673836          DCB      0x5f,0x67,0x38,0x36
000490  00                DCB      0x00
                  |symbol_number.456|
000491  636f6e            DCB      0x63,0x6f,0x6e
000494  76657274          DCB      0x76,0x65,0x72,0x74
000498  5f637963          DCB      0x5f,0x63,0x79,0x63
00049c  6c655f67          DCB      0x6c,0x65,0x5f,0x67
0004a0  383700            DCB      0x38,0x37,0x00
                  |symbol_number.457|
0004a3  63                DCB      0x63
0004a4  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0004a8  72745f63          DCB      0x72,0x74,0x5f,0x63
0004ac  79636c65          DCB      0x79,0x63,0x6c,0x65
0004b0  5f673838          DCB      0x5f,0x67,0x38,0x38
0004b4  00                DCB      0x00
                  |symbol_number.458|
0004b5  636f6e            DCB      0x63,0x6f,0x6e
0004b8  76657274          DCB      0x76,0x65,0x72,0x74
0004bc  5f637963          DCB      0x5f,0x63,0x79,0x63
0004c0  6c655f78          DCB      0x6c,0x65,0x5f,0x78
0004c4  7900              DCB      0x79,0x00
                  |symbol_number.459|
0004c6  636f              DCB      0x63,0x6f
0004c8  6e766572          DCB      0x6e,0x76,0x65,0x72
0004cc  745f6379          DCB      0x74,0x5f,0x63,0x79
0004d0  636c655f          DCB      0x63,0x6c,0x65,0x5f
0004d4  797a00            DCB      0x79,0x7a,0x00
                  |symbol_number.460|
0004d7  63                DCB      0x63
0004d8  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0004dc  72745f63          DCB      0x72,0x74,0x5f,0x63
0004e0  79636c65          DCB      0x79,0x63,0x6c,0x65
0004e4  5f7a7800          DCB      0x5f,0x7a,0x78,0x00
                  |symbol_number.461|
0004e8  636f6e76          DCB      0x63,0x6f,0x6e,0x76
0004ec  6572745f          DCB      0x65,0x72,0x74,0x5f
0004f0  66656564          DCB      0x66,0x65,0x65,0x64
0004f4  5f6d6f64          DCB      0x5f,0x6d,0x6f,0x64
0004f8  6500              DCB      0x65,0x00
                  |symbol_number.462|
0004fa  636f              DCB      0x63,0x6f
0004fc  6e766572          DCB      0x6e,0x76,0x65,0x72
000500  745f6700          DCB      0x74,0x5f,0x67,0x00
                  |symbol_number.463|
000504  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000508  6572745f          DCB      0x65,0x72,0x74,0x5f
00050c  686f6d65          DCB      0x68,0x6f,0x6d,0x65
000510  00                DCB      0x00
                  |symbol_number.464|
000511  636f6e            DCB      0x63,0x6f,0x6e
000514  76657274          DCB      0x76,0x65,0x72,0x74
000518  5f6c656e          DCB      0x5f,0x6c,0x65,0x6e
00051c  6774685f          DCB      0x67,0x74,0x68,0x5f
000520  756e6974          DCB      0x75,0x6e,0x69,0x74
000524  7300              DCB      0x73,0x00
                  |symbol_number.465|
000526  636f              DCB      0x63,0x6f
000528  6e766572          DCB      0x6e,0x76,0x65,0x72
00052c  745f6d00          DCB      0x74,0x5f,0x6d,0x00
                  |symbol_number.466|
000530  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000534  6572745f          DCB      0x65,0x72,0x74,0x5f
000538  6d6f6461          DCB      0x6d,0x6f,0x64,0x61
00053c  6c5f3000          DCB      0x6c,0x5f,0x30,0x00
                  |symbol_number.467|
000540  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000544  6572745f          DCB      0x65,0x72,0x74,0x5f
000548  6d6f7469          DCB      0x6d,0x6f,0x74,0x69
00054c  6f6e00            DCB      0x6f,0x6e,0x00
                  |symbol_number.468|
00054f  63                DCB      0x63
000550  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
000554  72745f70          DCB      0x72,0x74,0x5f,0x70
000558  726f6265          DCB      0x72,0x6f,0x62,0x65
00055c  00                DCB      0x00
                  |symbol_number.469|
00055d  636f6e            DCB      0x63,0x6f,0x6e
000560  76657274          DCB      0x76,0x65,0x72,0x74
000564  5f736574          DCB      0x5f,0x73,0x65,0x74
000568  5f706c61          DCB      0x5f,0x70,0x6c,0x61
00056c  6e6500            DCB      0x6e,0x65,0x00
                  |symbol_number.470|
00056f  63                DCB      0x63
000570  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
000574  72745f73          DCB      0x72,0x74,0x5f,0x73
000578  746f7000          DCB      0x74,0x6f,0x70,0x00
                  |symbol_number.471|
00057c  636f6e76          DCB      0x63,0x6f,0x6e,0x76
000580  6572745f          DCB      0x65,0x72,0x74,0x5f
000584  73747261          DCB      0x73,0x74,0x72,0x61
000588  69676874          DCB      0x69,0x67,0x68,0x74
00058c  00                DCB      0x00
                  |symbol_number.472|
00058d  636f6e            DCB      0x63,0x6f,0x6e
000590  76657274          DCB      0x76,0x65,0x72,0x74
000594  5f737472          DCB      0x5f,0x73,0x74,0x72
000598  61696768          DCB      0x61,0x69,0x67,0x68
00059c  745f636f          DCB      0x74,0x5f,0x63,0x6f
0005a0  6d703100          DCB      0x6d,0x70,0x31,0x00
                  |symbol_number.473|
0005a4  636f6e76          DCB      0x63,0x6f,0x6e,0x76
0005a8  6572745f          DCB      0x65,0x72,0x74,0x5f
0005ac  73747261          DCB      0x73,0x74,0x72,0x61
0005b0  69676874          DCB      0x69,0x67,0x68,0x74
0005b4  5f636f6d          DCB      0x5f,0x63,0x6f,0x6d
0005b8  703200            DCB      0x70,0x32,0x00
                  |symbol_number.474|
0005bb  63                DCB      0x63
0005bc  6f6e7665          DCB      0x6f,0x6e,0x76,0x65
0005c0  72745f74          DCB      0x72,0x74,0x5f,0x74
0005c4  6f6f6c5f          DCB      0x6f,0x6f,0x6c,0x5f
0005c8  6c656e67          DCB      0x6c,0x65,0x6e,0x67
0005cc  74685f6f          DCB      0x74,0x68,0x5f,0x6f
0005d0  66667365          DCB      0x66,0x66,0x73,0x65
0005d4  7400              DCB      0x74,0x00
                  |symbol_number.475|
0005d6  636f              DCB      0x63,0x6f
0005d8  6e766572          DCB      0x6e,0x76,0x65,0x72
0005dc  745f746f          DCB      0x74,0x5f,0x74,0x6f
0005e0  6f6c5f73          DCB      0x6f,0x6c,0x5f,0x73
0005e4  656c6563          DCB      0x65,0x6c,0x65,0x63
0005e8  7400              DCB      0x74,0x00
                  |symbol_number.476|
0005ea  656e              DCB      0x65,0x6e
0005ec  68616e63          DCB      0x68,0x61,0x6e,0x63
0005f0  655f626c          DCB      0x65,0x5f,0x62,0x6c
0005f4  6f636b00          DCB      0x6f,0x63,0x6b,0x00
                  |symbol_number.477|
0005f8  65786563          DCB      0x65,0x78,0x65,0x63
0005fc  7574655f          DCB      0x75,0x74,0x65,0x5f
000600  62696e61          DCB      0x62,0x69,0x6e,0x61
000604  727900            DCB      0x72,0x79,0x00
                  |symbol_number.478|
000607  65                DCB      0x65
000608  78656375          DCB      0x78,0x65,0x63,0x75
00060c  74655f62          DCB      0x74,0x65,0x5f,0x62
000610  696e6172          DCB      0x69,0x6e,0x61,0x72
000614  793100            DCB      0x79,0x31,0x00
                  |symbol_number.479|
000617  65                DCB      0x65
000618  78656375          DCB      0x78,0x65,0x63,0x75
00061c  74655f62          DCB      0x74,0x65,0x5f,0x62
000620  696e6172          DCB      0x69,0x6e,0x61,0x72
000624  793200            DCB      0x79,0x32,0x00
                  |symbol_number.480|
000627  65                DCB      0x65
000628  78656375          DCB      0x78,0x65,0x63,0x75
00062c  74655f62          DCB      0x74,0x65,0x5f,0x62
000630  6c6f636b          DCB      0x6c,0x6f,0x63,0x6b
000634  00                DCB      0x00
                  |symbol_number.481|
000635  657865            DCB      0x65,0x78,0x65
000638  63757465          DCB      0x63,0x75,0x74,0x65
00063c  5f756e61          DCB      0x5f,0x75,0x6e,0x61
000640  727900            DCB      0x72,0x79,0x00
                  |symbol_number.482|
000643  70                DCB      0x70
000644  61727365          DCB      0x61,0x72,0x73,0x65
000648  5f6c696e          DCB      0x5f,0x6c,0x69,0x6e
00064c  6500              DCB      0x65,0x00
                  |symbol_number.483|
00064e  7265              DCB      0x72,0x65
000650  61645f61          DCB      0x61,0x64,0x5f,0x61
000654  00                DCB      0x00
                  |symbol_number.484|
000655  726561            DCB      0x72,0x65,0x61
000658  645f6174          DCB      0x64,0x5f,0x61,0x74
00065c  616e00            DCB      0x61,0x6e,0x00
                  |symbol_number.485|
00065f  72                DCB      0x72
000660  6561645f          DCB      0x65,0x61,0x64,0x5f
000664  6200              DCB      0x62,0x00
                  |symbol_number.486|
000666  7265              DCB      0x72,0x65
000668  61645f63          DCB      0x61,0x64,0x5f,0x63
00066c  00                DCB      0x00
                  |symbol_number.487|
00066d  726561            DCB      0x72,0x65,0x61
000670  645f636f          DCB      0x64,0x5f,0x63,0x6f
000674  6d6d656e          DCB      0x6d,0x6d,0x65,0x6e
000678  7400              DCB      0x74,0x00
                  |symbol_number.488|
00067a  7265              DCB      0x72,0x65
00067c  61645f64          DCB      0x61,0x64,0x5f,0x64
000680  00                DCB      0x00
                  |symbol_number.489|
000681  726561            DCB      0x72,0x65,0x61
000684  645f6600          DCB      0x64,0x5f,0x66,0x00
                  |symbol_number.490|
000688  72656164          DCB      0x72,0x65,0x61,0x64
00068c  5f6700            DCB      0x5f,0x67,0x00
                  |symbol_number.491|
00068f  72                DCB      0x72
000690  6561645f          DCB      0x65,0x61,0x64,0x5f
000694  6800              DCB      0x68,0x00
                  |symbol_number.492|
000696  7265              DCB      0x72,0x65
000698  61645f69          DCB      0x61,0x64,0x5f,0x69
00069c  00                DCB      0x00
                  |symbol_number.493|
00069d  726561            DCB      0x72,0x65,0x61
0006a0  645f696e          DCB      0x64,0x5f,0x69,0x6e
0006a4  74656765          DCB      0x74,0x65,0x67,0x65
0006a8  725f756e          DCB      0x72,0x5f,0x75,0x6e
0006ac  7369676e          DCB      0x73,0x69,0x67,0x6e
0006b0  656400            DCB      0x65,0x64,0x00
                  |symbol_number.494|
0006b3  72                DCB      0x72
0006b4  6561645f          DCB      0x65,0x61,0x64,0x5f
0006b8  696e7465          DCB      0x69,0x6e,0x74,0x65
0006bc  6765725f          DCB      0x67,0x65,0x72,0x5f
0006c0  76616c75          DCB      0x76,0x61,0x6c,0x75
0006c4  6500              DCB      0x65,0x00
                  |symbol_number.495|
0006c6  7265              DCB      0x72,0x65
0006c8  61645f69          DCB      0x61,0x64,0x5f,0x69
0006cc  74656d73          DCB      0x74,0x65,0x6d,0x73
0006d0  00                DCB      0x00
                  |symbol_number.496|
0006d1  726561            DCB      0x72,0x65,0x61
0006d4  645f6a00          DCB      0x64,0x5f,0x6a,0x00
                  |symbol_number.497|
0006d8  72656164          DCB      0x72,0x65,0x61,0x64
0006dc  5f6b00            DCB      0x5f,0x6b,0x00
                  |symbol_number.498|
0006df  72                DCB      0x72
0006e0  6561645f          DCB      0x65,0x61,0x64,0x5f
0006e4  6c00              DCB      0x6c,0x00
                  |symbol_number.499|
0006e6  7265              DCB      0x72,0x65
0006e8  61645f6c          DCB      0x61,0x64,0x5f,0x6c
0006ec  696e655f          DCB      0x69,0x6e,0x65,0x5f
0006f0  6e756d62          DCB      0x6e,0x75,0x6d,0x62
0006f4  657200            DCB      0x65,0x72,0x00
                  |symbol_number.500|
0006f7  72                DCB      0x72
0006f8  6561645f          DCB      0x65,0x61,0x64,0x5f
0006fc  6d00              DCB      0x6d,0x00
                  |symbol_number.501|
0006fe  7265              DCB      0x72,0x65
000700  61645f6f          DCB      0x61,0x64,0x5f,0x6f
000704  6e655f69          DCB      0x6e,0x65,0x5f,0x69
000708  74656d00          DCB      0x74,0x65,0x6d,0x00
                  |symbol_number.502|
00070c  72656164          DCB      0x72,0x65,0x61,0x64
000710  5f6f7065          DCB      0x5f,0x6f,0x70,0x65
000714  72617469          DCB      0x72,0x61,0x74,0x69
000718  6f6e00            DCB      0x6f,0x6e,0x00
                  |symbol_number.503|
00071b  72                DCB      0x72
00071c  6561645f          DCB      0x65,0x61,0x64,0x5f
000720  6f706572          DCB      0x6f,0x70,0x65,0x72
000724  6174696f          DCB      0x61,0x74,0x69,0x6f
000728  6e5f756e          DCB      0x6e,0x5f,0x75,0x6e
00072c  61727900          DCB      0x61,0x72,0x79,0x00
                  |symbol_number.504|
000730  72656164          DCB      0x72,0x65,0x61,0x64
000734  5f7000            DCB      0x5f,0x70,0x00
                  |symbol_number.505|
000737  72                DCB      0x72
000738  6561645f          DCB      0x65,0x61,0x64,0x5f
00073c  70617261          DCB      0x70,0x61,0x72,0x61
000740  6d657465          DCB      0x6d,0x65,0x74,0x65
000744  7200              DCB      0x72,0x00
                  |symbol_number.506|
000746  7265              DCB      0x72,0x65
000748  61645f70          DCB      0x61,0x64,0x5f,0x70
00074c  6172616d          DCB      0x61,0x72,0x61,0x6d
000750  65746572          DCB      0x65,0x74,0x65,0x72
000754  5f736574          DCB      0x5f,0x73,0x65,0x74
000758  74696e67          DCB      0x74,0x69,0x6e,0x67
00075c  00                DCB      0x00
                  |symbol_number.507|
00075d  726561            DCB      0x72,0x65,0x61
000760  645f7100          DCB      0x64,0x5f,0x71,0x00
                  |symbol_number.508|
000764  72656164          DCB      0x72,0x65,0x61,0x64
000768  5f7200            DCB      0x5f,0x72,0x00
                  |symbol_number.509|
00076b  72                DCB      0x72
00076c  6561645f          DCB      0x65,0x61,0x64,0x5f
000770  7265616c          DCB      0x72,0x65,0x61,0x6c
000774  5f657870          DCB      0x5f,0x65,0x78,0x70
000778  72657373          DCB      0x72,0x65,0x73,0x73
00077c  696f6e00          DCB      0x69,0x6f,0x6e,0x00
                  |symbol_number.510|
000780  72656164          DCB      0x72,0x65,0x61,0x64
000784  5f726561          DCB      0x5f,0x72,0x65,0x61
000788  6c5f6e75          DCB      0x6c,0x5f,0x6e,0x75
00078c  6d626572          DCB      0x6d,0x62,0x65,0x72
000790  00                DCB      0x00
                  |symbol_number.511|
000791  726561            DCB      0x72,0x65,0x61
000794  645f7265          DCB      0x64,0x5f,0x72,0x65
000798  616c5f76          DCB      0x61,0x6c,0x5f,0x76
00079c  616c7565          DCB      0x61,0x6c,0x75,0x65
0007a0  00                DCB      0x00
                  |symbol_number.512|
0007a1  726561            DCB      0x72,0x65,0x61
0007a4  645f7300          DCB      0x64,0x5f,0x73,0x00
                  |symbol_number.513|
0007a8  72656164          DCB      0x72,0x65,0x61,0x64
0007ac  5f7400            DCB      0x5f,0x74,0x00
                  |symbol_number.514|
0007af  72                DCB      0x72
0007b0  6561645f          DCB      0x65,0x61,0x64,0x5f
0007b4  74657874          DCB      0x74,0x65,0x78,0x74
0007b8  00                DCB      0x00
                  |symbol_number.515|
0007b9  726561            DCB      0x72,0x65,0x61
0007bc  645f756e          DCB      0x64,0x5f,0x75,0x6e
0007c0  61727900          DCB      0x61,0x72,0x79,0x00
                  |symbol_number.516|
0007c4  72656164          DCB      0x72,0x65,0x61,0x64
0007c8  5f7800            DCB      0x5f,0x78,0x00
                  |symbol_number.517|
0007cb  72                DCB      0x72
0007cc  6561645f          DCB      0x65,0x61,0x64,0x5f
0007d0  7900              DCB      0x79,0x00
                  |symbol_number.518|
0007d2  7265              DCB      0x72,0x65
0007d4  61645f7a          DCB      0x61,0x64,0x5f,0x7a
0007d8  00                DCB      0x00
                  |symbol_number.519|
0007d9  727332            DCB      0x72,0x73,0x32
0007dc  37346e67          DCB      0x37,0x34,0x6e,0x67
0007e0  635f6578          DCB      0x63,0x5f,0x65,0x78
0007e4  65637574          DCB      0x65,0x63,0x75,0x74
0007e8  6500              DCB      0x65,0x00
                  |symbol_number.520|
0007ea  7273              DCB      0x72,0x73
0007ec  3237346e          DCB      0x32,0x37,0x34,0x6e
0007f0  67635f69          DCB      0x67,0x63,0x5f,0x69
0007f4  6e697400          DCB      0x6e,0x69,0x74,0x00
                  |symbol_number.521|
0007f8  72733237          DCB      0x72,0x73,0x32,0x37
0007fc  346e6763          DCB      0x34,0x6e,0x67,0x63
000800  5f6f7065          DCB      0x5f,0x6f,0x70,0x65
000804  6e00              DCB      0x6e,0x00
                  |symbol_number.522|
000806  7273              DCB      0x72,0x73
000808  3237346e          DCB      0x32,0x37,0x34,0x6e
00080c  67635f72          DCB      0x67,0x63,0x5f,0x72
000810  65616400          DCB      0x65,0x61,0x64,0x00
                  |symbol_number.523|
000814  72733237          DCB      0x72,0x73,0x32,0x37
000818  346e6763          DCB      0x34,0x6e,0x67,0x63
00081c  5f736176          DCB      0x5f,0x73,0x61,0x76
000820  655f7061          DCB      0x65,0x5f,0x70,0x61
000824  72616d65          DCB      0x72,0x61,0x6d,0x65
000828  74657273          DCB      0x74,0x65,0x72,0x73
00082c  00                DCB      0x00
